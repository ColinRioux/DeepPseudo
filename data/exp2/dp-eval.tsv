code	nl
int main() {\n\tint a, b, c, d, e;\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcin >> d;\n\tcin >> e;\n\tif ((a + b + c + d + e) % 5 != 0 || (a + b + c + d + e) / 5 == 0) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << (a + b + c + d + e) / 5 << endl;\n\t}\n\treturn 0;\n}	let a, b, c, d, e be integers\nread a\nread b\nread c\nread d\nread e\nif (a + b + c + d + e) modulo 5 is not 0 or (a + b + c + d + e) / 5 is 0\nprint -1\nelse do the following\nprint (a + b + c + d + e)/5
int main() {\n\tint arr[5], sum = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> arr[i];\n\t\tsum += arr[i];\n\t}\n\tfloat ans = float(sum) / 5;\n\tif (sum == 0) {\n\t\tcout << -1 << endl;\n\t} else if (ans == int(ans)) {\n\t\tcout << int(ans) << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}	declare integer variable sum = 0 and an array of integers arr with size 5\nfor i = 0 to 5 exclusive\nread arr[i]\nincrease sum by arr[i]\nfloat ans = sum / 5\nif sum = 0\nprint -1\nelse if ans = int(ans)\nprint int(ans)\nelse\nprint -1
bool cmp(int a, int b) {\n\treturn a < b;\n}\nint main() {\n\tint sum = 0;\n\tint n;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> n;\n\t\tsum += n;\n\t}\n\tif (sum == 0) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (sum % 5 == 0)\n\t\tcout << sum / 5 << endl;\n\telse\n\t\tcout << -1 << endl;\n}	cmp is a boolean function with integer arguments a and b\nreturn a < b\ndeclare integer variable sum = 0\ncreate integer n\nfor integer i = 0 to 5 exclusive\nread n\nincrease sum by n\nif sum = 0\nprint -1\nif sum % 5 = 0\nprint sum / 5\nelse\nprint -1
"int main() {\n\tint x, i;\n\tint sum = 0;\n\tfor (i = 0; i < 5; i++) {\n\t\tcin >> x;\n\t\tsum = sum + x;\n\t}\n\tif (sum % 5 != 0 || sum == 0) {\n\t\tcout << ""-1"" << endl;\n\t} else {\n\t\tcout << sum / 5 << endl;\n\t}\n\treturn 0;\n}"	"x, i = int\nsum = int with sum = 0\nfor i = 0 to 5\nread x\nadd x to sum\nif sum is not a multiple of or if sum equals 0\nprint ""-1""\nelse\nprint sum / 5"
int main() {\n\tint sum = 0, a;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> a;\n\t\tsum += a;\n\t}\n\tif (sum == 0)\n\t\tcout << -1 << endl;\n\telse if (sum % 5 == 0)\n\t\tcout << sum / 5 << endl;\n\telse\n\t\tcout << -1 << endl;\n\treturn 0;\n}	create int sum and a, set sum to 0\nfor i=0 to 5 exclusive\nread a\nset sum to sum + a\nif sum equal to 0\nprint -1\nelse if sum mod 5 =0\nprint sum/5 and a newline\notherwise\nprint -1
"int main() {\n\tint a, i;\n\tint sum = 0;\n\tfor (i = 0; i < 5; i++) {\n\t\tcin >> a;\n\t\tsum = sum + a;\n\t}\n\tif (sum % 5 != 0 || sum == 0) {\n\t\tcout << ""-1"" << endl;\n\t} else {\n\t\tcout << sum / 5 << endl;\n\t}\n\treturn 0;\n}"	create int a and i\nset sum to 0\nfor i=0 to 5 exclusive\nread a\nsum= sum+a\nif sum mod 5 is different from 0 or sum=0\nprint -1\nelse\nprint sum/5 and a newline
"int a[1005];\nint main() {\n\tint ans = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> a[i];\n\t\tans += a[i];\n\t}\n\tif (ans == 0) {\n\t\tcout << ""-1"" << endl;\n\t} else if (ans % 5 == 0) {\n\t\tcout << ans / 5 << endl;\n\t} else\n\t\tcout << ""-1"" << endl;\n\treturn 0;\n}"	create int array a of length 1005\nans = 0\nfor i=0 to 5 exclusive\nread a[i]\nans=ans + a[i]\nif ans equal to 0\nprint -1\nelse if ans mod 5 =0\nprint ans/5 and a newline\nelse\nprint -1
"int main() {\n\tint sum, c1, c2, c3, c4, c5;\n\tcin >> c1 >> c2 >> c3 >> c4 >> c5;\n\tsum = c1 + c2 + c3 + c4 + c5;\n\tif (sum != 0 && sum % 5 == 0) {\n\t\tcout << sum / 5 << endl;\n\t} else {\n\t\tcout << ""-1"" << endl;\n\t}\n}"	"declare integers sum, c1, c2, c3, c4 and c5\nread c1, c2, c3, c4 and c5\nsum = c1 + c2 + c3 + c4 + c5\nif sum != 0 && sum % 5 = 0\nprint sum / 5\nelse\nprint ""-1"""
int main() {\n\tint a, b, c, d, e;\n\twhile (cin >> a >> b >> c >> d >> e) {\n\t\tint ans = 0;\n\t\tans = a + b + c + d + e;\n\t\tif (ans % 5 == 0 && ans != 0)\n\t\t\tcout << ans / 5 << endl;\n\t\telse\n\t\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}	a, b, c, d, e = int\nloop while reading a then b then c then d then e\nans = int with ans = 0\nset ans to a + b + c + d + e\nif ans is a multiple of 5 and not 0\nprint ans / 5\nelse\nprint -1
"int main() {\n\tint a, b, c, d, e, sum;\n\tcin >> a >> b >> c >> d >> e;\n\tsum = a + b + c + d + e;\n\tif (sum > 0 && sum % 5 == 0) {\n\t\tcout << sum / 5 << endl;\n\t} else\n\t\tcout << ""-1"" << endl;\n}"	"create integers a, b, c, d, e and sum\nread a, b, c, d and e\nset sum to a + b + c + d + e\nif sum > 0 && sum % 5 = 0\nprint sum / 5\nelse\nprint ""-1"""
int main() {\n\tint x, sum = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> x;\n\t\tsum = sum + x;\n\t}\n\tif (sum % 5 != 0 || sum == 0) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << sum / 5 << endl;\n\t}\n}	create int x and sum, sum=0\nfor i=0 to 5 exclusive\nread x\nsum= sum + x\nif sum mod 5 is different from 0 or sum = 0\nprint -1\nelse\nprint sum/5 and a newline
int main() {\n\tint a[5], sum = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t}\n\tif (sum % 5 == 0 && sum != 0) {\n\t\tcout << sum / 5 << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n}	declare integer sum = 0 and an array of integers a with size 5\nfor integer i = 0 to 5 exclusive\nread a[i]\nincrease sum by a[i]\nif sum modulo 5 = 0 && sum is not 0\nprint sum / 5\nelse\nprint -1
int main() {\n\tint a, n = 5, total = 0;\n\twhile (n--) {\n\t\tcin >> a;\n\t\ttotal += a;\n\t}\n\tif (total == 0) {\n\t\tcout << -1;\n\t} else if (total % 5 == 0) {\n\t\tcout << (total / 5);\n\t} else {\n\t\tcout << -1;\n\t}\n\tcout << endl;\n\treturn 0;\n}	create int a, n and total with n=5 and total=0\nwhile decrement n\nread a\nset total to total + a\nif total =0\nprint -1\nelse if total mod 5 =0\nprint total/5\notherwise\nprint -1\nprint a newline
int main() {\n\tint c1, c2, c3, c4, c5;\n\tcin >> c1 >> c2 >> c3 >> c4 >> c5;\n\tint m = c1 + c2 + c3 + c4 + c5;\n\tif (m % 5 == 0 && m != 0) {\n\t\tcout << m / 5 << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}	declare integer variables c1, c2, c3, c4 and c5\nread c1, c2, c3, c4 and c5\ncreate integer m = c1 + c2 + c3 + c4 + c5\nif m modulo 5 is 0 and m is not 0\nprint m / 5\nelse\nprint -1
long long arr[1000000];\nset<long long> s;\nmap<string, string> mm;\nstring ss[100000];\nchar ch[100000];\nint main() {\n\tint a, res = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> a;\n\t\tres += a;\n\t}\n\tif (res == 0 || res % 5 != 0) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tcout << res / 5 << endl;\n}	create long long array arr with 1000000 elements\ncreate set of long longs s\nmm = map from string to string\ndeclare string array ss with size 100000\ndeclare chara array ch with size 100000\ncreate integers a and res where res = 0\nfor integer i = 0 to 5 exclusive\nread a\nincrease res by a\nif res = 0 || res % 5 != 0\nprint -1\nprint res / 5
int a, sum;\nint main() {\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> a;\n\t\tsum += a;\n\t}\n\tif (sum == 0) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (sum % 5 == 0) {\n\t\tcout << sum / 5 << endl;\n\t\treturn 0;\n\t}\n\tcout << -1 << endl;\n}	declare integer variables a and sum\nfor integer i = 0 to 5 exclusive\nread a\nincrease sum by a\nif sum = 0\nprint -1\nif sum % 5 = 0\nprint sum / 5\nprint -1
"int main() {\n\tint a, b, c, d, e;\n\tcin >> a >> b >> c >> d >> e;\n\tint s = a + b + c + d + e;\n\tif (s % 5 != 0 || s == 0)\n\t\tcout << ""-1"" << endl;\n\telse\n\t\tcout << s / 5 << endl;\n}"	"create integers a, b, c, d and e\nread a, b, c, d and e\ndeclare integer s = sum of a, b, c, d and e\nif s modulo 5 is not 0 or s is 0\nprint ""-1""\nelse\nprint s / 5"
int main() {\n\tint s = 0, c;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> c;\n\t\ts += c;\n\t}\n\tif (s % 5 || !s)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << s / 5 << endl;\n}	let s, c be integers with s equal to 0\nfor i = 0 to 5 exclusive\nread c\nincrease s by c\nif s is not a multiple of 5 or not s do the following\nprint -1\nelse do the following\nprint s/5
int main() {\n\tint s = 0, c;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> c;\n\t\ts += c;\n\t}\n\tif (s % 5 || !s)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << s / 5 << endl;\n}	set int s to 0, c\nfor i = 0 to less than 5 do the following\nread c\ns equals s plus c\nif s modulo 5 or not s is true\noutput -1\nelse\noutput s / 5
"const int MOD = 1e9 + 7;\nlong long pow(long long a, long long b) {\n\tlong long ans = 1;\n\twhile (b) {\n\t\tif (b & 1) ans = (ans * a) % MOD;\n\t\tb /= 2;\n\t\ta = (a * a) % MOD;\n\t}\n\treturn ans;\n}\nint main() {\n\tint c1, c2, c3, c4, c5;\n\tcin >> c1 >> c2 >> c3 >> c4 >> c5;\n\tint s = c1 + c2 + c3 + c4 + c5;\n\tif (s == 0) {\n\t\tcout << ""-1"" << endl;\n\t\treturn 0;\n\t} else {\n\t\tif (s % 5 == 0)\n\t\t\tcout << s / 5 << endl;\n\t\telse\n\t\t\tcout << ""-1"" << endl;\n\t}\n\treturn 0;\n}"	MOD = constant integer with value of 1e9 + 7\nin function pow that returns a long long and takes arguments a, b = long long\nans = long long with value of 1\nwhile b is not 0\nif b bitwise and 1 is true then set ans to (ans * a) mod MOD\nset b to b/2\nset a to (a*a) mod MOD\nreturn ans\nc1, c2, c3, c4, c5 = integers\nread c1, c2, c3, c4 and c5\ns = integer with value of c1+c2+c3+c4+c5\nif s equals 0\nprint -1\nelse\nif s mod 5 equals 0\nprint s/5\nelse\nprint -1
int main() {\n\tint x, r = 0;\n\tfor (int i = 0; i < 5; ++i) {\n\t\tcin >> x;\n\t\tr += x;\n\t}\n\tcout << ((r % 5 == 0 && r > 0) ? r / 5 : -1) << endl;\n\treturn 0;\n}	x, r = integer with r = 0\nfor i = 0 to 4\nread x\nr = r + x\nif (r modulo 5 is 0 and r > 0), print r / 5 else print -1
int main() {\n\tint a, b, c, d, e;\n\tcin >> a >> b >> c >> d >> e;\n\tint sum = a + b + c + d + e;\n\tif (sum == 0)\n\t\tcout << -1 << endl;\n\telse if (sum % 5 == 0)\n\t\tcout << sum / 5 << endl;\n\telse\n\t\tcout << -1 << endl;\n\treturn 0;\n}	integers = a,b,c,d,e\nread a,b,c,d,e\nset int sum to a + b + c + d + e\nif sum is 0 then do the following\noutput -1\nelse if sum modulo 5 is 0 then\noutput sum / 5\nelse\noutput -1
int main() {\n\tint a, b, c, d, e;\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcin >> d;\n\tcin >> e;\n\tif ((a + b + c + d + e) % 5 != 0 || (a + b + c + d + e) / 5 == 0) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << (a + b + c + d + e) / 5 << endl;\n\t}\n\treturn 0;\n}	a, b, c, d, e =integers\nRead a\nRead b\nRead c\nRead d\nRead e\nif (a + b + c + d + e) modulo 5 is not 0 OR (a + b + c + d + e) / 5 is 0\nprint -1 and a new line\nelse do the following\nprint (a + b + c + d + e) / 5 and a new line
"const int N = 1e6 + 5;\nint main() {\n\tint s = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\ts += x;\n\t}\n\tif (s == 0 || (s % 5))\n\t\tcout << ""-1"" << endl;\n\telse\n\t\tcout << s / 5 << endl;\n\treturn 0;\n}"	set const int N to 1e6 + 5\nset int s to 0\nfor i = 0 to i is less than 5 do the following\nintegers = x\nread x\ns equals s plus x\nif s is 0 or (s modulo 5) is not 0, then do the following\noutput -1\nelse\noutput s / 5
"int main() {\n\tint c1, c2, c3, c4, c5;\n\twhile (cin >> c1 >> c2 >> c3 >> c4 >> c5) {\n\t\tint s = 0;\n\t\ts = c1 + c2 + c3 + c4 + c5;\n\t\tif (s == 0)\n\t\t\tcout << ""-1\n"";\n\t\telse {\n\t\t\tif (s % 5 == 0)\n\t\t\t\tcout << s / 5 << ""\n"";\n\t\t\telse\n\t\t\t\tcout << ""-1\n"";\n\t\t}\n\t}\n\treturn 0;\n}"	"c1, c2, c3, c4, c5 = int\nloop while reading c1 then c2 then c3 then c4 then c5\ns = int with s = 0\nset s to c1 + c2 + c3 + c4 + c5\nif s equals 0\nprint ""-1""\nelse\nif s is a multiple of 5\nprint s / 5\nelse\nprint ""-1"""
"int main() {\n\tint a[6], i, j, sum = 0;\n\tfor (i = 0; i < 5; i++) {\n\t\tcin >> a[i];\n\t\tsum = sum + a[i];\n\t}\n\tint res = sum / 5;\n\tif (sum == 0 || sum % 5 != 0)\n\t\tcout << ""-1"" << endl;\n\telse if (sum % 5 == 0)\n\t\tcout << res << endl;\n\treturn 0;\n}"	set int a[6], i, j, sum to 0\nfor = 0 to less than 5 do the following\nread a[i]\nset sum to sum + a[i]\nset int res to sum / 5\nif sum = 0 or sum modulo 5 is not equal to 0 then do\noutput -1\nelse if sum modulo 5 equals 0\noutput res
"int c[10];\nint main() {\n\tint b = 0, sum = 0, i = 0;\n\tfor (i = 0; i < 5; i++) {\n\t\tcin >> c[i];\n\t\tsum = sum + c[i];\n\t}\n\tif (sum == 0) {\n\t\tcout << ""-1"" << endl;\n\t} else if (sum % 5 == 0) {\n\t\tcout << sum / 5 << endl;\n\t} else {\n\t\tcout << ""-1"" << endl;\n\t}\n\treturn 0;\n}"	"create integer array c with size 10\ncreate integers b, sum, i with b = 0, sum = 0, i = 0\nfor i = 0 to 5 exclusive\nread c[i]\nset sum to sum + c[i]\nif sum is 0\nprint ""-1"" print newline\nelse if sum % 5 is 0\nprint sum / 5 print newline\nelse\nprint ""-1"" print newline"
"int main() {\n\tint num[5], sum = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tcin >> num[i];\n\t\tsum += num[i];\n\t}\n\tif (sum % 5 == 0 && sum != 0)\n\t\tcout << sum / 5 << endl;\n\telse\n\t\tcout << ""-1"" << endl;\n}"	num = integer array of size 5, sum = integer with sum = 0\nfor i = 0 to 4\nread num[i]\nsum = sum + num[i]\nif sum modulo 5 is 0 and sum is not 0\nprint sum / 5\nelse\nprint -1
int main() {\n\tint a, b, c, d, e;\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcin >> d;\n\tcin >> e;\n\tif ((a + b + c + d + e) % 5 != 0 || (a + b + c + d + e) / 5 == 0) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << (a + b + c + d + e) / 5 << endl;\n\t}\n\treturn 0;\n}	create integers a, b, c, d, e\nread a\nread b\nread c\nread d\nread e\nif (a + b + c + d + e) % 5 is not 0 or (a + b + c + d + e) / 5 is 0\nprint -1 print newline\nelse\nprint (a + b + c + d + e) / 5 print newline
"void fastIo() {}\nint main() {\n\tfastIo();\n\tint sum = 0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tint temp;\n\t\tcin >> temp;\n\t\tsum += temp;\n\t}\n\tif (sum % 5 == 0 && sum >= 5)\n\t\tcout << sum / 5 << endl;\n\telse\n\t\tcout << ""-1"" << endl;\n\treturn 0;\n}"	"declare function fastIo with return type void\ncall function fastIo\ncreate integer sum = 0\nfor i=0 to 5 exclusive\nlet temp be int\nread temp\nadd temp to sum\nif (sum mod 5 equals 0) and sum is greater or equal to 5\nprint sum divided by 5\nelse\nprint ""-1"""
int main() {\n\tint n, m;\n\tint count = 0;\n\tcin >> n >> m;\n\tfor (int a = 0;; a++) {\n\t\tif (a * a > n) break;\n\t\tfor (int b = 0;; b++) {\n\t\t\tif (a + b * b > m) break;\n\t\t\tif (a * a + b == n && a + b * b == m) count++;\n\t\t}\n\t}\n\tcout << count << '\n';\n\treturn 0;\n}	declare integers n, m\ndeclare integer count = 0\nread n and m\nfor a = 0, increment a\nif a * a is greater than n, end loop\nfor b = 0, incrementing b\nif a + b * b is greater than m, end loop\nif a * a + b is n and a + b * b is m, increment count\nprint count and '\n'
"long long int n, m;\nint main() {\n\tcin >> n >> m;\n\tlong long int c = 0;\n\tfor (long long int i = 0; i <= 1000; i++) {\n\t\tfor (long long int j = 0; j <= 1000; j++) {\n\t\t\tif (i * i + j == n && i + j * j == m) { c++; }\n\t\t}\n\t}\n\tcout << c << ""\n"";\n\treturn 0;\n}"	"declare long long int variables n and m\nread standard input to n and m\ncreate long long integer c = 0\nfor i = 0 to 1000 inclusive\nin a for loop, change j from 0 to 1000 inclusive\nif i * i + j = n and i + j * j is equal to m, add 1 to the variable c\nprint c and ""\n"" to the standard output"
int main() {\n\tint n, m;\n\tint pair1 = 0, pair2 = 0;\n\tint min, max;\n\tint count = 0;\n\tcin >> n >> m;\n\tif (n > m) {\n\t\tmax = n;\n\t\tmin = m;\n\t} else {\n\t\tmax = m;\n\t\tmin = n;\n\t}\n\tfor (int i = 0; i <= max; i++) {\n\t\tfor (int j = max; j >= 0; j--) {\n\t\t\tif (((i * i) + j == n) && (i + (j * j) == m)) { count++; }\n\t\t}\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	n, m = integers\npair1, pair2 = integers with both having value of 0\nmin, max = integers\ncount = integer with value of 0\nread n and m\nif n is greater than m\nset max to n\nset min to m\nelse\nset max to m\nset min to n\nfor i = 0 to max inclusive\nfor j = max to 0 inclusive decreasing\nif (i*i) + j equals n and i + (j * j) equals m then add 1 to count\nprint count
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint cnt = 0;\n\tfor (int i = 0; i * i <= n; i++) {\n\t\tint k = n - i * i;\n\t\tif (k * k + i == m) { cnt++; }\n\t}\n\tcout << cnt << '\n';\n\treturn 0;\n}	declare new int variables n and m\nread n and m from the user input\ncreate new integer called cnt with value 0\nfor i from 0 to n inclusive incrementing i\nnew integer variable k = n - i * i\nincrement cnt by one if k squared + i = m\nprint cnt and '\n'
int main() {\n\tint l, n, i, j, m, cnt = 0;\n\tcin >> n >> m;\n\tfor (i = 0; i <= 1000; i++) {\n\t\tfor (j = 0; j <= 1000; j++) {\n\t\t\tif ((i * i + j == n) && (i + j * j == m)) cnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n}	let l, n, i, j, m, and cnt be ints with cnt=0\nread n and m\nfor i=0 to 1000 inclusive\nfor j=0 to 1000 inclusive\nif i*i+j is n and i+j*j is m then increment cnt\nprint cnt
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint p = 0;\n\tfor (int a = 0; a < 1000; a++) {\n\t\tfor (int b = 0; b < 1000; b++) {\n\t\t\tif (a * a + b == n && a + b * b == m) { p++; }\n\t\t}\n\t}\n\tcout << p << endl;\n\treturn 0;\n}	create ints n and m\nread n and m\nlet p = 0 be an integer\nfor a = 0 to a = 1000 exclusive\nfor b = 0 to b = 1000 exclusive\nif a * a + b equals n and a + b * b equals m then increment p\nprint p
int main() {\n\tint n, m, i, x, a, b, c = 0;\n\tcin >> n >> m;\n\tx = sqrt(n);\n\tfor (i = 0; i <= x; i++) {\n\t\tb = n - i * i;\n\t\ta = m - b * b;\n\t\tif (a == i) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	declare integers n, m, i, x, a, b, c = 0\nread n, m\nlet x be square root of n\nfor i = 0 to x inclusive\nlet b be n - i * i\nlet a be m - b * b\nif a is i, increment c\nprint c and newline
const int M = 100000 + 5;\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint ans = 0;\n\tfor (int a = 0; a <= 1000; a++) {\n\t\tfor (int b = 0; b <= 1000; b++) {\n\t\t\tif (a * a + b == n && a + b * b == m) { ans++; }\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	new integer constant M = 100000 + 5\ndeclare new integers n and m\nread from the input to n and m\ncreate variable ans = 0 with type int\nfor integer a = 0 to 1000 inclusive\nfor integer b = 0 to 1000 inclusive incrementing b\nif a * a + b = n and a + b * b is equal to m, increment ans\nprint ans
int main() {\n\tint a, b, count = 0, i, c, y;\n\tcin >> a >> b;\n\tc = sqrt(a);\n\tfor (i = 0; i <= c; i++) {\n\t\ty = (a - (i * i));\n\t\tif (i + (y * y) == b) { count++; }\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	a, b, count, i, c and y are integers with count = 0\nread user input to a and b\nassign the square root of a to c\nstart for loop from i = 0 to c inclusive\nchange the value of y to a - (i * i)\nif i + y squared is equal to b, increment count\nprint count
int a[1001][1001];\nint main() {\n\tint n, m, i, j, cnt = 0;\n\tcin >> n >> m;\n\tfor (i = 0; i <= n; i++) {\n\t\tfor (j = 0; j <= m; j++) {\n\t\t\tif (i * i + j == n && i + j * j == m) a[i][j] = 1;\n\t\t}\n\t}\n\tfor (i = 0; i < 1001; i++) {\n\t\tfor (j = 0; j < 1001; j++) {\n\t\t\tif (a[i][j]) cnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	a = two dimensional int array of sizes 1001 and 1001\nn, m, i, j, cnt = int with cnt = 0\nread n then m\nfor i = 0 to n inclusive\nfor j = 0 to m inclusive\nif i * i + j is n and i + j * j is m set a[i][j] to 1\nfor i = 0 to 1001\nfor j = 0 to 1001\nif a[i][j] increment cnt\nprint cnt
int main() {\n\tint n, m;\n\tint ans = 0;\n\tcin >> n >> m;\n\tfor (int i = 0; i <= 1000; i++) {\n\t\tfor (int j = 0; j <= 1000; j++) {\n\t\t\tif (((i * i) + j) == n && (i + (j * j)) == m) { ans++; }\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n, m = integers\nans = integer with ans = 0\nread n, m\nfor i = 0 to 1000\nfor j = 0 to 1000\nif (((i * i) + j) is n and (i + (j * j)) is m), increment ans\nprint ans
int main() {\n\tint TESTS = 1;\n\twhile (TESTS--) {\n\t\tint count = 0, n, m, i, j;\n\t\tcin >> n >> m;\n\t\tfor (i = 0; i <= sqrt(n); i++) {\n\t\t\tfor (j = 0; j <= sqrt(m); j++) {\n\t\t\t\tif (i * i + j == n && i + j * j == m) count++;\n\t\t\t}\n\t\t}\n\t\tcout << count << '\n';\n\t}\n\treturn 0;\n}	TESTS=1\nwhile decremented TESTS is not 0\ncount=0, n,m,i,j=int\nread n,m\nfor i=0 to sqrt(n) inclusive\nfor j=0 to sqrt(m) inclusive\nif i*i+j is n and i+j*j is m increment count\nprint count
int main() {\n\tint N, M;\n\tcin >> N >> M;\n\tint ans = 0;\n\tfor (int i = 0; i < 1001; ++i) {\n\t\tfor (int j = 0; j < 1001; ++j) {\n\t\t\tif ((i * i + j == N) && (j * j + i == M)) ++ans;\n\t\t}\n\t}\n\tcout << ans << endl;\n}	N, M = integers\nread N, M\nans = integer with ans = 0\nfor i = 0 to 1000\nfor j = 0 to 1000\nif ((i * i + j is N) and (j * j + i is M)), increment ans\nprint ans
int main() {\n\tint n, m, sum = 0, i, b;\n\tcin >> n >> m;\n\tfor (i = 0; i * i <= n && i <= m; ++i) {\n\t\tb = n - i * i;\n\t\tif (i + b * b == m) { sum += 1; }\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	n,m,i,b=int, sum=0\nread n,m\nfor i=0 to sqrt(n) inclusive while i<=m\nb=n-i*i\nif i+b*b is m increment sum\nprint sum
int main() {\n\tlong long int n, m;\n\tcin >> n >> m;\n\tlong long int cp = n;\n\tlong long int sq;\n\tlong long int count = 0;\n\twhile (n != -1) {\n\t\tsq = int(sqrt(n));\n\t\tif (sq * sq == n) {\n\t\t\tlong long int a = sq;\n\t\t\tlong long int b = cp - n;\n\t\t\tif (a + (b * b) == m) count++;\n\t\t}\n\t\tn--;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	n,m=long long int\nread n,m\ncp=n\nsq=long long int\ncount=0\nwhile n is not -1\nsq=int(sqrt(n))\nif sq*sq is n\na=sq\nb=cp-n\nif a+b*b is m increment count\ndecrement n\nprint count
int main() {\n\tint n, m, i, a, b, cnt = 0;\n\tcin >> n >> m;\n\ti = 0;\n\twhile (i <= sqrt(n)) {\n\t\ta = i;\n\t\tb = n - (a * a);\n\t\tif (b >= 0) {\n\t\t\tif ((a + (b * b)) == m) cnt++;\n\t\t}\n\t\ti++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	n,m,i,a,b=int, cnt=0\nread n,m\ni=0\nwhile i<=sqrt(n)\na=i\nb=n-(a*a)\nif b>=0\nif a+b*b is m increment cnt\nincrement i\nprint cnt
const int maxn = 105;\nint n, m;\nint a, b;\nint ans = 0;\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 0; i <= 1000; i++) {\n\t\tfor (int j = 0; j <= 1000; j++) {\n\t\t\tif (i * i + j == n && i + j * j == m) ans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	maxn = const integer with maxn = 105\nn, m = integers\na, b = integers\nans = integer with ans = 0\nread n, m\nfor i = 0 to 1000\nfor j = 0 to 1000\nif (i * i + j is n and i + j * j is m), increment ans\nprint ans
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint c = 0;\n\tfor (int a = 0; a <= 1000; a++) {\n\t\tfor (int b = 0; b <= 1000; b++) {\n\t\t\tif (a * a + b == n && b * b + a == m) c++;\n\t\t}\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	n, m = int\nread n and m\nc = 0 = int\nfor a = 0 to 1000 inclusive\nfor b = 0 to 1000 inclusive\nif a^2 _ b = n and b^2 + a = m then increment c\nprint c
int min(int a, int b) {\n\treturn (a < b) ? a : b;\n}\nint main() {\n\tint m, n;\n\tcin >> m >> n;\n\tint c = min(m, n);\n\tint counter = 0;\n\tfor (int i = 0; i <= c; i++) {\n\t\tfor (int j = 0; j <= c; j++) {\n\t\t\tif (i * i + j == m && i + j * j == n) counter++;\n\t\t}\n\t}\n\tcout << counter << endl;\n}	declare min taking in ints a and b and returning integer\nreturn a if a is less than b or b if not\ncreate ints m and n\nread m and n\ncreate integer c = min(m, n)\nmake int counter = 0\nfor i = 0 to c\nfor j = 0 to c\nif i * i + j is equal to m and i + j * j is equal to n, increment counter\nprint counter
int a[1001][1001];\nint main() {\n\tint n, m, i, j, cnt = 0;\n\tcin >> n >> m;\n\tfor (i = 0; i <= n; i++) {\n\t\tfor (j = 0; j <= m; j++) {\n\t\t\tif (i * i + j == n && i + j * j == m) a[i][j] = 1;\n\t\t}\n\t}\n\tfor (i = 0; i < 1001; i++) {\n\t\tfor (j = 0; j < 1001; j++) {\n\t\t\tif (a[i][j]) cnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	a is a new 2d array of integers with size 1001 by 1001\nn, m, i, j and cnt are ints with cnt = 0\nread input to n and m\nin a for loop, change i from 0 to n inclusive incrementing i\nfor j = 0 to m inclusive\nset a[i][j] to 1 if i * i + j is equal to n and i + j * j is equal to m\nfor i = 0 to 1001 exclusive\nstart for loop from j = 0 to 1001 exclusive\nif a[i][j] != 0, increment cnt\nprint cnt
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint cnt = 0;\n\tfor (int i = 0; i <= n && i <= m; i++) {\n\t\tint b = n - i * i;\n\t\tif (b >= 0 && i + b * b == m) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	create integers n and m\nread n and m\nlet cnt = 0 be an integer\nfor i = 0 while i is less than or equal to n and less than or equal to m\nlet b = n - i * i\nif b is positive or 0 and i + b * b is equal to m then increment cnt\nprint cnt
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint c = 0;\n\tfor (int i = 0; i <= 1000; i++) {\n\t\tfor (int j = 0; j <= 1000; j++) {\n\t\t\tint p = i * i + j;\n\t\t\tint q = i + j * j;\n\t\t\tif (p == n && q == m) { c++; }\n\t\t}\n\t}\n\tcout << c << endl;\n}	create integers n and m\nread variables n and m from the input\ndeclare new integer variable c = 0\nin a for loop, change i from 0 to 1000 inclusive\nstart for loop from j = 0 to 1000 inclusive incrementing j\np is a new integer variable with value i squared + j\nnew integer q with value i + j squared\nif p is equal to n and q is equal to m, increment c\nprint c
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint res = 0;\n\tfor (int i = 0; i < 100; i++) {\n\t\tfor (int j = 0; j < 100; j++) {\n\t\t\tif (i * i + j == n && i + j * j == m) res++;\n\t\t}\n\t}\n\tcout << res << endl;\n}	declare integers n, m\nread n and m\ndeclare integer res = 0\nfor i = 0 to 100 exclusive\nfor j = 0 to 100 exclusive\nif ( i * i + j is n and i + j * j is m, increment res\nprint res and newline
int main() {\n\tlong long int i, s = 0, j = 0, k = 0, l, n, m;\n\tcin >> m >> n;\n\tfor (i = 0; i <= m; i++) {\n\t\tfor (j = 0; j <= n; j++) {\n\t\t\tk = i * i + j;\n\t\t\tl = i + j * j;\n\t\t\tif (k == n && l == m) s++;\n\t\t}\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	i, s, j, k, l, n, m =integers with s = 0, j = 0, k = 0\nRead m, n\nfor i = 0 to m exclusive\nfor j = 0 to n exclusive\nset k to i * i + j\nset l to i + j * j\nif k is n and l is m, then increment s\nprint s and a new line
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint solu = 0;\n\tfor (int i = 0; i <= 1000; i++) {\n\t\tfor (int j = 0; j <= 1000; j++) {\n\t\t\tif (pow(i, 2) + j == n && i + pow(j, 2) == m) solu++;\n\t\t}\n\t}\n\tcout << solu << endl;\n\treturn 0;\n}	n, m = integers\nread n, m\nsolu = integer with solu = 0\nfor i = 0 to 1000\nfor j = 0 to 1000\nif (pow(i, 2) + j is n and i + pow(j, 2) is m), increment solu\nprint solu
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint counter = 0;\n\tfor (int a = 0; a <= m; a++)\n\t\tfor (int b = 0; b <= n; b++)\n\t\t\tif (a * a + b == n && a + b * b == m) counter++;\n\tcout << counter << endl;\n\treturn 0;\n}	create int n and m\nread n and m\ncounter =0\nfor a=0 to m inclusive\nfor b=0 to n inclusive\nif a * a + b = n and a + b * b = m, increment counter\nprint counter
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint inte_pair = 0;\n\tfor (int i = 0; i <= n && i <= m; i++)\n\t\tfor (int j = 0; j <= n && j <= m; j++)\n\t\t\tif ((i * i) + j == n && i + (j * j) == m) inte_pair++;\n\tcout << inte_pair << endl;\n}	create int n and m\nread n and m\ninte_pair = 0\nfor i=0 to n inclusive and m inclusive\nfor j=0 to n and m inclusive\nif (i * i) + j = n and i + (j * j) = m, increment inte_pair\nprint inte_pair
int n, k = 0, i, m, j;\nint main() {\n\tcin >> n >> m;\n\tfor (i = 0; i * i <= n; i++)\n\t\tfor (j = 0; j * j <= m; j++)\n\t\t\tif (i * i + j == n && j * j + i == m) k++;\n\tcout << k << endl;\n\treturn 0;\n}	n, k, i, m, j = int with k = 0\nread n then m\niterate i while i * i <= n\niterate j while j * j <= m\nif i * i + j is n and j * j + i is m increment k\nprint k
double EPS = 1e-9;\nlong long INFF = 1000000000000000005LL;\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint c = 0;\n\tfor (int a = 0; a <= sqrt(n); ++a) {\n\t\tfor (int b = 0; b <= sqrt(m); ++b) {\n\t\t\tif ((a * a + b == n) && (a + b * b == m)) { c++; }\n\t\t}\n\t}\n\tcout << c << '\n';\n\treturn 0;\n}	double integers = EPS = 1e-9\nINFF set to 1000000000000000005LL = long long integer\nintegers = n,m\nread n,m\ninteger c = 0\nfor a = 0 to less than or equal to sqrt(n) do the following\nfor b = 0 to less than or equal to sqrt(m) do the following\nif a squared+ b is n and a + b squared is m then add one to c\noutput c
int main() {\n\tint n, m;\n\twhile (cin >> n >> m) {\n\t\tint ans = 0;\n\t\tfor (int a = 0; a <= 1000; a++) {\n\t\t\tfor (int b = 0; b <= 1000; b++) {\n\t\t\t\tif (a * a + b == n && b * b + a == m) ans++;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	let n, m be integers\nwhile read n, m\nlet ans be a integer with ans = 0\nfor a = 0 to 1000 inclusive\nfor b = 0 to 1000 inclusive\nif a * a + b is equal to n and b * b + a is equal to m , increment ans by 1\nprint ans and newline
int m, n, a, b;\nint fit() {\n\tint f1 = a * a + b, f2 = a + b * b;\n\tif (f1 == n && f2 == m)\n\t\treturn 0;\n\telse if (f1 > n)\n\t\treturn 1;\n\telse if (f2 > m)\n\t\treturn 1;\n\treturn -1;\n}\nint main() {\n\tcin >> n >> m;\n\tint cnt = 0;\n\tfor (a = 0; a <= 31; a++)\n\t\tfor (b = 0; b <= 31; b++) {\n\t\t\tif (fit() == 0)\n\t\t\t\tcnt++;\n\t\t\telse if (fit() == 1)\n\t\t\t\tbreak;\n\t\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	let m, n, a, b be integers\nlet fit be a integer function\nlet f1 , f2 be integers with f1 = a * a + b, f2 = a + b * b\nif f1 is equal to n and f2 is equal to m\nelse if f1 is greater than n\nreturn 1\nelse if f2 is greater than m\nreturn 1\nreturn -1\nread n, m\nlet cnt be a integer with cnt = 0\nfor a = 0 to 31 inclusive\nfor b = 0 to 31 inclusive\nif fit() is equal to 0\nincrement cnt by 1\nelse if fit() is equal to 1\nstop\nprint cnt and newline
int main() {\n\tint n;\n\tcin >> n;\n\tn -= 10;\n\tif (n == 10) return cout << 15 << endl, 0;\n\tif (n <= 11 && n >= 1) return cout << 4 << endl, 0;\n\tcout << 0 << endl;\n}	define new integer n\nread n from the user input\nchange n to n - 10\nif n is equal to 10, return cout << 15 << endl, 0\nif 1 <= n <= 11, return cout << 4 << endl, 0\nprint 0
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10)\n\t\tcout << ""0"" << endl;\n\telse {\n\t\tif (n >= 11 && n <= 19)\n\t\t\tcout << ""4"" << endl;\n\t\telse if (n == 20)\n\t\t\tcout << ""15"" << endl;\n\t\telse if (n == 21)\n\t\t\tcout << ""4"" << endl;\n\t\telse if (n > 21)\n\t\t\tcout << ""0"" << endl;\n\t}\n}"	integer as n\nread n\nif n is less than or equal to 10 then do the following\noutput 0\nelse\nif n >= 11 and n is less than or equal to 19 then do the following\noutput 4\nelse if n is 20 then do the following\noutput 15\nelse if n is 21 then do the following\noutput 4\nelse if n is greater than 21 then do the following\noutput 0
int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n > 21) {\n\t\tcout << 0 << endl;\n\t} else if (n == 20) {\n\t\tcout << 15 << endl;\n\t} else {\n\t\tcout << 4 << endl;\n\t}\n\treturn 0;\n}	let n be a integer\nread n\nif n <= 10 or n is greater than 21\nprint 0 and newline\nelse if n equals 20\nprint 15 and newline\nelse do the following\nprint 4 and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n >= 22)\n\t\tcout << '0' << endl;\n\telse if (n == 20)\n\t\tcout << ""15"" << endl;\n\telse\n\t\tcout << '4' << endl;\n\treturn 0;\n}"	"declare integer n\nread n\nif n is less than or equal to 10 or n is greater than or equal to 22\nprint '0', newline\nelse if n is 20\nprint ""15"", newline\nelse\nprint '4', newline"
int main() {\n\tint a;\n\tcin >> a;\n\ta = a - 10;\n\tif (a == 10) {\n\t\tcout << (4 * 3) + 3 << endl;\n\t} else if (a > 0 && a < 12) {\n\t\tcout << 4 << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}	declare integer a\nread a\nlet a be a - 10\nif a is 10\nprint ( 4 * 3 ) + 3, newline\nelse if a is greater than 0 and a is less than 12\nprint 4, newline\nelse\nprint 0, newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n < 11) {\n\t\tcout << 0 << endl;\n\t} else if (n == 11 || n == 21) {\n\t\tcout << 4 << endl;\n\t} else if (n >= 12 && n <= 19) {\n\t\tcout << 4 << endl;\n\t} else if (n == 20) {\n\t\tcout << 15 << endl;\n\t} else\n\t\tcout << 0 << endl;\n}	n is an integer\nread n\nif n is less than 11\nprint 0 and endline\nelse if n equals 11 or 21\nprint 4 and endline\nelse if n is between 12 and 19 inclusive\nprint 4 and endline\nelse if n equals 20\nprint 15 and endline\nelse\nprint 0 and endline
"int N;\nint main() {\n\tcin >> N;\n\tif (N > 21) {\n\t\tcout << '0' << endl;\n\t\treturn 0;\n\t}\n\tif (N == 21) {\n\t\tcout << '4' << endl;\n\t\treturn 0;\n\t}\n\tif (N - 10 == 10) {\n\t\tcout << ""15"" << endl;\n\t\treturn 0;\n\t}\n\tif (N < 20 && N > 10) {\n\t\tcout << ""4"" << endl;\n\t} else {\n\t\tcout << ""0"" << endl;\n\t}\n\treturn 0;\n}"	"create integer N\nread N\nif N is greater than 21\nprint '0'\nif n is equal to 21\nprint '4'\nif n - 10 is equal to 10\nprint ""15""\nif N is less than 20 and N is greater than 10\nprint ""4""\nelse do\nshow ""0"""
int main() {\n\tint n, cards = 0;\n\tcin >> n;\n\tn -= 10;\n\tif (n >= 1 && n < 10)\n\t\tcards = 4;\n\telse if (n == 10)\n\t\tcards = 15;\n\telse if (n == 11)\n\t\tcards = 4;\n\telse\n\t\tcards = 0;\n\tcout << cards << endl;\n\treturn 0;\n}	n, cards =integers with cards = 0\nRead n\nset n to n - 10\nif n is greater than or equal to 1 and n is less than 10\nset cards to 4\nelse if n is equal to 10\nset cards to 15\nelse if n is equal to 11\nset cards to 4\nelse do the following\nset cards to 0\nprint cards and a new line
int main() {\n\tint n, i, n1;\n\tcin >> n;\n\ti = 10;\n\tif (n <= 10)\n\t\tn1 = 0;\n\telse {\n\t\tif (n <= 19)\n\t\t\tn1 = 4;\n\t\telse if (n == 20) {\n\t\t\tn1 = 15;\n\t\t} else if (n == 21) {\n\t\t\tn1 = 4;\n\t\t} else {\n\t\t\tn1 = 0;\n\t\t}\n\t}\n\tcout << n1 << endl;\n}	create int n, i, n1\nread n\ni=10\nif n <=10\nset n1 to 0\nelse\nif n<= 19\nassign 4 to n1\nelse if n=20\nset n1 to 15\nelse if n=21\nassign 4 to n1\nelse\nset n1=0\nprint n1
"int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tif (n <= 10 || n >= 22) {\n\t\t\tcout << ""0"" << endl;\n\t\t} else if (n == 20) {\n\t\t\tcout << ""15"" << endl;\n\t\t} else {\n\t\t\tcout << ""4"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	let n be a integer\nwhile read n\nif n is less than or equal to 10 or greater than or equal to 22,\nprint 0 and newline\nelse if n equals 20\nprint 15 and newline\nelse\nprint 4 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n > 21) {\n\t\tcout << 0 << endl;\n\t} else if (n == 20) {\n\t\tcout << 15 << endl;\n\t} else {\n\t\tcout << 4 << endl;\n\t}\n\treturn 0;\n}	create new integer n\nread variable n from the input\nif n <= 10 or n > 21\nprint 0\nelse if n is equal to 20\nprint 15 to the standard output\nelse\nprint 4
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n >= 22) { cout << ""0"" << endl; }\n\tif (n >= 11 && n <= 19) { cout << ""4"" << endl; }\n\tif (n == 20) { cout << ""15"" << endl; }\n\tif (n == 21) { cout << ""4"" << endl; }\n\treturn 0;\n}"	let n be a integer\nread n\nif n <= 10 or n >= 22 , print 0 and newline\nif n >= 11 and n <= 19 , print 4 and newline\nif n equals 20 , print 15 and newline\nif n equals 21 , print 4 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n > 21)\n\t\tcout << 0 << endl;\n\telse if (n - 10 < 10)\n\t\tcout << 4 << endl;\n\telse if (n - 10 == 10)\n\t\tcout << 15 << endl;\n\telse\n\t\tcout << 4 << endl;\n}	create integer variable with name n\nread user input to n\nif n <= 10 or n > 21\nprint 0\nelse if n - 10 is less than 10\nprint 4\nelse if n - 10 is equal to 10\nprint 15\nelse\nprint 4 to the standard output
int main() {\n\tint a;\n\tcin >> a;\n\tif (a - 10 <= 0 || a - 10 > 11) {\n\t\tcout << 0 << endl;\n\t} else if ((a - 10 >= 1 && a - 10 <= 9) || a - 10 == 11) {\n\t\tcout << 4 << endl;\n\t} else\n\t\tcout << 15 << endl;\n}	integer as a\nread a\nif a - 10 is less than or equal to 0 or a - 10 > 11 then do the following\noutput 0\nelse if a-10 is greater than 1 or a-10 is less than or equal to 9 then do the following\noutput 4\nelse\noutput 15
"int main() {\n\tint n, m;\n\twhile (cin >> n) {\n\t\tm = n - 10;\n\t\tif (m > 0 && m < 10)\n\t\t\tcout << '4' << endl;\n\t\telse if (m == 0)\n\t\t\tcout << '0' << endl;\n\t\telse if (m == 10)\n\t\t\tcout << ""15"" << endl;\n\t\telse if (m == 11)\n\t\t\tcout << '4' << endl;\n\t\telse\n\t\t\tcout << '0' << endl;\n\t}\n\treturn 0;\n}"	"declare new integer variables n and m\nloop, reading n from the input\nchange m to n - 10\nif m > 0 and m < 10\nprint '4'\nelse if m = 0\nprint '0'\nelse if m is equal to 10\nprint ""15""\nelse if m = 11\nprint '4'\nelse\nprint '0'"
int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10) {\n\t\tcout << 0 << endl;\n\t} else if (n < 20) {\n\t\tcout << 4 << endl;\n\t} else if (n == 20) {\n\t\tcout << 15 << endl;\n\t} else if (n == 21) {\n\t\tcout << 4 << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}	n = int\nread n\nif n <= 10\nprint 0\nelse if n < 20\nprint 4\nelse if n is 20\nprint 15\nelse if n is 21\nprint 4\nelse\nprint 0
vector<long long> v;\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n > 21) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tn -= 10;\n\tif (n == 10)\n\t\tcout << 15 << endl;\n\telse {\n\t\tcout << 4 << endl;\n\t}\n\treturn 0;\n}	create new vector of long longs v\ndefine new integer called n\nread standard input to n\nif n <= 10 or n > 21\nprint 0\ndecrease n by 10\nif n = 10\nprint 15 to the output\nelse\nprint 4
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10)\n\t\tcout << 0 << ""\n"";\n\telse {\n\t\tif (n >= 11 && n <= 19)\n\t\t\tcout << 4 << ""\n"";\n\t\telse {\n\t\t\tif (n == 20)\n\t\t\t\tcout << 15 << ""\n"";\n\t\t\telse if (n == 21)\n\t\t\t\tcout << 4 << ""\n"";\n\t\t\telse\n\t\t\t\tcout << 0 << ""\n"";\n\t\t}\n\t}\n\treturn 0;\n}"	n = int\nread n\nif n <= 10\nprint 0\nelse\nif n is between 11 and 19 both inclusive\nprint 4\nelse\nif n = 20\nprint 15\nelse if n = 21\nprint 4\nelse\nprint 0
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tif (n < 10 || n > 21) {\n\t\t\tcout << 0 << endl;\n\t\t} else if (n == 20) {\n\t\t\tcout << 15 << endl;\n\t\t} else if (n == 10) {\n\t\t\tcout << 0 << endl;\n\t\t} else {\n\t\t\tcout << 4 << endl;\n\t\t}\n\t}\n\treturn 0;\n}	integer as n\nwhile reading input n\nif n is less than 10 or n > 21 then do the following\noutput 0\nelse if n is 20 then do the following\noutput 15\nelse if n is 10 then do the following\noutput 0\nelse\noutput 4
int n;\nint main() {\n\tcin >> n;\n\tn -= 10;\n\tif (n <= 0)\n\t\tcout << 0 << endl;\n\telse if (n <= 9)\n\t\tcout << 4 << endl;\n\telse if (n == 10)\n\t\tcout << 15 << endl;\n\telse if (n == 11)\n\t\tcout << 4 << endl;\n\telse\n\t\tcout << 0 << endl;\n}	let n be a integer\nread n\ndecrement n by 10\nif n <= 0\nprint 0 and newline\nelse if n <= 9\nprint 4 and newline\nelse if n equals 10\nprint 15 and newline\nelse if n equals 11\nprint 4 and newline\nelse do the following\nprint 0 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n > 21)\n\t\tcout << 0 << endl;\n\telse if (n == 20)\n\t\tcout << 15 << endl;\n\telse\n\t\tcout << 4 << endl;\n}	integer as n\nread n\nif n is less than or equal to 10 or n > 21 then do the following\noutput 0\nelse if n is 20 then do the following\noutput 15\nelse\noutput 4
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10) {\n\t\tcout << ""0\n"";\n\t\treturn 0;\n\t} else if (n == 11) {\n\t\tcout << ""4\n"";\n\t\treturn 0;\n\t} else if (n >= 12 and n <= 19) {\n\t\tcout << ""4\n"";\n\t\treturn 0;\n\t} else if (n == 20) {\n\t\tcout << ""15\n"";\n\t} else if (n == 21) {\n\t\tcout << ""4\n"";\n\t\treturn 0;\n\t} else if (n >= 22) {\n\t\tcout << ""0\n"";\n\t\treturn 0;\n\t}\n\treturn 0;\n}"	n = int\nread n\nif n <= 10\nprint 0\nelse if n = 11\nprint 4\nelse if n >= 12 AND n <= 19\nprint 4\nelse if n = 20\nprint 15\nelse if n = 21\nprint 4\nelse if n >= 22\nprint 0
int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n > 21) {\n\t\tcout << 0 << endl;\n\t} else if (n == 20) {\n\t\tcout << 15 << endl;\n\t} else {\n\t\tcout << 4 << endl;\n\t}\n\treturn 0;\n}	n = int\nread n\nif n <= 10 or n > 21\nprint 0\nelse if n is 20\nprint 15\nelse\nprint 4
"int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tif ((n < 20 && n > 10) || n == 21)\n\t\t\tcout << ""4"" << endl;\n\t\telse if (n <= 10 || n > 21)\n\t\t\tcout << ""0"" << endl;\n\t\telse\n\t\t\tcout << ""15"" << endl;\n\t}\n\treturn 0;\n}"	n =integer\nwhile reading values n\nif n is less than 20 and n is greater than 10 OR n is equal to 21\nprint 4 and a new line\nelse if n is less than or equal to 10 OR n is greater than 21\nprint 0 and a new line\nelse do the following\nprint 15 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tif (n < 11)\n\t\tcout << 0 << endl;\n\telse if (n == 20)\n\t\tcout << 15 << endl;\n\telse if (n > 21)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 4 << endl;\n\treturn 0;\n}	n =integer\nRead n\nif n is less than 11\nprint 0 and a new line\nelse if n is less than 20\nprint 15 and a new line\nelse if n is less than 21\nprint 0 and a new line\nelse do the following\nprint 4 and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tint required = n - 10;\n\tif (required <= 0) {\n\t\tcout << ""0"" << endl;\n\t} else if (required >= 1 && required <= 9) {\n\t\tcout << ""4"" << endl;\n\t} else if (required == 10) {\n\t\tcout << ""15"" << endl;\n\t} else if (required == 11) {\n\t\tcout << ""4"" << endl;\n\t} else if (required >= 12) {\n\t\tcout << ""0"" << endl;\n\t}\n\treturn 0;\n}"	"n is a new integer variable\nread n from the user input\ndeclare new integer required with value n-10\nif required <= 0\nprint ""0"" to the standard output\nelse if required >= 1 and required <= 9\nprint ""4"" to the output\nelse if required = 10\nprint ""15"" to the stdou\nelse if required = 11\nprint ""4""\nelse if required >= 12\nprint ""0"""
int n;\nint main() {\n\twhile (cin >> n) { cout << (n > 10 && n < 22) * 4 + (n == 20) * 11 << endl; }\n\treturn 0;\n}	create integer n\nread n and while it's truthy, print (n > 10 && n < 22) * 4 + (n == 20) * 11
int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10)\n\t\tcout << 0 << endl;\n\telse if (n > 10 && n <= 19)\n\t\tcout << 4 << endl;\n\telse if (n == 20)\n\t\tcout << 15 << endl;\n\telse if (n == 21)\n\t\tcout << 4 << endl;\n\telse\n\t\tcout << 0 << endl;\n}	n is an integer\nread n\nif n is less than or equals 10\nprint 0 and endline\nelse if n is between 11 and 19 exclusive\nprint 4 and endline\nelse if n equals 20\nprint 15 and endline\nelse if n equals 21\nprint 4 and endline\nelse\nprint 0 and endline
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n <= 10 || n - 10 >= 12) {\n\t\tcout << ""0"" << endl;\n\t\treturn 0;\n\t}\n\tif (n - 10 == 1 || n - 10 == 11) {\n\t\tcout << 4 << endl;\n\t} else if (n - 10 == 10) {\n\t\tcout << 15 << endl;\n\t} else {\n\t\tcout << 4 << endl;\n\t}\n\treturn 0;\n}"	"make int n\nread n\nif n is less than or equal to 10 or n - 10 is greater than or equal to 12\ndisplay ""0""\nif n - 10 is equal to 1 or n - 10 is equal to 11\nshow 4\nelse if n - 10 is 10\ndisplay 15\nelse\nshow 4"
int main() {\n\tint n, i, j, temp, result, imin = 10000000;\n\tvector<int> a;\n\tcin >> n;\n\ta.push_back(1);\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> temp;\n\t\ta.push_back(temp);\n\t}\n\tfor (i = 1; i <= n; i++) {\n\t\tresult = 0;\n\t\tfor (j = 1; j <= n; j++) { result += 2 * a[j] * (abs(i - j) + abs(j - 1) + abs(i - 1)); }\n\t\timin = min(imin, result);\n\t}\n\tcout << imin << endl;\n\treturn 0;\n}	n, i, j, temp, result and imin are integers with imin = 10000000\ncreate new vector of integers a\nread n from the input\nadd 1 as a new element to a\nin a for loop, change i from 1 to n inclusive\nread variable temp from the input\npush temp into a\nin a for loop, change i from 1 to n inclusive\nassign 0 to result\nfor j from 1 to n inclusive, increase result by 2 * a[j] * (abs(i - j) + abs(j - 1) + abs(i - 1))\nchange the value of imin to min of imin and result\nprint imin
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a[105];\n\t\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\t\tint Min = 0x3f3f3f3f;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint ans = 0;\n\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\tif (j > i)\n\t\t\t\t\tans += (j - 1) * 4 * a[j];\n\t\t\t\telse\n\t\t\t\t\tans += (i - 1) * 4 * a[j];\n\t\t\t}\n\t\t\tMin = min(Min, ans);\n\t\t}\n\t\tcout << Min << endl;\n\t}\n\treturn 0;\n}	create new integer variable n\nread n and keep looping\ncreate new array of integers a with 105 elements\nstart for loop from i = 1 to n inclusive, read standard input to a[i] on each loop\nMin is a new integer variable = 0x3f3f3f3f\nloop through i from i to n inclusive\nans is a new integer = 0\nchange j in a loop from 1 to n inclusive\nif j is greater than i\nincrease ans by (j - 1) * 4 * a[j]\nelse\nchange ans to ans + (i - 1) * 4 * a[j]\nchange Min to min of Min and ans\nprint Min
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tint mini = 100000000;\n\tfor (int i = 0; i < n; i++) {\n\t\tint temp = 0;\n\t\tfor (int j = 0; j < n; j++) { temp += (abs(i - j) + j + i) * a[j] * 2; }\n\t\tmini = min(mini, temp);\n\t}\n\tcout << mini << endl;\n\treturn 0;\n}	n = int\nread n\na = int array of size n\nread n values into a\nmini = int with mini = 100000000\nfor i = 0 to n\ntemp = int with temp = 0\nfor j = 0 to n increment temp by (absolute of (i - j) + j + i) * a[j] * 2\nset mini to min of mini, temp\nprint mini
int main() {\n\tint n;\n\tint arr[10010];\n\tint ans = 1000000000;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> arr[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x = i;\n\t\tint cost = 0;\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tcost += abs(x - j) * arr[j];\n\t\t\tcost += ((j - 1) * arr[j]);\n\t\t\tcost += (x - 1) * arr[j];\n\t\t\tcost += (x - 1) * arr[j];\n\t\t\tcost += ((j - 1) * arr[j]);\n\t\t\tcost += abs(x - j) * arr[j];\n\t\t}\n\t\tif (cost < ans) { ans = cost; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n = integer\narr = integer array of size 10010\nans = integer with ans = 1000000000\nread n\nfor i = 1 to n, read arr[i]\nfor i = 1 to n\nx = intege with x = i\ncost = integer with cost = 0\nfor j = 1 to n\ncost = cost + abs(x - j) * arr[j]\ncost = cost + ((j - 1) * arr[j])\ncost = cost + (x - 1) * arr[j]\ncost = cost + (x - 1) * arr[j]\ncost = cost + ((j - 1) * arr[j])\ncost = cost + abs(x - j) * arr[j]\nif (cost < ans), ans = cost\nprint ans
long long int gcd(long long int a, long long int b) {\n\tif (a == 0) return b;\n\treturn gcd(b % a, a);\n}\nunsigned long long int factorial(unsigned long long int n) {\n\tif (n == 0) return 1;\n\treturn n * factorial(n - 1);\n}\nlong long int nCr[1001][1001];\nvoid combi() {\n\tfor (int i = 1; i <= 1000; i++) {\n\t\tnCr[0][i] = 0;\n\t\tnCr[i][0] = 1;\n\t}\n\tfor (int i = 1; i <= 1000; i++) {\n\t\tfor (int j = 1; j <= 1000; j++) {\n\t\t\tif (i < j) {\n\t\t\t\tcontinue;\n\t\t\t} else if (i == j) {\n\t\t\t\tnCr[i][j] = 1;\n\t\t\t} else {\n\t\t\t\tnCr[i][j] = nCr[i - 1][j] + nCr[i - 1][j - 1];\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int arr[n];\n\tfor (long long int i = 0; i < n; i++) { cin >> arr[i]; }\n\tlong long int min = LONG_MAX;\n\tfor (long long int i = 0; i < n; i++) {\n\t\tlong long int cost = 0;\n\t\tfor (long long int j = 0; j < n; j++) { cost += (arr[j] * (abs(i - j) + j + i + i + j + abs(j - i))); }\n\t\tif (cost < min) min = cost;\n\t}\n\tcout << min << endl;\n\treturn 0;\n}	declare gcd with long long integers a, b as arguments, returning long long integer\nif a is 0, return b\nreturn result of run gcd with b % a, a as arguments from function\ndeclare factorial with unsigned long long integer n as argument, returning unsigned long long integer\nif n is 0, return 1\nreturn n * result of run factorial(n-1)\ndeclare long long integer array nCr size 1001 by 1001\ndeclare combi with no arguments, returning void\nfor i = 1 to 1000 inclusive\nlet nCr[0][i] be 0\nlet nCr[i][0] be 1\nfor i = 1 to 1000 inclusive\nfor j = 1 to 1000 inclusive\nif i is less than j\nend loop iteration\nelse if i is j\nlet nCr[i][j] be 1\nelse\nlet nCr[i][j] be nCr[i - 1][j] + nCr[i - 1][j - 1]\ndeclare long long integer n\nread n\ndeclare long long integer array arr size n\nfor i = 0 to n exclusive, read arr[i]\ndeclare long long integer min = LONG_MAX\nfor i = 0 to n exclusive\ndeclare long long integer cost = 0\nfor j = 0 to n exclusive, increment cost by arr[j] * ( absolute value of ( i - j ) + j + i + i + j + absolute value of ( j - 1 ) )\nif cost is less than min, let min be cost\nprint min and newline
int main() {\n\tint s = 0, n, m;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> m;\n\t\ts = s + i * 4 * m;\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	s, n and m are ints with s = 0\nread input to n\nin a for loop, change i from 0 to n exclusive incrementing i\nread variable m from the input\nassign the new value = s + i * 4 * m to s\nprint s
void init(){};\nint a[1000];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tlong long sum = 0;\n\tfor (int i = 1; i <= n; i++) sum += 4 * (i - 1) * a[i];\n\tcout << sum << endl;\n\treturn 0;\n}	function init\na = integer array of size 1000\nn = integer\nread n\nfor i = 1 to n, read a[i]\nsum = long long with sum = 0\nfor i = 1 to n, sum = sum + 4 * (i - 1) * a[i]\nprint sum
long long int i, j, t;\nint main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int a[n];\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tlong long int x[n] = {0};\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) { x[i] += a[j] * ((abs(i - j) + abs(j) + abs(i) + abs(i) + abs(j) + abs(j - i))); }\n\t}\n\tsort(x, x + n);\n\tcout << x[0] << endl;\n}	create long long ints i, j and t\nn is a new long long\nread input to n\na is a new array of long long integers with size n\nin a for loop, change i from 0 to n exclusive, read user input to a[i] on each loop\nx is a new array of long long integers with size n filled with 0\nin a for loop, change i from 0 to n exclusive\nstart for loop from j = 0 to n exclusive, changing x[i] to x[i] + a[j] * ((abs(i - j) + abs(j) + abs(i) + abs(i) + abs(j) + abs(j - i))) on each loop\nsort x from index 0 to n\nprint x[0]
int n, ans;\nint a[10010];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> a[i];\n\t\tans += a[i] * (i - 1) * 4;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integer variables n and ans\na is a new array of integers with 10010 elements\nread variable n from the input\nin a for loop, change i from 1 to n inclusive\nread a[i] from the user input\nincrease ans by a[i] * (i - 1) * 4\nprint ans
const int pi = acos(-1);\nint main() {\n\tint n;\n\tcin >> n;\n\tint a[200], k = 1, ele = 0, flag = 0;\n\tfor (int i = 1; i <= n; ++i) { cin >> a[i]; }\n\tfor (int i = 1; i <= n; ++i) { ele += (4 * i - 4) * a[i]; }\n\tcout << ele << endl;\n}	pi is a new constant integer = acos of -1\ndeclare integer variable n\nread from the input to n\ndeclare new integers ele, flag = 0 and k = 1; create an integer array a with 200 elements\nfor i from 1 to n inclusive, read a[i] from the input\nfor integer i = 1 to n inclusive, add (4 * i - 4) * a[i] to ele\nprint ele to the standard output
const long long M = 998244353;\nconst long long oo = 1e13;\nint a[1010];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) { cin >> a[i]; }\n\tint ans = 1e9;\n\tfor (int x = 1; x <= n; ++x) {\n\t\tint sum = 0;\n\t\tfor (int j = 1; j <= n; ++j) { sum += ((abs(j - x) + j - 1 + x - 1) * 2) * a[j]; }\n\t\tans = min(ans, sum);\n\t}\n\tcout << ans << endl;\n}	create const long long int M = 998244353\nmake constant long long oo = 1e13\ncreate int array a of size 1010\nmake int n\nread n\nfor i = 1 to n, read a[i]\nmake int ans = 1e9\nfor x = 1 to n\nlet int sum = 0\nfor j = 1 to n, add ((abs(j - x) + j - 1 + x - 1) * 2) * a[j] to sum\nset ans to min of ans and sum\nprint ans
int main() {\n\tint n, a[1000], max1;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tint sum = 0;\n\t\tfor (int j = 1; j <= n; j++) { sum += (fabs(i * 1.0 - j * 1.0) + j - 1 + i - 1) * 2 * a[j]; }\n\t\tif (i == 1)\n\t\t\tmax1 = sum;\n\t\telse\n\t\t\tmax1 = min(max1, sum);\n\t}\n\tcout << max1 << endl;\n\treturn 0;\n}	create ints n and max1 and int array a of size 1000\nread n\nfor i = 1 to n, read a[i]\nfor i = 1 to n\nmake integer sum = 0\nfor j = 1 to n, add (fabs(i * 1.0 - j * 1.0) + j - 1 + i - 1) * 2 * a[j] to sum\nif i is equal to 1\nset max1 to sum\nelse do\nset max1 to min of max1 and sum\nprint max1
int main() {\n\tint n;\n\tcin >> n;\n\tint value;\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> value;\n\t\tans += i * 4 * value;\n\t}\n\tcout << ans << endl;\n}	declare integer variable n\nread input to n\ndeclare integer variable with name value\ncreate integer ans = 0\nrepeat the loop n times, incrementing i by 1, starting from 0\nread value\nadd i * 4 * value to ans\nprint ans
int main() {\n\tint n, i, j, m, t, x, y;\n\tint a[110];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tm = -1;\n\tfor (i = 1; i <= n; i++) {\n\t\tx = 0;\n\t\tfor (j = 0; j < n; j++) {\n\t\t\ty = i - (j + 1);\n\t\t\tif (y < 0) y = -y;\n\t\t\ty += j + i - 1;\n\t\t\tx += y * a[j] * 2;\n\t\t}\n\t\tif (x < m || m == -1) { m = x; }\n\t}\n\tcout << m << endl;\n\treturn 0;\n}	n, i, j, m, t, x, y = integers\na = integer array of size 110\nread n\nfor i = 0 to n exclusive, read a[i]\nm = -1\nfor i = 1 to n\nx = 0\nfor j = 0 to n exclusive\ny = i - (j + 1)\nif (y < 0), y = -y\ny = y + j + i - 1\nx = x + y * a[j] * 2\nif (x < m or m is -1), m = x\nprint m
int N, A, sum;\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> A;\n\t\tsum += 4 * A * i;\n\t}\n\tcout << sum << '\n';\n}	let N, A, sum ints\nread N\nfor i from 0 to N exclusive\nread A\nadd 4 * A * i to sum\nprint sum
int main() {\n\tint n, sum = 0, i, m, j;\n\tcin >> n;\n\tint *p = new int[n];\n\tfor (i = 0; i < n; i++) cin >> p[i];\n\tint *h = new int[n];\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = i + 1; j < n; j++) sum = sum + 4 * j * p[j];\n\t\tfor (m = i - 1; m > 0; m--) sum = sum + 4 * i * p[m] * 4;\n\t\tsum = i * 4 * p[i] + sum;\n\t\th[i] = sum;\n\t\tsum = 0;\n\t}\n\tfor (i = 1; i < n; i++)\n\t\tif (h[0] > h[i]) {\n\t\t\tint t;\n\t\t\tt = h[0];\n\t\t\th[0] = h[i];\n\t\t\th[i] = t;\n\t\t}\n\tcout << h[0] << endl;\n\treturn 0;\n}	make ints n, sum = 0, i, m, and j\nread n\ncreate int pointer p = new int[n]\nfor i = 0 to n exclusive, read p[i]\ncreate integer pointer h = new int[n]\nfor i = 0 to n exclusive\nfor j = i + 1 to n exclusive, set sum to sum + 4 * j * p[j]\nfor m = i - 1 to 0 exclusive by decreasing by 1, set sum to sum + 4 * i * p[m] * 4\nset sum to i * 4 * p[i] + sum\nset h[i] to sum\nset sum to 0\nfor i = 1 to n exclusive\nif h[0] is greater than h[i]\ncreate integer t\nset t to h[0]\nset h[0] to h[i]\nset h[i] to t\ndisplay h[0]
const int M = 105;\nint a[M];\nint main() {\n\tint n;\n\tcin >> n;\n\tint Min = 0x3f3f3f3f;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tint sum = 0;\n\t\tfor (int j = 1; j <= n; j++) { sum += (abs(i - j) - 2 + j + i) * a[j] * 2; }\n\t\tMin = min(sum, Min);\n\t}\n\tcout << Min << endl;\n\treturn 0;\n}	declare constant integer M = 105\ndeclare integer array a size M\ndeclare integer n\nread n\ndeclare integer Min = 0x3f3f3f3f\nfor i = 1 to n inclusive, read a[i]\nfor i = 1 to n inclusive\ndeclare integer sum = 0\nfor j = 1 to n inclusive, increment sum by ( absolute value of ( i - j ) - 2 + j + i ) * a[j] * 2\nlet min be minimum of sum and Min\nprint Min and newline
const int maxn = 1e4 + 5;\nint num[maxn] = {0};\nint n, ans = 10000000;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> num[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tint cnt = 0;\n\t\tfor (int j = 1; j <= n; j++) cnt += 2 * num[j] * (abs(i - j) + abs(j - 1) + abs(1 - i));\n\t\tans = min(cnt, ans);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	maxn = 1e4 + 5 = int const\nlet num be an int array of size maxn with num[0] = 0\nlet n, ans be ints with ans = 10000000\nread n\nread the first n+1 elements of num\nfor i = 1 to n inclusive\ncnt = 0 = int\nfor j = 1 to n inclusve, increment cnt by 2 * num[j] * (abs of(i - j) + abs of (j - 1) + abs of (1 - i)\nset ans to the min of cnt and ans\nprint ans
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a[105];\n\t\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\t\tint Min = 0x3f3f3f3f;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint ans = 0;\n\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\tif (j > i)\n\t\t\t\t\tans += (j - 1) * 4 * a[j];\n\t\t\t\telse\n\t\t\t\t\tans += (i - 1) * 4 * a[j];\n\t\t\t}\n\t\t\tMin = min(Min, ans);\n\t\t}\n\t\tcout << Min << endl;\n\t}\n\treturn 0;\n}	n = int\nwhile reading n\na = int array of length 105\nread a from 1 to n inclusive\nMin = 0x3f3f3f3f = int\nfor i = 1 to n inclusive\nans = 0 = int\nfor j =1 to n inclusive\nif j > i\nincrement ans by (j - 1) * 4 * a at j\nelse\nincrement ans by (i - 1) * 4 * a at j\nset Min to the minimum between Min and ans\nprint Min
void init(){};\nint a[1000];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tlong long sum = 0;\n\tfor (int i = 1; i <= n; i++) sum += 4 * (i - 1) * a[i];\n\tcout << sum << endl;\n\treturn 0;\n}	declare init\ncreate integer a of size 1000\nmake integer n\nread n\nfor i = 1 to n, read a[i]\ncreate long long sum = 0\nfor i = 1 to n, add 4 * (i - 1) * a[i] to sum\nprint sum
const int maxn = 1e5 + 5;\nint num[maxn] = {0};\nint n, ans = 1000000000;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> num[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tint cnt = 0;\n\t\tfor (int j = 1; j <= n; j++) cnt += 2 * num[j] * (abs(i - j) + abs(j - 1) + abs(1 - i));\n\t\tans = min(cnt, ans);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare new constant integer maxn with value 1e5 + 5\nnum is a new array of integers with size maxn\nlet n and ans be ints with ans = 1000000000\nread standard input to n\nread n elements from the input to array num\nfor integer i = 1 to n inclusive incrementing i\ndeclare integer cnt with value 0\nin a for loop, change j from 1 to n inclusive, increasing cnt by 2 * num[j] * (abs(i - j) + abs(j - 1) + abs(1 - i)) on each loop\nchange the value of ans to min of cnt and ans\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tint ans = 2e6;\n\tfor (int i = 0; i < n; i++) {\n\t\tint cur = 0;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint d1 = i - j;\n\t\t\tif (d1 < 0) { d1 = -d1; }\n\t\t\tcur += 2 * (d1 + i + j) * a[j];\n\t\t}\n\t\tif (cur < ans) { ans = cur; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n = int\nread n\na = int array of size n\nread n values into a\nans = int with ans = 2e6\nfor i = 0 to n\ncur = int with cur = 0\nfor j = 0 to n\nd1 = int with d1 = i - j\nif d1 < 0 set d1 to -d1\nincrement cur by 2 * (d1 + i + j) * a[j]\nif cur < ans set ans to cur\nprint ans
int main() {\n\tlong long int n, i, sum, minm, x;\n\tminm = 100000000;\n\tcin >> n;\n\tint a[n + 1];\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tfor (x = 1; x <= n; x++) {\n\t\tsum = 0;\n\t\tfor (i = 1; i <= n; i++) { sum = sum + (abs(i - x) + i - 1 + (x - 1)) * a[i] * 2; }\n\t\tif (sum < minm) minm = sum;\n\t}\n\tcout << minm << endl;\n}	n, i, sum, minm, x = long long int\nminm = 100000000\nread n\na = int array of size n + 1\nfor i = 1 to n inclusive read a[i]\nfor x = 1 to n inclusive\nset sum to 0\nfor i = 1 to n inclusive set sum to sum + (absolute of (i - x) + i - 1 + (x - 1)) * a[i] * 2\nif sum < minm set minm to sum\nprint minm
int main() {\n\tint n;\n\tcin >> n;\n\tint ans = (int)10e9;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tarr[i] = a;\n\t}\n\tint x = 1;\n\twhile (x <= n) {\n\t\tint cost = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint l = i + 1;\n\t\t\tcost += (abs(x - l) + abs(l - 1) + abs(x - 1)) * 2 * arr[i];\n\t\t}\n\t\tans = min(ans, cost);\n\t\tx++;\n\t}\n\tcout << ans << endl;\n}	let n be a integer\nread n\nlet ans be a integer with ans = (int)10e9\narr = array of integers of length n\nfor i = 0 to n exclusive\nlet a be a integer\nread a\narr[i] is equal to a\nlet x be a integer with x = 1\nwhile x <= n\nlet cost be a integer with cost = 0\nfor i = 0 to n exclusive\nlet l be a integer with l = i + 1\ncost = cost + absolute value of (x - l) + absolute value of (l - 1) + absolute value of (x - 1)) * 2 * arr[i]\nans = minimum of ans, cost\nincrement x by 1\nprint ans and newline
const int maxn = 200005;\nconst int maxm = maxn * 2;\nconst int inf = 0x3f3f3f3f;\nconst long long mod = 998244353;\nvoid init() {}\nint n;\nlong long a[105];\nint main() {\n\tinit();\n\tcin >> n;\n\tlong long ans = 1e18;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (int i = 1; i <= n; i++) {\n\t\tlong long tmp = 0;\n\t\tfor (int j = 1; j <= n; j++) { tmp += a[j] * 4 * ((i - 1) * 2 + (j - 1)); }\n\t\tans = min(ans, tmp);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	maxn = const integer with maxn = 200005\nmaxm = const integer with maxm = maxn * 2\ninf = const integer with inf = 0x3f3f3f3f\nmod = const long long with mod = 998244353\nfunction init\nn = integer\na = long long array of size 105\ncall init\nread n\nans = long long with ans = 1e18\nfor i = 1 to n, read a[i]\nfor i = 1 to n\ntmp = long long with tmp = 0\nfor j = 1 to n, tmp = tmp + a[j] * 4 * ((i - 1) * 2 + (j - 1))\nans = min of ans and tmp\nprint ans
"int main() {\n\tstring s;\n\tcin >> s;\n\ts = '#' + s;\n\tint n = s.length() - 1;\n\tint cnt = 0;\n\tfor (int i = 1; i + i <= n; ++i)\n\t\tif (s[i] != s[n - i + 1]) ++cnt;\n\tif ((cnt <= 1 && (n & 1)) || cnt == 1)\n\t\tputs(""YES"");\n\telse\n\t\tputs(""NO"");\n\treturn 0;\n}"	"declare string s\nread s\nlet s be '#' + s\ndeclare integer n = length of s - 1\ndeclare integer cnt = 0\nfor i = 1 to i + i is less than or equal to n, incrementing i\nif s[i] is not s[n-i+1], increment cnt\nif ( cnt is less than or equal to 1 and ( n bitwise and 1 ) ) or cnt is 1\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tstring x;\n\tcin >> x;\n\tint c = 0;\n\tfor (int i = 0, j = x.length() - 1; i < x.length(); i++, j--) {\n\t\tif (x[i] != x[j]) c++;\n\t}\n\tif (c == 2 || (c == 0 && x.length() % 2 != 0))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create string x\nread x\nc=0\nfor i=0 to length of x - exclusive and for j= length of x-1 exclusive\nif x[i] different from x[j], increment c\nif c=2 or c=0 and length of x is odd\nprint YES\nelse\nprint NO
"int main() {\n\tstring s;\n\twhile (cin >> s) {\n\t\tint c = 0;\n\t\tstring n = s;\n\t\tfor (int i = 0; i < (s.length()) / 2; i++) {\n\t\t\treverse(s.begin(), s.end());\n\t\t\tif (s[i] != s[s.length() - i - 1]) { c++; }\n\t\t}\n\t\tif ((s.length()) % 2 == 0 && c == 1)\n\t\t\tcout << ""YES"" << endl;\n\t\telse if ((s.length()) % 2 == 1 && c <= 1)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	s=string\nwhile read s\nc=0\nn=s\nfor i=0 to length of s/2 exclusive\nreverse s\nif s[i] is not s[length of s-i-1] increment c\nif length of s is even and c is 1\nprint YES\nelse if length of s is odd and c <= 1\nprint YES\nelse\nprint NO
"const int MOD = 998244353;\nconst int MAX = 200001;\nint An[MAX];\nint book[MAX];\nint main() {\n\tstring str;\n\tcin >> str;\n\tint sum = 0;\n\tint n = str.length();\n\tfor (int i = 0; i < n / 2; i++) {\n\t\tif (str[i] != str[n - 1 - i]) sum++;\n\t}\n\tif (sum == 1)\n\t\tcout << ""YES"" << endl;\n\telse {\n\t\tif (sum == 0 && n % 2) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create constant int MOD = 998244353\nmake const int MAX = 200001\ncreate int array An of size MAX\nmake integer array book of size MAX\nlet string str\nread str\ncreate int sum = 0\nmake integer n = str.length()\nfor i = 0 to n / 2 exclusive\nif str[i] is not equal to str[n - 1 - i], increment sum\nif sum is 1\nprint ""YES""\notherwise\nif sum is 0 and n % 2\ndisplay ""YES""\notherwise do\nshow ""NO"""
"int main() {\n\tstring s, t;\n\tcin >> s;\n\tt = s;\n\treverse(s.begin(), s.end());\n\tint d = 0;\n\tfor (int i = 0; i < s.length() / 2; i++)\n\t\tif (s[i] != t[i]) d++;\n\tputs((d == 1 or d == 0 and s.length() % 2 != 0) ? ""YES"" : ""NO"");\n\treturn 0;\n}"	"declare new string variables s and t\nread s from the input\nassign s to t\nreverse s\ncreate integer d = 0\nfor integer i = 0 to length of s / 2 exclusive incrementing i\nincrement d if s[i] != t[i]\nprint ""YES"" if d = 0 or 2 and s is odd, otherwise print ""NO"""
"int main() {\n\tstring str;\n\tcin >> str;\n\tint diff = 0;\n\tfor (int i = 0; i < str.size(); i++) { diff += str[i] != str[str.size() - 1 - i]; }\n\tif (diff == 2 || diff == 0 && str.size() % 2 == 1)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"declare string str\nread str\ndeclare integer diff = 0\nfor i = 0 to size of str exclusive, increment diff by ( str[i] is not str[size of str - 1 - i] )\nif diff is 2 or diff is 0 and size of str % 2 is 1\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint d = 0;\n\tfor (int i = 0; i < s.size(); ++i) { d += s[i] != s[s.size() - 1 - i]; }\n\tif (d == 2 || (d == 0 && s.size() % 2 == 1))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create string s\nread s\nset d to 0\nfor i=0 to size of s exclusive, d= d+s[i] different from s[s.size() - 1 - i]\nif d=2 or d=0 and size of s mod 2 =1\nprint YES\nelse\nprint NO
"string s;\ninline int check(string s) {\n\tstring ss = s;\n\treverse(s.begin(), s.end());\n\treturn s == ss;\n}\nint main() {\n\tcin >> s;\n\tif (check(s)) {\n\t\tif (s.size() % 2 == 0)\n\t\t\tputs(""NO"");\n\t\telse\n\t\t\tputs(""YES"");\n\t\treturn 0;\n\t}\n\tint len = s.size();\n\tif (len % 2 == 0)\n\t\tlen = len / 2 - 1;\n\telse\n\t\tlen = len / 2;\n\tfor (int i = 0; i <= len; ++i) {\n\t\tif (s[i] != s[s.size() - 1 - i]) {\n\t\t\ts[i] = s[s.size() - 1 - i];\n\t\t\tif (check(s)) {\n\t\t\t\tputs(""YES"");\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tputs(""NO"");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"	"declare string s\ndeclare inline check with string s as argument, returning integer\ndeclare string ss = s\nreverse sort from beginning of s to end of s\nreturn s is ss\nread s\nif result of run check(s) is true\nif size of s % 2 is 0\nprint ""NO""\nelse\nprint ""YES""\ndeclare integer len = size of s\nif len % 2 is 0\nlet len be len / 2 - 1\nelse\nlet len be len / 2\nfor i = 0 to len inclusive\nif s[i] is not s[size of s - 1 - i]\nlet s[i] be s[size of s - 1 - i]\nif result of run check(s) is true\nprint ""YES""\nelse\nprint ""NO"""
"string s;\nint main() {\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tchar c = s[i];\n\t\tfor (int j = 0; j < 26; j++) {\n\t\t\tif ('a' + j == c) { continue; }\n\t\t\ts[i] = 'a' + j;\n\t\t\tint k;\n\t\t\tfor (k = 0; k < s.size(); k++) {\n\t\t\t\tif (s[k] != s[s.size() - 1 - k]) { break; }\n\t\t\t}\n\t\t\tif (k == s.size()) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\ts[i] = c;\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare string s\nread s\nfor i = 0 to size of s exclusive\ndeclare character c = s[i]\nfor j = 0 to 26 exclusive\nif 'a' + j is c, end current loop\nlet s[i] be 'a' + j\ndeclare integer k\nfor k = 0 to size of k exclusive\nif s[k] is not s[size of s - 1 - k ] end current loop\nif k is size of s\nprint ""YES"" and newline\nlet s[i] be c\nprint ""NO"" and newline"
"bool ispalindrome(string s) {\n\tstring t = s;\n\treverse(s.begin(), s.end());\n\treturn s == t;\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\tif (ispalindrome(s)) {\n\t\tif (s.size() % 2) {\n\t\t\tputs(""YES"");\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tputs(""NO"");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (int i = 0; i < s.size() / 2; i++) {\n\t\tstring t = s;\n\t\tt[i] = t[t.size() - i - 1];\n\t\tif (ispalindrome(t)) {\n\t\t\tputs(""YES"");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(""NO"");\n\treturn 0;\n}"	"declare ispalindrome taking in string s and returning bool\nmake string t = s\nreverse s\nreturn the result of s == t\nmake string s\nread s\nif ispalindrome(s) returns true\nif s.size() % 2 is truthy\ndisplay ""YES""\nelse do\nprint ""NO""\nfor i = 0 to s.size() / 2 exclusive\nmake string t = s\nset t[i] to t[t.size() - i - 1]\nif ispalindrome(t) is true\nshow ""YES""\ndisplay ""NO"""
"int main() {\n\tlong long A[26] = {0};\n\tstring s;\n\tcin >> s;\n\tlong long n = (int)s.length();\n\tlong long c = 0;\n\tfor (long long i = 0; i < n / 2; i++) {\n\t\tif (s[i] != s[n - 1 - i]) c++;\n\t}\n\tif (c == 1)\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\telse if (c == 0 && n % 2 == 1)\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\telse\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\treturn 0;\n}"	"A is a new array of long longs with size 26 filled with 0\ndeclare new string s\nread s from the user input\ndeclare new long long called n\nnew long long c = 0\nin a for loop, change i from 0 to n / 2 exclusive with step = 1\nif s[i] != s[n - 1 - i], increment c\nif c is equal to 1\nprint ""YES""\nprint ""\n""\nelse if c = 0 and n is odd\nprint ""YES"" to the standard output\nprint ""\n""\nelse\nprint ""NO""\nprint ""\n"" to the stdout"
"bool ispalindrome(string s) {\n\tstring t = s;\n\treverse(s.begin(), s.end());\n\treturn s == t;\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\tif (s.size() % 2 && ispalindrome(s)) {\n\t\tputs(""YES"");\n\t\treturn 0;\n\t}\n\tif (s.size() % 2 == 0 && ispalindrome(s)) {\n\t\tputs(""NO"");\n\t\treturn 0;\n\t}\n\tint err = 0;\n\tfor (int i = 0; i < s.size() / 2; i++)\n\t\tif (s[i] != s[s.size() - i - 1]) err++;\n\tif (err == 1) {\n\t\tputs(""YES"");\n\t\treturn 0;\n\t}\n\tputs(""NO"");\n\treturn 0;\n}"	"function ispalindrome with string argument s that returns bool\ncreate string variable t = s\nreverse s\nreturn s = t\ncreate new string variable s\nread s from the input\nif length of s is odd and ispalindrome(s) is true\nprint ""YES"" to standard output\nif length of s is even and ispalindrome(s) returns true\nprint ""NO""\ndeclare integer err with value 0\nfor integer i = 0 to length of s / 2 exclusive incrementing i\nif s[i] != s[length of s - i - 1], increment err by one\nif err is equal to 1\nprint ""YES"" to standard output\nprint ""NO"" to stdout"
"int main() {\n\tchar s[16];\n\tint i, count = 0, n;\n\tcin >> s;\n\tn = strlen(s);\n\tfor (i = 0; i < n / 2; i++) {\n\t\tif (s[i] != s[n - 1 - i]) count++;\n\t}\n\tif (n % 2) {\n\t\tif (count <= 1)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tif (count == 1)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"s is a new array of characters with 16 elements\ndeclare integer variables i, count and n where count = 0\nread s\nchange the value of n to length of s\nstart for loop from i = 0 to n / 2 exclusive incrementing i\nincrement count if s[i] != s[n - 1 - i]\nif n is odd\nif count <= 1\nprint ""YES""\nelse\nprint ""NO""\nelse\nif count is equal to 1\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint count = 0, l = s.size() - 1;\n\tfor (int i = 0; i < s.size() / 2; i++) {\n\t\tif (s[i] != s[l - i]) { count++; }\n\t}\n\tif (s.size() % 2 == 0 && count == 1) {\n\t\tcout << ""YES"" << endl;\n\t} else if (s.size() % 2 == 1 && (count == 1 || count == 0)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}"	"s is a new string\nread standard input to s\ncreate new integers count = 0 and l = length of s - 1\nstart for loop from i = 0 to length of s / 2 exclusive\nif s[i] != s[l - i], increment count\nif length of s is even and count is 1\nprint ""YES""\nelse if length of s is odd and (count is 1 or 0)\nprint ""YES"" to the standard output\nelse\nprint ""NO"""
"string s;\nint ans = 0;\nint i = 0;\nint main() {\n\tcin >> s;\n\tif (s.size() == 1) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int j = s.size() - 1; j >= s.size() / 2; j--) {\n\t\tif (s[i] != s[j]) {\n\t\t\tfor (char c = 'a'; c <= 'z'; c++) {\n\t\t\t\tif (c == s[i] || c == s[j]) {\n\t\t\t\t\tans++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti = i + 1;\n\t}\n\tif (s.size() % 2 == 0) {\n\t\tif (ans == 0 || ans > 1) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (ans > 1) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t}\n\tcout << ""YES"" << endl;\n\treturn 0;\n}"	"declare string s\ndeclare integer ans = 0\ndeclare integer i = 0\nread s\nif size of s is 1\nprint ""YES"" and newline\nfor j = size of s - 1 to size of s / 2, decrementing j\nif s[i] is not s[j]\nfor c = 'a' to 'z' inclusive\nif c is s[i] or c is s[j]\nincrement ans\nend loop\nlet i be i + 1\nif size of s % 2 is 0\nif ans is 0 or ans is greater than 1\nprint ""NO"" and newline\nif ans is greater than 1\nprint ""NO"" and newline\nprint ""YES"" and newline"
"int main() {\n\tstring s;\n\tcin >> s;\n\tint count = 0, l = s.size() - 1;\n\tfor (int i = 0; i < s.size() / 2; i++) {\n\t\tif (s[i] != s[l - i]) { count++; }\n\t}\n\tif (count == 1) {\n\t\tcout << ""YES"" << endl;\n\t} else if (s.size() % 2 == 1 && count == 0) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}"	s = string\nread s\ncount = integer = 1, l = integer = size of s - 1\nfor i = 0 to size of s / 2 exclusive\nif s[i] is not s[i - 1], then increase count by 1\nif count is 1\nprint YES\nelse if size of s is odd and count is 0\nprint YES\nelse\nprint NO
"int main() {\n\tstring s;\n\tcin >> s;\n\tint l = s.size(), i, j, k;\n\tfor (i = 0; i < l; i++) {\n\t\tchar c = s[i];\n\t\tfor (j = 0; j < 26; j++) {\n\t\t\tif (j == c - 'a') continue;\n\t\t\ts[i] = j + 'a';\n\t\t\tfor (k = 0; k < l; k++)\n\t\t\t\tif (s[k] != s[l - k - 1]) break;\n\t\t\tif (k >= l) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\ts[i] = c;\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create string s\nread s\ncreate int l, i, j and k, set l to size of s exclusive\nfor i=0 to l exclusive\nset c to s[i]\nfor j=0 to 26 exclusive\nif j=c - a, continue\nset s[i] to j + a\nfor k=0 to l exclusive\nif s[k] different from s[l - k - 1]\nif k >= l\nprint YES\nset s[i] = c\nprint NO
"const long long int INF = 2000000000000000000LL;\nconst int MOD = 10000007;\nint a[1000006];\nstring r;\nbool ispal(string s) {\n\tr = s;\n\treverse(r.begin(), r.end());\n\tif (s == r) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\tint n = s.size(), cnt = 0;\n\tfor (int i = 0; i < n / 2; i++) {\n\t\tchar samne = s[i];\n\t\tchar pichone = s[n - (i + 1)];\n\t\tif (samne != pichone) cnt++;\n\t}\n\tif (cnt == 0 && ispal(s) && n % 2 == 0) {\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\t\t;\n\t} else if (cnt > 1) {\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\t\t;\n\t} else {\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\t\t;\n\t}\n\treturn 0;\n}"	"make constant long long integer INF = 2000000000000000000LL\nlet const int MOD = 10000007\nmake int array a of size 1000006\nlet string r\ndelcare ispal taking in string s and returning bool\nset r to s\nreverse contents of r\nif s is equal to r\nreturn true\nelse do\nreturn false\nmake string s\nread s\nmake ints n = s.size() and cnt = 0\nfor i = 0 to n / 2 exclusive\nmake char samne = s[i]\nlet char pichone = s[n - (i + 1)]\nif samne is not pichone, increment cnt\nif cnt is equal to 0 and ispal(s) returns truthy and n modulo 2 is 0\nprint ""NO""\nprint ""\n""\nend statement\nelse if cnt is more than 1\nprint ""NO""\nprint ""\n""\nend statement\nelse do\nprint ""YES""\nprint ""\n""\n;"
"int main() {\n\tstring s;\n\tcin >> s;\n\tint y = s.size() - 1;\n\tint sum = 0;\n\tfor (int i = 0; i < s.size() / 2; i++) {\n\t\tif (s[i] != s[y]) { sum++; }\n\t\tif (sum == 2) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\ty--;\n\t}\n\tif (sum == 1)\n\t\tcout << ""YES"" << endl;\n\telse if (sum == 0 && s.size() % 2 != 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"declare string s\nread s\ndeclare integer y = size of s - 1\ndeclare integer sum = 0\nfor i = 0 to size of s / 2 exclusive\nif s[i] is not s[y], increment sum\nif sum is 2\nprint ""NO"" and newline\ndecrement y\nif sum is 1\nprint ""YES"" and newline\nelse if sum is 0 and size of s % 2 is not 0\nprint ""YES"" and newline\nelse\nprint ""NO"" and newline"
"int main() {\n\tstring str;\n\tcin >> str;\n\tint d = 0;\n\tfor (int i = 0; i < str.size(); i++) d += str[i] != str[str.size() - 1 - i];\n\tif (d == 2 || (d == 0 && str.size() % 2))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"make string str\nread str\nlet integer d = 0\nfor i = 0 to str.size() exclusive, set d to d + str[i] != str[str.size() - 1 - i]\nif d is 2 or if d is 0 and size of str % 2 is truthy\nprint ""YES""\nelse do\nprint ""NO"""
int main() {\n\tint y, b, r;\n\twhile (cin >> y >> b >> r) {\n\t\tfor (int i = r; i >= 3; i--) {\n\t\t\tif (b >= (i - 1) && y >= (i - 2)) {\n\t\t\t\tcout << i + i - 1 + i - 2 << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	create integers y, b, r\nread y read b read r\nfor i = r to 3 inclusive, decrementing i\nif b is greater than or equal to ( i - 1 ) and y is greater than or equal to ( i - 2 )\nprint i + i - 1 + i - 2 print newline\nbreak loop
int main() {\n\tint b, y, r;\n\tcin >> r >> y >> b;\n\tint arr[3] = {r, y - 1, b - 2};\n\tint min = 200;\n\tfor (int i = 0; i < 3; i++) {\n\t\tif (min > arr[i]) { min = arr[i]; }\n\t}\n\tcout << 3 * min + 3 << endl;\n}	create integers b,y, r\nread r read y read b\ncreate integer array arr with size 3, with arr = {r, y - 1, b - 2}\ncreate integermin with min = 200\nfor i = 0 to 3 exclusive\nif min is greater than or equal to arr[i], set min to arr[i]\nprint 3 * min + 3 print newline
int main() {\n\tint y, b, r, m;\n\tcin >> y >> b >> r;\n\tif (b <= r - 1 && y >= b - 1)\n\t\tm = 3 * b;\n\telse if (b <= r - 1 && y < b - 1)\n\t\tm = 3 * (y + 1);\n\telse if (b > r - 1 && y >= r - 2)\n\t\tm = 3 * (r - 1);\n\telse if (b > r - 1 && y < r - 2)\n\t\tm = 3 * (y + 1);\n\tcout << m << endl;\n\treturn 0;\n}	declare integer variables y, b, r and m\nread y, b and r\nif b <= r - 1 and y >= b - 1\nm = 3 * b\nelse if b <= r - 1 and y is less than b - 1\nm = 3 * (y + 1)\nelse if b > r - 1 and y >= r - 2\nm = 3 * (r - 1)\nelse if b > r - 1 and y is less than r - 2\nm = 3 * (y + 1)\nprint m
int main() {\n\tint a, b, c, d, e, f, g;\n\tcin >> a >> b >> c;\n\te = a, f = b, g = c;\n\td = min(a, b);\n\td = min(d, c);\n\td = min(d, a);\n\tif (d == a) {\n\t\tb = a + 1;\n\t\tc = a + 2;\n\t} else if (d == b) {\n\t\ta = b - 1;\n\t\tc = b + 1;\n\t} else if (d == c) {\n\t\ta = c - 2;\n\t\tb = c - 1;\n\t}\n\twhile (a > e || b > f || c > g) {\n\t\ta--;\n\t\tb--;\n\t\tc--;\n\t}\n\tcout << a + b + c << endl;\n\treturn 0;\n}	create integers a, b, c, d, e, f, g\nread a read b read c\nset e to a, set f to b, set g to c\nset d to minimum of a and b\nset d to minimum of d and c\nset d to minimum of d and a\nif d is a\nset b to a + 1\nset c to a + 2\nelse if d is b\nset a to b - 1\nset c to b + 1\nelse if d is c\nset a to c - 2\nset b to c - 1\nwhile a is greater than e or b is greater than f or c is greater than g\ndecrement a\ndecrement b\ndecrement c\nprint a + b + c print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint ans = 0;\n\tc -= 2;\n\tb -= 1;\n\tcout << min(a, min(b, c)) * 3 + 3 << endl;\n\treturn 0;\n}	create integers a,b and c\nread a,b and c\ncreate integer a with a=0\nsubtract 2 from c\ndecrement b by 1\nprint (the minimum of a (and the minimum of b and c)) *3+3
"int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tint mx = min(y + 2, min(b + 1, r));\n\tcout << mx * 3 - 3 << ""\n"";\n\treturn 0;\n}"	"create integers y, b, r\nread y read b read r\ncreate integers mx with minimum of ( y + 2 and minimum of ( b + 1 and r ) )\nprint mx * 3 - 3 print ""\n"""
int main() {\n\tint color[3];\n\tfor (int i = 0; i < 3; i++) { cin >> color[i]; }\n\tint min, no;\n\tif (color[0] < color[1] - 1) {\n\t\tmin = color[0] + 2;\n\t\tno = 0;\n\t} else {\n\t\tmin = color[1] + 1;\n\t\tno = 1;\n\t}\n\tif (color[2] < min) { no = 2; }\n\tcout << color[no] * 3 - (no - 1) * 3 << endl;\n}	color = integer array of length 3\nfor i = 0 to 3 exclusive read color[i]\nmin, no = integers\nif color[0] is less than color[1] - 1\nset min to color[0] + 2\nset no to 0\nelse\nset min to color[1] + 1\nset no to 1\nif color[2] is less than min then set no to 2\nprint color[no] * 3 - (no - 1) * 3
int min(int x, int y, int z) {\n\tint t = 0;\n\tif (x < y) {\n\t\tif (x < z) {\n\t\t\tt = 1;\n\t\t} else {\n\t\t\tt = -1;\n\t\t}\n\t} else {\n\t\tif (y < z) {\n\t\t\tt = 0;\n\t\t} else\n\t\t\tt = -1;\n\t}\n\treturn t;\n}\nint main() {\n\tint y, b, r;\n\tint sum = 0;\n\tcin >> y >> b >> r;\n\tif (y == b && b == r && r == y) { sum = 3 * (y - 1); }\n\tint x = min(y, b, r);\n\tif (x == 1) {\n\t\tif ((b - y) >= 1 && (r - y) >= 2) {\n\t\t\tsum = (y + 1) * 3;\n\t\t} else {\n\t\t\twhile (!((b - y) >= 1 && (r - y) >= 2)) { y--; }\n\t\t\tsum = (y + 1) * 3;\n\t\t}\n\t} else if (x == 0) {\n\t\tif (b == r) {\n\t\t\tsum = 3 * (b - 1);\n\t\t} else {\n\t\t\tsum = 3 * b;\n\t\t}\n\t} else {\n\t\tsum = (r - 1) * 3;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	function min with integer arguments x, y and z that returns integer\ncreate integer t = 0\nif x is less than y\nif x is less than z\nset t to 1\nelse\nt = -1\nelse\nif y is less than z\nset t to 0\nelse\nt = -1\nreturn t\ndeclare integer variables y, b and r\ncreate integer sum = 0\nread y, b and r\nif y = b && b = r && r = y, set sum = 3 * (y - 1)\nassign min of y, b and r to new integer x\nif x = 1\nif (b - y) >= 1 && (r - y) >= 2\nsum = (y + 1) * 3\nelse\ndecrement y while !((b - y) >= 1 && (r - y) >= 2)\nsum = (y + 1) * 3\nelse if x = 0\nif b = r\nsum = 3 * (b - 1)\nelse\nsum = 3 * b\nelse\nsum = (r - 1) * 3\nprint sum
int main() {\n\tint a, b, c, s = 0;\n\tcin >> a >> b >> c;\n\twhile (1) {\n\t\tif (b >= a + 1) {\n\t\t\tif (c >= a + 2) {\n\t\t\t\ts = a + a + 1 + a + 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ta--;\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	create integers a, b, c, s with s = 0\nread a read b read c\nwhile 1 is true\nif b is greater than or equal to a + 1\nif c is greater than or equal to a + 2\nset s to a + a + 1 + a + 2\nbreak loop\ndecrement a\nprint s print newline
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tif (y < 1 || y > 100 || b < 2 || b > 100 || r < 3 || r > 100) { return 0; }\n\tint y1, y2, b1, b2, r1, r2;\n\ty1 = y + 1;\n\ty2 = y + 2;\n\tb1 = b - 1;\n\tb2 = b + 1;\n\tr1 = r - 2;\n\tr2 = r - 1;\n\tif (y1 <= b && y2 <= r)\n\t\tcout << y + y1 + y2 << endl;\n\telse if (b1 <= y && b2 <= r)\n\t\tcout << b + b1 + b2 << endl;\n\telse if (r1 <= y && r2 <= b)\n\t\tcout << r1 + r2 + r << endl;\n\treturn 0;\n}	y,b ,r are integers\nread y,b,r\nIf y < 1 or y > 100 or b < 2 or b > 100 or r < 3 or r > 100, return 0\ny1,y2,b1,b2,r1,r2 are integers\nassign y1 to y+1\nassign y2 to y+2\nassign b1 to b-1\nassign b2 to b+1\nassign r1 to r-2\nassign r2 to r-1\nif y1 <= b and y2 <= r, do the following\nprint y + y1 + y2 and a new line\nelse if b1 <= y and b2 <= r,, do the following\nprint b + b1 + b2 and a new line\nelse if r1 <= y and r2 <= b,, do the following\nprint r1 + r2 + r and a new line
int main() {\n\tint y, b, r, ans;\n\tcin >> y >> b >> r;\n\tif (r - 2 != 0 && r - 2 <= y && r - 1 <= b)\n\t\tans = 3 * r - 3;\n\telse if (b + 1 <= r && b - 1 != 0 && b - 1 < +y)\n\t\tans = 3 * b;\n\telse\n\t\tans = 3 * y + 3;\n\tcout << ans << endl;\n\treturn 0;\n}	y, b, r, ans = integers\nread y and b and r\nif r - 2 != 0 and r -2 <= y and r-1 <= b\nset ans = 3 * r - 3\nelse if b + 1 <= r and b - 1 != 0 and b - 1 < increment y\nset ans = 3 * b\nelse\nset ans = 3 * y + 3\nprint ans
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\twhile (y > r - 2 || y > b - 1) y--;\n\twhile (b > y + 1) b--;\n\twhile (r > b + 1) r--;\n\tcout << y + r + b << '\n';\n\treturn 0;\n}	create integers y, b, r\nread y read b read r\nwhile y is greater than r - 2 or y is greater than b - 1, decrement y\nwhile b is greater than y + 1, decrement b\nwhile r is greater than b + 1, decrement r\nprint y + r + b print '\n'
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tcout << 3 * min(min(b + 1, r), y + 2) - 3 << endl;\n\treturn 0;\n}	create integers y, b, r\nread y read b read r\nprint 3 * minimum of ( minimum of ( b + 1 and r ) and y + 2 ) - 3 print newline
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tfor (int i = r; i >= 3; i--) {\n\t\tif (i <= r && i - 1 <= b && i - 2 <= y) {\n\t\t\tcout << 3 * i - 3 << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	let y,b,r be integers\nread y,b and r\nfor (int i is equal to r, i greater than or equal to 3, i--)\nif (i less than or equal to r and i - 1 less than or equal to b and i - 2 less than or equal to y)\nprint 3 * i - 3 and newline\nstop
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tfor (int i = y; i >= 1; i--) {\n\t\tint ty = i;\n\t\tint tb = i + 1;\n\t\tint tc = i + 2;\n\t\tif (tb <= b && tc <= r) {\n\t\t\tcout << ty + tb + tc << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n}	y, b, r =integers\nRead y, b, r\nfor i = y to 1 exclusive\nty = integers and set to i\ntb = integers and set to i+1\ntc = integers and set to i+2\nif tb is less than or equal to b and tc is less than or equal to r\nprint ty + tb + tc and a new line
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tcout << min(y, min(b - 1, r - 2)) * 3 + 3 << endl;\n\treturn 0;\n}	create integers y, b, r\nread y read b read r\nprint minimum of ( y and minimum of b - 1 and r - 2 ) * 3 + 3 print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint d = min(a + 1, min(b, c - 1));\n\tcout << 3 * d << endl;\n\treturn 0;\n}	a,b,c = int\nread a,b,c\nd = min(a+1, min(b, c-1))\nprint 3*d
int main() {\n\tint64_t a, b, c;\n\tcin >> a >> b >> c;\n\tcout << 3 * min(a + 1, min(b, c - 1)) << endl;\n\treturn 0;\n}	create 64 bit integers a, b, c\nread a read b read c\nprint 3 * minimum of ( a + 1 and minimum of ( b and c - 1 )) print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tif (b >= c - 1 && a >= c - 2)\n\t\tcout << 3 * c - 3 << endl;\n\telse if (b < c - 1 && a >= c - 2)\n\t\tcout << 3 * b << endl;\n\telse if (b >= c - 1 && a < c - 2)\n\t\tcout << 3 * a + 3 << endl;\n\telse {\n\t\tif (a <= b - 1)\n\t\t\tcout << 3 * a + 3 << endl;\n\t\telse\n\t\t\tcout << 3 * b << endl;\n\t}\n\treturn 0;\n}	create integers a, b, c\nread a read b read c\nif b is greater than or equal to c - 1 and a is greater than or equal to c - 2\nprint 3 * c - 3 print newline\nelse if b is less than c - 1 and a is greater than or equal to c - 2\nprint 3 * b print newline\nelse if b is greater than or equal to c - 1 and a is less than c - 2\nprint 3 * a + 3 print newline\nelse\nif a is less than b - 1\nprint 3 * a + 3 print newline\nelse\nprint 3 * b print newline
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tfor (int i = r; i >= 3; i--) {\n\t\tif (i <= b + 1 && i <= y + 2) {\n\t\t\tint ans = i;\n\t\t\tcout << 3 * ans - 3 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n}	declare integer variables y, b and r\nread y, b and r\nfor integer i = r to 3 inclusive counting down by 1\nif i <= b + 1 and i <= y + 2\nlet ans be integer = i\nprint 3 * ans - 3 and a new line
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tfor (int i = y; i >= 0; i--) {\n\t\tif (i + 1 <= b && i + 2 <= r) {\n\t\t\tcout << 3 * i + 3 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}	y, b, r = integers\nread y and b and r\nfor i = y to 0 inclusive\nif i + 1 <= b and i + 2 <= r\nprint 3 * i + 3
int min(int a, int b) {\n\tif (a < b) return a;\n\treturn b;\n}\nint main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint x = min(a, min(b - 1, c - 2));\n\tcout << x + x + 1 + x + 2 << endl;\n}	in function min\nif a is less than b return a\nreturn b\ncreate integers a, b and c\nread a, b and c\nset x to min of a and min of b-1 and c-2\nprint x+x+1+x+2 and new line
int main() {\n\tint y, r, b, ans;\n\twhile (cin >> y >> b >> r) {\n\t\tint ans = min(y + 2, min(b + 1, r)) * 3;\n\t\tcout << ans - 3 << endl;\n\t}\n\treturn 0;\n}	create integers y, r, b, ans\nwhile read y read b read r is true\ncreate integer ans with ans = minimum of ( y + 2 and minimum of ( b + 1 and r ) ) * 3\nprint ans - 3 print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint ans = 0;\n\tc -= 2;\n\tb -= 1;\n\tcout << min(a, min(b, c)) * 3 + 3 << endl;\n\treturn 0;\n}	a, b, c = integers\nread a, b, c\nset ans = 0\nset c = c - 2\nset b = b - 1\nprint min between a and (min between b and c) * 3 + 3
int M = 1000000007;\nint main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tb--;\n\tr -= 2;\n\tcout << 3 * min(y, min(b, r)) + 3 << endl;\n\treturn 0;\n}	Variable M is set to 1000000007\ndeclare three integer variables named y, b, and r\nLet the user input values for y, b, and r\ndecrease the value of b by 1\ndecrease the value of r by 2\ntake the minimum number between b and r, then take the minimum number between that and the value of y, then multiply that by 3 and then add 3 and display the output to the screen
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tif (y >= r) y = r - 2;\n\tif (r - y == 1) y--;\n\tif (y >= b) y = b - 1;\n\tcout << y + (y + 1) + (y + 2) << endl;\n\treturn 0;\n}	y, b, r = integers\nread y, b, r\nif y >= r set y = r - 2\nif r - y = 1 decrement y\nif y >= b set y = b - 1\nprint y + (y + 1) + (y + 2 )
void solve();\nint main() {\n\tlong long t;\n\tt = 1;\n\twhile (t--) solve();\n\treturn 0;\n}\nvoid solve() {\n\tlong long y, b, r;\n\tcin >> y >> b >> r;\n\tlong long tt = min(y, min(b - 1, r - 2));\n\tcout << tt * 3 + 3 << '\n';\n}	declare solve with no arguments, returning void\ncreate long long t\nset t to 1\nwhile decrement t is true, run solve\ndeclare solve with no arguments, returning void\ncreate long longs y, b, r\nread y read b read r\ncreate long long tt with tt = minimum of ( y and minimum of ( b - 1 and r - 2 ) )\nprint tt * 3 + 3 print '\n'
int main() {\n\tint y, b, r;\n\twhile (cin >> y >> b >> r) {\n\t\tfor (int i = r; i >= 3; i--) {\n\t\t\tif (b >= (i - 1) && y >= (i - 2)) {\n\t\t\t\tcout << i + i - 1 + i - 2 << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	y, b, r = integers\nwhile read y, b, and r\nfor i=r to greater or equal than 3\nif b is greater or equal than i-1 and y is greater or equal than i-2\nprint i + i - 1 + i - 2 and new line\nstop loop
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\ta++;\n\tc--;\n\tcout << min(min(a, c), b) * 3 << endl;\n\treturn 0;\n}	let a, b and c be integers\nread a, b and c\nincrement a\ndecrement c\nprint min of (min of a and c) and b * 3, and a new line
int main() {\n\tint64_t a, b, c;\n\tcin >> a >> b >> c;\n\tcout << 3 * min(a + 1, min(b, c - 1)) << endl;\n\treturn 0;\n}	create 64 bit integers a, b, c\nread a read b read c\nprint 3 * minimum of a + 1 and minimum of b and c - 1, print newline
int main() {\n\tint y, b, r;\n\tcin >> y >> b >> r;\n\tif (y < 1 || y > 100 || b < 2 || b > 100 || r < 3 || r > 100) { return 0; }\n\tif (y + 1 <= b && y + 2 <= r)\n\t\tcout << 3 * y + 3 << endl;\n\telse if (b - 1 <= y && b + 1 <= r)\n\t\tcout << 3 * b << endl;\n\telse if (r - 2 <= y && r - 1 <= b)\n\t\tcout << 3 * r - 3 << endl;\n\treturn 0;\n}	create integers y, b, r\nread y read b read r\nif y is less than 1 or y is greater than 100 or b is less than 2 or b is greater than 100 or r is less than 3 or r is greater than 100, return 0 from function\nif y + 1 is less than or equal to b and y + 2 is less than or equal to r\nprint 3 * y + 3 print newline\nelse if b - 1 is less than or equal to y and b + 1 is less than or equal to r\nprint 3 * b print newline\nelse if r - 2 is less than or equal to y and r - 1 is less than or equal to b\nprint 3 * r - 3 print newline
int main() {\n\tint x, y, z;\n\tcin >> x >> y >> z;\n\tif (x + 1 == y && y + 1 == z) {\n\t\tcout << x + y + z << endl;\n\t} else {\n\t\twhile (1) {\n\t\t\tint a = z;\n\t\t\tint b = z - 1;\n\t\t\tint c = z - 2;\n\t\t\tif ((a <= z && b <= y && c <= x) && (c + 1 == b && b + 1 == a)) {\n\t\t\t\tcout << a + b + c << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tz = z - 1;\n\t\t}\n\t}\n}	create integers x, y, z\nget x, y, z\nif x+1 is equal to y and y+1 equal to z then\nprint x+y+z\nelse do the following\ndo the following indefinitely till break statement\ncreate integer a with a=z\ncreate integer b with b=z-1\ncreate integer c with c=z-2\nif a, b, c less than or equal to z, y, x respectively and c+1 equal to b and b+1 equal to a then\nprint a+b+c\nbreak out of loop\ndecrement z
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint ans = 0;\n\tc -= 2;\n\tb -= 1;\n\tcout << min(a, min(b, c)) * 3 + 3 << endl;\n\treturn 0;\n}	declare integer variables a, b and c\nread from the input to a, b and c\ndeclare integer variable ans = 0\ndecrease c by 2\nsubtract 1 from b\nprint (min of a and (min of b and c)) * 3 + 3
int main() {\n\tint t;\n\tcin >> t;\n\tfor (int i = 0; i < t; ++i) {\n\t\tint L, v, l, r;\n\t\tcin >> L >> v >> l >> r;\n\t\tcout << L / v - r / v + (l - 1) / v << endl;\n\t}\n\treturn 0;\n}	t = int\nread t\nfor i = 0 to t\nL, v, l ,r = int\nread L then v then l then r\nprint L / v - r / v + (l - 1) / v
"int main() {\n\tlong long int t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long int n, l, v, r;\n\t\tcin >> n >> v >> l >> r;\n\t\tlong long int a = (n / v);\n\t\tlong long int b = (l - 1) / v;\n\t\tlong long int c = (r / v);\n\t\tcout << a + b - c << ""\n"";\n\t}\n\treturn 0;\n}"	t=long long int\nread t\nwhile decremented value of t is not zero\nn,l,v,r=long long int\nread n,v,l,r\na=n/v\nb=(l-1)/v\nc=r/v\nprint a+b-c
const int N = 2e6 + 123;\nconst int INF = 1e9 + 123;\nconst int MOD = 1e9 + 7;\nconst double EPS = 1e-9;\nvoid solve() {\n\tint L, v, l, r, x;\n\tcin >> L >> v >> l >> r;\n\tcout << (L / v) - ((r / v) - ((l - 1) / v)) << '\n';\n}\nint main() {\n\tint t;\n\tcin >> t;\n\twhile (t) {\n\t\tsolve();\n\t\t--t;\n\t}\n\treturn 0;\n}	N is a new constant integer = 2e6 + 123\nINF is a new integer constant = 1e9 + 123\ncreate constant integer variable called MOD = 1e9 + 7\ndeclare constant double variable EPS with value 1e - 9\ndefine function solve\ndeclare integer variables L, v, l, r and x\nread user input to L, v, l and r\nprint (L / v) - ((r / v) - ((l - 1) / v)) and '\n' to the standard output\ncreate integer variable t\nread variable t from the input\nwhile t is not 0\ncall method solve()\ndecrement t
int main() {\n\tint n;\n\tcin >> n;\n\tint x, y, z, w;\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long ans;\n\t\tcin >> x >> y >> z >> w;\n\t\tif (z % y == 0) z--;\n\t\tans = x / y + z / y - w / y;\n\t\tif (y == z == w) ans--;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n=int\nread n\nx,y,z,w=int\nfor i=0 to n exclusive\nans=long long\nread x,y,z,w\nif z modulo y is 0 decrement z\nans=x/y+z/y-w/y\nif y, z and w are the same increment ans\nprint ans
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint L, v, l, r;\n\t\tcin >> L >> v >> l >> r;\n\t\tint a = r / v - l / v;\n\t\tif (l % v == 0) a++;\n\t\tcout << L / v - a << endl;\n\t}\n}	t = integer\nread t\nwhile t\nL, v, l, r = integers\nread L, v, l, r\na = integer with a = r / v - l / v\nif l modulo v is 0, increment a\nprint L / v - a
int main() {\n\tlong long int n, m, p = 0, q, r, s, t, u, v, w, x, y, z, L, l, i, j;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> L >> v >> l >> r;\n\t\tx = L / v - r / v;\n\t\ty = (l - 1) / v;\n\t\tcout << x + y << '\n';\n\t}\n}	create long long ints n, m, p, q, r, s, t, u, v, w, x, y, z, L, l, i and j with p = 0\nread input to n\nstart for loop from i = 1 to n inclusive\nread L, v, l and r from the input\nset x to L / v - r / v\nset y to (l - 1) / v\nprint x + y and '\n'
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long int d, v, l, r;\n\t\tcin >> d >> v >> l >> r;\n\t\tint count = d / v;\n\t\tr = v * (r / v);\n\t\tif (l % v != 0) l = v * ((l / v) + 1);\n\t\tcout << count - ((r - l) / v) - 1 << endl;\n\t}\n\treturn 0;\n}	let t be a integer\nread t\nwhile t is decremented by 1\nlet d, v, l, r be long integers\nread d, v, l, r\nlet count be a integer with count = d / v\nr is equal to v * (r / v)\nif l modulo v is not equal to 0 , l is equal to v * ((l / v) + 1)\nprint count - ((r - l) / v) - 1 and newline
int main() {\n\tint t, L, v, l, r, r1, ans;\n\tcin >> t;\n\tfor (int i = 0; i < t; i++) {\n\t\tcin >> L >> v >> l >> r;\n\t\tans = (l - 1) / v;\n\t\tr1 = ((r / v) + 1) * v;\n\t\tif (L >= r1) ans += (L - r1) / v + 1;\n\t\tcout << ans << endl;\n\t}\n}	t, L, v, l, r, r1, ans = integers\nread t\nfor i = 0 to t exclusive\nread L, v, l, r\nans = (l - 1) / v\nr1 = ((r / v) + 1) * v\nif L >= r1, then ans = ans + (L - r1) / v + 1\nprint ans
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong int L, v, l, r;\n\t\tcin >> L >> v >> l >> r;\n\t\tlong int tot = L / v;\n\t\tlong int unseen = r / v - (l - 1) / v;\n\t\tcout << tot - unseen << endl;\n\t}\n\treturn 0;\n}	declare integer t\nread t\nwhile decrement t is ture\ndeclare long integers L, v, l, r\nread L and v and l and r\ndeclare long integers tot = L / v\ndeclare long integers unseen = r / v - (l - 1) / v\nprint tot - unseen and newline
"int main() {\n\tint t, L, v, l, r;\n\tcin >> t;\n\twhile (t--) {\n\t\tcin >> L >> v >> l >> r;\n\t\tcout << L / v - r / v + l / v - (l % v == 0 ? 1 : 0) << ""\n"";\n\t}\n\treturn 0;\n}"	"declare integers t, L, v, l, r\nread t\nwhile decrement t\nread L, v, l, r\nprint L / v - r / v + l / v - ( 1 if l % v is 0, else 0 ), ""\n"""
"int main() {\n\tint n, k, v, l, r;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> k >> v >> l >> r;\n\t\tcout << k / v + (l - 1) / v - r / v << ""\n"";\n\t}\n\treturn 0;\n}"	n, k, v, l, r = integer\nread n\nfor i = 0 to n exclusive\nread k, v, l, r\nprint the result of k / v + (l - 1) / v - r / v
int main() {\n\tlong long T, L, v, l, r, ans1, ans2;\n\tcin >> T;\n\twhile (T--) {\n\t\tcin >> L >> v >> l >> r;\n\t\tans1 = L / v;\n\t\tans2 = r / v - l / v;\n\t\tif (l % v == 0) ans2 += 1;\n\t\tcout << ans1 - ans2 << endl;\n\t}\n}	create long long T, L, v, l, r, ans1, ans2\nread T\nwhile decrement T\nread L, v, l and r\nset ans1 to L/v\nassign r/v - l/v to ans2\nif l mod v=0, assign ans2 + 1 to ans2\nprint ans1 - ans2
"long long int i, j, k, sum = 0, ans = 0, n, m;\nvoid fastio() {}\nvoid solve() {\n\tlong long int L, v, l, r;\n\tcin >> L >> v >> l >> r;\n\tn = L / v;\n\tm = r / v - (l - 1) / v;\n\tcout << n - m << ""\n"";\n}\nint main() {\n\tfastio();\n\tint t = 1;\n\tcin >> t;\n\twhile (t--) solve();\n\treturn 0;\n}"	i, j, k, n, m = long long integers, sum = long long integer = 0, ans = long long integer = 0\nin function fastio that returns nothing\nin function solve that returns nothing\nL, v, l, r = long long integer\nread L, v, l, r\nn = L / v\nm = r / v - (l - 1) / v\nprint the result of n - m\ncall fastio\nt = integer = 1\nread t\nwhile looping decrease t by 1, while in the loop call solve
int main() {\n\tint tc;\n\tcin >> tc;\n\twhile (tc--) {\n\t\tint n, v, l, r;\n\t\tcin >> n >> v >> l >> r;\n\t\tint t = n / v;\n\t\tint t1 = ((r / v) - ((l - 1) / v));\n\t\tcout << t - t1 << endl;\n\t}\n\treturn 0;\n}	create new integer variable tc\nread variable tc from the input\nloop, decrementing tc, while it is not 0\ndeclare int variables n, v, l and r\nread n, v, l and r from the user input\ncreate new integer variable t = n / v\ndeclare integer variable with name t1 with value (r / v) - ((l - 1) / v)\nprint t - t1 to the standard output
int main() {\n\tlong long t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long int L, v, l, r;\n\t\tcin >> L >> v >> l >> r;\n\t\tcout << L / v - (r / v - (l - 1) / v) << endl;\n\t}\n}	declare long long variable called t\nread t from the input\nwhile t != 0, decrement it and continue the loop\ndeclare long long ints L, v, l and r\nread user input to L, v, l and r\nprint L / v - (r / v - (l - 1) / v) to the standard output
int main() {\n\tint t, L, v, l, r;\n\tcin >> t;\n\tfor (int i = 0; i < t; i++) {\n\t\tcin >> L >> v >> l >> r;\n\t\tcout << L / v - r / v + (l - 1) / v << endl;\n\t}\n}	create int int t, L, v, l, r\nread t\nfor i=0 to t exclusive\nread L, v, l, r\nprint L / v - r / v + (l - 1) / v
"int main() {\n\tlong t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong x, v, l, r;\n\t\tcin >> x >> v >> l >> r;\n\t\tlong ans = x / v;\n\t\tlong temp = r / v - (l - 1) / v;\n\t\tans -= temp;\n\t\tcout << ans << ""\n"";\n\t}\n}"	t = long\nread t\nloop t times\nx, v, l, r = long\nread x then v then l then r\nans = long with ans = x / v\ntemp = long with temp = r / v - (l - 1) / v\ndecrement ans by temp\nprint ans
int main() {\n\tint t, L, v, l, r;\n\tcin >> t;\n\twhile (t--) {\n\t\tint a = 0, b = 0, c = 0, d = 0;\n\t\tcin >> L >> v >> l >> r;\n\t\ta = (l - 1) / v;\n\t\tb = r / v;\n\t\td = b - a;\n\t\tc = L / v;\n\t\tcout << c - d << endl;\n\t}\n\treturn 0;\n}	declare integers t, L, v, l, r\nread t\nwhile decrement t is true\ndeclare integers a = 0, b = 0, c = 0, d = 0\nread L and v and l and r\nlet a be ( l - 1 ) / v\nlet b be r / v\nlet d be d - a\nlet c be L / v\nprint c - d, newline
int t;\nlong long L, v, l, r;\nint main() {\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long ans = 0;\n\t\tcin >> L >> v >> l >> r;\n\t\tans = (l - 1) / v + L / v - r / v;\n\t\tcout << ans << endl;\n\t}\n}	t = int\nL, v, l, r = long long\nread t\nloop t times\nans = long long with ans = 0\nread L then v then l then r\nset ans to (l - 1) / v + L / v - r / v\nprint ans
const int INF = 0x3f3f3f3f;\nint main() {\n\tint t, v, l, r, L, cnt = 0;\n\tcin >> t;\n\twhile (t--) {\n\t\tcin >> L >> v >> l >> r;\n\t\tint ans = L / v - (r / v - (l - 1) / v);\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	declare constant integer variable INF with value 0x3f3f3f3f\nlet t, v, l, r, L and cnt be ints with the value of cnt = 0\nread variable t from the input\nloop, decrementing t, while it is not 0\nread variables L, v, l and r from the input\ndeclare new integer ans = L / v - (r / v - (l - 1) / v)\nprint ans to the standard output
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long int l, v, a, b;\n\t\tcin >> l >> v >> a >> b;\n\t\tlong long int numOfLight = (l / v) - ((b / v) - (a - 1) / v);\n\t\tcout << numOfLight << endl;\n\t}\n}	let int t\nread t\nwhile t-- is truthy\ncreate long long ints l, v, a, and b\nread l, v, a, and b\ncreate long long int numOfLight = (l / v) - ((b / v) - (a - 1) / v)\nprint numOfLight
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long l, v, li, ri, val1, val2, val3;\n\t\tcin >> l >> v >> li >> ri;\n\t\tval1 = l / v;\n\t\tval2 = li / v;\n\t\tval3 = ri / v;\n\t\tif (li % v == 0) val3++;\n\t\tval3 -= val2;\n\t\tval1 -= val3;\n\t\tcout << val1 << endl;\n\t}\n}	make integer t\nread t\nwhile t-- is truthy\ncreate long long ints l, v, li, ri, val1, val2, val3\nread l, v, li, and ri\nset val1 to l / v\nset val2 to li / v\nset val3 to ri / v\nif li modulo v is 0, increment val3\nset val3 to val3 - val2\nset val1 to val1 - val3\nprint val1
long long mz[100005] = {};\nlong long ts[100005] = {};\nint main() {\n\tlong long T;\n\tcin >> T;\n\twhile (T--) {\n\t\tlong long L, v, l, r, ans = 0;\n\t\tcin >> L >> v >> l >> r;\n\t\tans += L / v;\n\t\tif (r % v != 0) r = r - r % v;\n\t\tif (l % v != 0) l = l + (v - l % v);\n\t\tans -= ((r - l) / v + 1);\n\t\tcout << ans << endl;\n\t}\n}	declare long long array mz size 100005 = {}\ndeclare long long array ts size 100005 = {}\ndeclare long long T\nread T\nwhile decrement T is true\ndeclare long longs L, v, l, r, ans = 0\nread L, v, l, r\nincrement ans by L / v\nif r % v is not 0, let r be r - r % v\nif l % v is not 0, let l be l + ( v - l % v )\ndecrement ans by ((r-l)/v+1)\nprint ans, newline
int main() {\n\tint t;\n\tcin >> t;\n\tint L, u, l, r;\n\tvector<int> res;\n\tfor (int i = 0; i < t; i++) {\n\t\tcin >> L >> u >> l >> r;\n\t\tint curr = L / u;\n\t\tcurr -= (r / u - l / u + (l % u == 0 ? 1 : 0));\n\t\tres.push_back(curr);\n\t}\n\tfor (int i = 0; i < t; i++) { cout << res[i] << endl; }\n\treturn 0;\n}	t=int\nread t\nL,u,l,r=int\nres=vector of int\nfor i=0 to t exclusive\nread L,u,l,r\ncurr=L/u\nsubtract (r/u-l/u+(1 if l modulo u is 0)) from curr\nput curr at end of res\nfor i=0 to t exclusive print res[i]
int main() {\n\tint n, l1, v1, l2, r, count;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> l1 >> v1 >> l2 >> r;\n\t\tcout << (l1 / v1 - (r / v1 - (l2 - 1) / v1)) << endl;\n\t}\n}	n, l1, v1, l2, r, count = integers\nread n\nfor i = 0 to n exclusive\nread l1, v1, l2, r\nprint the result of (l1 / v1 - (r / v1 - (l2 - 1) / v1))
"long long gcd(long long x, long long y) {\n\tif (y == 0)\n\t\treturn x;\n\telse\n\t\treturn gcd(y, x % y);\n}\nlong long expo(long long n, long long m, long long p) {\n\tlong long r = 1;\n\tn = n % p;\n\twhile (m > 0) {\n\t\tif (m % 2) r = (r * n) % p;\n\t\tn = (n * n) % p;\n\t\tm = m / 2;\n\t}\n\treturn r % p;\n}\nbool isPrime(long long n) {\n\tif (n <= 1) return false;\n\tif (n <= 3) return true;\n\tif (n % 2 == 0 || n % 3 == 0) return false;\n\tfor (long long i = 5; i * i <= n; i = i + 6)\n\t\tif (n % i == 0 || n % (i + 2) == 0) return false;\n\treturn true;\n}\nint main() {\n\tlong long t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long a, b, c, d;\n\t\tcin >> a >> b >> c >> d;\n\t\tcout << (a / b) - ((d / b) - (c - 1) / b) << ""\n"";\n\t}\n\treturn 0;\n}"	in function gcd with arguments long long x and long long y that returns a long long\nif y is 0\nreturn x\nelse\nreturn the result of calling gcd with arguments y and x modulo y\nin function long long expo with arguments of long long n, long long m, and long long p that returns a long long\nr = long long = 1\nn = n modulo p\nwhile m > 0\nif m modulo 2 is possible then r = (r * n) modulo p\nn = n squared modulo p\nm - m / 2\nreturn r modulo p\nin function isPrime with an argument of a long long n that returns a boolean\nif n <= 1 then return false\nif n <= 3 then return true\nif n is even or n modulo 3 is 0 then return false\nfor i = 5, where i is square to n inclusive and i = i + 6\nif n modulo i is 0 or n modulo (i + 2) is 0, then return false\nreturn true\nt = long long\nread t\nwhile looping decrease t by 1\na, b, c, d = long long\nread a, b, c, d\nprint the result of (a / b) - ((d / b) - (c - 1) / b)
int main() {\n\tint t;\n\tcin >> t;\n\tlong long int l, v, x, y;\n\twhile (t--) {\n\t\tcin >> l >> v >> x >> y;\n\t\tlong long int count = 0;\n\t\tlong long int total = l / v;\n\t\tlong long int sub1 = y / v;\n\t\tlong long int sub2 = x / v;\n\t\tcount = total - sub1 + sub2;\n\t\tif (x % v == 0) count--;\n\t\tcout << count << endl;\n\t}\n}	t = integer\nread t\nl, v, x, y = long long integer\nwhile decrement t\nread l, v, x, y\ncount = long long integer with count = 0\ntotal = long long integer with total = l / v;\nsub1 = long long integer with sub1 = y / v\nsub2 = long long integer with sub2 = x / v\ncount = total - sub1 + sub2\nif x modulo v is 0, decrement count\nprint count
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint l, r, v, p;\n\t\tcin >> p >> v >> l >> r;\n\t\tint ans = p / v;\n\t\tans -= r / v - (l - 1) / v;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	create integer t\nread t\niterate t times\ncreate integers l, r, v, p\nread p, v, l and r\ndeclare integer ans and set it to p/v\nassign ans - (r / v - (l - 1) / v) to ans\nprint ans
"int main() {\n\tint n, d;\n\tcin >> n;\n\tlong long a[n][4];\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < 4; j++) { cin >> a[i][j]; }\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\td = (a[i][0] / a[i][1]) + ((a[i][2] - 1) / a[i][1]) - (a[i][3] / a[i][1]);\n\t\tcout << d << ""\n"";\n\t}\n\treturn 0;\n}"	"declare new int variables n and d\nread n\ndeclare new 2d array of long longs a with size n by 4\nstart for loop from i = 0 to n exclusive\nin a for loop, change j from 0 to 4 exclusive, reading a[i][j] from the user input on each loop\nin a for loop, change i from 0 to n exclusive\nchange the value of d to (a[i][0] / a[i][1]) + ((a[i][2] - 1) / a[i][1]) - (a[i][3] / a[i][1])\nprint d and ""\n"""
int main() {\n\tint T;\n\tcin >> T;\n\tlong int L, v, l, r;\n\twhile (T--) {\n\t\tcin >> L >> v >> l >> r;\n\t\tlong int nbr_lat = L / v;\n\t\tlong int hidden = r / v - l / v;\n\t\tif (l % v == 0) hidden++;\n\t\tcout << nbr_lat - hidden << endl;\n\t}\n\treturn 0;\n}	declare integer T\nread T\ndeclare L, v, l, r as long integers\nwhile decrement T is true\nread L, v, l, r\ndeclare nbr_lat = L / v as long integer\ndeclare long integer hidden = r/v-l/v\nif l % v is 0, increment hidden\nprint nbr_lat - hidden and newline
int main() {\n\tlong long int t;\n\tcin >> t;\n\tlong long int dest, v, l, r;\n\twhile (t--) {\n\t\tcin >> dest >> v >> l >> r;\n\t\tlong long int fin = dest / v;\n\t\tlong long int fin1 = r / v;\n\t\tlong long int fin2 = (l - 1) / v;\n\t\tcout << (fin - fin1 + fin2) << endl;\n\t}\n\treturn 0;\n}	create long long int t\nread t\ncreate long long int dest, v, l and r\nwhile decrement t\nread dest, v, l and r\nset fin to dest/v\nfin1 = r / v\nfin2 = (l - 1) / v\nprint fin - fin1 + fin2
int n, i;\nint main() {\n\tcin >> n;\n\tint a[n];\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tif (n == 1) {\n\t\tcout << a[0] << endl;\n\t\treturn 0;\n\t} else if (n == 3) {\n\t\tcout << a[1] << endl;\n\t\treturn 0;\n\t} else {\n\t\tcout << a[2] << endl;\n\t}\n\treturn 0;\n}	n, i = integers\nRead n\na = array of n integers\nRead n values into array a\nsort array elements of a in ascending order\nif n is equal to 1\nprint a[0] and a new line\nelse if n is 3\nprint a[1] and a new line\nelse do the following\nprint a[2] and a new line
long long b, c, d, i, n, a[10001];\nint main() {\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tcout << a[n / 2] << endl;\n\treturn 0;\n}	b, c, d, i, n = integers and a = array of 10001 integers\nRead n\nRead n values into array a\nsort array elements of a in ascending order\nprint a[n / 2] and a new line
;\nconst double eps = 1e-8;\nconst int maxn = 1e6 + 7;\nconst double pi = acos(-1);\nconst int inf = 0x3f3f3f3f;\nint n;\nint a[10];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tsort(a + 1, a + n + 1);\n\tint x = (a[n] - a[1]) / 2;\n\tcout << a[1] + x << endl;\n\treturn 0;\n}	do nothing\neps = 1e-8 = const double\nmaxn = 1e6+7 = const int\npi = const double = acos(-1)\ninf = 0x3f3f3f3f = const int\nn = int\na = int array length 10\nread n\nread a from 1 to n inclusive\nsort a from 1 to n inclusive\nx = int = half of a[n] - a[1])\nprint a at 1 + x
int main() {\n\tint n;\n\tcin >> n;\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tsum += a;\n\t}\n\tcout << (sum / n) << endl;\n\treturn 0;\n}	n =integer\nRead n\nsum = integer with 0\nfor i = 0 to n exclusive\na = integer\nRead a\nset sum to sum + a\nprint sum / n and a new line
int main() {\n\tunsigned n;\n\tcin >> n;\n\tvector<int> vect(n);\n\tlong sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> vect[i];\n\t\tsum += vect[i];\n\t}\n\tsort(vect.begin(), vect.begin() + n);\n\tlong avg = sum / n;\n\tcout << avg << endl;\n\treturn 0;\n}	declare new unsigned variable n\nread input to n\nvect is a new vector of integers with n elements\ndefine new long sum = 0\nin a for loop, change i from 0 to n exclusive\nread vect[i]\nchange sum to the sum of sum and vect[i]\nsort elements of vect from the index 0 to n\nnew long avg = sum / n\nprint avg
int main() {\n\tint n, a[5];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tcout << a[n / 2] << endl;\n\treturn 0;\n}	n = integer, a = integer array of size 5\nread n\nfor 0 to n exclusive read a[i]\nsort(a, a + n)\nprint a[n / 2]
long long nu[100100];\nint main() {\n\tint n;\n\tcin >> n;\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint b;\n\t\tcin >> b;\n\t\tsum += b;\n\t}\n\tcout << sum / n << endl;\n\treturn 0;\n}	nu = array of 100100 long long\nn = integer\nread n\nsum = integer with sum = 0\nfor i = 0 to n exclusive\nb = integer\nread b\nsum = sum + b\nprint sum / n
int a[100];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) { cin >> a[i]; }\n\tsort(a, a + n);\n\tcout << a[n / 2] << endl;\n\treturn 0;\n}	a is an array of integers with size 100\ncreate integer variable with name n\nread n from the user input\nread n elements from the input to a in a for loop\nsort a from index 0 to n\nprint a[n / 2]
void solve() {\n\tint n;\n\tcin >> n;\n\tvector<int> a;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint buff;\n\t\tcin >> buff;\n\t\ta.push_back(buff);\n\t}\n\tsort((a).begin(), (a).end());\n\tint m = a.size() / 2;\n\tcout << a[m] << endl;\n}\nint main() {\n\tsolve();\n\treturn 0;\n}	in void function solve\nn = int\nread n\na = int vector\nfor i = 0 to n exclusive\nbuff = int\nread buff\npush back buff into a\nsort a\nm = half of size of a = int\nprint a at m\ncall solve
long long n, m, i, a[100001], b[100001], q, ii;\nint main() {\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tcout << a[n / 2] << endl;\n\treturn 0;\n}	n, m, i, q, ii = long long and a, b = long long array of size 100001 each\nread n\nread n values int a\nsort a from index 0 to n\nprint a[n / 2]
vector<int> V;\nint main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tint x;\n\t\tcin >> x;\n\t\tV.push_back(x);\n\t}\n\tsort(V.begin(), V.end());\n\tcout << V[(V.size() / 2)] << endl;\n\treturn 0;\n}	V = vector of integer\nn = integer\nread n\nwhile decrement n\nx = integer\nread x\nappend x on V\nsort V.begin() and V.end()\nprint V[(V.size() / 2)]
int n, i, a[10];\nint main() {\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tcout << a[n / 2 + 1] << endl;\n\treturn 0;\n}	n, i = integers and a = array of 10 integers\nRead n\nRead n values into array a\nsort array elements of a in ascending order\nprint a[n / 2 + 1] and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tint year[n];\n\tfor (int i = 0; i < n; i++) cin >> year[i];\n\tsort(year, year + n);\n\tcout << year[n / 2] << endl;\n}	n =integer\nRead n\nyear = array of n integers\nRead n values into array year\nsort array elements of year in ascending order\nprint year[n / 2] and a new line
;\nconst double eps = 1e-8;\nconst int maxn = 1e6 + 7;\nconst double pi = acos(-1);\nconst int inf = 0x3f3f3f3f;\nint n;\nint a[10];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tsort(a + 1, a + n + 1);\n\tint x = (a[n] - a[1]) / 2;\n\tcout << a[1] + x << endl;\n\treturn 0;\n}	create constant double eps with value 1e-8\ncreate constant integer cakked maxn = 1e6 + 7\ncreate constant double with name pi and value = acos of -1\ncreate new constant integer inf = 0x3f3f3f3f\ndeclare integer variable n\na is a new array of integers with 10 elements\nread variable n from the input\nread input into sequential items of a n times, starting from the index 1\nsort a from element 1 to n + 1\nx is a new integer = (a[n] - a[1]) / 2\nprint a[1] + x
const int MOD = 1000000007;\nconst long long INF = 1e18;\nlong long t, m, n;\nvector<int> A;\nlong long solve() {\n\tsort(A.begin(), A.end());\n\tint n = A.size();\n\treturn A[n / 2];\n}\nint main() {\n\tcin >> n;\n\tA.resize(n);\n\tfor (int i = 0; i < n; i++) cin >> A[i];\n\tcout << solve() << endl;\n\treturn 0;\n}	MOD = const integer with MOD = 1000000007\nINF = const long long with INF = 1e18\nt, m, n = long long\nA = vector of integer\nin the function solve that returns long long\nsort A.begin() and A.end()\nn = integer with n = A.size()\nreturn A[n / 2]\nread n\nresize n of A\nfor i = 0 to n exclusive, read A[i]\nprint solve
int main() {\n\tfloat n;\n\tcin >> n;\n\tint tmp, sum = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> tmp;\n\t\tsum += tmp;\n\t}\n\tcout << ceil(sum / n) << endl;\n}	create float n\nread n\ncreate integers tmp and sum = 0\nfor i = 0 to i = n - 1\nread tmp\nset sum to sum + tmp\nprint the result of ceil of sum/n
int main() {\n\tint n;\n\tcin >> n;\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tsum += a;\n\t}\n\tcout << sum / n << endl;\n}	n =integer\nRead n\nsum = integer with 0\nfor i = 0 to n exclusive\na = integer\nRead a\nset sum to sum + a\nprint sum / n and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> V(n);\n\tfor (int i = 0; i < n; ++i) cin >> V[i];\n\tsort(V.begin(), V.end());\n\tcout << (V[0] + V[n - 1]) / 2 << ""\n"";\n\treturn 0;\n}"	n=int\nread n\nV=vector of n int\nfor i=0 to n exclusive read V[i]\nsort V\nprint (V[0]+V[n-1])/2
int main() {\n\tint n, a, sum = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\tsum += a;\n\t}\n\tcout << sum / n << endl;\n\treturn 0;\n}	let n,a, sum=0 be integer\nread n\nfor i=0 to n exclusive\nread a\nsum +=a\nprint sum and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) { cin >> a[i]; }\n\tsort(a.begin(), a.end());\n\tcout << a[n / 2] << endl;\n}	create integer n\nread input to n\ncreate new vector of integers a with n elements\nfor i = 0 to n exclusive, read a[i] from the user input\nsort vector a\nprint a[n / 2]
int main() {\n\tlong long int k, l, m, o, n, max(0), min(0);\n\tcin >> o;\n\tfor (int i = 0; i < o; i++) {\n\t\tcin >> n;\n\t\tif (max < n) { max = n; }\n\t\tif (i == 0) { min = n; }\n\t\tif (min > n) { min = n; }\n\t}\n\tk = (max - min) / 2;\n\tcout << max - k << endl;\n}	create long long ints k, l, m, o, n, max = 0 and min = 0\nread input to o\nfor i from 0 to o exclusive incrementing i\nread user input to n\nif max is less than n, assign the new value = n to max\nif i = 0, change min to n\nif min is greater than n, assign change min to n\nchange the value of k to (max - min) / 2\nprint max - k to the standard output
"const int maxn = 6;\nint A[maxn];\nint main() {\n\tint N;\n\tcin >> N;\n\tfor (int i = (1); i <= (N); i += (1)) { cin >> A[i]; }\n\tsort(A + 1, A + N + 1);\n\tint p = N / 2;\n\tif (N % 2 == 1) { p++; }\n\tcout << A[p] << ""\n"";\n\treturn 0;\n}"	let maxn be a constant integer with maxn = 6\nA = array of integers of length maxn\nlet N be a integer\nread N\nfor i = 1 to N inclusive , read A[i]\nsort the values A + 1 and A + N + 1\nlet p be a integer with p = N / 2\nif N modulo 2 is equal to 1 , increment p by 1\nprint A[p] and newline
int n, i;\nint main() {\n\tcin >> n;\n\tint a[n];\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tcout << a[n / 2] << endl;\n\treturn 0;\n}	declare new integer variables n and i\nread n from the input stream\na is an array of integers with n elements\nread n elements from the input into a\nsort a\nprint a[n / 2] to the stdout
int main() {\n\tint n;\n\tvector<int> a;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint k;\n\t\tcin >> k;\n\t\ta.push_back(k);\n\t}\n\tint min = a[0], max = a[0];\n\tfor (int i = 0; i < a.size(); i++) {\n\t\tif (a[i] > max) max = a[i];\n\t\tif (a[i] < min) min = a[i];\n\t}\n\tcout << min + (max - min) / 2 << endl;\n\treturn 0;\n}	n = integer\na = vector integer\nread n\nfor i = 0 to n exclusive\nk = integer\nread k\npush back the element of a by 1 and insert a new element of k at the end of a\nmin = max = integer = a[0]\nfor i = 0 to size of a exclusive\nif a[i] > max, then max = a[i]\nif a[i] < min, then min = a[i]\nprint min + (max - min) / 2
const int inf = 0x3f3f3f3f;\nconst int MX = 1e5 + 5;\nint n, a[10];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tcout << a[n / 2 + 1] << endl;\n\treturn 0;\n}	inf is a new constant integer with value 0x3f3f3f3f\ndeclare new constant integer MX = 1e5 + 5\ncreate new int n and int array a with size 10\nread n\nread n elements into a, starting from the index 1\nsort a\nprint a[n / 2 + 1] to the standard output
const int MAX = 1e10;\nset<int> dict;\nint main() {\n\tint n, j;\n\tcin >> n;\n\tint arr[6] = {0};\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (arr[i] > 0) { dict.insert(arr[i]); }\n\t}\n\tmemset(arr, 0, n);\n\tj = 0;\n\tfor (set<int>::iterator it = dict.begin(); it != dict.end(); ++it) arr[j++] = *it;\n\tcout << arr[n / 2] << endl;\n\treturn 0;\n}	MAX = constant integer of value 1e10\ndict = set of integers\nn, j = integers\nread n\narr = array of length 6 initialized to 0\nfor i = 0 to n exclusive read arr[i]\nfor i = 0 to n exclusive\nif arr[i] is greater than 0 then insert arr[i] into dict\nset the first n elements of arr to 0\nset j to 0\nfor it = the first element of dict until the last element of dict exclusive set arr[j] to be the value of it then add 1 to j\nprint arr[n/2]
int a[10];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tcout << a[n / 2] << endl;\n\treturn 0;\n}	a = array of 10 integers\nn=integer\nRead n\nRead n values into array a\nsort array elements of a in ascending order\nprint a[n / 2] and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n + 2];\n\ta[0] = 0;\n\tfor (int i = 1; i <= n; ++i) cin >> a[i];\n\tsort(a, a + n + 1);\n\tint k = n / 2;\n\tif (n % 2) k++;\n\tcout << a[k] << endl;\n}	n =integer\nRead n\na = array of n + 2 integers\nset a[0] to 0\nRead n values into array a\nsort array elements of a in ascending order\nk = integer, set to n / 2\nif n modulo 2, then increment k\nprint a[k] and a new line
int y[10];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> y[i];\n\tsort(y + 1, y + n + 1);\n\tcout << y[n / 2 + 1] << endl;\n\treturn 0;\n}	y = array of integers of length 10\nlet n be a integer\nread n\nfor i = 1 to n inclusive , read y[i]\nsort the values y + 1 and y + n + 1\nprint y[n / 2 + 1] and newline
int main() {\n\tint n;\n\tcin >> n;\n\tint ara[n];\n\tfor (int i = 0; i < n; i++) cin >> ara[i];\n\tsort(ara, ara + n);\n\tif (n == 1)\n\t\tcout << ara[0];\n\telse if (n == 3)\n\t\tcout << ara[1];\n\telse\n\t\tcout << ara[2];\n\tcout << endl;\n\treturn 0;\n}	create int n\nread n\ncreate int ara[n]\nfor i=0 to n exclusive, read ara[i]\nsort elements between ara and ara + n\nif n=1\nprint ara[0]\nelse if n=3\nprint ara[1]\nelse\nprint ara[2]\nprint a new line
const int M = 2e5 + 5;\nconst int inf = 1e9 + 5;\nint main() {\n\tint n;\n\tvector<int> v;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint t;\n\t\tcin >> t;\n\t\tv.push_back(t);\n\t}\n\tsort(v.begin(), v.end());\n\tcout << v[n / 2] << endl;\n\treturn 0;\n}	declare new constant integer M with value 2e5 + 5\ncreate new constant integer inf with value 1e9 + 5\nn is a new integer variable\ncreate new vector of integers v\nread variable n from the input\nfor i from 0 to n exclusive\ncreate new integer variable t\nread variable t from the input\nadd new element = t after the last element of v\nsort v from start to end\nprint v[n / 2]
int main() {\n\tint n, y[10];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> y[i];\n\tsort(y, y + n);\n\tcout << y[n / 2] << endl;\n}	n =integer and y = array of 10 integers\nRead n\nRead n values into array y\nsort array elements of y in ascending order\nprint y[n / 2] and a new line
int main() {\n\tsize_t n;\n\tcin >> n;\n\tvector<size_t> year(n);\n\tfor (size_t i = 0; i < n; ++i) { cin >> year[i]; }\n\tsort(year.begin(), year.end());\n\tcout << year[(n - 1) / 2] << endl;\n\treturn 0;\n}	create variable n with type size_t\nread input to n\ncreate new vector year with n elements of type of size_t\nread n elements into year in a loop\nsort year\nprint year[(n - 1) / 2]
int main() {\n\tint n;\n\tcin >> n;\n\tint arr[10];\n\tfor (int i = 1; i <= n; i++) cin >> arr[i];\n\tsort(arr + 1, arr + n + 1);\n\tif (n == 1)\n\t\tcout << arr[1] << endl;\n\telse if (n == 3)\n\t\tcout << arr[2] << endl;\n\telse\n\t\tcout << arr[3] << endl;\n\treturn 0;\n}	n=int\nread n\narr=array of 10 int\nfor i=1 to n exclusive read arr[i]\nsort arr from position 1 to n+1\nif n is 1\nprint arr[1]\nelse if n is 3\nprint arr[2]\nelse\nprint arr[3]
int main() {\n\tlong long unsigned n, k;\n\tcin >> n >> k;\n\tlong long unsigned mid = n / 2;\n\tif (n % 2 == 1) mid++;\n\tif (k <= mid)\n\t\tcout << (k * 2) - 1 << endl;\n\telse\n\t\tcout << ((k - (mid + 1)) * 2) + 2 << endl;\n\treturn 0;\n}	declare long long unsigned variables n and k\nread n and k\ndeclare long long unsigned variable mid = n / 2\nif n modulo 2 is 1, increment mid\nif k <= mid\nprint (k * 2) - 1\nelse\nprint ((k - (mid + 1)) * 2) + 2
int main() {\n\tlong long n, k, p, o;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\tp = n / 2;\n\t} else {\n\t\tp = n / 2 + 1;\n\t}\n\tif (k <= p) {\n\t\to = (k * 2) - 1;\n\t} else {\n\t\to = (k - p) * 2;\n\t}\n\tcout << o << endl;\n\treturn 0;\n}	n, k, p, o =integers\nRead n and k\nif n is even\nset p to n / 2\nelse do the following\nset p to n / 2 + 1\nif k is less than or equal to p\nset o to (k * 2) - 1\nelse do the following\nset o to (k - p) * 2\nprint o and a new line
int main() {\n\tlong long int n, k, half;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\thalf = n / 2;\n\t} else if (n % 2 == 1) {\n\t\thalf = (n + 1) / 2;\n\t}\n\tif (k <= half) {\n\t\tcout << 2 * k - 1 << endl;\n\t} else if (k > half) {\n\t\tcout << (k - half) * 2 << endl;\n\t}\n\treturn 0;\n}	n, k, half = long long int\nread n and k\nif n modulo 2 is 0\nhalf = n / 2\nelse if n modulo 2 is 1\nhalf = (n + 1) / 2\nif k <= half\nprint 2 * k - 1\nelse if k > half\nprint (k - half) * 2
int main() {\n\tlong long n, k, c, l, d;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\tl = n / 2;\n\t} else {\n\t\tl = n / 2 + 1;\n\t}\n\tif (k <= l) {\n\t\tcout << 2 * k - 1 << endl;\n\t} else {\n\t\tif (n % 2 != 0) {\n\t\t\tcout << 2 * k - n - 1 << endl;\n\t\t} else {\n\t\t\tcout << 2 * k - n << endl;\n\t\t}\n\t}\n}	declare long longs n, k, c, l and d\nread n and k\nif n is even\nl = n / 2\nelse\nl = n / 2 + 1\nif k <= l\nprint 2 * k - 1\nelse\nif n is odd\nprint 2 * k - n - 1\nelse\nprint 2 * k - n
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\tif (k > n / 2) {\n\t\t\tcout << ((k) - ((n / 2))) * 2 << endl;\n\t\t} else {\n\t\t\tcout << k * 2 - 1 << endl;\n\t\t}\n\t} else {\n\t\tif (k > (n) / 2 + 1) {\n\t\t\tcout << ((k) - ((n / 2 + 1))) * 2 << endl;\n\t\t} else {\n\t\t\tcout << k * 2 - 1 << endl;\n\t\t}\n\t}\n}	create long long n, k\nread n, k\nif n is even\nif k is greater than n/2\nprint (k - (n / 2)) * 2\nelse do the following\nprint k * 2 - 1\nelse do the following\nif k is greater than (n) / 2 + 1\nprint (k - (n / 2 + 1)) * 2\nelse do the following\nprint k * 2 - 1
int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tif (k <= (n + 1) / 2)\n\t\tcout << 2 * k - 1 << endl;\n\telse\n\t\tcout << 2 * (k - (n + 1) / 2) << endl;\n}	create long long integers n and k\nread n and k\nif k <= (n + 1) / 2\nprint 2 * k - 1\nelse\nprint 2 * (k - (n + 1) / 2)
int main() {\n\tlong long int number;\n\tlong long int position;\n\tcin >> number;\n\tcin >> position;\n\tlong long int x;\n\tif (number % 2 == 0) {\n\t\tif (position <= number / 2) {\n\t\t\tx = (position * 2) - 1;\n\t\t} else if (position > number / 2) {\n\t\t\tx = (position - (number / 2)) * 2;\n\t\t}\n\t} else if (number % 2 == 1) {\n\t\tif (position <= (number + 1) / 2) {\n\t\t\tx = (position * 2) - 1;\n\t\t} else if (position > (number + 1) / 2) {\n\t\t\tx = (position - ((number + 1) / 2)) * 2;\n\t\t}\n\t}\n\tcout << x << endl;\n}	create long long integer number\ndeclare long long integer variable position\nread number\nread position\ndeclare long long integer x\nif number is even\nif position <= number / 2\nx = (position * 2) - 1\nelse if position is greater than number / 2\nx = (position - (number / 2)) * 2\nelse if number is odd\nif position <= (number + 1) / 2\nx = (position * 2) - 1\nelse if position is greater than (number + 1) / 2\nx = (position - ((number + 1) / 2)) * 2\nprint x
int main() {\n\tlong long int n = 0, k = 0;\n\twhile (cin >> n >> k) {\n\t\tlong long int a = 0;\n\t\tif (n % 2) {\n\t\t\tif (k > (n + 1) / 2)\n\t\t\t\ta = (k - (n + 1) / 2) * 2;\n\t\t\telse\n\t\t\t\ta = 2 * k - 1;\n\t\t} else {\n\t\t\tif (k > n / 2)\n\t\t\t\ta = (k - n / 2) * 2;\n\t\t\telse\n\t\t\t\ta = 2 * k - 1;\n\t\t}\n\t\tcout << a << endl;\n\t}\n}	declare long long integer variables n and k = 0\nloop reading n and k from the input\ndeclare long long integer a = 0\nif n is odd\nif k is greater than (n + 1) / 2\na = (k - (n + 1) / 2) * 2\nelse\na = 2 * k - 1\nelse\nif k is greater than n / 2\na = (k - n / 2) * 2\nelse\na = 2 * k - 1\nprint a
int main() {\n\tlong long int n, k, p, o;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\tp = n / 2;\n\t} else {\n\t\tp = (n / 2) + 1;\n\t}\n\tif (k <= p) {\n\t\to = (2 * k) - 1;\n\t} else {\n\t\to = (k - p) * 2;\n\t}\n\tcout << o << endl;\n\treturn 0;\n}	n, k, p, o = long long int\nread n and k\nif n modulo 2 is 0\np = n / 2\nelse\np = (n / 2) + 1\nif k <= p\no = (2 * k) - 1\nelse\no = (k - p) * 2\nprint o
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n % 2 != 0) {\n\t\tif (k <= n / 2 + 1) {\n\t\t\tcout << 2 * k - 1 << endl;\n\t\t} else {\n\t\t\tcout << (k - n / 2 - 1) * 2 << endl;\n\t\t}\n\t} else {\n\t\tif (k <= n / 2) {\n\t\t\tcout << 2 * k - 1 << endl;\n\t\t} else {\n\t\t\tcout << (k - n / 2) * 2 << endl;\n\t\t}\n\t}\n\treturn 0;\n}	n, k = long long\nread n then k\nif n is uneven\nif k is less or equal to n / 2 + 1\nprint 2 * k - 1\nelse\nprint (k - n / 2 - 1) * 2\nelse\nif k is less or equal to n / 2\nprint 2 * k - 1\nelse\nprint (k - n / 2) * 2
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (k <= (n + 1) / 2) {\n\t\tcout << k * 2 - 1 << endl;\n\t} else {\n\t\tcout << (k - (n + 1) / 2) * 2 << endl;\n\t}\n\treturn 0;\n}	n, k = long long\nread n, k\nif k <= (n + 1) / 2\nprint k * 2 - 1\nelse\nprint (k - (n + 1) / 2) * 2
int main() {\n\tlong long int n, k, mid;\n\tcin >> n >> k;\n\tmid = ceil(n / 2.0);\n\tif (k <= mid) {\n\t\tcout << (k * 2) - 1 << endl;\n\t} else {\n\t\tcout << (k - mid) * 2 << endl;\n\t}\n}	create long long int n, k and mid\nread n and k\nassign ceil of n/2.0 to mid\nif k is less than or equal to mid\nprint (k * 2) - 1\nelse do the following\nprint (k - mid) * 2
int main() {\n\tunsigned long long a, b, c;\n\tcin >> a >> b;\n\tif (a % 2 == 0)\n\t\tc = a / 2;\n\telse\n\t\tc = a / 2 + 1;\n\tif (b > c)\n\t\tb = (b - c) * 2;\n\telse if (b <= c)\n\t\tb = 2 * b - 1;\n\tcout << b << endl;\n}	declare unsigned long longs a, b and c\nread a and b\nif a is even\nc = a / 2\nelse\nc = a / 2 + 1\nif b is greater than c\nb = (b - c) * 2\nelse if b <= c\nb = 2 * b - 1\nprint b
int main() {\n\tlong long int a, b, sum = 0;\n\tcin >> a >> b;\n\tsum = (a + 1) / 2;\n\tif (sum >= b)\n\t\tcout << (b * 2) - 1 << endl;\n\telse\n\t\tcout << (b - sum) * 2 << endl;\n\treturn 0;\n}	a,b=long long int, sum=0\nread a,b\nsum=(a+1)/2\nif sum >= b\nprint b*2-1\nelse\nprint (b-sum)*2
long long n, k;\nint main() {\n\tcin >> n >> k;\n\tif (k <= (n + 1) / 2) {\n\t\tcout << k * 2 - 1 << endl;\n\t} else {\n\t\tcout << (k - (n + 1) / 2) * 2 << endl;\n\t}\n\treturn 0;\n}	declare long long variables n and k\nread n and k\nif k <= (n + 1) / 2\nprint k * 2 - 1\nelse\nprint (k - (n + 1) / 2) * 2
int main() {\n\tlong long n, k;\n\tlong long j;\n\tcin >> n >> k;\n\tif (k <= (n + 1) / 2) {\n\t\tcout << 2 * k - 1 << endl;\n\t} else {\n\t\tj = (k - (n + 1) / 2) * 2;\n\t\tcout << j << endl;\n\t}\n}	create long long n and k\nlet j be long long\nread n and k\nif k<= (n+1)/2\nprint 2*k-1\nelse\nassign (k - (n + 1) / 2) * 2 to j\nprint j
int main() {\n\tlong long n, k, i, num;\n\tcin >> n >> k;\n\ti = (n + 1) / 2;\n\tif (k <= i) {\n\t\tnum = 2 * k - 1;\n\t} else {\n\t\tk = k - i;\n\t\tnum = 2 * k;\n\t}\n\tcout << num << endl;\n\treturn 0;\n}	create long long n, k, i, num\nread n and k\nset i = (n + 1) / 2\nid k<= i\nassign 2*k-1 to num\nelse\nk=k-i\nset num to 2*k\nprint num
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (k <= ((n + 1) / 2))\n\t\tcout << ((k * 2) - 1) << endl;\n\telse\n\t\tcout << (k - (n + 1) / 2) * 2 << endl;\n\treturn 0;\n}	n, k =integers\nRead n and k\nif k is less than or equal to (n + 1) / 2\nprint (k * 2) - 1 and a new line\nelse do the following\nprint (k - (n + 1) / 2) * 2 and a new line
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\tif (k <= n / 2)\n\t\t\tcout << 2 * k - 1 << endl;\n\t\telse\n\t\t\tcout << 2 * (k - n / 2) << endl;\n\t} else {\n\t\tif (k <= (n + 1) / 2)\n\t\t\tcout << 2 * k - 1 << endl;\n\t\telse\n\t\t\tcout << 2 * (k - ((n + 1) / 2)) << endl;\n\t}\n}	declare long longs n and k\nread n and k\nif n is even\nif k <= n / 2\nprint 2 * k - 1\nelse\nprint 2 * (k - n / 2)\nelse\nif k <= (n + 1) / 2\nprint 2 * k - 1\nelse\nprint 2 * (k - ((n + 1) / 2))
int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tif (k > n / 2 + n % 2) {\n\t\tcout << (k - n / 2 - n % 2) * 2 << endl;\n\t} else {\n\t\tcout << k * 2 - 1 << endl;\n\t}\n\treturn 0;\n}	create variables n and k with type long long\ninput n and k\nif k > (n/2 + n mod 2)\nprint (k - n / 2 - n % 2) * 2\notherwise\nprint k * 2 - 1
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (k <= (n + 1) / 2) {\n\t\tcout << k * 2 - 1 << endl;\n\t} else {\n\t\tcout << (k - (n + 1) / 2) * 2 << endl;\n\t}\n\treturn 0;\n}	create long long n and k\nread n, k\nif k<= (n+1)/2\nprint k*2-1\nelse\nprint (k - (n + 1) / 2) * 2 and a newline
int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\tif (k <= n / 2)\n\t\t\tcout << 2 * k - 1 << endl;\n\t\telse\n\t\t\tcout << 2 * (k - n / 2) << endl;\n\t} else {\n\t\tif (k <= (n + 1) / 2)\n\t\t\tcout << 2 * k - 1 << endl;\n\t\telse\n\t\t\tcout << 2 * (k - (n + 1) / 2) << endl;\n\t}\n}	n, k =integers\nRead n and k\nif n is even\nif k is less than or equal to n / 2\nprint 2 * k - 1 and a new line\nelse do the following\nprint 2 * (k - n / 2) and a new line\nelse do the following\nif k is less than or equal to (n + 1) / 2\nprint 2 * k - 1 and a new line\nelse do the following\nprint 2 * (k - (n + 1) / 2) and a new line
int main() {\n\tlong long n;\n\tlong long k;\n\twhile (cin >> n >> k) {\n\t\tif (n % 2 != 0) {\n\t\t\tif (k <= (n / 2 + 1))\n\t\t\t\tcout << 2 * k - 1 << endl;\n\t\t\telse\n\t\t\t\tcout << 2 * k - n - 1 << endl;\n\t\t} else {\n\t\t\tif (k <= n / 2)\n\t\t\t\tcout << 2 * k - 1 << endl;\n\t\t\telse\n\t\t\t\tcout << 2 * k - n << endl;\n\t\t}\n\t}\n}	declare long long n\ncreate long long k\nread n and k and keep looping\nif n is odd\nif k <= n / 2 + 1\nprint 2 * k - 1\nelse\nprint 2 * k - n - 1\nelse\nif k <= n / 2\nprint 2 * k - 1\nelse\nprint 2 * k - n
int main() {\n\tlong long n, k;\n\twhile (cin >> n >> k) {\n\t\tif (k <= ((n + 1) >> 1)) {\n\t\t\tk = (k << 1) - 1;\n\t\t} else {\n\t\t\tk -= (n + 1) >> 1;\n\t\t\tk <<= 1;\n\t\t}\n\t\tcout << k << endl;\n\t}\n\treturn 0;\n}	declare long long variables n and k\nloop, reading n and k from the input\nif k <= (n + 1)>>1\nassign k << 1 - 1 to k\nelse{\ndecrease k by n + 1 >> 1\nk = k << 1\nprint k
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n % 2) {\n\t\tif (k > ((n - 1) / 2) + 1) {\n\t\t\tk = k - ((n - 1) / 2) - 1;\n\t\t\tk = 2 * k;\n\t\t} else {\n\t\t\tk = 2 * k - 1;\n\t\t}\n\t} else {\n\t\tif (k > n / 2) {\n\t\t\tk = k - (n / 2);\n\t\t\tk = 2 * k;\n\t\t} else {\n\t\t\tk = 2 * k - 1;\n\t\t}\n\t}\n\tcout << k << endl;\n\treturn 0;\n}	create long long n and k\nread n, k\nif n is odd\nif k greater than ((n - 1) / 2) + 1)\nk = k - ((n - 1) / 2) - 1\nassign 2*k to k\nesle\nset k to 2*k -1\nelse\nk greater than n/2\nk = k - (n / 2)\nset k to 2*k\nelse\nset k = 2 * k - 1\nprint k
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tn = (n + 1) / 2;\n\tcout << (k > n ? 2 * (k - n) : 2 * k - 1) << endl;\n\treturn 0;\n}	declare long long variables n and k\nread n and k\nset n to (n + 1) / 2\nprint 2 * (k - n) if k > n, else 2 * k - 1
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (k <= (n + 1) / 2) {\n\t\tcout << k * 2 - 1 << endl;\n\t} else {\n\t\tcout << (k - (n + 1) / 2) * 2 << endl;\n\t}\n\treturn 0;\n}	create long longs n, k\nread n read k\nif k is less than or equal to ( n + 1 ) / 2\nprint k * 2 - 1 print newline\nelse\nprint ( k - ( n + 1 ) / 2 * 2 print newline
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tlong long part = 0;\n\tif (n % 2 == 0)\n\t\tpart = n / 2;\n\telse\n\t\tpart = (n / 2) + 1;\n\tif (k <= part) {\n\t\tcout << (k * 2) - 1 << endl;\n\t} else {\n\t\tcout << (k - part) * 2 << endl;\n\t}\n}	n, k = long long\nread n and k\npart = long long with part = 0\nif n modulo 2 is 0\npart = n / 2\nelse\npart = (n / 2) + 1\nif k <= part\nprint (k * 2) - 1\nelse\nprint (k - part) * 2
"int main() {\n\tlong long n, k, odd, ans;\n\tcin >> n >> k;\n\tif (n % 2 == 0) {\n\t\todd = n / 2;\n\t} else {\n\t\todd = (n / 2) + 1;\n\t}\n\tif (k <= odd) {\n\t\tans = (k * 2) - 1;\n\t} else {\n\t\tans = (k - odd) * 2;\n\t}\n\tcout << """" << ans << endl;\n}"	let n, k, odd, ans be long long ints\nread n and k\nif n is even\nset odd to n / 2\nelse\nset odd to n / 2 + 1\nif k <= odd\nset ans to k*2 - 1\nelse\nset ans to (k - odd) * 2\nprint empty string, then print ans
int main() {\n\tunsigned int n;\n\tint k;\n\tcin >> n;\n\tfor (int i = 1; i <= 4; i++) {\n\t\tif (n % i == 1 || n % i == 2) k = 1;\n\t\tif (n % i == 0 || n % i == 3) k = 0;\n\t}\n\tcout << k << endl;\n\treturn 0;\n}	create unsigned int n\nk=integer\nread n\nfor i=1 to 4 inclusive\nif n mod i = 1 or n mod i = 2, set k to 1\nif n mod 1 = 0 or n mod i = 3, k=0\nprint k
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tif ((n / 2) % 2 == 0) {\n\t\t\tcout << 0 << endl;\n\t\t} else {\n\t\t\tcout << 1 << endl;\n\t\t}\n\t} else {\n\t\tn = n - 1;\n\t\tif ((n / 2) % 2 == 0) {\n\t\t\tcout << 1 << endl;\n\t\t} else {\n\t\t\tcout << 0 << endl;\n\t\t}\n\t}\n\treturn 0;\n}	n=integer\nread n\nif n is even\nif n/2 is even\nprint 0\notherwise\nprint 1\nelse\nset n=n-1\nif n/2 is even\nprint 1\nelse\nprint 0 and a newline
const int maxn = 2e5 + 5;\nlong long a[maxn];\nlong long b[maxn];\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << ((n + 1) / 2) % 2 << endl;\n\treturn 0;\n}	set maxn to 2e5 + 5\ncreate long long a[maxn]\ncreate long long b[maxn]\ncreate int n\nread n\nprint ((n + 1) / 2) % 2
int main() {\n\tint m;\n\tcin >> m;\n\tcout << (m & 1 ? m + 1 >> 1 & 1 : m >> 1 & 1) << '\n';\n}	declare integer variable m\nread m\nprint m + 1 >> 1 & 1 if m & 1, else print m >> 1 & 1; then print '\n'
int main() {\n\tlong long int n;\n\tcin >> n;\n\tif ((n * (n + 1) / 2) % 2 == 0) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	n = long long int\nread n\nif (n * (n + 1) / 2) modulo 2 is 0\nprint 0\nelse\nprint 1
"const long long N = 1e8 + 3;\nconst long long MN = 1e9 + 7;\nconst long long MX = -1e9 - 7;\nlong long n, l, a, t, l1, cnt, c, q;\nstring s1, s;\npair<long long, long long> pr[1001];\nvector<long long> v;\nmap<char, long long> mp;\nset<long long> st;\nset<long long>::iterator it;\nint main() {\n\tcin >> n;\n\tn %= 4;\n\tif (n == 0 or n == 3)\n\t\tcout << 0;\n\telse if (n == 1 or n == 2)\n\t\tcout << 1;\n\tcout << ""\n"";\n\treturn 0;\n}"	"create constant long long N = 1e8 + 3\ncreate constant long long MN = 1e9 + 7\ncreate constant long long MX = -1e9 - 7\ncreate long longs n, l, a, t, l1, cnt, c and q\ncreate string variables s1 and s\ncreate array of pairs of long longs called pr, with 1001 element\ncreate vector of long longs called v\ncreate a map from characters to long longs with name mp\ncreate set of long longs st\ncreate set iterator it for a set of long longs\nread n\nn %= 4\nif n = 0 or n = 3\nprint 0\nelse if n = 1 or n = 2\nprint 1\nprint ""\n"""
"int main() {\n\tint n;\n\tcin >> n;\n\tint y = (n * (n + 1)) / 2;\n\tif (y % 2) {\n\t\tcout << ""1"" << endl;\n\t} else {\n\t\tcout << ""0"" << endl;\n\t}\n\treturn 0;\n}"	create int n\nread n\nset (n * (n + 1)) / 2 to y\nif y mod 2\nprint 1\notherwise\nprint 0 and a new line
const int N = 5005;\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n % 4 == 0 || n % 4 == 3)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	set constant integer N = 5005\nn = integer\nread n\nif n modulo 4 equal to 0 or n modulo 4 = 3\nprint 0\notherwise\nprint 1
int main() {\n\tlong long n, sum = 0;\n\tcin >> n;\n\tsum = n * (n + 1) / 2;\n\tif (sum % 2 == 0) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n}	create long long n, set sum = 0\nread n\nassign n * (n + 1) / 2 to sum\nif sum is even\nprint 0\notherwise\nprint 1 and a newline
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 4 == 0 || n % 4 == 3)\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	create long long n\nread n\nif n modulo 4 equal to 0 or n modulo 4 = 3\nprint 0\notherwise\nprint 1 and a new line
long long power(long long x, long long y, long long m) {\n\tif (y == 1) return x % m;\n\tif (y == 0) return 1;\n\tif (y & 1) return (x * power((x * x) % m, (y - 1) / 2, m)) % m;\n\treturn power((x * x) % m, y / 2, m) % m;\n}\nlong long modinv(long long x, long long mod = 1000000007) {\n\treturn power(x, mod - 2, mod);\n}\nvoid solve() {\n\tlong long n;\n\tcin >> n;\n\tif ((n * (n + 1) / 2) & 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n}\nint main() {\n\tsolve();\n\treturn 0;\n}	declare power with long longs x, y, m as arguments, returning long long\nif y is 1, return x % m from function\nif y is 0, return 1 from function\nif y bitwise and 1, return (x * result of run power with ( (x * x) % m, (y - 1) / 2, m ) as arguments ) % m from function\nreturn result of run power with ( (x*x) % m, y / 2, m ) as arguments % m from function\ndeclare modinv with long longs x, mod with mod = 1000000007\nreturn result of run power with x, mod - 2, mod as arguments\ndeclare solve\ncreate long long n\nread n\nif (n * (n + 1) / 2) & 1\nprint 1 print newline\nelse\nprint 0 print newline\nrun solve
int main() {\n\tint n, x, y;\n\tcin >> n;\n\tn = (n * (n + 1)) / 2;\n\tx = n / 2;\n\ty = n - x;\n\tcout << abs(x - y) << endl;\n\treturn 0;\n}	declare integer variables n, x and y\nread n\nn = (n * (n + 1)) / 2\nx = n / 2\ny = n - x\nprint absolute value of x - y
int main() {\n\tlong long n;\n\tlong long ans = 0;\n\tcin >> n;\n\tans = n * (1 + n) / 2;\n\tif (ans % 2 == 0)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	create long long n\nset ans = 0\nread n\nset ans = n * (1 + n) / 2\nif ans is even\nprint 0\notherwise\nprint 1 and a newline
"long long int T, n;\nint a[100010 + 5];\nlong long int M = 1e9 + 7;\nint main() {\n\tcin >> n;\n\tn %= 4;\n\tif (n == 0 || n == 3)\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	create long long int T and n\ncreate int array a of length 100010 + 5\nset M = 1e9 + 7\nread n\nn=n%4\nif n is equal to 0 or n is equal to 3\nprint 0\notherwise\nprint 1 and a newline
int main() {\n\tint n;\n\tcin >> n;\n\tint tmp = n % 4;\n\tif (tmp == 1 || tmp == 2)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n}	n =integer\nRead n\ntmp = integer with n modulo 4\nif tmp is equal to 1 OR tmp is equal to 2\nprint 1 and a new line\nelse do the following\nprint 0 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 4 == 0)\n\t\tcout << 0 << endl;\n\telse if (n % 4 == 1)\n\t\tcout << 1 << endl;\n\telse if (n % 4 == 2)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n}	create int n\nread n\nif n mod 4 = 0\nprint 0\nelse if n mod 4 is equal to 1\nprint 1 and a new line\notherwise if n modulo 4 = 2\nprint 1\nelse\nprint 0 and a new line
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n == 3 || n % 4 == 0 || n % 4 == 3)\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	let n be a long integer\nread n\nif (n is equal to 3 or n % 4 is equal to 0 or n % 4 is equal to 3)\nprint 0 and newline\nelse do the following\nprint 1 and newline
int main() {\n\tlong long n, s;\n\tcin >> n;\n\ts = ((n + 1) * n) / 2;\n\tif (s % 2 == 0) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	n, s = long longs\nread n\nset s to ((n + 1) * n) / 2\nif s % 2 is equal to 0\nprint 0\nelse\nprint 1
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 4 == 3 || n % 4 == 0)\n\t\tcout << 0;\n\telse\n\t\tcout << 1;\n\tcout << '\n';\n\treturn 0;\n}	declare integer variable n\nread n\nif n modulo 4 = 3 || n modulo 4 = 0\nprint 0\nelse\nprint 1\nprint '\n'
int main() {\n\tint n;\n\tcin >> n;\n\tcout << ((n + 1) / 2) % 2 << endl;\n\treturn 0;\n}	n = integer\nread n\nprint ((n + 1) / 2) modulo 2
int main() {\n\tint n;\n\tcin >> n;\n\tcout << ((n + 1) / 2) % 2 << endl;\n\treturn 0;\n}	n = integer\nread n\nprint ((n + 1) / 2) modulo 2
int n;\nlong long a, b;\nint main() {\n\tcin >> n;\n\tif (n % 2 == 0 && n % 4 == 0)\n\t\tcout << 0 << '\n';\n\telse if (n % 2 == 0 && n % 4 != 0)\n\t\tcout << 1 << '\n';\n\telse if (n % 2 != 0 && (n - 1) % 4 == 0)\n\t\tcout << 1 << '\n';\n\telse if (n % 2 != 0 && (n - 1) % 4 != 0)\n\t\tcout << 0 << '\n';\n\treturn 0;\n}	create integer n\ncreate long longs a and b\nread n\nif n is even and n % 4 = 0\nprint 0 and '\n'\nelse if n is even and n % 4 != 0\nprint 1 and '\n'\nelse if n is odd and (n - 1) % 4 = 0\nprint 1 and '\n'\nelse if n is odd and (n - 1) % 4 != 0\nprint 0 and '\n'
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long sum = n * (n + 1);\n\tsum = sum / 2;\n\tlong long p = sum / n;\n\tcout << p % 2 << endl;\n}	create long long n\nread n\ncreate long long sum with sum = n * ( n + 1 )\nset sum to sum / 2\ncreate long long p with p = sum / n\nprint p % 2 print newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << n * (n + 1) / 2 % 2 << endl;\n\treturn 0;\n}	declare long long n\nread n\nprint n * (n + 1) / 2 modulo 2
int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tif (n % 4 == 0)\n\t\t\tcout << 0 << endl;\n\t\telse\n\t\t\tcout << 1 << endl;\n\t} else {\n\t\tif ((n - 1) % 4 == 0)\n\t\t\tcout << 1 << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}	create long long integer n\nread n\nif n is even\nif n % 4 = 0\nprint 0\nelse\nprint 1\nelse\nif (n - 1) % 4 = 0\nprint 1\nelse\nprint 0
int A[10000];\nint B[10000];\nint main() {\n\tint n, ans = 0;\n\tcin >> n;\n\tif (n % 4 == 1 || n % 4 == 2)\n\t\tcout << '1' << endl;\n\telse\n\t\tcout << '0' << endl;\n\treturn 0;\n}	A = integer array of length 10000\nB = integer array of length 10000\nn, ans = integers with ans value of 0\nread n\nif n mod 4 equals 1 or n mod 4 equals 2\nprint 1\nelse\nprint 0
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 4 == 0) {\n\t\tcout << 0;\n\t} else if (n % 4 == 1) {\n\t\tcout << 1;\n\t} else if (n % 4 == 2) {\n\t\tcout << 1;\n\t} else {\n\t\tcout << 0;\n\t}\n\tcout << ""\n"";\n\treturn 0;\n}"	n = integer\nread n\nif n modulo 4 equal to 0\nprint 0\notherwise if n modulo 4 = 1\nprint 1\notherwise if n modulo 4 equal to 2\nprint 1\notherwise\nprint 0\nprint a new line
const int INF = 0x3f3f3f3f;\nconst int MAXN = 2e5 + 5;\nlong long n;\nint main() {\n\tcin >> n;\n\tcout << n * (n + 1) / 2 % 2 << endl;\n\treturn 0;\n}	INF = const int with INF = 0x3f3f3f3f\nMAXN = const int with MAXN = 2e5 + 5\nn = long long\nread n\nprint n * (n + 1) / 2 modulo 2
long long i, n, sum;\nint main() {\n\tcin >> n;\n\tif (n % 2 == 0) sum = n / 2 * (n + 1);\n\tif (n % 2 != 0) sum = n / 2 * (n + 1) + (n / 2 + 1);\n\tif (sum % 2 != 0)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}	create long long i, n and sum\nread n\nif n is even, set sum to n / 2 * (n + 1)\nif n mod 2 is different from 0, assign n / 2 * (n + 1) + (n / 2 + 1) to sum\nif sum modulo 2 is different from 0\nprint 1\notherwise\nprint 0 and a new line
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tlong long m = n / 2;\n\t\tif (m % 2 == 0) {\n\t\t\tcout << ""0"" << endl;\n\t\t} else {\n\t\t\tcout << ""1"" << endl;\n\t\t}\n\t} else {\n\t\tlong long m = (n - 1) / 2;\n\t\tif (m % 2 == 0) {\n\t\t\tcout << ""1"" << endl;\n\t\t} else {\n\t\t\tcout << ""0"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	create long long n\nread n\nif n modulo 2 is = 0\nset m = n/2\nif m modulo 2 equal to 0\nprint 0\notherwise\nprint 1\notherwise\nset m= (n-1)/2\nif m mod 2 = 0\nprint 1\nother\nprint 0 and a new line
long long arr[200001];\nint main() {\n\tlong long n, i, sum = 0;\n\tcin >> n;\n\tsum = (n * (n + 1)) / 2;\n\tif (sum % 2 == 0) {\n\t\tcout << 0 << endl;\n\t} else if (sum % 2 != 0) {\n\t\tcout << 1 << endl;\n\t}\n}	arr = long long array of size 200001\nn, i, sum = long long with sum = 0\nread n\nset sum to (n * (n + 1)) / 2\nif sum is even\nprint 0\nelse if sum is uneven\nprint 1
long long int x;\nint main() {\n\tcin >> x;\n\tcout << ((x * (x + 1) / 2) % 2) << endl;\n\treturn 0;\n}	x = long long int\nread x\nprint ((x * (x + 1) / 2) modulo 2)
const int maxN = 2012345678;\nint n;\nint main() {\n\tcin >> n;\n\tlong long int sum = (n * (n + 1)) / 2;\n\tif (sum % 2 == 0)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	mxaN = const int with maxN = 2012345678\nn = int\nread n\nsum = long long int with sum = (n * (n + 1)) / 2\nif sum is even\nprint 0\nelse\nprint 1
"int main() {\n\tint a;\n\tcin >> a;\n\tcout << ((a + 1) / 2) % 2 << ""\n"";\n\treturn 0;\n}"	"create integer a\nread a\nprint ((a + 1) / 2) % 2 print ""\n"""
int main() {\n\tint n;\n\tcin >> n;\n\tn %= 4;\n\tif (n == 0 || n == 3) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	create int n\nread n\nn = n mod 4\nif n=0 or n=3\nprint 0\notherwise\nprint 1 and a newline
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint mn = (((n) < (m)) ? (n) : (m));\n\tint fact = 1;\n\tfor (int i = 2; i <= mn; i++) fact *= i;\n\tcout << fact << endl;\n\treturn 0;\n}	n,m=int\nread n,m\nmn=n if n<m else m\nfact=1\nfor i=2 to mn inclusive multiply fact by i\nprint fact
int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint ans = 1;\n\tfor (int i = 1; i <= min(a, b); i++) { ans *= i; }\n\tcout << ans << endl;\n\treturn 0;\n}	declare new integer variables a and b\nread input to a and b\nnew integer ans with value 1\nfor i from 1 to (min of a and b) inclusive, multiply ans by i\nprint ans
int main() {\n\tint a, b, ans = 1;\n\tcin >> a >> b;\n\tif (a > b) a = b;\n\tfor (int i = 1; i <= a; i++) ans = ans * i;\n\tcout << ans << endl;\n}	declare integer variables a, b and ans with ans = 1\nread a and b\nif a is greater than b, change a to b\nin a for loop, change i from 1 to a inclusive, multiplying ans by i on every loop\nprint ans to the standard output
long long int fact(int n) {\n\tif (n <= 0)\n\t\treturn 1;\n\telse\n\t\treturn n * fact(n - 1);\n}\nint main() {\n\tlong long int a, b;\n\tcin >> a >> b;\n\tlong long int x = min(a, b);\n\tcout << fact(x) << endl;\n\treturn 0;\n}	in function fact which accepts integer n and returns long long integer\nif n <= 0\nreturn 1\nelse\nreturn n * fact(n - 1)\na, b = long long integers\nread a and b\nx = long long integer set to min(a, b)\nprint fact(x)
int main() {\n\tlong long a, b, c;\n\tcin >> a >> b;\n\tif (a > b) {\n\t\tc = a;\n\t\ta = b;\n\t\tb = c;\n\t}\n\tc = 1;\n\twhile (a) {\n\t\tc *= a;\n\t\ta--;\n\t}\n\tcout << c << endl;\n}	let a, b, c be long integers\nread a, b\nif a is greater than b\nc is equal to a\na is equal to b\nb is equal to c\nc is equal to 1\nwhile a is true\nc is equal to c * a\ndecrement a by 1\nprint c and newline
int main() {\n\tint a, b;\n\tlong long sum = 1;\n\tcin >> a >> b;\n\tint min = a < b ? a : b;\n\tfor (int i = 2; i <= min; i++) sum *= i;\n\tcout << sum << endl;\n}	a, b = integer\nsum = long long = 1\nread a, b\nmin = integer = a if a < b else min = b\nfor i = 2 to min inclusive, then sum = sum * i\nprint sum
int dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nint main() {\n\tint x, y;\n\tcin >> x >> y;\n\tint g = min(x, y);\n\tint ans = 1;\n\tfor (int i = 1; i < g + 1; i += 1) ans = ans * i;\n\tcout << ans << '\n';\n}	new array of integers dx with values 0, 0, -1, 1\nnew array of integers dy with values 1, -1, 0, 0\ncreate new ints x and y\nread x and y from the input\ng is a new integer with value min of x and y\ncreate new integer called ans = 1\nloop through i from 1 while i < g + 1, multiplying ans by i on each iteration\nprint ans and '\n'
"long factorial(long A) {\n\tlong ans = 1;\n\tfor (int i = 1; i <= A; i++) ans *= i;\n\treturn ans;\n}\nint main() {\n\tlong A, B;\n\tcin >> A >> B;\n\tcout << factorial(min(A, B)) << ""\n"";\n}"	"function factorial with long argument A that returns long\ndeclare long variable with name ans = 1\nfor i from 1 to A inclusive, multiply ans by i\nreturn ans\ndeclare longs A and B\nread A and B from the user input\nprint factorial(min of A and B) and ""\n"" to the standard output"
long long fact(long long n) {\n\tif ((n == 0) || (n == 1)) {\n\t\treturn 1;\n\t} else\n\t\treturn n * fact(n - 1);\n}\nlong long gcd(long long a, long long b) {\n\tif (b == 0)\n\t\treturn a;\n\telse\n\t\treturn gcd(b, a % b);\n}\nint main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long c = min(a, b);\n\tcout << fact(c) << endl;\n\treturn 0;\n}	function fact (get long long n, return long long)\nif n is 0 or 1\nreturn 1\nelse\nreturn n*fact(n-1)\nfunction gcd (get long long a and b, return long long)\nif b is 0\nreturn a\nelse\nreturn gcd(b, a modulo b)\na,b=long long\nread a,b\nc=min(a,b)\nprint fact(c)
int main() {\n\tlong long t, i, j, n, m, k, ans, ck, cnt = 0, sum = 0, c = 0;\n\tstring s, s1, s2, tmp;\n\tcin >> n >> m;\n\tck = min(n, m);\n\tlong long fact = 1;\n\tfor (i = 1; i <= ck; i++) { fact *= i; }\n\tcout << fact << endl;\n\treturn 0;\n}	declare long longs t, i, j, n, m, k, ans, ck, cnt = 0, sum = 0, c = 0\ndeclare strings s, s1, s2, tmp\nread n and m\nlet ck be minimum of n and m\ndeclare long long face = 1\nfor i = 1 to ck inclusive, let fact be fact * i\nprint face and newline
int factorial(int a) {\n\tif (a == 1) return 1;\n\treturn a * factorial(a - 1);\n}\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a > b) {\n\t\tcout << factorial(b) << endl;\n\t} else {\n\t\tcout << factorial(a) << endl;\n\t}\n\treturn 0;\n}	declare function factorial which takes integer a\nif a is equal to 1 then return 1\nreturn a * factorial(a - 1)\ncreate integers a and b\nread a and b\nif a is greater than b\nprint factorial of b\nelse\nprint factorial of a
int main() {\n\tlong long int a, b, x, i, k = 1;\n\tcin >> a >> b;\n\tx = min(a, b);\n\tfor (i = 1; i <= x; i++) { k = k * i; }\n\tcout << k << endl;\n\treturn 0;\n}	a, b, x, i, k = long long int with k = 1\nread a then b\nset x to min of a, b\nfor i = 1 to x inclusive set k to k * i\nprint k
vector<int> divisor(1000000 + 1, 0);\nint bigmod(long long a, long long b, long long c) {\n\tlong long x;\n\tif (b == 0) return 1 % c;\n\tx = bigmod(a, b / 2, c);\n\tx = (x * x) % c;\n\tif (b & 1) x = (x * a) % c;\n\treturn x;\n}\nulong long factorial(long long n) {\n\tulong long fact = 1;\n\tfor (int i = 2; i <= n; i++) { fact *= i; }\n\treturn fact;\n}\nint main() {\n\tint x, y;\n\twhile (cin >> x >> y) {\n\t\tint mn = min(x, y);\n\t\tulong long A = factorial(mn);\n\t\tcout << (__gcd(A, A)) << endl;\n\t}\n\treturn 0;\n}	create new vector of integers called divisor with 1000000+1 elements filled with 0\ninteger function bigmod with long long arguments a, b and c\ncreate long long variable with name x\nif b is equal to 0, return 1 modulo c\nchange x to bigmod(a, b / 2, c)\nset x to x squared % c\nif b & 1 is true, assign the new value = (x * a) % c to x\nreturn x\nulong long function factorial with long long argument n\nnew ulong long fact = 1\nin a for loop, change i from 2 to n inclusive, multiplying fact by i\nreturn fact\ndeclare int variables x and y\nloop, reading x and y from the input\nnew integer variable mn with value min of x and y\nnew ulong long A = result of factorial(mn)\nprint the result of __gcd(A, A)
long long fac(long long n) {\n\tlong long ans = 1;\n\tfor (long long i = 1; i <= n; i++) ans *= i;\n\treturn ans;\n}\nint main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tcout << fac(min(a, b)) << endl;\n\treturn 0;\n}	in the function fac that takes long long n and returns long long\nans = long long with ans = 1\nfor i = 1 to n, ans = ans * i\nreturn ans\na, b = long long\nread a, b\nprint fac(min(a, b))
"long long gcd(long long a, long long b) {\n\tif (!b) return a;\n\treturn gcd(b, (a % b));\n}\nint main() {\n\tlong long n, m, a = 1, b = 1;\n\tcin >> n >> m;\n\tif (n > m) swap(n, m);\n\tfor (long long i = 1; i <= n; i++) a *= i;\n\tfor (long long i = 1; i <= (n + 1); i++) b *= i;\n\tcout << gcd(a, b) << ""\n"";\n\treturn 0;\n}"	"long long function gcd with long long arguments a and b\nif b != 0, return a\nreturn gcd(b, (a % b))\ndeclare long long variables n, m, a and b with a and b = 1\nread input to n and m\nif n is greater than m, swap n and m\nin a for loop, change i from 1 to n inclusive, multiplying a by i on each iteration\nstart for loop from i = 1 to n + 1 inclusive, multiply b by i on each loop\nprint gcd(a, b) and ""\n"" to the standard output"
int main() {\n\tint a, b, i, ans = 1, x;\n\tcin >> a >> b;\n\tx = min(a, b);\n\tfor (i = 1; i <= x; i++) { ans = ans * i; }\n\tcout << ans << endl;\n\treturn 0;\n}	a, b, i, ans, x = int with ans = 1\nread a then b\nset x to min of a, b\nfor i = 1 to x inclusive set ans to ans * i\nprint ans
int main() {\n\tint a, b;\n\tlong long sum = 1;\n\twhile (cin >> a >> b) {\n\t\tint cnt = min(a, b);\n\t\tfor (int i = 1; i <= cnt; i++) sum *= i;\n\t\tcout << sum << endl;\n\t}\n\treturn 0;\n}	declare ints a and b\ncreate long long variable sum = 1\nread a and b and keep looping\ncreate new integer variable cnt with value min of a and b\nloop through i from 1 to cnt inclusive, multiplying sum byi on each iteration\nprint sum
int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint mn = min(a, b), ans = 1;\n\tfor (int i = 2; i <= mn; i++) ans *= i;\n\tcout << ans << endl;\n\treturn 0;\n}	a, b = integers\nread a and b\nmn, ans = integers with mn having value of the minimum of a and b, and ans having value of 1\nfor i = 2 to mn inclusive set ans to ans * i\nprint ans
long long a, b, c, v, e;\nint main() {\n\tcin >> a >> b;\n\tif (a <= b)\n\t\tv = a;\n\telse\n\t\tv = b;\n\ta = b = 1;\n\twhile (v > 0) {\n\t\tb *= a;\n\t\ta++;\n\t\tv--;\n\t}\n\tcout << b << endl;\n\treturn 0;\n}	declare long longs a, b, c, v and e\nread input to a and b\nif a <= b\nassign the new value = a to v\nelse\nset v to b\nchange the values of a and b to 1\nwhile v > 0\nchange the value of b to b multiplied by a\nincrement a by one\ndecrement v by one\nprint b
"long long int fact(long int x) {\n\tif (x == 0 || x == 1) return 1;\n\treturn x * fact(x - 1);\n}\nint main() {\n\tlong int a, b;\n\tcin >> a;\n\tcin >> b;\n\tif (a > b) {\n\t\tcout << fact(b) << ""\n"";\n\t} else {\n\t\tcout << fact(a) << ""\n"";\n\t}\n\treturn 0;\n}"	create long long int fact(long int x)\nif x=0 or 1, return 1\nreturn x * fact(x - 1)\ncreate long int a, b\nread a\nread b\nif a > b\nprint fact(b) and a newline\nelse\nprint fact(a) and a newline
int fact(int n) {\n\tif (n == 1) return 1;\n\treturn n * fact(n - 1);\n}\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint output = fact(int(min(a, b)));\n\tcout << output << endl;\n\treturn 0;\n}	function fact (get int n, return int)\nif n is 1 return 1\nreturn n*fact(n-1)\na,b=int\nread a,b\noutput=fact(int(min(a,b)))\nprint output
const int maxn = 1e5 + 7;\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint c = min(a, b);\n\tlong long ans = 1;\n\tfor (int i = 1; i <= c; i++) ans *= i;\n\tcout << ans << endl;\n}	maxn = 1e5 + 7\ncreate int a and b\nread a, b\nset c to min of a and b\nans = 1\nfor i=1 to c inclusive, set ans to ans *i\nprint ans
long long fact(long long x) {\n\tif (x <= 1)\n\t\treturn 1;\n\telse\n\t\treturn x * fact(x - 1);\n}\nint main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tif (a > b) {\n\t\tcout << fact(b) << endl;\n\t} else\n\t\tcout << fact(a) << endl;\n\treturn 0;\n}	define function fact with long long as argument and returns a long long\nif x less than or equal to 1 then\nreturn 1 to the calling statement\nelse do the following\nreturn x * return value of fact(x-1) to the calling statement\ncreate long long a, b\nread a, b\nif a greater than b then\ncall fact(b) and print the return value\nelse do the following\ncall fact(a) and print the return value
unsigned long long fact(int n) {\n\tunsigned long long ans = 1;\n\twhile (n >= 1) {\n\t\tans *= n;\n\t\tn--;\n\t}\n\treturn ans;\n}\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tcout << fact(min(a, b)) << endl;\n\treturn 0;\n}	in function fact with argument integer n that returns an unsigned long long\nans = unsigned long long = 1\nwhile . >= 1\nans = ans * n\ndecrease n by 1\nreturn ans\na, b = integer\nread a, b\nprint call fact with argument of the lower value between a and b
long long ll = 1;\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a > b) a = b;\n\tfor (int i = 2; i <= a; i++) ll *= i;\n\tcout << ll << endl;\n\treturn 0;\n}	ll = long long with value of 1\na, b = integers\nread a and b\nif a is greater than b then set a to b\nfor i = 2 to a inclusive set ll to ll * i\nprint ll
int main() {\n\tlong long int a, b, x, i, k = 1;\n\tcin >> a >> b;\n\tx = min(a, b);\n\tfor (i = 1; i <= x; i++) { k = k * i; }\n\tcout << k << endl;\n\treturn 0;\n}	let a, b, x, i, k be long integers with k = 1\nread a, b\nx is equal to minimum of a and b\nfor i = 1 to x inclusive , k is equal to k * i\nprint k and newline
int main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long c = min(a, b);\n\tlong long ans = 1;\n\tfor (int i = 1; i <= c; i++) ans *= i;\n\tcout << ans << endl;\n}	a,b=long long\nread a,b\nc=min(a,b)\nans=1\nfor i=1 to c inclusive multiply ans by i\nprint ans
int main() {\n\tlong long a, b, c = 1, d;\n\tcin >> a >> b;\n\td = min(a, b);\n\tfor (int i = 1; i <= d; i++) c *= i;\n\tcout << c << endl;\n\treturn 0;\n}	a, b, c, d =integers with c = 1\nRead a, b\nset d to minimum value of a and b\nfor i = 1 to d exclusive, then set c to c * i\nprint c and a new line
int main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\ta = a < b ? a : b;\n\tb = 1;\n\tfor (int i = 2; i <= a; ++i) { b *= i; }\n\tcout << b << endl;\n\treturn 0;\n}	a, b = long long\nread a and b\nif a is less than b then set a to a otherwise set a to b\nset b to 1\nfor i = 2 to a inclusive set b to b * i\nprint b
int main() {\n\tint a, b;\n\twhile (cin >> a >> b) {\n\t\tint t;\n\t\tt = a;\n\t\tif (b < a) { t = b; }\n\t\tint i;\n\t\tint k = 1;\n\t\tfor (i = 1; i <= t; i++) { k *= i; }\n\t\tcout << k << endl;\n\t}\n}	declare integers a, b\nwhile read a, b\ndeclare integer t\nlet t be a\nif b is less than a, let t be b\ndeclare integer i\ndeclare integer k = 1\nfor i = 1 to t inclusive, let k be k * i\nprint k and newline
int main() {\n\tlong long int a, b;\n\tcin >> a >> b;\n\tlong long int i, f = 1;\n\tfor (i = 1;; i++) {\n\t\tf *= i;\n\t\tif (i == a || i == b) {\n\t\t\tcout << f << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	create long long ints a and b\nread a and b\nlet i and f = 1 be long long integers\nloop until break\nf = f * i\nif i is equal to a or i is equal to b\nprint f\nbreak
long long factorial(long long n) {\n\tif (n > 1)\n\t\treturn n * factorial(n - 1);\n\telse\n\t\treturn 1;\n}\nint main() {\n\tlong long a, b, ans;\n\tcin >> a >> b;\n\tans = min(a, b);\n\tcout << factorial(ans) << endl;\n}	in long long function factorial taking n = long long\nif n > 1\nreturn n * factorial of n-1\nelse\nreturn 1\na, b, ans = long long\nread a and b\nset ans to min of a and b\nprint factorial of ans
"long long facto(long long n) {\n\tif (n == 0 or n == 1) return 1;\n\tlong long fact[18] = {0};\n\tfact[0] = 1;\n\tfor (int i = 1; i <= n; i++) fact[i] = fact[i - 1] * i;\n\treturn fact[n];\n}\nint main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tcout << facto(min(a, b)) << ""\n"";\n\treturn 0;\n}"	"declare facto with long long n as argument, returning long long\nif n is 0 or n is 1, return 1 from function\ndeclare long long array fact size 18 = {0}\nlet fact[0] be 1\nfor i = 1 to n inclusive, let fact[i] be fact[i-1] * i\nreturn fact[n] from function\ndeclare long longs a, b\nread a and b\nprint result of run facto with minimum of a and b as argument, ""\n"""
int main() {\n\tint t, a, b, c, i = 0, d = 1, k = 1;\n\tcin >> a >> c;\n\ti = min(a, c);\n\tfor (t = 1; t <= i; t++) { d *= t; }\n\tcout << d << endl;\n\treturn 0;\n}	t, a, b, c, i, d, k =integers with i = 0, d = 1, k = 1\nRead a, c\nset i to minimum value of a and c\nfor t = 1 to i exclusive\nprint d and a new line
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tlong long answ = n;\n\t\tfor (int i = 1, a; i <= n; ++i) {\n\t\t\tcin >> a;\n\t\t\tansw += (long long)i * (a - 1);\n\t\t}\n\t\tcout << answ << endl;\n\t}\n\treturn 0;\n}	create integer n\nwhile read n is true\ncreate long long answ with answ = n\nfor i = 1, a to n inclusive, incrementing i\nread a\nincrement answ by long long casted i * ( a - 1 )\nprint answ print newline
"void Fast_Read_Out() {}\nvoid Random() {\n\tunsigned long long seed;\n\tasm(""rdtsc"" : ""=A""(seed));\n\tsrand(seed);\n}\nunsigned long long Time() {\n\tunsigned long long time = clock() / 1000.00;\n\treturn time;\n}\nconst long long inf = (1e9) + 123;\nlong long a[101];\nlong long dp[101];\nint main() {\n\tRandom();\n\tFast_Read_Out();\n\tlong long n;\n\tcin >> n;\n\tfor (long long i = 1; i <= n; i++) cin >> a[i];\n\tfor (long long i = 1; i <= n; i++) dp[i] = (a[i] - 1) * i + 1;\n\tlong long sum = 0;\n\tfor (long long i = 1; i <= n; i++) sum += dp[i];\n\tcout << sum << endl;\n}"	"function Fast_Read_Out\ndefine function Random\ndefine unsigned long long seed\ncall asm with arguments ""rdtsc"" : ""=A""(seed)\ninitialze random number generator with seed\nunsigned long long function Time\nunsigned long long time = clock() / 1000.00\nreturn time\ncreate constant long long inf with value (1e9) + 123\na is an array of long longs with size 101\ndp is an long long array with size 101\ninvoke function Random\ninvoke function Fast_Read_Out\ncreate long long n\nread n\nfor i = 1 to n inclusive read a[i]\nfor i = 1 to n inclusive set dp[i] = to (a[i] - 1) * i + 1\ncreate long long sum = 0\nfor i = 1 to n inclusive increase sum by dp[i]\nprint sum and a new line"
int main() {\n\tint n;\n\tcin >> n;\n\tlong long arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tlong long ans = 0;\n\tfor (int i = 0; i < n; i++) { ans = ans + (i + 1) * arr[i] - i; }\n\tcout << ans << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate long long array arr with size n\nfor i = 0 to n exclusive, read arr[i]\ncreate long long ans with ans = 0\nfor i = 0 to n exclusive, set ans to ans + ( i + 1 ) * arr[i] - i\nprint ans print newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long tot = 0;\n\tlong long input;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> input;\n\t\ttot += i * (input - 1);\n\t}\n\ttot += n;\n\tcout << tot << endl;\n\treturn 0;\n}	n is long long\nread n\ndeclare long long called tot = 0\ndeclare long long called input\nfor integer i = 1 to n inclusive\nread input\nincrease tot by i * (input - 1)\nincrease tot by n\nprint tot and a new line
int main() {\n\tlong long int n, s = 0, m;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> m;\n\t\ts += m + i * (m - 1);\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	create long long integers n, s, m with s = 0\nread n\nfor i = 0 to n exclusive\nread m\nincrement s by m + i * ( m - 1 )\nprint s print newline
long long n, ans = 0;\nint main() {\n\tcin >> n;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tlong long a;\n\t\tcin >> a;\n\t\tans += (a - 1) * (i - 1) + a;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n and ans are long longs with ans = 0\nread n\nfor i = 1 to n inclusive\ndeclare long long a\nread a\nincrease ans by (a - 1) * (i - 1) + a\nprint ans and a new line
int main() {\n\tint n;\n\tlong long a, ara[101], Ans;\n\tcin >> n;\n\tcin >> a;\n\tAns = a;\n\tfor (int i = 1; i < n; i++) {\n\t\tcin >> ara[i];\n\t\tAns += (ara[i] - 1) * (i + 1) + 1;\n\t}\n\tcout << Ans << endl;\n\treturn 0;\n}	declare integer n\ncreate long longs a and Ans and long long array ara with size 101\nread n\nread a\nassign value of a to Ans\nfor integer i = 1 to n exclusive\nread ara[i]\nincrease Ans by (ara[i] - 1) * (i + 1) + 1\nprint Ans
int main() {\n\tlong long n, a[101] = {0}, ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++) ans += (a[i] - 1) * i + 1;\n\tcout << ans << endl;\n}	n = long long, a = array of 101 long long filled with 0, ans = 0\nread n\nfor i=1 to n inclusive read a[i]\nfor i=1 to n inclusive sum (a[i]-1])*i+1 to ans\nprint ans
void desperate_optimization(int precision) {\n\tcout.setf(ios::fixed);\n\tcout.setf(ios::showpoint);\n\tcout.precision(precision);\n}\nvoid hora(int tc) {\n\tint n;\n\tcin >> n;\n\tlong long tot = 0;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\ttot += (i) * (x - 1) + 1;\n\t}\n\tcout << tot << '\n';\n}\nint main() {\n\tdesperate_optimization(10);\n\tint ntc = 1;\n\tfor (int tc = 1; tc <= ntc; tc++) hora(tc);\n\treturn 0;\n}	desperate_optimization is a void function with integer argument precision\ncout.setf(ios::fixed)\ncout.setf(ios::showpoint)\ncout.precision(precision)\nin the function hora with integer argument tc\ncreate integer n\nread n\ndeclare long long variable tot = 0\nfor long long i = 1 to n inclusive\ncreate long long x\nread x\nincrease tot by (i) * (x - 1) + 1\nprint tot and '\n'\ncall desperate_optimization with 10 as an argument\ndeclare integer variable ntc = 1\nfor integer tc = 1 to ntc inclusive, call hora of tc
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long a;\n\t\tcin >> a;\n\t\tans += (i + 1) * (a - 1) + 1;\n\t}\n\tcout << ans << endl;\n}	create long long n\nread n\ndeclare long long ans = 0\nfor integer i = 0 to n exclusive\ndeclare long long variable a\nread a\nincrease ans by (i + 1) * (a - 1) + 1\nprint ans and a new line
const int M = 100 + 10;\nlong long int a[M];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tlong long int ans = 0;\n\tfor (int i = 1; i <= n; i++) { ans = ans + (i - 1) * (a[i] - 1) + a[i]; }\n\tcout << ans << endl;\n\treturn 0;\n}	create constant integer M with M = 100 + 10\ncreate long long integer a with size M\ncreate integer n\nread n\nfor i = 1 to n inclusive, read a[i]\ncreate long long integer ans with ans = 0\nfor i = 1 to n inclusive, set ans to ans + (i - 1) * (a[i] - 1) + a[i]\nprint ans print newline
int main() {\n\tlong long a, b = 0, i, k;\n\tcin >> a;\n\tfor (i = 1; i <= a; i++) {\n\t\tcin >> k;\n\t\tif (i == 1 || k == 1) {\n\t\t\tb += k;\n\t\t} else {\n\t\t\tk *= i;\n\t\t\tk -= i - 1;\n\t\t\tb += k;\n\t\t}\n\t}\n\tcout << b << endl;\n}	declare long long variables a, b, i and k where b = 0\nread a\nfor i = 1 to a inclusive\nread k\nif i = 1 || k = 1\nincrease b by k\nelse\nmultiply k by i\ndecrease k by i - 1\nincrease b by k\nprint b and a new line
long long ans, n, a[101];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++) { ans = ans + a[i] * i + 1 - i; }\n\tcout << ans << endl;\n}	create long longs ans, n create long long array a with size 101\nread n\nfor i = 1 to n inclusive, read a[i]\nfor i = 1 to n inclusive, set ans to ans + a[i] * i + 1 - i\nprint ans print newline
int main() {\n\tint n;\n\tlong long arr[102];\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> arr[i]; }\n\tlong long sum = 0;\n\tfor (int i = 1; i <= n; i++) { sum += (arr[i] - 1) * i; }\n\tsum += n;\n\tcout << sum << endl;\n}	create integer n\ncreate long long array arr with size 102\nread n\nfor i = 1 to n inclusive, read arr[i]\ncreate long long sum with sum = 0\nfor i = 1 to n inclusive, increment sum by (arr[i]-1)*i\nincrement sum by n\nprint sum print newline
long long n, a[105], ans, cnt;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tans = a[n - 1];\n\tfor (int i = n - 2; i >= 0; i--) a[i] += a[i + 1] - 1, ans += a[i];\n\tcout << ans << endl;\n\treturn 0;\n}	create long longs, n, ans, cnt, create long long array a with size 105\nread n\nfor i = 0 to n exclusive, read a[i]\nset ans to a[n-1]\nfor i = n - 2 to 0 inclusive, decrementing i, increment a[i] by a[i + 1] - 1, increment ans by a[i]\nprint ans print newline
int main() {\n\tlong long n, a;\n\tcin >> n;\n\tlong long ans = 0;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\tans += (a - 1) * i + 1;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create long longs n and a\nread n\ncreate long long ans = 0\nfor long long i = 1 to n inclusive\nread a\nincrease ans by (a - 1) * i + 1\nprint ans
int main() {\n\tlong long a, b = 0, i, k;\n\tcin >> a;\n\tfor (i = 1; i <= a; i++) {\n\t\tcin >> k;\n\t\tif (i == 1 || k == 1) {\n\t\t\tb += k;\n\t\t} else {\n\t\t\tk *= i;\n\t\t\tk -= i - 1;\n\t\t\tb += k;\n\t\t}\n\t}\n\tcout << b << endl;\n}	create long longs a, b, i, k, with b = 0\nread a\nfor i = 1 to a inclusive\nread k\nif i is 1 or k is 1\nincrement b by k\nelse\nset k to k * i\ndecrement k by i - 1\nincrement b by k\nprint b print newline
unsigned long long a, i, k, n;\nint main() {\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\tk += (a - 1) * i;\n\t\tk++;\n\t}\n\tcout << k << endl;\n\treturn 0;\n}	let a,i,k,n be unsigned long integers\nread n\nfor i=1 to n inclusive\nread a\nk is equal to k + (a - 1) * i\nincrease k by 1\nprint k and endline
int main() {\n\tlong long n, a, ans;\n\tcin >> n >> a;\n\tans = a;\n\tfor (int i = 2; i <= n; i++) {\n\t\tcin >> a;\n\t\tans += 1 + (a - 1) * i;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare long longs n, a and ans\nread n and a\nset ans to a\nfor i = 2 to n inclusive\nread a\nincrease ans by 1 + (a - 1) * i\nprint ans and a new line
int t;\nlong long int a;\nlong long int sum;\nint main() {\n\twhile (cin >> t) {\n\t\tsum = 0;\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tcin >> a;\n\t\t\tsum = sum + (a - 1) * i + a;\n\t\t}\n\t\tcout << sum << endl;\n\t}\n\treturn 0;\n}	create interger t\ncreate long integer a\ncreate long integer sum\nwhile(t value is entered)\nset sum to 0\nfor(int i=0 to t(exclusive))\nread a\nadd (a-1) * i +a to sum\nprint out sum
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long total(0);\n\tfor (long p = 0; p < n; p++) {\n\t\tlong long m;\n\t\tcin >> m;\n\t\ttotal += (m - 1) * (p + 1) + 1;\n\t}\n\tcout << total << endl;\n\treturn 0;\n}	let n be a long integer\nread n\nlet total(0) be a long type integer\nfor ( long integer p=0 to n exclusive )\nlet m be a long integer\nread m\nlet the value of total is equal to total + (m - 1) * (p + 1) + 1\nprint total and newline
long long ans, n, a[105];\nint main() {\n\tcin >> n;\n\tfor (register long long i = 1; i <= n; i++) cin >> a[i];\n\tfor (register long long i = 1; i <= n; i++) ans = ans + a[i] * i + 1 - i;\n\tcout << ans << '\n';\n\treturn 0;\n}	create long longs ans, n, create long long array a with size 105\nread n\nfor i = 1 to n inclusive, read a[i]\nfor i = 1 to n inclusive, set ans to ans + a[i] * i + 1 - i\nprint ans print '\n'
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long total(0);\n\tfor (long p = 0; p < n; p++) {\n\t\tlong long m;\n\t\tcin >> m;\n\t\ttotal += (m - 1) * (p + 1) + 1;\n\t}\n\tcout << total << endl;\n\treturn 0;\n}	declare long long variable n\nread n\nlong long total = 0\nfor long = 0 to n exclusive\ncreate long long m\nread m\nincrease total by (m - 1) * (p + 1) + 1\nprint total
int main() {\n\tlong long n;\n\tlong long sum;\n\twhile (cin >> n) {\n\t\tsum = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tlong long m;\n\t\t\tcin >> m;\n\t\t\tsum += i * (m - 1) + 1;\n\t\t}\n\t\tcout << sum << endl;\n\t}\n}	create long long n\ncreate long long sum\nwhile reading n\nset sum to 0\nfor integer i = 1 to n inclusive\ndeclare long long m\nread m\nincrease sum by i * (m - 1) + 1\nprint sum
"long long abs(long long, long long);\nvoid solve() {\n\tlong long n, a, t = 0;\n\tcin >> n;\n\tfor (long long i = 1; i < n + 1; i++) {\n\t\tcin >> a;\n\t\tt += ((a - 1) * i + 1);\n\t}\n\tcout << t << ""\n"";\n}\nint main() {\n\tlong long TESTS = 1;\n\twhile (TESTS--) { solve(); }\n\treturn 0;\n}\nlong long abs(long long a, long long b) {\n\tif (a > b)\n\t\treturn a - b;\n\telse\n\t\treturn b - a;\n}"	"declare abs with long long, long long as arguments, returning long long\ndeclare solve with no arguments, returning void\ncreate long longs n, a, t, with t = 0\nread n\nfor i = 1 to n + 1 exclusive\nread a\nincrement t by ((a - 1) * i + 1)\nprint t print ""\n""\ncreate long long TESTS with TESTS = 1\nwhile decrement TESTS is true, run solve\ndeclare abs with long longs a, b as arguments, returning long long\nif a is greater than b\nreturn a - b from function\nelse\nreturn b - a from function"
const int INF = 0x3f3f3f3f;\nint a[105];\nint main() {\n\tlong long i, j, k, l = 0;\n\tlong long n, m;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> a[i], a[i]--;\n\tlong long s = n;\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i]) s += a[i] + a[i] * i;\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	create constant integer INF with value 0x3f3f3f3f\ncreate integer array a with 105 elements\ndeclare long long variables i, j, k and l where l = 0\ncreate long longs n and m\nread n\nfor i = 0 to n exclusive read a[i] and decrement it\ncreate long long s = n\nfor i = 0 to n exclusive\nif a[i], increment s by a[i] + a[i] * i\nprint s
int main() {\n\tint n;\n\tlong long int a[150];\n\tlong long int sum = 0;\n\twhile (cin >> n) {\n\t\tsum = 0;\n\t\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (i == 1) {\n\t\t\t\tsum += a[1];\n\t\t\t} else {\n\t\t\t\tsum = sum + (a[i] - 1) * i + 1;\n\t\t\t}\n\t\t}\n\t\tcout << sum << endl;\n\t}\n\treturn 0;\n}	create integer n\ndeclare long long integer array a with size 150\ndeclare long long integer variable sum = 0\nwhile reading n\nassign value of 0 to sum\nfor i = 1 to n inclusive read a[i]\nfor i = 1 to n inclusive\nif i = 1\nincrease sum by a[1]\nelse\nincrease sum by (a[i] - 1) * i + 1\nprint sum
int main() {\n\tint n;\n\tcin >> n;\n\tlong long a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tlong long sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tsum += a[i];\n\t\tsum += (a[i] - 1) * i;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	declare integer n\nread n\ndeclare long long array a with size n\nread a[i] n times\ndeclare long long variable sum = 0\nfor i = 0 to n exclusive\nincrease sum by a[i]\nincrease sum by (a[i] - 1) * i\nprint sum
int main() {\n\tint n, a[101];\n\tcin >> n;\n\tlong long ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tans += 1LL * (a[i] - 1) * (i - 1) + a[i];\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integer n and integer array a with size 101\nread n\ndeclare long long ans = 0\nfor i = 1 to n inclusive\nread a[i]\nincrease ans by 1LL * (a[i] - 1) * (i - 1) + a[i]\nprint ans
const int inf = 0x3f3f3f3f;\nconst int MAXN = 10005;\nconst int mod = 19260817;\nconst int INF = 0x7fffffff;\nlong long ans[101];\nint main() {\n\tint n, x;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> ans[i];\n\tlong long sum = 0;\n\tfor (int i = 1; i <= n; i++) sum += ans[i] * i - i + 1;\n\tcout << sum << endl;\n\treturn 0;\n}	assign value 0x3f3f3f3f to constant integer inf\nassign value 10005 to constant integer MAXN\nassign value 19260817 to constant integer mod\nassign value 0x7fffffff to constant integer INF\nans is an long long array with size 101\ncreate integers n and x\nread n\nfor i = 1 to n inclusive write input to ans[i]\ndeclare long long variable sum = 0\nfor i = 1 to n inclusive, increase sum by ans[i] * i - i + 1\nprint sum and a new line
"int main() {\n\tint arr[3][1005];\n\tint n, s;\n\tcin >> n >> s;\n\tfor (int i = 0; i < 2; i++) {\n\t\tfor (int j = 1; j <= n; j++) { cin >> arr[i][j]; }\n\t}\n\tint cek;\n\tif (arr[0][1] && (arr[0][s] || arr[1][s])) {\n\t\tcek = 1;\n\t\tif (arr[0][s] == 0) {\n\t\t\tcek = 0;\n\t\t\tfor (int i = s + 1; i <= n; i++) {\n\t\t\t\tif (arr[0][i] && arr[1][i]) cek = 1;\n\t\t\t}\n\t\t}\n\t} else\n\t\tcek = 0;\n\tcout << (cek ? ""YES"" : ""NO"") << endl;\n\treturn 0;\n}"	"arr is a new array of integers with size 3 by 1005\ndefine integers n and s\nread standard input to n and s\nin a for loop, change i from 0 to 2 exclusive incrementing i\nchange j from 1 to n inclusive in a loop and read input to arr[i][j] on each iteration\ncreate integer variable with name cek\nif arr[0][1] != 0 and (arr[0][s] != 0 or arr[1][s] != 0 )\nchange the value of cek to 1\nif arr[0][s] is equal to 0\nassign 0 to cek\nfor i from s + 1 to n inclusive incrementing i\nif arr[0][i] and arr[1][i] are both not 0, change the value of cek to 1\nelse\nchange the value of cek to 0\nprint ""YES"" if cek is not 0, otherwise print ""NO"""
"int main() {\n\tint n, m, a[1111], b[1111];\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (int i = 1; i <= n; i++) { cin >> b[i]; }\n\tif (a[1] == 0) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t}\n\tint flag = 0;\n\tif (a[m]) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tif (!b[m]) {\n\t\t\tcout << ""NO"" << endl;\n\t\t} else {\n\t\t\tfor (int i = m + 1; i <= n; i++) {\n\t\t\t\tif (a[i] && b[i]) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!flag) { cout << ""NO"" << endl; }\n\t\t}\n\t}\n\treturn 0;\n}"	"define new integers n and m, and arrays a and b with 1111 element\nread from the input to n and m\nread standard input to n elements of a, starting from the index 1\nread from the input to n items of b, starting from the index 1\nif a[1] is equal to 0\nprint ""NO"" to the standard output\nflag is a new integer variable with value 0\nif a[m] is not 0\nprint ""YES""\nelse\nif b[m] is 0\nprint ""NO""\nelse\nfor integer i = m + 1 to n inclusive\nif both a[i] and b[i] are not 0\nassign 1 to flag\nprint ""YES""\nif flag is false, print ""NO"""
"int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint a[n], b[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (int i = 0; i < n; i++) { cin >> b[i]; }\n\tif (a[0] == 0) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t} else if (a[s - 1] == 0 && b[s - 1] == 0) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t} else if (a[s - 1] == 1) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t} else if (a[s - 1] == 0 && b[s - 1] == 1) {\n\t\tint k = 0;\n\t\tfor (int i = s; i < n; i++) {\n\t\t\tif (a[i] == 1 && b[i] == 1) {\n\t\t\t\tk = 1;\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tif (k == 0) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}"	let n, s be integers\nread n, s\na = array of integers of length n , b = array of integers of length n\nfor i = 0 to n exclusive , read a[i]\nfor i = 0 to n exclusive , read b[i]\nif a[0] equals 0\nprint NO and newline\nelse if a[s - 1] equals 0 and b[s - 1] equals 0\nprint NO and newline\nelse if a[s - 1] equals 1\nprint YES and newline\nelse if a[s - 1] equals 0 and b[s - 1] equals 1\nthe integer value of k = 0\nfor i = s to n exclusive\nif a[i] equals 1 and b[i] equals 1\nk is equal to 1\nprint YES and newline\nif k equals 0\nprint NO and newline
"int n, s;\nbool a[1111], b[1111];\nint main() {\n\tcin >> n >> s;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (int i = 1; i <= n; i++) { cin >> b[i]; }\n\tif (!a[1]) {\n\t\tcout << ""NO"" << endl;\n\t} else if (a[1] && a[s]) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tint flag = 0;\n\t\tfor (int i = s + 1; i <= n; i++) {\n\t\t\tif (a[i]) {\n\t\t\t\tif (b[i] && b[s]) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (flag)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"n, s = int\na, b = bool array of size 1111 ach\nread n then s\nfor i = 1 to n inclusive read a[i]\nfor i = 1 to n inclusive read b[i]\nif not a[1]\nprint ""NO""\nelse if a[1] and a[s]\nprint ""YES""\nelse\nflag = int with flag = =\nfor i = s + 1 to n inclusive\nif a[i]\nif b[i] and b[s]\nset flag to 1\nbreak\nif flag\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tint N, S;\n\tcin >> N >> S;\n\t--S;\n\tint a[N], b[N];\n\tfor (int i = 0; i < N; ++i) cin >> a[i];\n\tfor (int i = 0; i < N; ++i) cin >> b[i];\n\tif (a[0] && a[S]) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int k = S + 1; k < N; ++k) {\n\t\tif (a[0] && a[k] && b[k] && b[S]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let N and S be integers\nread in N and S\ndecrement S\nlet a and b be arrays of integers of size N\nread in N values into a\nread in N values into b\nif a[0] and a[S] are true\nprint YES\nfor k = S + 1 to k < N\nif a[0] and a[k] and b[k] and b[S] are true\nprint YES\nprint NO
"int a[1005], b[1005];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (int i = 1; i <= n; i++) { cin >> b[i]; }\n\tif (a[1] == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else if (a[1] == 1 && a[m] == 1) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tif (b[m] == 0)\n\t\t\tcout << ""NO"" << endl;\n\t\telse {\n\t\t\tint bj = 0;\n\t\t\tfor (int i = m + 1; i <= n; i++) {\n\t\t\t\tif (a[i] == 1 && b[i] == 1) { bj = 1; }\n\t\t\t}\n\t\t\tif (bj) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t} else {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t}\n\t\t}\n\t}\n}"	"declare an arrays of ints a and b with 1005 elements\ndeclare new int variables n and m\nread n and m from the input\nread n elements into array a from the input, starting from the index 1\nread n elements into b, starting from the index 1\nif a[1] is equal to 0\nprint ""NO""\nelse if a[1] and a[m] are both equal to 1\nprint ""YES""\nelse\nif b[m] = 0\nprint ""NO"" to the output stream\nelse\ndeclare new integer variable bj with value 0\nin a for loop, change i from m + 1 to n inclusive\nset the value of bj to 1 if a[i] and b[i] are both = 1\nif bj is not 0\nprint ""YES"" to the standard output\nelse\nprint ""NO"""
"const int mx = 1000;\nint n, s;\nbool a[mx], b[mx];\nvoid solve() {\n\tcin >> n >> s;\n\tint t1 = 0, t2 = 0;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < n; i++) cin >> b[i];\n\tif (a[0] == 1) t1 = 1;\n\tif (a[s - 1] == 1 || b[s - 1] == 1)\n\t\tfor (int i = s - 1; i < n; i++)\n\t\t\tif (a[i] == 1 && b[i] == 1) {\n\t\t\t\tt2 = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\tif (t1 == 1 && (t2 == 1 || a[s - 1] == 1))\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n}\nint main() {\n\tsolve();\n\treturn 0;\n}"	"create constant integer mx = 1000\ndefine new integers n and s\ncreate bool arrays a and b with size mx\nin the function solve\nread input to n and s\ndeclare new int variables t1 and t2 = 0\nread n elements to the a\nread n elements into items of b\nif a[0] = 1, change the value of t1 to 1\nif a[s - 1] = 1 or b[s - 1] = 1\nin a for loop, change i from s - 1 to n exclusive incrementing i\nif values of a[i] and b[i] are both = 1\nset the value of t2 to 1\nbreak\nif t1 = 1 and (t2 = 1 or a[s - 1] = 1)\nprint ""YES\n""\nelse\nprint ""NO\n""\ncall method solve()"
"const int maxn = 1e5 + 5;\nint a[maxn], b[maxn];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int j = 1; j <= n; j++) cin >> b[j];\n\tif (a[1] == 0) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t}\n\tif (a[m] == 1) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = m; i <= n; i++)\n\t\tif (a[i] == 1 && b[i] == 1 && b[m] == 1) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let maxn be a constant integer 1e5 + 5\nlet a, b be integer arrays of size maxn\nn, m be integers\nread n, m\nfor integer i = 0 to n inclusive, read a[i]\nfor integer j = 0 to n inclusive, read b[j]\nif a[1] equal 0\nprint NO and newline\nif a[m] equal 1\nprint YES and endline\nfor integer i = m to n inclusive\nif a[i] ,b[i] ,b[m] all equal 1\nprint YES and endline\nprint NO and newline
"void solve() {\n\tlong long n, s;\n\tcin >> n >> s;\n\tlong long a[n], b[n];\n\tfor (long long i = 0; i < n; i++) cin >> a[i];\n\tfor (long long i = 0; i < n; i++) cin >> b[i];\n\tif (a[0] == 1) {\n\t\tif (a[s - 1] == 1)\n\t\t\tcout << ""YES\n"";\n\t\telse {\n\t\t\tlong long h = 0;\n\t\t\tfor (long long i = s; i < n; i++)\n\t\t\t\tif (a[i] == 1 && b[i] == 1) {\n\t\t\t\t\th = 2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (h == 2 && b[s - 1] == 1)\n\t\t\t\tcout << ""YES\n"";\n\t\t\telse\n\t\t\t\tcout << ""NO\n"";\n\t\t}\n\t} else\n\t\tcout << ""NO\n"";\n}\nint main() {\n\tlong long t = 1;\n\twhile (t--) { solve(); }\n\treturn 0;\n}"	create function solve\nlong long integer as n,s\nread n,s\nlong long integer as a[n],b[n]\ninput a[i]\ninput b[i]\nif a[0] is 1 then do the following\nif a[s - 1] is 1 then do the following\noutput YES\n\nelse\nlong long integer as ng long h = 0\nfor s to less than n do the following\nif a[i] and b[i] is 1 then do the following\nset h to 2\nbreak\nif h is 2 and b[s - 1] is 1 then do the following\noutput YES\n\nelse\noutput NO\n\nelse\noutput NO\n\nlong long integer as t = 1\nif t is true then run solve function
"int main() {\n\tlong long int n, s, a[1001], b[1001];\n\tcin >> n >> s;\n\tfor (long long int i = 1; i <= n; i++) cin >> a[i];\n\tfor (long long int i = 1; i <= n; i++) cin >> b[i];\n\tif (a[1] == 0) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t}\n\tif (a[s] == 1) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tbool flag = false;\n\tfor (long long int i = s + 1; i <= n; i++) {\n\t\tif (a[i] == 1 && b[i] == 1) {\n\t\t\tflag = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (flag == false) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t}\n\tif (b[s] == 1) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let n, s be long integers , a = array of integers of length 1001, b = array of integers of length 1001\nread n , s\nfor long integer i = 1 to n inclusive , read a[i]\nfor long integer i = 1 to n inclusive, read b[i]\nif a[1] equals 0\nprint NO and newline\nif a[s] equals 1\nprint YES and newline\nthe boolean value of flag = false\nfor long integer i = s + 1 to n inclusive\nif a[i] equals 1 and b[i] equals 1\nflag is equal to true\nstop\nif flag is equal to false\nprint NO and newline\nif b[s] equals 1\nprint YES and newline\nprint NO and newline
"int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint a[n + 1] = {0};\n\tint b[n + 1] = {0};\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++) cin >> b[i];\n\tif (a[1] == 0) {\n\t\tcout << ""NO\n"";\n\t\treturn 0;\n\t}\n\tif (a[s] == 1) {\n\t\tcout << ""YES\n"";\n\t\treturn 0;\n\t}\n\tfor (int i = s + 1; i <= n; i++) {\n\t\tif (a[i] == 1 && b[i] == 1 && b[s] == 1) {\n\t\t\tcout << ""YES\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO\n"";\n\treturn 0;\n}"	"make ints n and s\nread n and s\ncreate integer array a of size n + 1 with {0}\nmake int array b of size n + 1 with {0}\nfor i = 1 to n, read a[i]\nfor i = 1 to n, read b[i]\nif a[1] is equal to 0\nprint ""NO\n""\nif a[s] is equal to 1\nshow ""YES\n""\nfor i = s + 1 to n\nif a[i] is equal to 1 and b[i] is equal to 1 and b[s] is equal to 1\nshow ""YES\n""\ndisplay ""NO\n"""
"int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tvector<int> forward(n + 1, 0);\n\tvector<int> backward(n + 1, 0);\n\tfor (int i = 1; i <= n; i++) { cin >> forward[i]; }\n\tfor (int i = 1; i <= n; i++) { cin >> backward[i]; }\n\tif (forward[1] == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tif (forward[s] == 1) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tif (backward[s] == 1) {\n\t\t\t\tbool availabe = false;\n\t\t\t\tfor (int i = s + 1; i <= n; i++) {\n\t\t\t\t\tif (forward[i] == 1 && backward[i] == 1) {\n\t\t\t\t\t\tavailabe = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout << ((availabe) ? ""YES"" : ""NO"") << endl;\n\t\t\t} else {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"	"define new integers n and s\nread n and s from the input\nnew vector of integers forward with size = n + 1, filled with 0\ndeclare vector of integers called backward with n + 1 element filled with 0\nfor integer i = 1 to n inclusive, read input to forward[i]\nread n elements to backward, starting from the index 1\nif forward[1] = 0\nprint ""NO""\nelse\nif forward[s] = 1\nprint ""YES""\nelse\nif backward[s] is equal to 1\ndeclare boolean variable with name availabe and value false\nfor i from s + 1 to n inclusive incrementing i\nif forward[i] and backward[i] = 1\nassign true to availabe\nbreak the loop\nprint ""YES"" if availabe is true, print ""NO"" otherwise\nelse\nprint ""NO"""
"int a[10000], b[10000];\nbool ab = 0;\nint main() {\n\tint n, s, i, z = 1, x, c;\n\tcin >> n >> s;\n\tx = n + 1;\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tfor (i = 1; i <= n; i++) cin >> b[i];\n\tif (a[s] == 1 && a[1] == 1)\n\t\tab = 1;\n\telse\n\t\tfor (i = n; i >= 1; i--) {\n\t\t\tif (a[i] == 1 && b[i] == 1) {\n\t\t\t\tif (i >= s && b[s] == 1) ab = 1;\n\t\t\t}\n\t\t}\n\tif (a[1] == 0) ab = 0;\n\tif (ab == 1)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"make integer arrays a of size 10000 and b of size 10000\ncreate bool ab = 0\nmake ints n, s, i, z = 1, x, and c\nread n and s\nset x to n + 1\nfor i = 1 to n, read a[i]\nfor i = 1 to n, read b[i]\nif a[s] is equal to 1 and a[1] is equal to 1\nset ab to 1\nelse do\nfor i = n to 1 by decreasing by 1\nif a[i] is equal to 1 and b[i] is equal to 1\nif i is greater than s and b[s] is equal to 1, set ab to 1\nif a[1] is 0, set ab to 0\nif ab is equal to 1\ndisplay ""YES""\notherwise\noutput ""NO"""
"int main() {\n\tint n, s;\n\tint t1[100000], t2[100000];\n\tcin >> n >> s;\n\tfor (int i = 0; i < n; ++i) { cin >> t1[i]; }\n\tfor (int i = 0; i < n; ++i) { cin >> t2[i]; }\n\tif (t1[0] == 1) {\n\t\tif (t1[s - 1] == 1) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (t2[s - 1] == 1) {\n\t\t\tfor (int i = s; i < n; i++) {\n\t\t\t\tif (t1[i] == 1 && t2[i] == 1) {\n\t\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	n, s =integers\nt1, t2 = array of 100000 integers each\nRead n, s\nRead n values into array t1\nRead n values into array t2\nif t1[0] is equal to 1\nif t1[s - 1] is equal to 1\nprint YES and a new line\nif t2t[s - 1] is equal to 1\nfor i = s to n exclusive\nif t1[i] is 1 and t2[i] is 1\nprint YES and a new line\nprint NO and a new line
"int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint a[n + 1], b[n + 1];\n\tfor (int i = 1; i <= n; ++i) cin >> a[i];\n\tfor (int i = 1; i <= n; ++i) cin >> b[i];\n\tif (a[1] == 1) {\n\t\tif (a[s] == 1)\n\t\t\tcout << ""YES"" << endl;\n\t\telse if (b[s] == 1) {\n\t\t\tfor (int i = s + 1; i <= n; ++i) {\n\t\t\t\tif (a[i] == 1 && b[i] == 1) {\n\t\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << ""NO"" << endl;\n\t\t} else\n\t\t\tcout << ""NO"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let n and s be integers\nread in n and s\nlet a be an array of integers of size n + 1, let b be an array of integers of size n + 1\nread in n values into array a\nread in n values into array b\nif a[1] is equal to 1\nif a[s] is equal to 1\nprint YES\nelse if b[s] is equal to 1\nfor i = s + 1 to i <= n\nif a[i] is equal to 1 and b[i] is equal to 1\nprint YES\nprint NO\nor else\nprint NO\nor else\nprint NO
"int n;\nint ans = -1;\nint res = 0;\nint main() {\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1) res++;\n\t}\n\tif (res == n) {\n\t\tcout << n - 1 << endl;\n\t\treturn 0;\n\t}\n\tif (n == 1 && a[0] == 1) {\n\t\tcout << ""0"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int j = 0; j < n; j++) {\n\t\tfor (int k = 0; k < n; k++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\tif (l >= k && l <= j)\n\t\t\t\t\tcnt = cnt + (1 - a[l]);\n\t\t\t\telse\n\t\t\t\t\tcnt = cnt + a[l];\n\t\t\t}\n\t\t\tans = max(ans, cnt);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	let n be a integer\nthe integer value of ans = -1\nthe integer value of res = 0\nread n\na = array of integers of length n\nfor i = 0 to n exclusive\nread a[i]\nif a[i] is equal to 1 , increment res by 1\nif res is equal to n\nprint n - 1 and newline\nif n is equal to 1 and a[0] is equal to 1\nprint 0 and newline\nfor j = 0 to n exclusive\nfor k = 0 to n exclusive\nthe integer value of cnt = 0\nfor l = 0 to n exclusive\nif l >= k and l <= j\nincrement cnt by (1 - a[l])\nelse do the following\nincrement cnt by a[l]\nans is equal to maximum of ans and cnt\nprint ans and newline
"int n;\nint ans = -1;\nint res = 0;\nint main() {\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1) res++;\n\t}\n\tif (res == n) {\n\t\tcout << n - 1 << endl;\n\t\treturn 0;\n\t}\n\tif (n == 1 && a[0] == 1) {\n\t\tcout << ""0"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int j = 0; j < n; j++) {\n\t\tfor (int k = 0; k <= n; k++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int l = 0; l < n; l++) {\n\t\t\t\tif (l >= k && l <= j)\n\t\t\t\t\tcnt = cnt + !a[l];\n\t\t\t\telse\n\t\t\t\t\tcnt = cnt + a[l];\n\t\t\t}\n\t\t\tans = max(ans, cnt);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	create n\nans = -1\nres=0\nread n\ncreate int a[n]\nfor i=0 to n exclusive\nread a[i]\nif a[i] = 1, increment res\nif res=n\nprint n-1\nif n = 1 and a[0] = 1\nprint 0\nfor j=0 to n exclusive\nfor k=0 to n inclusive\ncnt=0\nfor l=0 to n exclusive\nif l >= k and l <= j\ncnt = cnt + !a[l]\nelse\nset cnt = cnt + a[l]\nset ans to max of ans and cnt\nprint ans
int main() {\n\tint max = 0, n, i, sum = 0, a[105], p;\n\tcin >> n;\n\tp = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t}\n\tif (sum == n) {\n\t\tcout << sum - 1 << endl;\n\t\treturn 0;\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] == 0)\n\t\t\tp++;\n\t\telse if (a[i] == 1 && p < 0)\n\t\t\tp = 0;\n\t\telse if (a[i] == 1 && p > 0)\n\t\t\tp--;\n\t\tif (max < p) max = p;\n\t}\n\tsum += max;\n\tcout << sum << endl;\n\treturn 0;\n}	let max = 0, n, i, sum = 0, a[105], p be ints\nread n\nset p to 0\nfor i = 0 to n exclusive\nread a at i\nincrement sum by a at i\nif sum = n\nprint sum - 1\nfor i = 0 to n exclusive\nif a [i] = 0\nincrement p\nelse if a[i] = 1 and p < 0\nreset p to 0\nelse if a[i] = 1 and p > 0\ndecrement p\nif max < p then set max to p\nincrement sum by max\nprint sum
int main() {\n\tint n, a, cnt_1 = 0, cnt_0 = 0, cnt_max0 = -1;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcnt_1++;\n\t\t\tif (cnt_0 > 0) { cnt_0--; }\n\t\t}\n\t\tif (a == 0) {\n\t\t\tcnt_0++;\n\t\t\tif (cnt_0 > cnt_max0) cnt_max0 = cnt_0;\n\t\t}\n\t}\n\tint ans = cnt_1 + cnt_max0;\n\tcout << ans << endl;\n\treturn 0;\n}	make ints n, a, cnt_1 = 0, cnt_0 = 0, and cnt_max0 = -1\nread n\nwhile n-- is truthy\nread a\nif a is equal to 1\nadd 1 to cnt_1\nif cnt_0 is greater than 0, subtract 1 from cnt_0\nif a is equal to 0\nadd 1 to cnt_0\nif cnt_0 is greater than cnt_max0, set cnt_max0 is equal to cnt_0\nmake integer ans = cnt_1 + cnt_max0\ndisplay ans
int cnt1[105], cnt0[105];\nint main() {\n\tint n;\n\tcin >> n;\n\tint a[n + 1];\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tcnt1[0] = 0;\n\tcnt0[0] = 0;\n\tint maxv = -100;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcnt1[i] = cnt1[i - 1] + a[i];\n\t\tcnt0[i] = i - cnt1[i];\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = i; j <= n; j++) {\n\t\t\tif ((cnt0[j] - cnt0[i - 1]) - (cnt1[j] - cnt1[i - 1]) + cnt1[n] > maxv) maxv = (cnt0[j] - cnt0[i - 1]) - (cnt1[j] - cnt1[i - 1]) + cnt1[n];\n\t\t}\n\t}\n\tcout << maxv << endl;\n\treturn 0;\n}	cnt1, cnt0 = int array of size 105 each\nn = int\nread n\na = int array of size n + 1\nfor i = 1 to n inclusive read a[i]\nset cnt1[0] to 0\nset cnt0[0] to 0\nmaxv = int with maxv = -100\nfor i = 1 to n inclusive\nset cnt1[i] to cnt1[i - 1] + a[i]\nset cnt0[i] to i - cnt1[i]\nfor i = 1 to n inclusive\nfor j = i to n inclusive\nif (cnt0[j] - cnt0[i - 1]) - (cnt1[j] - cnt1[i - 1]) + cnt1[n] > maxv set maxv to (cnt0[j] - cnt0[i - 1]) - (cnt1[j] - cnt1[i - 1]) + cnt1[n]\nprint maxv
int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tint cnt = 0;\n\tint def = -1;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tint a = 0, b = 0;\n\t\tfor (int j = i; j >= 0; j--) {\n\t\t\tif (arr[j] == 0)\n\t\t\t\ta++;\n\t\t\telse\n\t\t\t\tb++;\n\t\t\tdef = max(def, a - b);\n\t\t}\n\t\tif (arr[i] == 1) cnt++;\n\t}\n\tcout << cnt + def << endl;\n\treturn 0;\n}	n = integer\nread n\narr = array of integers of size n\nset cnt = 0\nset def = -1\nfor i = 0 to n exclusive\nread arr[i]\na, b = integers set a and b = 0\nfor j = i to 0 inclusive\nif arr[j] = 0\nincrement a\nelse\nincrement b\nset d = max of def and a-b\nif arr[i] = 1 increment cnt\nprint cnt + def
int a[1001] = {0};\nint main() {\n\tint n, c = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1) {\n\t\t\ta[i] = -1;\n\t\t\tc++;\n\t\t} else\n\t\t\ta[i] = 1;\n\t}\n\tint ans = a[0], maxx = a[0];\n\tfor (int i = 1; i < n; i++) {\n\t\tmaxx = max(a[i], maxx + a[i]);\n\t\tans = max(ans, maxx);\n\t}\n\tcout << c + ans << endl;\n}	the 1001th element of array a is equal to 0\nlet n, c be integers with c = 0\nread n\nfor i = 0 to n exclusive\nread a[i]\nif a[i] is equal to 1\na[i] = -1\nincrement c by 1\nelse do the following\na[i] is equal to 1\nlet ans, maxx be integers with ans = a[0], maxx = a[0]\nfor i = 1 to n inclusive\nmaxx = maximum of a[i] and maxx + a[i]\nans = maximum of ans and maxx\nprint c + ans and newline
int main() {\n\tint n, a, count1(0), extra0(0), extra0max(-1);\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcount1 += 1;\n\t\t\tif (extra0 > 0) { extra0 -= 1; }\n\t\t} else {\n\t\t\textra0 += 1;\n\t\t\tif (extra0 > extra0max) { extra0max = extra0; }\n\t\t}\n\t}\n\tcout << count1 + extra0max << endl;\n\treturn 0;\n}	let n, a, count1(0), extra0(0), extra0max(-1) be integers\nread n\nwhile n is decremented by 1\nread a\nif a is equal to 1\nincrement count1 by 1\nif extra0 is greater than 0 , decrement extra0 by 1\nelse do the following\nincrement extra0 by 1\nif extra0 is greater than extra0max , extra0max is equal to extra0\nprint count1 + extra0max and newline
"int main() {\n\tint a[105], n, ans = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < n; i++)\n\t\tfor (int j = 0; j <= i; j++) {\n\t\t\tint v = 0;\n\t\t\tfor (int k = 0; k < n; k++)\n\t\t\t\tif (k >= j && k <= i)\n\t\t\t\t\tv += !a[k];\n\t\t\t\telse\n\t\t\t\t\tv += a[k];\n\t\t\tans = max(ans, v);\n\t\t}\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	create int a[105], n, ans, set ans =0\nread n\nfor i=0 to n exclusive, read a[i]\nfor i=0 to n exclusive\nfor j=0 to i inclusive\nv=0\nfor k=0 to n exclusive\nif k >=j and k<= i\nset v=v+a[k]=0\nelse\nv= v+a[k]\nset ans to max of ans and v\nprint ans and a newline
int main() {\n\tint a[105];\n\tint n, ans = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) cin >> a[i];\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j <= i; j++) {\n\t\t\tint v = 0;\n\t\t\tfor (int k = 0; k < n; k++)\n\t\t\t\tif (k >= j && k <= i)\n\t\t\t\t\tv += !a[k];\n\t\t\t\telse\n\t\t\t\t\tv += a[k];\n\t\t\tans = max(ans, v);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	a = int array of size 105\nn, ans = int with ans = 0\nread n\nread n values into a\nfor i = 0 to n\nfor j = 0 to i inclusive\nv = int with v = 0\nfor k = 0 to n\nif k >= j and k <= i\nincrement v by not a[k]\nelse\nincrement v by a[k]\nset ans to max of ans, v\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tint cnt = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1) {\n\t\t\ta[i] = -1;\n\t\t\tcnt++;\n\t\t}\n\t\tif (a[i] == 0) { a[i] = 1; }\n\t}\n\tint gmax = INT_MIN, lmax = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tlmax += a[i];\n\t\tgmax = max(gmax, lmax);\n\t\tif (lmax < 0) { lmax = 0; }\n\t}\n\tcout << cnt + gmax << endl;\n}	create int n\nread n\ncreate vector int a(n)\ncnt =0\nfor i=0 to n exclusive\nread a[i]\nif a[i] = 1\na[i] = -1\nincrement cnt\nif a[i] = 0, a[i] = 1\nset gmax = INT_MIN, lmax = 0\nfor i=0 to n exclusive\nset lmax to lmax + a[i]\nset gmax = max(gmax, lmax)\nif lmax <0, lmax =0\nprint cnt + gmax
int main() {\n\tint n, a, count1(0), extra0(0), extra0max(-1);\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcount1 += 1;\n\t\t\tif (extra0 > 0) { extra0 -= 1; }\n\t\t} else {\n\t\t\textra0 += 1;\n\t\t\tif (extra0 > extra0max) { extra0max = extra0; }\n\t\t}\n\t}\n\tcout << count1 + extra0max << endl;\n\treturn 0;\n}	create ints n, a, count1(0), extra0(0), and extra0max(-1)\nread n\nwhile n-- is truthy\nread a\nif a is equal to 1\nadd 1 to count1\nif extra0 is greater than 0, subtract 1 from extra0\nelse do\nadd 1 to extra0\nif extra0 is greater than extra0max, set extra0max to extra0\nshow result of count1 + extra0max
const int N = 1e6 + 7;\nint main() {\n\tint n;\n\tint cnt = 0;\n\tint ans = 0;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = (int)(0); i <= (int)(n - 1); i++) {\n\t\tcin >> a[i];\n\t\tif (a[i])\n\t\t\ta[i] = -1, cnt++;\n\t\telse\n\t\t\ta[i] = 1;\n\t}\n\tint mx = INT_MIN;\n\tfor (int i = (int)(0); i <= (int)(n - 1); i++) {\n\t\tans += a[i];\n\t\tif (ans > mx) mx = ans;\n\t\tif (ans < 0) ans = 0;\n\t}\n\tcout << mx + cnt << '\n';\n}	declare constant integer N = 1e6+7\ndeclare integer n\ndeclare integer cnt = 0\ndeclare integer ans = 0\nread n\ndeclare integer array a size n\nfor i = 0 to integer casted ( n - 1 ) inclusive\nread a[i]\nif a[i] is true\nlet a[i] be -1, increment cnt\nelse\nlet a[i] be 1\ndeclare integer mx = INT_MIN\nfor i = 0 to integer casted ( n - 1 ) inclusive\nincrement ans by a[i]\nif ans is greater than mx, let mx be ans\nif ans less than 0, let ans be 0\nprint mx + cnt and '\n'
int main() {\n\tint n, a, count1(0), extra0(0), extra0max(-1);\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcount1 += 1;\n\t\t\tif (extra0 > 0) { extra0 -= 1; }\n\t\t} else {\n\t\t\textra0 += 1;\n\t\t\tif (extra0 > extra0max) { extra0max = extra0; }\n\t\t}\n\t}\n\tcout << count1 + extra0max << endl;\n\treturn 0;\n}	create ints n, a, count1(0), extra0(0), and extra0max(-1)\nread n\nwhile n-- is truthy\nread a\nif a is equal to 1\nadd 1 to count1\nif extra0 is greater than 0, set extra0 to extra0 - 1\nelse do\nset extra0 to extra0 + 1\nif extra0 is greater than extra0max, set extra0max to extra0\ndisplay the result of count1 + extra0max
int a[1000];\nint flip(int n, int i, int j) {\n\tint b[1000];\n\tfor (int i = 0; i < n; i++) b[i] = a[i];\n\tint count = 0;\n\tfor (int k = i; k <= j; k++) {\n\t\tif (b[k] == 0) {\n\t\t\tb[k] = 1;\n\t\t} else\n\t\t\tb[k] = 0;\n\t}\n\tfor (int k = 0; k < n; k++) {\n\t\tif (b[k] == 1) count++;\n\t}\n\treturn count;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tint max = -1;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i; j < n; j++) {\n\t\t\tint count = flip(n, i, j);\n\t\t\tif (count > max) max = count;\n\t\t}\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	let a be an integer of arrays of size 1000\ndefine function flip with takes in integers n, i, and j as arguments\nlet b be an integer of arrays of size 1000\niterate for n times, set b[i] to a[i] n times\nlet count be an integer and set its value to 0\nfor k = i iterate until k is less than or equal to j\nif b[k] is equal to 0\nset b[k] to 1\nor else\nset b[k] to 0\niterate for n times\nif b[k] is equal to 1, increment count\nreturn the value of count from the function\nlet n be an integer\nread in n\nread in a[i] n times\nlet max be an integer and set its value to -1\niterate for n times\nfor j = i iterate while j is less than n\nlet count be an integer and set its value to flip(n, i, j)\nif count is greater than max, set max to count\nprint max
int main() {\n\tint n, x, one_cnt = 0, len_max = 0, len_cur = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> x;\n\t\tif (x == 0) {\n\t\t\tif (++len_cur > len_max) len_max = len_cur;\n\t\t} else {\n\t\t\tif (--len_cur < 0) len_cur = 0;\n\t\t\tone_cnt++;\n\t\t}\n\t}\n\tcout << (one_cnt + (len_max == 0 ? -1 : len_max)) << endl;\n\treturn 0;\n}	create ints n, x, one_cnt = 0, len_max = 0, and len_cur = 0\nread n\nfor i = 0 to n exclusive\nread x\nif x is equal to 0\nif ++len_cur is greater than len_max, set len_max is equal to len_cur\nelse do\nif --len_cur is less than 0, set len_cur to 0\nadd 1 to one_cnt\ndisplay (one_cnt + (len_max == 0 ? -1 : len_max))
int main() {\n\tint n, a[101], x, mx = 0;\n\ta[0] = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> x;\n\t\ta[i] = a[i - 1] + x;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = i; j <= n; j++) mx = max(a[n] + j - i + 1 - 2 * (a[j] - a[i - 1]), mx);\n\tcout << mx << endl;\n\treturn 0;\n}	declare new ints n, x and mx where mx = 0, and an int array a with size 101\nchange a[0] to 0\nread n\nchange i from 1 to n inclusive in a for loop\nread input to x\nassign a[i - 1] + x to a[i]\nfor integer i = 1 to n inclusive\nin a for loop, change j from i to n inclusive, assigning the new value = max of a[n] + j - i + 1 - 2 * (a[j] - a[i - 1]) and mx to mx on each iteration\nprint mx
int main() {\n\tint n;\n\tint num[100];\n\tint a[100];\n\tcin >> n;\n\tint count = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> num[i];\n\t\tif (num[i] == 1) {\n\t\t\ta[i] = -1;\n\t\t\t++count;\n\t\t} else {\n\t\t\ta[i] = 1;\n\t\t}\n\t}\n\tint max = -2;\n\tint sum = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tsum += a[i];\n\t\tif (sum > max) { max = sum; }\n\t\tif (sum < 0) { sum = 0; }\n\t}\n\tcout << max + count << endl;\n\treturn 0;\n}	declare integer n\ndeclare integer array num size 100\ndeclare integer array a size 100\nread n\ndeclare integer count = 0\nfor i = 0 to n exclusive\nread num[i]\nif num[i] is 1\nlet a[i] be -1\nincrement count\nelse\nlet a[i] be 1\ndeclare integer max = -2\ndeclare integer sum = 0\nfor i = 0 to n exclusive\nincrement sum by a[i]\nif sum is greater than max, let max be sum\nif sum is less than 0, let sum be 0\nprint max + count and newline
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tlong long t = n / k;\n\tif (t % 2) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	let n, k be long integers\nread n, k\nlet t be a long integer with t = n / k\nif t modulo 2 is true\nprint YES and newline\nelse do the following\nprint NO and newline
"long long n, m;\nint main() {\n\tcin >> n >> m;\n\tif (n / m % 2) {\n\t\tcout << ""YES\n"";\n\t} else\n\t\tcout << ""NO\n"";\n}"	"declare long longs n and m\nread n and m\nif n / m % 2 != 0\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else\n\t\tcout << ""YES"" << endl;\n\treturn 0;\n}"	create long long n, k\nprint n, k\nif n/k is even\nprint NO\nelse\nprint YES
"int main() {\n\tlong long n, k, x;\n\tcin >> n >> k;\n\tx = n / k;\n\tif (x % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	"n, k, x = long long\nread n then k\nset x to n / k\nif x is even\nprint ""NO""\nelse\nprint ""YES"""
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 != 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	n, k = long long\nread n, k\nif n / k is odd\nprint YES\nelse\nprint NO
"int main() {\n\tlong long int n;\n\tlong long int k;\n\tcin >> n;\n\tcin >> k;\n\tif (((n / k) % 2) == 1) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"declare long long int variable n\ncreate long long int k\nread n\nread input to k\nif (n / k) is odd\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	"create long longs n and k\nread n and k\nif (n / k) is even\nprint ""NO""\nelse\nprint ""YES"""
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n / k & 1) {\n\t\tcout << ""YES"" << '\n';\n\t} else {\n\t\tcout << ""NO"" << '\n';\n\t}\n\treturn 0;\n}"	n, k = long long\nread n, k\nif the result of n / k ends in a 1 in binary\nprint YES\nelse\nprint NO
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tcout << ((n / k) & 1 ? ""YES"" : ""NO"") << '\n';\n\treturn 0;\n}"	n, k = long long\nread n, k\nprint YES if the last bit of n / k ends in 1 else print NO
"int main() {\n\tlong long n, x;\n\tcin >> n >> x;\n\tif ((n / x) % 2 == 0)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	n, x =integers\nRead n and x\nif (n / x) modulo 2 is 0\nprint NO and a new line\nelse do the following\nprint YES and a new line
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n / k % 2 != 0) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	"create long longs n and k\nread input to n and k\nif n / k is odd\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 == 0)\n\t\tcout << ""NO\n"";\n\telse\n\t\tcout << ""YES\n"";\n}"	n, k =integers\nRead n and k\nif (n / k) modulo 2 is 0\nprint NO and a new line\nelse do the following\nprint YES and a new line
"int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tlong long th = n / k;\n\tif (th % 2 == 1) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	n, k =integers\nRead n and k\nth = integer, set to n / k\nif th is odd\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tlong long int st, cross, t_turn;\n\tcin >> st >> cross;\n\tt_turn = st / cross;\n\tif (!(t_turn & 1))\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	let st, cross, t_turn be long integers\nread st , cross\nthe value of t_turn is equal to st / cross\nif not t_turn & 1\nprint NO and newline\nelse do the following\nprint YES and newline
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tlong long count = n / k;\n\tif (count % 2 == 0)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	"declare long long variables n and k\nread n and k\ndeclare long long variable count = n / k\nif count is even\nprint ""NO""\nelse\nprint ""YES"""
"int main() {\n\tunsigned long long int k, n;\n\tcin >> n >> k;\n\tif ((n / k) & 1) {\n\t\tcout << ""YES"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare unsigned long long int variables k and n\nread n and k\nif (n / k) & 1 is not 0\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tcout << ((n / k) & 1 ? ""YES"" : ""NO"") << '\n';\n\treturn 0;\n}"	"create long long variables n and k\nread n and k\nprint the result of ((n / k) & 1 ? ""YES"" : ""NO"")"
"long long n, k, x;\nint main() {\n\tcin >> n >> k;\n\tx = n / k;\n\tif (x % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	"n, k, x = long long\nread n then k\nset x to n / k\nif x is even\nprint ""NO""\nelse\nprint ""YES"""
"int main() {\n\tlong long int n, k, s;\n\twhile (cin >> n >> k) {\n\t\ts = n / k;\n\t\tif (s % 2 == 0)\n\t\t\tcout << ""NO"" << endl;\n\t\telse\n\t\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	"n,k,s=long long int\nwhile read n,k\ns=n/k\nif s is even\nprint ""NO""\nelse\nprint ""YES"""
"int main() {\n\tlong long n, k, x;\n\tcin >> n >> k;\n\tx = n / k;\n\tif (x % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	"create long longs n, k and x\nread input to n and k\nassign n / k to x\nif x is even\nprint ""NO""\nelse\nprint ""YES"""
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n}"	"create long longs n, k\nread n read k\nif ( n / k ) % 2 is 0\nprint ""NO"" print newline\nelse\nprint ""YES"" print newline"
"long long n, k, x;\nint main() {\n\tcin >> n >> k;\n\tx = n / k;\n\tif (x % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	n, k, x = integers\nRead n and k\nset x to n / k\nif x is even\nprint NO and a new line\nelse do the following\nprint YES and a new line
"int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif ((n / m) % 2 == 1)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"declare long longs n and m\nread n and m\nif n / m is odd\nprint ""YES\n""\nelse\nprint ""NO\n"""
"void READ(string INPUT = ""NO"", string OUTPUT = ""NO"") {\n\tif (INPUT != ""NO"") freopen(INPUT.c_str(), ""r"", stdin);\n\tif (OUTPUT != ""NO"") freopen(OUTPUT.c_str(), ""w"", stdout);\n}\nint main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tcout << ((n / k) % 2 ? ""YES"" : ""NO"") << ""\n"";\n\treturn 0;\n}"	"declare READ with strings INPUT, OUTPUT with INPUT default ""NO"", OUTPUT default ""NO"" as arguments, returning void\nif INPUT is not ""NO"", resuse stream stdin to open c string of INPUT in read mode\nif OUTPUT is not ""NO"", reuse stream stdout to open c string of OUTPUT in write mode\ncreate long longs n, k\nread n read k\nprint ""YES"" if ( n / k ) % 2 is true, else ""NO"", print ""\n"""
"int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 == 0)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	n, k =integers\nRead n and k\nif (n / k) modulo 2 is 0\nprint NO and a new line\nelse do the following\nprint YES and a new line
"int main() {\n\tlong long int n, k, m;\n\tcin >> n >> k;\n\tm = 2 * k;\n\tif (n % m >= k) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}"	"create long long integers n, k, m\nread n read m\nset m to 2 * k\nif n % m is greater than or equal to k\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 == 0)\n\t\tcout << ""NO\n"";\n\telse\n\t\tcout << ""YES\n"";\n\treturn 0;\n}"	n, k =integers\nRead n and k\nif (n / k) modulo 2 is 0\nprint NO and a new line\nelse do the following\nprint YES and a new line
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tcout << (((n / k) & 1LL) == 0 ? ""NO\n"" : ""YES\n"");\n\treturn 0;\n}"	"declare long longs n and k\nread n and k\nprint ""NO\n"" if (((n / k) & 1LL) == 0 or ""YES\n"" otherwise"
"int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tlong long int h;\n\th = n / k;\n\tif (h % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n}"	"define integers n, k\nread n, k\ndefine integer h\nset h to quotient of n, k\nif h is even\nprint ""NO"" and a newline\nelse\nprint ""YES"" and newline"
"void solve() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tlong long int pre = n / k;\n\tif (pre % 2 != 0) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}\nint main() {\n\tlong long int t = 1;\n\twhile (t--) { solve(); }\n\treturn 0;\n}"	"in function solve\nn, k = long long int\nread n then k\npre = long long int with pre = n / k\nif pre is not even\nprint ""YES""\nelse\nprint ""NO""\nt = long long int with t = 1\nloop t times call solve"
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 == 0)\n\t\tcout << ""NO"" << endl;\n\telse {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	create long long n and k\nread n, k\nif n/k is even\nprint NO\nelse\nprint YES and a newline
"const int N = 1e5 + 10, INF = 1e9 + 7;\nint main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tcout << ((n / k) % 2 ? ""YES"" : ""NO"") << '\n';\n\treturn 0;\n}"	"create constant integer N = 1e5 + 10 and INF = 1e9 + 7\ncreate long long integers n and k\nread n and k\nprint ""YES"" if (n / k) % 2 is true or ""NO"" if not"
"int main() {\n\tunsigned long long n, k, res;\n\tcin >> n >> k;\n\tres = n / k;\n\tif (res & 1)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"create unsigned long longs n, k and res\nread n and k\nassign n / k to res\nif res & 1 = 1\nprint ""YES\n""\nelse\nprint ""NO\n"""
"long long n, k, x;\nint main() {\n\tcin >> n >> k;\n\tx = n / k;\n\tif (x % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	"declare long long variables n, k and x\nread n and k\nset x to n / k\nif x is even\nprint ""NO""\nelse\nprint ""YES"""
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tputs((n / k) & 1 ? ""YES"" : ""NO"");\n}"	n, k =integers\nRead n and k\nprint YES if n / k bitwise and 1 is true, if ok is false print NO and a new line
"int main() {\n\tlong long int x, a, b;\n\tcin >> a >> b;\n\tx = a / b;\n\tif (x % 2 == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	"declare long long int variables x, a and b\nread input to a and b\nchange x to a / b\nif x is even\nprint ""NO""\nelse\nprint ""YES"""
"long long n, m;\nint main() {\n\tcin >> n >> m;\n\tif (n / m % 2) {\n\t\tcout << ""YES\n"";\n\t} else\n\t\tcout << ""NO\n"";\n}"	"create long longs n and m\nread n and m\nif n / m % 2 is true\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tlong long turnsDone = n / k;\n\tint remaining = n % k;\n\tif (turnsDone % 2 == 1)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	create long long n, k\nprint n, k\nset turnsDone = n / k\nassign n mod k to remaining\nif turnsDone mod 2 = 1\nprint YES and a newline\nelse\nprint NO and a newline+
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif ((n / k) % 2 != 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create long longs n, k\nread n read k\nif ( n / k ) % 2 is not 0\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n / k % 2 != 0) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	"let long long ints n and k\nread n and k\nif n / k modulo 2 is not equal to 0\nprint ""YES\n""\nelse\nprint ""NO\n"""
int main() {\n\tlong long n, m, green, blue, yellow, foo, foobar;\n\tcin >> n >> m >> yellow >> green >> blue;\n\tfoobar = (blue * 3) + (green);\n\tfoo = (yellow * 2) + (green);\n\tcout << max(0LL, foobar - m) + max(0LL, foo - n) << endl;\n}	create long longs n, m, green, blue, yellow, foo, foobar\nread n read m read yellow read green read blue\nset foobar to ( blue * 3 ) + green\nset foo to ( yellow * 2 ) + green\nprint maximum of ( 0LL and foobar - m ) + maximum of ( 0LL and foo - n ) print newline
int main() {\n\tlong long yc, bc, yb, gb, bb;\n\tcin >> yc >> bc;\n\tcin >> yb >> gb >> bb;\n\tlong long yelo, blu;\n\tyelo = yb * 2 + gb;\n\tblu = 3 * bb + gb;\n\tyelo = yelo - yc;\n\tblu = blu - bc;\n\tif (yelo >= 0 && blu >= 0) {\n\t\tcout << yelo + blu << endl;\n\t} else if (yelo < 0 && blu >= 0) {\n\t\tcout << blu << endl;\n\t} else if (yelo >= 0 && blu < 0) {\n\t\tcout << yelo << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}	create long longs yc, bc, yb, gb, bb\nread yc read bc\nread yb read gb read bb\ncreate long long yelo, blu\nset yelo to yb * 2 + gb\nset blu to 3 * bb + gb\nset yelo to yelo - yc\nset blu to blu - bc\nif yelo is greater than or equal to 0 and blu is greater than or equal to 0\nprint yelo + blu print newline\nelse if yelo is less than 0 and blu is greater than or equal to 0\nprint blu print newline\nelse if yelo is greater than or equal to 0 and blu is less than 0\nprint yelo print newline\nelse\nprint 0 print newline
int main() {\n\tlong long int y, b, ye, gr, bl, a, c, ans = 0;\n\tcin >> y >> b >> ye >> gr >> bl;\n\ta = (2 * ye) + gr;\n\tc = (3 * bl) + gr;\n\tif (y - a < 0) { ans += a - y; }\n\tif (b - c < 0) { ans += c - b; }\n\tcout << ans << endl;\n}	create long long integers y, b, ye, gr, bl, a, c, ans with ans = 0\nread y read b read ye read gr read bl\nset a to ( 2 * ye ) + gr\nset c to ( 3 * bl ) + gr\nif y - a is less than 0, increment ans by a - y\nif b - c is less than 0, increment ans by c - b\nprint ans print newline
int main() {\n\tlong long int a = 0, b = 0;\n\tcin >> a >> b;\n\tlong long int x = 0, y = 0, z = 0;\n\tcin >> x >> y >> z;\n\tlong long int Y = 0, B = 0, t = 0;\n\tY = (2 * x) + (1 * y);\n\tB = (1 * y) + (3 * z);\n\tif (Y > a) {\n\t\tY = Y - a;\n\t} else {\n\t\tY = 0;\n\t}\n\tif (B > b) {\n\t\tB = B - b;\n\t} else {\n\t\tB = 0;\n\t}\n\tt = Y + B;\n\tcout << t << endl;\n\treturn 0;\n}	set a, b = 0 as large integer\nread a and b\nset x, y, z = 0 as large integer\nread x y x\nset Y, B, t = 0 as large integer\nset Y = (2*x) + (1*y)\nset B = (1*Y) + (3*z)\nif Y > a\nY = Y - a\nelse\nY = 0\nif B > b\nB = B - b\nelse\nB = 0\nt = Y + B\nprint t
"int main() {\n\tlong long a, b, x, y, z;\n\tcin >> a >> b >> x >> y >> z;\n\tlong long yellow = 2 * x + y;\n\tlong long blue = y + 3 * z;\n\tlong long res = 0;\n\tif (a < yellow) res += (yellow - a);\n\tif (b < blue) res += (blue - b);\n\tcout << res << ""\n"";\n\treturn 0;\n}"	let a, b, x, y, z = long long\nread a,b,x,y,z\nlet yellow = long long = 2*x+y\nlet blue = long long = y+3*z\nres = long long = 0\nif a is less than yellow, res = res + yellow - a\nif b is less than blue, res = res + blue - b\nprint res
int main() {\n\tlong long int n, t, m, k;\n\tlong long int x, y, z;\n\tlong long int a, b;\n\tcin >> a >> b;\n\tcin >> x >> y >> z;\n\tlong long int yn, bn;\n\tyn = (x * 2 + y);\n\tlong long int dif = yn - a;\n\tlong long int need = 0;\n\tif (dif >= 0) need += dif;\n\tbn = (y + z * 3);\n\tdif = (bn - b);\n\tif (dif >= 0) need += dif;\n\tcout << need << endl;\n\treturn 0;\n}	declare long long integer variables n, t, m and k\ndeclare long long integer variables x, y and z\ndeclare long long integer variables a and b\nread a and b\nread x, y and z\ndeclare long long integer variables yn and bn\nyn = (x * 2 + y)\ndeclare long long integer variable dif = yn - a\ndeclare long long integer need = 0\nif dif >= 0, add dif to need\nbn = (y + z * 3)\nassign value of (bn - b) to dif\nif dif >= 0, add dif to need\nprint need
const int N = 1e6 + 10;\nconst int mod = 998244353;\nlong long a, b, x, y, z, q, p, r;\nint main() {\n\tcin >> a >> b >> x >> y >> z;\n\tq += 2 * x;\n\tq += y;\n\tp += y;\n\tp += 3 * z;\n\tcout << max(r, q - a) + max(r, p - b) << endl;\n}	let N be a constant integer set to 1e6 + 10\nlet mod be a constant integer set to 998244353\na, b, x, y, z, q, p, r = long longs\nread a, b, x, y and z\nincrement q by 2 * x\nincrement q by y\nincrement p by y\nincrement p by 3 * z\nprint max(r, q - a) + max(r, p - b)
long long n, m, a, b, c;\nlong long Yellow, Blue, ans;\nint main() {\n\tcin >> n >> m >> a >> b >> c;\n\tYellow = a * 2 + b;\n\tBlue = b + c * 3;\n\tif (Yellow > n) ans += Yellow - n;\n\tif (Blue > m) ans += Blue - m;\n\tcout << ans << endl;\n\treturn 0;\n}	let n, m, a, b, c be long integers\nlet Yellow, Blue, ans be long integers\nread n,m,a,b,c\nYellow is equal to a * 2 + b\nBlue is equal to b + c * 3\nif (Yellow is greater than n) , ans = ans + Yellow - n\nif (Blue is greater than m) , ans = ans + Blue - m\nprint ans and newline
int main() {\n\tlong long int a, b, x, y, z, c, d, sum;\n\tcin >> a >> b;\n\tcin >> x >> y >> z;\n\tx = x * 2 + y;\n\tz = z * 3 + y;\n\tif (a > x)\n\t\tc = 0;\n\telse\n\t\tc = x - a;\n\tif (b > z)\n\t\td = 0;\n\telse\n\t\td = z - b;\n\tcout << c + d << endl;\n\treturn 0;\n}	create long long integers a, b, x, y, z, c, d, sum\nread a read b\nread x read y read z\nset x to x * 2 + y\nset z to z * 3 + y\nif a is greater than x\nset c to 0\nelse\nset c to x - a\nif b is greater than z\nset d to 0\nelse\nset d to z - b\nprint c + d print newline
long long a, b, x, y, z, na, nb, zer = 0;\nint main() {\n\tcin >> a >> b >> x >> y >> z;\n\tna = x * 2 + y;\n\tnb = z * 3 + y;\n\tcout << max(max(na - a, zer) + max(nb - b, zer), zer) << '\n';\n}	create long long a, b, x, y, z, na, nb, zer with zer = 0\nread a read b read x read y read z\nset na to x * 2 + y\nset nb to z * 3 + y\nprint maximum of ( maximum of ( na - a and zer ) + maximum of ( nb - b and zer ) and zer ) print '\n'
int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tlong long ans = max((long long)0, b + (2 * a) - n);\n\tans += max((long long)0, b + (3 * c) - m);\n\tcout << ans << endl;\n}	declare long longs n and m\nread n and m\nlet a, b and c be long longs\nread a, b and c\ncreate long long ans with value = max of 0 and b + (2 * a) - n\nincrease ans by max of 0 and b + (3 * c) - m\nprint ans and a new line
int main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long x, y, z;\n\tcin >> x >> y >> z;\n\tlong long ans = 0;\n\tif (y > a) {\n\t\tans += y - a;\n\t\ta = 0;\n\t} else {\n\t\ta -= y;\n\t}\n\tif (y > b) {\n\t\tans += y - b;\n\t\tb = 0;\n\t} else {\n\t\tb -= y;\n\t}\n\tif (x * 2 > a) ans += x * 2 - a;\n\tif (z * 3 > b) ans += z * 3 - b;\n\tcout << ans << endl;\n}	create long longs a, b\nread a read b\ncreate long longs x, y, z\nread x read y read z\ncreate long long ans with ans = 0\nif y is greater than a\nincrement ans by y - a\nset a to 0\nelse\ndecrement a by y\nif y is greater than b\nincrement ans by y - b\nset b to 0\nelse\ndecrement b by y\nif x * 2 is greater than a, increment ans by x * 2 - a\nif x * 3 is greater than b, increment ans by z * 3 - b\nprint ans print newline
int main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long x, y, z;\n\tcin >> x >> y >> z;\n\tlong long reala = 2 * x + y, realb = y + 3 * z;\n\tcout << max(reala - a, 0ll) + max(realb - b, 0ll) << endl;\n}	create long longs a, b\nread a read b\ncreate long longs x, y, z\nread x read y read z\ncreate long longs reala, realb with reala = 2 * x + y, realb = y + 3 * z\nprint maximum of ( reala - a and 0ll ) + maximum of ( realb - b and 0ll ) print newline
int main() {\n\tlong long a, b, ans = 0;\n\tcin >> a >> b;\n\tlong long a1, a2, a3;\n\tcin >> a1 >> a2 >> a3;\n\ta -= a1 * 2;\n\ta -= a2;\n\tb -= a2;\n\tb -= 3 * a3;\n\tif (a < 0) ans += a;\n\tif (b < 0) ans += b;\n\tcout << -ans << endl;\n\t;\n}	create long longs a, b and ans, with ans = 0\nread a and b\nlet a1, a2 and a3 be long longs\nread a1, a2 and a3\ndecrease a by a1 * 2\ndecrease a by a2\ndecrease b by a2\ndecrease b by 3 * a3\nif a is less than 0, increase ans by a\nif b is less than 0, increase ans by b\nprint negative ans and a new line\n;
long long n, m, a, b, c;\nlong long Yellow, Blue, ans;\nint main() {\n\tcin >> n >> m >> a >> b >> c;\n\tYellow = a * 2 + b;\n\tBlue = b + c * 3;\n\tif (Yellow >= n && Blue >= m)\n\t\tans += Yellow + Blue - n - m;\n\telse if (Yellow < n && Blue > m)\n\t\tans += Blue - m;\n\telse if (Yellow > n && Blue < m)\n\t\tans += Yellow - n;\n\tcout << ans << endl;\n\treturn 0;\n}	n, m, a, b and c are long longs\ndeclare long longs Yellow, Blue and ans\nread n, m, a, b and c\nYellow = a * 2 + b\nBlue = b + c * 3\nif Yellow >= n and Blue >= m\nincrease ans by Yellow + Blue - n - m\nelse if Yellow < n and Blue is greater than m\nincrease ans by Blue - m\nelse if Yellow > n and Blue is less than m\nincrease ans by Yellow - n\nprint ans and a new line
int main() {\n\tlong long i, c = 0, a, b, x, y, z;\n\tcin >> a >> b >> x >> y >> z;\n\ta -= x * 2;\n\ta -= y;\n\tb -= y;\n\tb -= 3 * z;\n\tif (a < 0) c += abs(a);\n\tif (b < 0) c += abs(b);\n\tcout << c << endl;\n\treturn 0;\n}	create long longs i, c, a, b, x, y, z, with c = 0\nread a read b read x read y read z\ndecrement a by x * 2\ndecrement a by y\ndecrement b by y\ndecrement b by 3 * z\nif a is less than 0, increment c by absolute value of a\nif b is less than 0, increment c by absolute value of b\nprint c print newline
int main() {\n\tlong long a, b, x, y, z;\n\tcin >> a >> b >> x >> y >> z;\n\tlong long ans = 0;\n\tif (y <= a)\n\t\ta -= y;\n\telse {\n\t\tans += (y - a);\n\t\ta = 0;\n\t}\n\tif (y <= b)\n\t\tb -= y;\n\telse {\n\t\tans += (y - b);\n\t\tb = 0;\n\t}\n\tif (x * 2 <= a) {\n\t\ta -= x * 2;\n\t} else {\n\t\tans += (2 * x - a);\n\t\ta = 0;\n\t}\n\tif (z * 3 <= b) {\n\t\tb -= z * 3;\n\t} else {\n\t\tans += (z * 3 - b);\n\t\tb = 0;\n\t}\n\tcout << ans << endl;\n}	a, b, x, y and z are long longs\nread a, b, x, y and z\ncreate long long ans = 0\nif y <= a\ndecrease a by y\nelse\nincrease ans by y - a\nassign value of 0 to a\nif y <= b\ndecrease b by y\nelse\nincrease ans by y - b\nset value of b to 0\nif x * 2 <= a\ndecrease a by x * 2\nelse\nincrease ans by 2 * x - a\na = 0\nif z * 3 <= b\ndecrease b by z * 3\nelse\nincrease ans by z * 3 - b\nset value of b to 0\nprint ans and a new line
int main() {\n\tlong long int n, m;\n\tcin >> n >> m;\n\tlong long int x, y, z;\n\tcin >> x >> y >> z;\n\tlong long int ans = 0;\n\tif (n >= 2 * x) {\n\t\tn = n - 2 * x;\n\t} else {\n\t\tans += 2 * x - n;\n\t\tn = 0;\n\t}\n\tif (m >= 3 * z) {\n\t\tm = m - 3 * z;\n\t} else {\n\t\tans += 3 * z - m;\n\t\tm = 0;\n\t}\n\tif (n < y) { ans += y - n; }\n\tif (m < y) { ans += y - m; }\n\tcout << ans << endl;\n}	create long long integers n, m\nread n read m\ncreate long long integers x, y, z\nread x read y read z\ncreate long long integer ans with ans = 0\nif n is greater than or equal to 2 * x\nset n to n - 2 * x\nelse\nincrement ans by 2 * x - n\nset n to 0\nif m is greater than or equal to 3 * z\nset m to m - 3 * z\nelse\nincrement ans by 3 * z - m\nset m to 0\nif n is less than y, increment ans by y - n\nif m is less than y, increment ans by y - m\nprint ans print newline
int main() {\n\tlong long a, b, x, y, z;\n\tcin >> a >> b >> x >> y >> z;\n\tlong long ans = 0;\n\tlong long sy, sb;\n\tsy = 2 * x + y - a;\n\tif (sy < 0) { sy = 0; }\n\tsb = 3 * z + y - b;\n\tif (sb < 0) { sb = 0; }\n\tans += sy + sb;\n\tcout << ans << '\n';\n\treturn 0;\n}	create long longs a, b, x, y, z\nread a read b read x read y read z\ncreate long long ans with ans = 0\ncreate long longs sy, sb\nset sy to 2 * x + y - a\nif sy is less than 0, set sy to 0\nset sb to 3 * z + y - b\nif sb is less than 0, set sb to 0\nincrement ans by sy + sb\nprint ans print '\n'
int main() {\n\tlong long i, c = 0, a, b, x, y, z;\n\tcin >> a >> b >> x >> y >> z;\n\ta -= x * 2;\n\ta -= y;\n\tb -= y;\n\tb -= 3 * z;\n\tif (a < 0) c += abs(a);\n\tif (b < 0) c += abs(b);\n\tcout << c << endl;\n\treturn 0;\n}	let i, c, a, v, x, y, z be long long with c = 0\nread a, b, x, y and z\nlet a = a - x*2\nlet a = a - y\nlet b = b - y\nlet b = b - 3*z\nif a is less than 0 set c = c+ absolute value of a\nif b is less than 0 set c = c+ absolute value of b\nprint c and new line
int main() {\n\tlong long int a, b, ans;\n\tcin >> a >> b;\n\tlong long int x, y, z;\n\tcin >> x >> y >> z;\n\tlong long int ye = (2 * x) + y;\n\tlong long int bl = y + (3 * z);\n\tlong long int n = ye - a;\n\tlong long int m = bl - b;\n\tif (n < 0) { n = 0; }\n\tif (m < 0) { m = 0; }\n\tans = n + m;\n\tcout << ans << endl;\n\treturn 0;\n}	a, b, ans = long longs\nread a and b\nx, y, z = long longs\nread x, y and z\nye = long long integer set to (2 * x) + y\nbl = long long integer set to y + (3 * z)\nn = long long integer set to ye - a\nm = long long integer set to (bl - b\nif n is less than 0 set n to 0\nif m is less than 0 set m to 0\nset ans to n + m\nprint ans
int main() {\n\tlong long a, b, c, d, e, ans = 0;\n\tcin >> a >> b >> c >> d >> e;\n\tif (c * 2 + d - a > 0) ans += (c * 2 + d) - a;\n\tif (d + e * 3 - b > 0) ans += (d + e * 3) - b;\n\tcout << ans << endl;\n\treturn 0;\n}	declare long long variables a, b, c, d, e and ans, with ans = 0\nread a, b, c, d and e\nif c * 2 + d - a is greater than 0, add (c * 2 + d) - a to ans\nif d + e * 3 - b is greater than 0, add (d + e * 3) - b to ans\nprint ans and a new line
int main() {\n\tlong long A, B;\n\tlong long x, y, z;\n\tcin >> A >> B;\n\tcin >> x >> y >> z;\n\tlong long yello = 0, green = 0, bule = 0;\n\tyello = x * 2 + y;\n\tbule = z * 3 + y;\n\tlong long sum1 = yello - A;\n\tlong long sum2 = bule - B;\n\tif (sum1 < 0) sum1 = 0;\n\tif (sum2 < 0) sum2 = 0;\n\tcout << sum1 + sum2 << endl;\n}	A,B =integers\nx, y, z = integers\nRead A and B\nRead x, y, z\nyello, green, bule = integers and all set to 0\nset yello to x * 2 + y\nset bule to z * 3 + y\nset sum1 to yello - A\nset sum2 to bule - B\nif sum1 is less than 0, then set sum1 to 0\nif sum2 is less than 0, then set sum2 to 0\nprint sum1 + sum2 and a new line
int main() {\n\tlong long A, B, x, y, z, a = 0;\n\tcin >> A >> B >> x >> y >> z;\n\tif (A < (x * 2 + y)) { a += ((x * 2) + y - A); }\n\tif (B < (y + z * 3)) { a += (y + (z * 3) - B); }\n\tcout << a << endl;\n}	declar longs A, B, x, y, z, and e to be zero\ninput A, B, x, y, and z\nif A is less than double x plus y, increment a by x * 2 + y - A\nif B is less than y plus z times 3, increment a by y + 3 * z - B\nprint a and endline
int main() {\n\tlong long n, m, a, b, c, ans1 = 0, ans2 = 0, sum = 0;\n\tcin >> n >> m;\n\tcin >> a >> b >> c;\n\tans1 = a * 2 + b * 1;\n\tans2 = b * 1 + c * 3;\n\tsum = ans1 > n ? ans1 - n : 0;\n\tsum += ans2 > m ? ans2 - m : 0;\n\tcout << sum << endl;\n\treturn 0;\n}	create long longs n, m, a, b, c, ans1, ans2 and sum, with ans1, ans2 and sum = 0\nread n and m\nread a, b and c\nans1 = a * 2 + b * 1\nans2 = b * 1 + c * 3\nsum = ans1 - n if ans1 > n, or 0 if it is not\nincrease sum by ans2 - m if ans2 > m\nprint sum and a new line
const int N = 1 << 20;\nint main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long ye, bl, g;\n\tcin >> ye >> g >> bl;\n\tlong long y1 = 2 * ye;\n\tlong long y2 = g;\n\tlong long b1 = g;\n\tlong long b2 = 3 * bl;\n\tlong long ans1, ans2;\n\tif (a >= y1 + y2)\n\t\tans1 = 0;\n\telse\n\t\tans1 = abs(a - (y1 + y2));\n\tif (b > b1 + b2)\n\t\tans2 = 0;\n\telse\n\t\tans2 = abs(b - (b1 + b2));\n\tcout << ans1 + ans2 << endl;\n}	create constant integer N with N = 1 bitshift left 20\ncreate long longs a, b\nread a read b\ncreate long longs ye, bl, g\nread ye read g read bl\ncreate long long y1 with y1 = 2 * ye\ncreate long long y2 with y2 = g\ncreate long long b1 with b1 = g\ncreate long long b2 with b2 = 3 * bl\ncreate long longs ans1, ans2\nif a is greater than or equal to y1 + y2\nset ans1 to 0\nelse\nset ans1 to absolute value of ( a - ( y1 + y2 ) )\nif b is greater than b1 + b2\nset ans2 to 0\nelse\nset ans2 to absolute value of ( b - ( b1 + b2) )\nprint ans1 + ans2 print newline
int main() {\n\tlong long a, b, x, y, z, q = 0, w = 0;\n\tcin >> a >> b;\n\tcin >> x >> y >> z;\n\tq = 2 * x + y;\n\tw = y + 3 * z;\n\tlong long ans = 0;\n\tif ((q - a) > 0) ans = q - a;\n\tif ((w - b) > 0) ans += (w - b);\n\tcout << ans << '\n';\n}	create long longs a, b, x, y, z, q, w, with q = 0, w = 0\nread a read b\nread x read y read z\nset q to 2 * x + y\nset w to y + 3 * z\ncreate long long ans with ans = 0\nif q - a is greater than 0, set ans to q - a\nif w - b is greater than 0, increment ans by w - b\nprint ans print '\n'
const int maxn = 1e5 + 10;\nint a, b, c, n;\nint main() {\n\twhile (cin >> a >> b >> c >> n) {\n\t\tif (a < c || b < c) {\n\t\t\tcout << -1 << endl;\n\t\t} else {\n\t\t\tint num = (a - c) + (b - c) + c;\n\t\t\tif (num >= n) {\n\t\t\t\tcout << -1 << endl;\n\t\t\t} else {\n\t\t\t\tcout << n - num << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	let const int maxn = 1e5 + 10\ncreate ints a, b, c, and n\nwhile cin >> a >> b >> c >> n is truthy\nif a is less than c or b is less than c\nprint -1\nelse\nlet int num = (a - c) + (b - c) + c\nif num is greater than or equal to n\nprint -1\nelse\nprint n - num
int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tint d = a - c;\n\tint e = b - c;\n\tint f = n - d - e - c;\n\tif (d >= 0 && e >= 0 && c >= 0 && f > 0)\n\t\tcout << f << endl;\n\telse\n\t\tcout << -1 << endl;\n\treturn 0;\n}	a, b, c, n = integers\nread a, b, c, n\nd = integer with d = a - c\ne = integer with e = b - c\nf = integer with f = n - d - e - c\nif d >= 0 and e >= 0 and c >= 0 and f > 0\nprint f\nelse\nprint -1
"int main() {\n\tlong long int a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tint temp = min(a, b);\n\tif (c > temp) {\n\t\tcout << ""-1\n"";\n\t\treturn 0;\n\t}\n\tif ((a + b) - c < n) {\n\t\tcout << n - ((a + b) - c) << endl;\n\t} else {\n\t\tcout << ""-1\n"";\n\t}\n\treturn 0;\n}"	"declare long long ints a, b, c and n\nread a, b, c and n\ncreate integer temp = min of a and b\nif c is greater than temp\nprint ""-1\n""\nif (a + b) - c is less than n\nprint n - ((a + b) - c)\nelse\nprint ""-1\n"""
int main() {\n\tint a, b, c, n;\n\twhile (cin >> a >> b >> c >> n) {\n\t\tint res = -1;\n\t\tif ((a <= n) && (b <= n) && (c <= n)) {\n\t\t\tint onlyA = a - c;\n\t\t\tint onlyB = b - c;\n\t\t\tif ((onlyA >= 0 && onlyB >= 0) && (onlyA + onlyB < n)) { res = n - onlyA - onlyB - c; }\n\t\t}\n\t\tif (res == 0) { res = -1; }\n\t\tcout << res << endl;\n\t}\n}	a, b, c, n = integers\nwhile read a, b, c, n\nres = integer with res = -1\nif (a <= n) and (b <= n) and (c <= n)\nonlyA = integer with onlyA = a - c\nonlyB = integer with onlyB = b - c\nif (onlyA >= 0 and onlyB >= 0) and (onlyA + onlyB < n), res = n - onlyA - onlyB - c\nif res is 0, res = -1\nprint res
"int main() {\n\tint a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tif (a + b - c >= d || c > a || c > b)\n\t\tcout << ""-1"" << endl;\n\telse\n\t\tcout << d - (a + b - c) << endl;\n\treturn 0;\n}"	let a, b, c, d be ints\nread a, b, c, d\nif a + b - c >= d or c > a or c > b\nprint -1\nelse\nprint d - (a + b - c)
int a, b, c, n, i;\nint main() {\n\tcin >> a >> b >> c >> n;\n\tif (a + b - c + 1 > n || c > a || c > b || c > a + b || c > n) {\n\t\tcout << -1 << endl;\n\t} else\n\t\tcout << n + c - a - b << endl;\n}	create integers a, b, c, n, i\nread a read b read c read n\nif a + b - c + 1 is greater than n or c is greater than a or c is greater than b or c is greater than a + b or c is greater than n\nprint -1 print newline\nelse\nprint n + c - a - b print newline
int A, B, C, N;\nint main() {\n\tcin >> A >> B >> C >> N;\n\tbool con = false;\n\tif (A > N || B > N || C > N) con = true;\n\tif (C > A || C > B) con = true;\n\tint T = A + B - C;\n\tif (T >= N) con = true;\n\tcout << ((con) ? -1 : N - T) << '\n';\n\treturn 0;\n}	let A, B, C, N be ints\nread A, B, C, N\nlet con be a false bool\nif A > N or B > N or C > N then change con to true\nif C > A or C > B then set con to true\nlet T = A + B - C = int\nif T >= N, change con to true\nif con is true print -1 else print N - T
"int main() {\n\tint a, b, c, n, sum;\n\twhile (cin >> a >> b >> c >> n) {\n\t\tsum = a + b - c;\n\t\tif (sum >= n || a < c || b < c) {\n\t\t\tcout << ""-1"" << endl;\n\t\t\tcontinue;\n\t\t} else\n\t\t\tcout << n - sum << endl;\n\t}\n\treturn 0;\n}"	"create integers a, b, c, n and sum\nread a, b, c and n and loop further\nset sum to a + b - c\nif sum >= n or a < c or b < c\nprint ""-1""\nskip the rest of the loop\nelse\nprint n - sum"
"int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tint x = n - (a - c + b);\n\tif (x < 1 || a < c || b < c || a > n || b > n || c > n)\n\t\tcout << ""-1\n"";\n\telse\n\t\tcout << x << endl;\n}"	"declare integers a, b, c and n\nread input to a, b, c and n\ndeclare integer x = n - (a - c + b)\nif x < 1 or a < c or b < c or a > n or b > n or c > n\nprint ""-1\n""\nelse\nprint x"
"int main() {\n\tint flag = 0;\n\tlong long ans;\n\tlong long res;\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tif (c > a || c > b)\n\t\tflag = 1;\n\telse {\n\t\tres = a + b - c;\n\t\tans = n - res;\n\t}\n\tif (flag == 1)\n\t\tcout << ""-1"" << endl;\n\telse {\n\t\tif (ans <= 0)\n\t\t\tcout << ""-1"" << endl;\n\t\telse\n\t\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"	flag =0\ncreate long long ans\nres = long long\ncreate int a, b, c and n\nread a, b, c and n\nif c>a or c>b\nset flag to 1\nelse\nassign a + b - c to res\nset ans to n - res\nif flag equal to 1\nprint -1\nelse\nif ans <= 0\nprint -1\nelse\nprint ans and a newline
"int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tif (a + b - c < n && c <= a && c <= b) {\n\t\tcout << n + c - a - b << endl;\n\t} else\n\t\tcout << ""-1\n"";\n\treturn 0;\n}"	"create integer a, b, c, n\nget a, b, c, n\nif a+b-c less than n and c less than or equal to a and b then\nprint n+c-a-b\nelse do the following\nprint ""-1\n"""
int main() {\n\tint n, a, b, c;\n\tcin >> a >> b >> c >> n;\n\tif (a < c || b < c) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tint ans = n - (a + b - c);\n\tif (ans >= 1) {\n\t\tcout << ans << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n}	create integers n, a, b, c\nread a, b, c and n\nif a<c or b<c\nprint -1\nset ans to n - (a + b - c)\nif ans >= 1\nprint ans\nelse\nprint -1
"int main() {\n\tint A, B, C, N;\n\tcin >> A >> B >> C >> N;\n\tif (((A + B - C) < N) && (A >= C) && (B >= C)) {\n\t\tcout << (N - (A + B - C)) << endl;\n\t} else {\n\t\tcout << ""-1"" << endl;\n\t}\n\treturn 0;\n}"	"declare int variables A, B, C and N\nread input to A, B, C and N\nif ((A + B - C) < N) and (A >= C) and (B >= C)\nprint N - (A + B - C)\nelse\nprint ""-1"""
const int INF = 0x3f3f3f3f;\nint main() {\n\tint i, j, k;\n\tint n, m, t;\n\tint a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tif (c > b || c > a) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\ta = a + b - c;\n\td -= a;\n\tif (d < 1 || a < 0)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << d << endl;\n\treturn 0;\n}	set INF to 0x3f3f3f3f\ncreate int i, j, k\nlet n, m, t be int\ncreate integers a, b, c, d\nread a, b, c, d\nif c>b or c>a\nprint -1\nset a to a + b - c\nset d = d-a\nif d<1 or a<0\nprint -1\notherwise\nprint d and a newline
"int a, b, c, n;\nint main() {\n\tcin >> a >> b >> c >> n;\n\tint num = a + b - c;\n\tint t = n - 1;\n\tif (t >= num && num >= 0 && a >= c && b >= c)\n\t\tcout << t - num + 1 << endl;\n\telse\n\t\tcout << ""-1"" << endl;\n\treturn 0;\n}"	a, b, c, n = integers\nread a, b, c, n\nnum = integer with num = a + b - c\nt = integer with t = n - 1\nif t >= num and num >= 0 and a >= c and b >= c\nprint t - num + 1\nelse\nprint -1
int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tif (a > n || c > b || c > a || (a + b - c >= n)) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (n - a - b + c >= 1)\n\t\tcout << n - a - b + c << endl;\n\telse\n\t\tcout << -1 << endl;\n\treturn 0;\n}	create integers a, b, c, n\nread a read b read c read n\nif a is greater than n or c is greater than b or c is greater than a or ( a + b - c is greater than or equal to n )\nprint -1 print newline\nif n - a - b + c is greater than or equal to 1\nprint n - a - b + c print newline\nelse\nprint -1 print newline
"int a, b, c, n;\nint solve() {\n\tint k = a + b - c;\n\tif (c > min(a, b)) { return -1; }\n\tif (k < 0) return -1;\n\tif (n - k < 1) { return -1; }\n\treturn n - k;\n}\nint main() {\n\tcin >> a >> b >> c >> n;\n\tcout << solve() << ""\n"";\n\treturn 0;\n}"	"create ints a, b, c and n\nfunction solve that returns integer\ndeclare int variable k = a + b - c\nif c is greater than min of a and b, return -1\nif k is less than 0, return -1\nif n - k is less than 1, return -1\nreturn n - k\nread a, b, c and n\nprint the result of solve() and ""\n"""
int main() {\n\tint a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tint temp = d - (a + b - c);\n\tif (c > a || c > b || a + b - c >= d)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << temp << endl;\n\treturn 0;\n}	a, b, c, d = int\nread a then b then c then d\ntemp = int with temp = d - (a + b - c)\nif c is greater than a or c is greater than b or a + b - c is greater or equal to d\nprint -1\nelse\nprint temp
int main() {\n\tint A, B, C, N;\n\tcin >> A >> B >> C >> N;\n\tif ((A + B - C <= N - 1) && (A < N && B < N && C <= A && C <= B))\n\t\tcout << N - (A + B - C) << endl;\n\telse\n\t\tcout << -1 << endl;\n}	create integers A, B, C and N\nread A, B, C and N\nif (A + B - C<= N - 1) and (A < N and B < N and C <= A and C <=B )\nprint N - (A + B - C)\nelse\nprint -1
"const int MAX = 2e5 + 5;\nconst int INF = 0x3f3f3f3f;\nmap<char, int> mp;\nmap<char, int>::iterator it;\nint main() {\n\tint i, j, k, n, m, a, b, c;\n\tcin >> a >> b >> c >> n;\n\tif (a + b - c >= n || c > a || c > b) {\n\t\tputs(""-1"");\n\t\treturn 0;\n\t}\n\tcout << n - (a + b - c) << endl;\n\treturn 0;\n}"	"create constant integer MAX with MAX = 2e5 + 5\ncreate constant integer INF with INF = 0x3f3f3f3f\ncreate map mp from character to integer\ncreate map iterator it from character to integer\ncreate integers i, j, k, n, m, a, b, c\nread a read b read c read n\nif a + b - c is greater than or equal to n or c is greater than a or c is greater than b\nprint ""-1""\nprint n - ( a + b - c ) print newline"
int main() {\n\tlong long a, b, c, d;\n\twhile (cin >> a >> b >> c >> d) {\n\t\tlong long ans = d - a - b + c;\n\t\tif (ans > 0 && a >= c && b >= c)\n\t\t\tcout << ans << endl;\n\t\telse\n\t\t\tcout << -1 << endl;\n\t}\n}	create long longs a, b, c and d\nread a, b, c and d and loop further\ndeclare long long ans = d - a - b + c\nif ans > 0 and a >= c and b >= c\nprint ans\nelse\nprint -1
int main() {\n\tint a, b, c, n, output;\n\tcin >> a >> b >> c >> n;\n\toutput = n - (a + b - c);\n\tif ((a + b - c) >= n || c > a || c > b)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << output << endl;\n\treturn 0;\n}	create integers a, b, c, n, output\nread a read b read c read n\nset output to n - (a + b - c)\nif (a + b - c) is greater than or equal to n or c is greater than a or c is greater than b\nprint -1 print newline\nelse\nprint output print newline
int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tif (a < c || b < c) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tint all = a + b - c;\n\tif (all <= n - 1) {\n\t\tcout << n - all << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}	a, b, c, n = integers\nread a, b, c, n\nif a < c or b < c\nprint -1\nall = integer with all = a + b - c\nif all <= n - 1\nprint n - all\nelse\nprint -1
"int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tif ((a + b - c) >= n || a < c || b < c)\n\t\tcout << ""-1"" << endl;\n\telse\n\t\tcout << n - a - b + c << endl;\n}"	"a, b, c, n = int\nread a then b then c then n\nif (a + b - c) >= n or a < c or b < c\nprint ""-1""\nelse\nprint n - a - b + c"
const int N = 400000 + 10;\nint main() {\n\tint x, y, z, n;\n\twhile (cin >> x >> y >> z >> n) {\n\t\tx -= z;\n\t\ty -= z;\n\t\tint ans = n - x - y - z;\n\t\tif (x < 0 || y < 0 || ans <= 0)\n\t\t\tcout << -1 << endl;\n\t\telse\n\t\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	create constant int N = 400000 + 10\nlet ints x, y, z, and n\nread x, y, z, and n and while x, y, z, and n are truthy\nset x to x - z\nset y to y - z\nlet int ans = n - x - y - z\nif x is less than 0 or y is less than 0 or ans is less than or equal to 0\nprint -1\nelse\nprint ans
"int a, b, c, n;\nint x, y, z;\nint main() {\n\twhile (cin >> a >> b >> c >> n) {\n\t\tx = a - c;\n\t\ty = b - c;\n\t\tz = x + y + c;\n\t\tif (z >= n || a < c || b < c)\n\t\t\tcout << ""-1"" << endl;\n\t\telse\n\t\t\tcout << n - z << endl;\n\t}\n\treturn 0;\n}"	"declare integer variables a, b, c and n\ndeclare integers x, y and z\nread a, b, c and n and loop further\nassign a - c to x\nassign b - c to y\nchange z to x + y + c\nif z >= n or a < c or b < c\nprint ""-1""\nelse\nprint n - z"
int main() {\n\tint a, b, c, n;\n\twhile (cin >> a >> b >> c >> n) {\n\t\tint ans = a + b - c;\n\t\tans = n - ans;\n\t\tif (ans <= 0 || a < c || b < c)\n\t\t\tcout << -1 << endl;\n\t\telse\n\t\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	create integers a, b, c and n\nloop, reading a, b, c and n from the input\ncreate int ans = a + b - c\nchange ans to n - ans\nif ans <= 0 or a < c or b < c\nprint -1\nelse\nprint ans
int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tint sum = a + b - c;\n\tif (sum >= n || a > n || b > n || c > n || n == 0 || c > a || c > b) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << n - sum << endl;\n\t}\n\treturn 0;\n}	create integers a, b, c and n\nread input to a, b, c and n\ndeclare integer sum = a + b - c\nif sum >= n or a > n or b > n or c > n or n = 0 or c > a or c > b\nprint -1\nelse\nprint n - sum
"int main() {\n\tint a, b, c, n;\n\tcin >> a >> b >> c >> n;\n\tif (a < c || b < c) {\n\t\tcout << ""-1\n"";\n\t\treturn 0;\n\t}\n\tint ans = n - (a + b - c);\n\tif (ans < 1) {\n\t\tcout << ""-1\n"";\n\t} else {\n\t\tcout << ans << endl;\n\t}\n}"	create int a, b, c, n\nread a, b, c, n\nif a less than c or b <c\nprint -1 and a newline\nset ans to n - (a + b - c)\nif ans less than 1\nprint -1 and a newline\nelse\nprint ans
int main() {\n\tlong long a, b, c, n, k;\n\tcin >> a >> b >> c >> n;\n\tk = a + b - c;\n\tk = n - k;\n\tif (((k >= 1)) && (c <= a) && (c <= b))\n\t\tcout << k << endl;\n\telse\n\t\tcout << -1 << endl;\n\treturn 0;\n}	create long long ints a, b, c, n, k\nread a, b, c, and n\nset k to a + b - c\nset k to n - k\nif k is greater than or equal to 1 and c is less than or equal to a and c is less than or equal to b\nprint k\nelse\nprint -1
"int main() {\n\tint a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tif (a + b - c >= d || c > a || c > b)\n\t\tcout << ""-1"" << endl;\n\telse\n\t\tcout << d - (a + b - c) << endl;\n\treturn 0;\n}"	"declare ints a, b, c and d\nread a, b, c and d\nif a + b - c >= d or c > a or c > b\nprint ""-1""\nelse\nprint d - (a + b - c)"
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tint mx = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tmx = max(mx, a[i]);\n\t}\n\tint ans = 1e9;\n\tfor (int k = mx; k <= 1e5; k++) {\n\t\tint x, y;\n\t\tx = y = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tx += a[i];\n\t\t\ty += k - a[i];\n\t\t}\n\t\tif (y > x) {\n\t\t\tcout << k << '\n';\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}	create int n\nread n\ncreate vector in a(n)\nmx = 0\nfor i=0 to n exclusive\nread a[i]\nmx = max of mx and a[i]\nans = 1e9\nfor k=mx to 1e5 inclusive\ncreate int x and y\nset x and y to 0\nfor i=0 to n exclusive\nassign x + a[i] to x\nset y = t + k - a[i]\nif y greater than x\nprint k and a newline
int main() {\n\tint n;\n\tcin >> n;\n\tint sum = 0, x, mx = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tsum += x;\n\t\tmx = max(mx, x);\n\t}\n\tsum *= 2;\n\tsum++;\n\tcout << max((int)ceil((double)sum / n), mx) << endl;\n}	declare int n\nread n\nsum, x and mx are integers with sum and mx = 0\nfor i = 0 to n exclusive\nread x\nadd x to sum\nassign max of mx and x to mx\nmultiply sum by 2\nincrement sum\nprint max of sum / n rounded up and mx
int n, ans, a[105], ma, sum;\nint gets() {\n\tint v = 0;\n\tbool f = 0;\n\tchar ch;\n\twhile (!isdigit(ch = getchar()))\n\t\tif (ch == '-') f = 1;\n\tv = ch - 48;\n\twhile (isdigit(ch = getchar())) v = v * 10 + ch - 48;\n\treturn f ? -v : v;\n}\nint main() {\n\tn = gets();\n\tfor (int i = 1; i <= n; i++) a[i] = gets(), ma = max(ma, a[i]), sum += a[i];\n\tans = sum * 2 / n + 1;\n\tans = max(ans, ma);\n\tcout << ans << endl;\n\treturn 0;\n}	create integers n, ans, ma and sum, and integer array a with 105 elements\ndefine function gets\ncreate integer v with value 0\nassign value 0 to boolean f\nch = character\nread ch from the input and continue the loop if ch is not a digit\nif ch = '-', set f to 1\nassign value of ch - 48 to v\nread ch from the input and continue the loop if ch is a digit, changing v to v * 10 + ch - 48\nreturn -v if f is true, or v otherwise\nassign result of gets() to n\nfor i = 1 to n inclusive, set a[i] to the result of gets(), ma to max of ma and a[i], and increase sum by a[i]\nans = sum * 2 / n + 1\nans = max of ans and ma\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tint *a = new int[n];\n\tint sum = 0;\n\tint max;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum = sum + a[i];\n\t\tif (i == 0) {\n\t\t\tmax = a[i];\n\t\t} else {\n\t\t\tif (a[i] > max) { max = a[i]; }\n\t\t}\n\t}\n\tint f = (2 * sum / n) + 1;\n\tif (f > max) {\n\t\tcout << f << endl;\n\t} else {\n\t\tcout << max << endl;\n\t}\n\treturn 0;\n}	declare integer variable n\nread n\ncreate integer pointer a pointed to new array of integers with n elements\ndeclare int sum = 0\ndeclare int max\nloop i from 0 to n exclusive\nread input to a[i]\nset sum to sum + a[i]\nif i is equal to 0\nset max to a[i]\nelse\nif a[i] is greater than max, change max to a[i]\ncreate integer f = (2 * sum / n) + 1\nif f is greater than max\nprint f\nelse\nprint max
int main() {\n\tint n;\n\tint mx = 0;\n\tint sum = 0;\n\tcin >> n;\n\tint a;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> a;\n\t\tmx = max(mx, a);\n\t\tsum += a;\n\t}\n\tsum *= 2;\n\tsum += n;\n\tsum /= n;\n\tcout << max(sum, mx) << endl;\n}	create int n\nset mx to 0\nassign 0 to sum\nread n\ncreate int a\nfor i=1 to n inclusive\nread a\nset mx to max of mx and a\nassign sum + a to sum\nset sum to sum*2\nset sum = sum+n\nsum = sum / n\nprint max of sum and mx
int main() {\n\tint n, i, j, a[100002];\n\tcin >> n;\n\tint sum = 0;\n\tint mx = -1;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t\tmx = max(mx, a[i]);\n\t}\n\twhile (1) {\n\t\tif (mx * n - sum > sum) {\n\t\t\tcout << mx << endl;\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tmx++;\n\t\t}\n\t}\n\treturn 0;\n}	declare int variables n, i and j and int array a with 100002 elements\nread n\ndeclare int sum = 0\ndeclare integer variable mx = - 1\nfor i from 0 to n exclusive\nread a[i]\nincrease sum by a[i]\nassign max of mx and a[i] to mx\nlooping infinitely\nif mx * n - sum is greater than sum\nprint mx\nelse\nincrement mx
int n;\nint main() {\n\tcin >> n;\n\tint sum = 0, temp, Max = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> temp;\n\t\tif (temp > Max) Max = temp;\n\t\tsum += temp;\n\t}\n\tcout << max(Max, sum * 2 / n + 1) << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integers sum, temp, Max with sum = 0, Max = 0\nfor i = 0 to n exclusive\nread temp\nif temp is greater than Max, set Max to temp\nincrement sum by temp\nprint maximum of ( Max and sum * 2 / n + 1 ) print newline
int main() {\n\tint n;\n\tcin >> n;\n\tint ans = 0, mayor = 0, a;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\tans = ans + a;\n\t\tmayor = max(mayor, a);\n\t}\n\tans = max((ans * 2) / n + 1, mayor);\n\tcout << ans << endl;\n\treturn 0;\n}	create int n\nread input to n\ncreate integers ans, mayor and a with ans and mayor = 0\nfor integer i = 0 to n exclusive\nread a\nset ans to ans + a\nset mayor to max of mayor and a\nchange ans to max of (ans * 2) / n + 1 and mayor\nprint ans
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long a[n];\n\tlong long maxi = 0;\n\tlong long sum = 0;\n\tfor (long long i = 0, _n = (n); i < _n; i++) {\n\t\tcin >> a[i];\n\t\tmaxi = max(maxi, a[i]);\n\t\tsum = sum + a[i];\n\t}\n\tlong long k = 0;\n\twhile (n * k <= 2 * sum) k++;\n\tif (k < maxi) k = maxi;\n\tcout << k << endl;\n}	declare long long variable n\nread n\nlet a be long long array with size n\ndeclare long long variable maxi = 0\ndeclare long long sum = 0\nfor i = 0 and _n = n while i < _n, incrementing i\nread input to a[i]\nassign max of maxi and a[i] to maxi\nset sum to sum + a[i]\ndeclare long long variable k = 0\nincrement k while n * k <= 2 * sum\nif k is less than maxi, set k to maxi\nprint k
int main() {\n\tint n, sum = 0, sum1 = 0, ans;\n\tcin >> n;\n\tint ar[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> ar[i];\n\t\tsum += ar[i];\n\t}\n\tsort(ar, ar + n);\n\tfor (int i = ar[n - 1];; i++) {\n\t\tsum1 = 0;\n\t\tfor (int j = 0; j < n; j++) sum1 += (i - ar[j]);\n\t\tif (sum1 > sum) {\n\t\t\tans = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << ans << endl;\n}	let n, sum, sum1 and ans be integers with sum and sum1 = 0\nread n\nlet ar be an array of integers of size n\nfor integer i = 0 to n exclusive\nread ar[i]\nincrease sum by ar[i]\nsort ar\nfor i = ar[n - 1], incrementing i\nassign value of 0 to sum1\nfor j = 0 to n exclusive, increase sum1 by i - ar[j]\nif sum1 is greater than sum\nset value of ans to i\nstop the loop\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t}\n\tint k = (2 * sum) / n + 1;\n\tsort(a, a + n);\n\tif (k >= a[n - 1])\n\t\tcout << k << endl;\n\telse\n\t\tcout << a[n - 1] << endl;\n}	declare int variable n\nread n\ndeclare int array a with size n\ncreate integer sum = 0\nfor integer i = 0 to n exclusive\nread input to a[i]\nadd a[i] to sum\ncreate int k = (2 * sum) / n + 1\nsort a\nif k >= a[n - 1]\nprint k\nelse\nprint a[n - 1]
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> arr(n);\n\tint max = INT_MIN, sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tsum += arr[i];\n\t\tif (max < arr[i]) max = arr[i];\n\t}\n\tif (n * max > 2 * sum)\n\t\tcout << max << endl;\n\telse {\n\t\tif ((2 * sum) % n == 0)\n\t\t\tcout << (2 * sum) / n + 1 << endl;\n\t\telse\n\t\t\tcout << ceil((2. * sum) / n) << endl;\n\t}\n\treturn 0;\n}	n = integer\nread n\narr = integer vector of size n\nmax = maximum integer value, sum = integer = 0\nfor i = 0 to n exclusive\nread arr[i]\nsum = sum + arr[i]\nif max < arr[i], then max = arr[i]\nif n * max > 2 * sum\nprint max\nelse\nif (2 * sum) modulo n is 0\nprint the result of (2 * n) / n + 1\nelse\nprint the result of (2 * sum) / n rounded up to the next whole number
int main() {\n\tint n;\n\tcin >> n;\n\tint *d = new int[n];\n\tint k = 0, s = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> d[i];\n\t\ts += d[i];\n\t\tk = max(k, d[i]);\n\t}\n\tint sum = 0;\n\tdo {\n\t\tsum = 0;\n\t\tfor (int i = 0; i < n; i++) sum += k - d[i];\n\t\tk++;\n\t} while (sum <= s);\n\tcout << k - 1 << endl;\n}	n = integer\nread n\npointer location of d = integer array of size n\nk = integer = 0, s = integer = 0\nfor i = 0 to n exclusive\nread d[i]\ns = s + d[i]\nk = the highest value betweek k and d[i]\nsum = integer = 0\ndo\nsum = 0\nfor i = 0 to n exclusive\nincrease k by 1\nwhile sum <= s\nprint the result of k - 1
int main() {\n\tint n, s = 0, k = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tint a;\n\t\tcin >> a;\n\t\tk = max(k, a);\n\t\ts += a;\n\t}\n\tfor (; n * k <= 2 * s; ++k)\n\t\t;\n\tcout << k << '\n';\n\treturn 0;\n}	create integers n, s, k with s = 0, k = 0\nread n\nfor i = 1 to n inclusive\ncreate integer a\nread a\nset k to maximum of k and a\nincrement s by a\nfor n * k is less than or equal to 2 * s, incrementing k\nend statement\nprint k print '\n'
int main() {\n\tint n, sum = 0, ans = 0;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tsum += arr[i];\n\t}\n\tsort(arr, arr + n);\n\tfor (int i = 0; i < n - 1; i++) { ans += -arr[i] + arr[n - 1]; }\n\twhile (1) {\n\t\tif (ans > sum) { break; }\n\t\tans += n;\n\t\tarr[n - 1]++;\n\t}\n\tcout << arr[n - 1] << endl;\n}	n, sum, ans = int with sum = 0 and ans = 0\nread n\narr = int array of size n\nfor i = 0 to n\nread arr[i]\nincrement sum by arr[i]\nsort arr\nfor i = 0 to n - 1 increment ans by -arr[i] + arr[n - 1]\nloop infinitely\nif ans is greater than sum then break\nincrement ans by n\nincrement arr[n - 1]\nprint arr[n - 1]
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> arr(n + 5);\n\tint max_val = 0;\n\tlong long sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tmax_val = max(max_val, arr[i]);\n\t\tsum += arr[i];\n\t}\n\tint i = max_val;\n\tfor (; i < 10000; i++) {\n\t\tlong long val = i * n - sum;\n\t\tif (val > sum) break;\n\t}\n\tcout << i << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integer vector arr initialized with ( n + 5 )\ncreate integer max_val with max_val = 0\ncreate long long sum with sum = 0\nfor i = 0 to n exclusive\nread arr[i]\nset max_val to maximum of ( max_val and arr[i] )\nincrement sum by arr[i]\ncreate integer i with i = max_val\nfor i is less than 10000, incrementing i\ncreate long long val with val = i * n - sum\nif val is greater than sum, break loop\nprint i print newline
int main() {\n\tlong long int n, i, sum = 0, max1 = 0, ans, sum1, i1, j;\n\tcin >> n;\n\tlong long int a[n + 2];\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum = sum + a[i];\n\t\tmax1 = max(max1, a[i]);\n\t}\n\tfor (j = max1; j <= (max1 * 2) + 2; j++) {\n\t\tsum1 = 0;\n\t\tfor (i1 = 0; i1 < n; i1++) { sum1 = sum1 + (j - a[i1]); }\n\t\tif (sum1 > sum) {\n\t\t\tans = j;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << ans << endl;\n}	define integers n, i, sum, max1, ans, sum1, i1, and j, setting sum and max1 to 0\nread into n\ndefine integer array a to be of n + 2 elements\nfor i from 0 to n (exclusive) by 1\nread into a[i]\nincrement sum by a[i]\nset max1 to max. of max1, a[i]\nfor j from max1 to max1 * 2 + 2 by 1\nzero sum1\nfor i1 from 0 to n (exclusive) by 1, increment sum1 by j - a[i1]\nif sum1 > sum\nassign j to ans\nbreak out\nprint ans and newline
int main() {\n\tint n, i, j, k1, k = 0, suma = 0, sumb = 0;\n\tcin >> n;\n\tint a[n];\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] > k) { k = a[i]; }\n\t\tsuma += a[i];\n\t}\n\tfor (i = 0; i < n; i++) { sumb += k - a[i]; }\n\tfor (i = 0;; i++) {\n\t\tif (sumb <= suma) {\n\t\t\tsumb = 0;\n\t\t\tk++;\n\t\t\tfor (j = 0; j < n; j++) { sumb += k - a[j]; }\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << k << endl;\n}	n, i, j, k1, k, suma, sumb = int with k = 0 and suma = 0 and sumb = 0\nread n\na = int array of size n\nfor i = 0 to n\nread a[i]\nif a[i] is greater than k then set k to a[i]\nincrement suma by a[i]\nfor i = 0 to n increment sumb by k - a[i]\nfor i = 0\nif sumb is less or equal to suma\nset sumb to 0\nincrement k\nfor j = 0 to n increment sumb by k - a[j]\nelse\nbreak\nprint k
int value[101];\nint main() {\n\tint n, k = -1, sum = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> value[i];\n\t\tsum += value[i];\n\t\tif (value[i] > k) k = value[i];\n\t}\n\twhile (k * n - sum <= sum) { k++; }\n\tcout << k << endl;\n}	declare an array of integers value with size 101\ndeclare integers n, k and sum where sum = 0 and k = -1\nread input to n\nfor integer i = 0 to n exclusive\nread value[i]\nadd value[i] to sum\nif value[i] is greater than k, set k to value[i]\nwhile k * n - sum <= sum, increment k\nprint k
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n], sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint k;\n\t\tcin >> k;\n\t\ta[i] = k;\n\t\tsum = sum + a[i];\n\t}\n\tint lar = a[0];\n\tfor (int i = 1; i < n; i++) {\n\t\tif (lar < a[i]) lar = a[i];\n\t}\n\tfor (int j = lar;; j++) {\n\t\tif (j * n > (2 * sum)) {\n\t\t\tcout << j << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n}	create integer n\nread n\ncreate integer array a with size n, create integer sum with sum = 0\nfor i = 0 to n exclusive\ncreate integer k\nread k\nset a[i] to k\nset sum to sum + a[i]\ncreate integer lar with lar = a[0]\nfor i = 1 to n exclusive\nif lar is less than a[i], set lar to a[i]\nfor j = lar, incrementing j\nif j * n is greater than ( 2 * sum )\nprint j print newline\nbreak loop
int main() {\n\tint n, a[200];\n\tcin >> n;\n\tint sum1 = 0, k = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum1 += a[i];\n\t\tk = max(k, a[i]);\n\t}\n\tint flag = 0;\n\twhile (!flag) {\n\t\tint sum2 = 0;\n\t\tfor (int i = 0; i < n; i++) { sum2 += k - a[i]; }\n\t\tif (sum2 > sum1) {\n\t\t\tflag = 1;\n\t\t} else {\n\t\t\tk++;\n\t\t}\n\t}\n\tcout << k << endl;\n\treturn 0;\n}	create integer n, create integer array a with size 200\nread n\ncreate integers sum1, k, with sum1 = 0, k = 0\nfor i = 0 to n exclusive\nread a[i]\nincrement sum1 by a[i]\nset k to maximum of k and a[i]\ncreate integer flag with flag = 0\nwhile not flag\ncreate integer sum2 with sum2 = 0\nfor i = 0 to n exclusive, increment sum2 by k - a[i]\nif sum2 is greater than sum1\nset flag to 1\nelse\nincrement k\nprint k print newline
long long const mod = 1e9 + 7;\nlong long power(long long x, long long y, long long mod = 2e18) {\n\tlong long ans = 1;\n\tx %= mod;\n\twhile (y) {\n\t\tif (y & 1) ans = (x * ans) % mod;\n\t\tx = (x * x) % mod;\n\t\ty >>= 1;\n\t}\n\treturn ans;\n}\nlong long gcd(long long a, long long b) {\n\tif (a == 0) return b;\n\treturn gcd(b % a, a);\n}\nint main() {\n\tlong long n, id1, id2;\n\tcin >> n >> id1 >> id2;\n\tstring second;\n\tcin >> second;\n\tif (second[id1 - 1] == second[id2 - 1]) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	declare long long const mod = 1e9 + 7\npower is a long long function with long long arguments x, y and mod\ndeclare long long variable ans = 1\nx = x modulo mod\nwhile y\nif y & 1 != 0, assign (x * ans) % mod to ans\nset x to (x * x) % mod\ny = y >> 1\nreturn ans\ngcd is a long long function with long long arguments a and b\nif a = 0, return b\nreturn gcd(b % a, a)\ndeclare long long variables n, id1 and id2\nread n, id1 and id2\ncreate string second\nread input to second\nif second[id1 - 1] is equal to second[id2 - 1]\nprint 0\nelse\nprint 1
int main() {\n\tint n, a, b;\n\tstring s;\n\tint ans;\n\tcin >> n >> a >> b >> s;\n\tif (s[a - 1] == s[b - 1]) {\n\t\tans = 0;\n\t} else {\n\t\tans = 1;\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	create integers n, a, b\ncreate string s\ncreate integer ans\nread n read a read b read s\nif s[a-1] is s[b-1]\nset ans to 0\nelse\nset ans to 1\nprint ans print '\n'
const int inf = 0x3f3f3f3f;\nint main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tstring s;\n\tcin >> s;\n\tif (s[a - 1] == s[b - 1]) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tset<int> st;\n\tchar ch = ' ';\n\tint pos = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (ch == ' ') {\n\t\t\tch = s[i];\n\t\t\tcontinue;\n\t\t}\n\t\tif (s[i] == ch) {\n\t\t\tpos = i;\n\t\t} else {\n\t\t\tst.insert(i - pos);\n\t\t\tpos = i;\n\t\t\tch = s[i];\n\t\t}\n\t}\n\tcout << *st.end() << endl;\n\treturn 0;\n}	create const int inf = 0x3f3f3f3f\nlet ints n, a, and b\nread n, a, and b\ncreate string s\nread s\nif s[a - 1] is equal to s[b - 1]\nprint 0\ncreate int set st\nlet char ch = ' '\ncreate int pos = 0\nfor i = 0 to size of s exclusive\nif ch is equal to ' '\nset ch to s[i]\ncontinue to next loop iteration\nif s[i] is equal to ch\nset pos to i\nelse\ninsert i - pos into set st\nset pos to i\nset char to s[i]\nprint *st.end()
"bool vis[200005];\nint cnt[200005], freq[200005];\nint main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tstring s;\n\tcin >> s;\n\tif (s[a - 1] == s[b - 1])\n\t\tputs(""0"");\n\telse\n\t\tputs(""1"");\n\treturn 0;\n}"	"declare an array of booleans vis with size 200005\ndeclare int arrays cnt and freq with 200005 elements\ndeclare integers n, a and b\nread input to n, a and b\ndeclare string s\nread s\nif s[a - 1] = s[b - 1]\nprint ""0""\nelse\nprint ""1"""
int n, a, b;\nstring s;\nint main() {\n\tcin >> n >> a >> b >> s;\n\ta--;\n\tb--;\n\tif (s[a] != s[b]) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}	declare integers n, a and b\ncreate string s\nread n, a, b and s\ndecrement a\ndecrement b\nif s[a] != s[b]\nprint 1\nelse\nprint 0
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tchar arr[n + 2];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tif (arr[a - 1] == arr[b - 1])\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	create integers n, a and b\nread n, a and b\ndeclare an array of chars arr with size n + 2\nread n elements into arr\nif arr[a - 1] = arr[b - 1]\nprint 0\nelse\nprint 1
"string s;\nint main() {\n\tint n, a, b;\n\tcin >> n >> a >> b >> s;\n\tif ((a == b) || (s[a - 1] == s[b - 1]))\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	create string s\ncreate int n, a and b\nread n, a, b and s\nif a equal to b or s[a - 1] = s[b - 1]\nprint 0\nelse\nprint 1 and a newline
int main() {\n\tint n, a, b;\n\tstring s;\n\tcin >> n >> a >> b;\n\t--a, --b;\n\tcin >> s;\n\tif (s[a] == s[b]) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t} else {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n}	n, a, b = integers\ns = string\nread n, a, b\ndecrement a, decrement b\nread s\nif s[a] is s[b]\nprint 0\nelse\nprint 1
int n, be[100001], af[100001], ans, a, b;\nstring s;\nint main() {\n\tcin >> n >> a >> b >> s;\n\tif (s[a - 1] == s[b - 1]) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n}	declare ints n, ans, a and b; create arrays of ints be and af with 100001 elements\ndeclare string s with value\nread variables n, a, b and s from the input\nif s[a - 1] is equal to s[b - 1]\nprint 0\nelse\nprint 1
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tchar aN[100000];\n\tcin >> aN;\n\tif (aN[a - 1] != aN[b - 1])\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}	declare integers n, a and b\nread input to n, a and b\ndeclare character array aN with size 100000\nread aN\nif aN[a - 1] != aN[b - 1]\nprint 1\nelse\nprint 0
"int num[1000000] = {0};\nvoid fx(char a[]);\nint main() {\n\tint n, a, b;\n\tchar z[1000000];\n\tcin >> n >> a >> b;\n\tcin >> z;\n\tif (z[a - 1] == z[b - 1]) {\n\t\tcout << ""0"" << endl;\n\t} else {\n\t\tcout << ""1"" << endl;\n\t}\n\treturn 0;\n}"	"create integer array num with size 1000000 with num = {0}\ndeclare fx with character array a as argument, returning void\ncreate integers n, a, b\ncreate character array z with size 1000000\nread n read a read b\nread z\nif z[a-1] is z[b-1]\nprint ""0"" print newline\nelse\nprint ""1"" print newline"
int main() {\n\tint n, a, b;\n\tstring s;\n\tint ans;\n\tcin >> n >> a >> b >> s;\n\tif (s[a - 1] == s[b - 1]) {\n\t\tans = 0;\n\t} else {\n\t\tans = 1;\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	create integers n, a and b\ncreate string s\ndeclare int variable ans\nread n, a, b and s\nif s[a - 1] = s[b - 1]\nset ans to 0\nelse\nset ans to 1\nprint ans and '\n'
"const int maxn = 1e6 + 6;\nint n, a, b;\nint arr[maxn];\nint len = 0;\nstring str;\nint main() {\n\tcin >> n >> a >> b;\n\tcin >> str;\n\tfor (int i = 1; i <= n; i++) arr[i] = str[i - 1];\n\tif (arr[a] == arr[b])\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	"declare const int maxn = 1e6 + 6\ncreate ints n, a and b\ndeclare an array of integers arr with size maxn\ndeclare int variable len = 0\ndeclare string variable str\nread input to n, a and b\nread input to str\nloop i from 1 to n inclusive, assign str[i - 1] to arr[i]\nif arr[a] is equal to arr[b]\nprint ""0""\nelse\nprint ""1"""
vector<int> VI, VI2, VI3, VI4;\nint n, m, f, t, a, b;\nstring s;\nint main() {\n\tcin >> n >> a >> b >> s;\n\tcout << abs(s[--a] - s[--b]) << endl;\n\treturn 0;\n}	define vector VI, VI2, VI3, VI4\ndefine n, m, f, t, a, b as integers\ndefine s as string\nread n, a, b, s\nprint abs(s[--a] - s[--b])
"int n, a, b;\nstring s;\nint main() {\n\tcin >> n >> a >> b >> s;\n\tif (s[a - 1] == s[b - 1])\n\t\tcout << 0 << ""\n"";\n\telse\n\t\tcout << 1 << ""\n"";\n\treturn 0;\n}"	"create integers n, a, b\ncreate string s\nread n read a read b read s\nif s[a-1] is s[b-1]\nprint 0 print ""\n""\nelse\nprint 1 print ""\n"""
int main() {\n\tstring s;\n\tint n, m, k;\n\tcin >> n >> m >> k;\n\tcin >> s;\n\ts = '#' + s;\n\tcout << 1 - (s[m] == s[k]) << endl;\n}	s = string\nn, m, k = int\nread n then m then k\nread s\nprepend '#' to s\nprint 1 if s[m] is not s[k] else print 0
"const int maxn = 1e6 + 6;\nint n, a, b;\nint arr[maxn];\nint len = 0;\nstring str;\nint main() {\n\tcin >> n >> a >> b;\n\tcin >> str;\n\tfor (int i = 1; i <= n; i++) arr[i] = str[i - 1];\n\tif (arr[a] == arr[b])\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	"define integral constant maxn to be 1e6 + 6\ndefine integers n, a, b\ndefine maxn-element int array arr\ndefine int len, set to zero\ndefine string str\nread n, a, and then b\nread str\nfor int i from i to n by 1, assign str[i - 1] to arr[i]\nif arr[a] is arr[b]\nprint ""0"" and newline\notherwise\nprint ""1"" and a newline"
"string s;\nint main() {\n\tint n, a, b;\n\tcin >> n >> a >> b >> s;\n\tif ((a == b) || (s[a - 1] == s[b - 1]))\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	"create string s\ncreate integers n, a, b\nread n read a read b read s\nif a is b or s[a-1] is s[b-1]\nprint ""0"" print newline\nelse\npirnt ""1"" print newline"
int main() {\n\tint a, b, n;\n\tstring s;\n\tcin >> n >> a >> b >> s;\n\ta--;\n\tb--;\n\tcout << ((s[a] - '0') ^ (s[b] - '0')) << endl;\n}	create integers a, b, n\ncreate string s\nread n read a read b read s\ndecrement a\ndecrement b\nprint ((s[a] - '0') ^ (s[b] - '0')) print newline
"const long long mod = 998244353;\nconst long long inf = 2e18;\nconst int maxn = 200005;\nconst int maxa = 300005;\nlong long gcd(long long a, long long b) {\n\treturn b ? gcd(b, a % b) : a;\n}\nlong long powmod(long long a, long long b) {\n\tlong long res = 1;\n\ta %= mod;\n\tif (b < 0) return -1;\n\tfor (; b; b >>= 1) {\n\t\tif (b & 1) res = res * a % mod;\n\t\ta = a * a % mod;\n\t}\n\treturn res;\n}\nint INF = 10000000;\nint main() {\n\tint T;\n\tint n, m, l, r;\n\tint ans = 0;\n\tstring str;\n\tcin >> n >> l >> r;\n\tcin >> str;\n\tint a[maxn];\n\tfor (int i = 0; i < n; i++) a[i + 1] = str[i] - '0';\n\tif (a[l] == a[r]) return 0 * puts(""0"");\n\tputs(""1"");\n}"	"create constant long long int mod = 998244353\ncreate const long long int inf = 2e18\nlet const int maxn = 200005\nlet const int maxa = 300005\ndeclare gcd taking in long long ints a and b and returning long long\nreturn gcd(b, a % b) if b is truthy or a if not\ndeclare powmod taking in long long ints a and b and returning long long\nlet long long in res = 1\nset a to a % mod\nif b is less than 0, return -1\nloop until b is falsy\nif b & 1 is truthy, set res to res * a % mod\nset a to a * a % mod\nreturn res\nlet int INF = 10000000\nlet int T\ncreate ints n, m, l, r\ncreate int ans = 0\ncreate string str\nread n, l, and r\ncreate str\nlet int array a of size maxn\nfor i = 0 to n exclusive, set a[i + 1] to str[i] - '0'\nif a[l] is equal to a[r], return the result of 0 * puts(""0"")\nprint ""1"""
int main() {\n\tint n, a, b;\n\tstring str;\n\tcin >> n >> a >> b;\n\tcin >> str;\n\tcout << abs((str[a - 1] - '0') - (str[b - 1] - '0')) << endl;\n\treturn 0;\n}	let n, a, b be integers\nlet str be a string\nread n, a and b\nread str\nprint the absolute value of str[a-]-'0' - str[b-1]+'0'
"int main() {\n\tlocale loc;\n\tint n, s, e;\n\tcin >> n >> s >> e;\n\tstring str;\n\tcin >> str;\n\tif (str[s - 1] == str[e - 1])\n\t\tcout << 0 << ""\n"";\n\telse\n\t\tcout << 1 << ""\n"";\n}"	"locale loc\ndeclare int variables n, s and e\nread input to n, s and e\ndeclare string variable str\nread str\nif str[s - 1] = str[e - 1]\nprint 0 and ""\n""\nelse\nprint 1 and ""\n"""
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tint i, val;\n\tvector<int> v(n + 1);\n\tstring s;\n\tcin >> s;\n\tfor (i = 0; i < n; i++) {\n\t\tif (s[i] == '1')\n\t\t\tv[i + 1] = 1;\n\t\telse\n\t\t\tv[i + 1] = 0;\n\t}\n\tint aa = min(a, b);\n\tint bb = max(a, b);\n\tint j;\n\tint count = 0;\n\tfor (i = aa; i <= bb;) {\n\t\tif (v[i] == 0) {\n\t\t\tint index = i;\n\t\t\tfor (j = i; j <= bb; j++) {\n\t\t\t\tif (v[j] == 0) index = j;\n\t\t\t}\n\t\t\tif (index == bb) break;\n\t\t\tif (index != bb) {\n\t\t\t\ti = index + 1;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t} else {\n\t\t\tint index = i;\n\t\t\tfor (j = i; j <= bb; j++) {\n\t\t\t\tif (v[j] == 1) index = j;\n\t\t\t}\n\t\t\tif (index == bb) break;\n\t\t\tif (index != bb) {\n\t\t\t\ti = index + 1;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\tcout << count << endl;\n}	declare ints n, a and b\nread n, a and b\ndeclare integer variables i and val\ndeclare vector of integers called v with size n + 1\ndeclare string variable s\nread input to s\nfor i from 0 to n exclusive\nif s[i] is equal to '1'\nset v[i + 1] to 1\nelse\nassign 0 to v[i + 1]\ndeclare int variable aa = min of a and b\ndeclare int variable bb = max of a and b\ndeclare int j\ncreate int count = 0\nloop i from aa while i <= bb\nif v[i] = 0\ndeclare integer variable index = i\nfor j = i to bb inclusive\nif v[j] = 0, set index to j\nif index = bb, break the loop\nif index != bb\nchange i to index + 1\nincrement count by one\nelse\ncreate integer index = i\nfor j from i to bb inclusive\nif v[j] is equal to 1, assign j to index\nif index is equal to bb, break\nif index != bb\nset i to index + 1\nincrement count by one\nprint count
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tstring s;\n\tcin >> s;\n\tif (s[a - 1] == s[b - 1]) {\n\t\tcout << (0) << endl;\n\t\t;\n\t} else\n\t\tcout << (1) << endl;\n\t;\n\treturn 0;\n}	declare ints n, a and b\nread input to n, a and b\ndeclare string s\nread input to s\nif s[a - 1] is equal to s[b - 1]\nprint 0\nelse\nprint 1
int main() {\n\tint n, a, b;\n\tstring s;\n\tcin >> n >> a >> b;\n\tcin >> s;\n\tif (s[a - 1] == s[b - 1]) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t} else\n\t\tcout << 1 << endl;\n}	let n, a, b be integers\nlet s be a string\nread n, a, b\nread s\nif s[a - 1] is equal to s[b - 1]\nprint 0 and newline\nelse do the following\nprint 1 and newline
"int main() {\n\tstring a;\n\tint n;\n\tcin >> a;\n\tcin >> n;\n\tint kiek[26] = {0};\n\tif (a.size() < n) {\n\t\tcout << ""impossible"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < a.size(); i++) { kiek[a[i] - 'a']++; }\n\tint k = 0;\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (kiek[i] >= 1) k++;\n\t}\n\tif (k < n)\n\t\tcout << n - k << endl;\n\telse\n\t\tcout << ""0"" << endl;\n\t;\n\treturn 0;\n}"	let a be a string\nlet n be a integer\nread a\nread n\nthe 26th element of integer array kiek is equal to 0\nif length of a is less than n\nprint impossible and newline\nfor i = 0 to length of a exclusive , increment kiek[a[i] - a] by 1\nlet k be a integer with k = 0\nfor i = 0 to 26 exclusive\nif kiek[i] >= 1 , increment k by 1\nif k is less than n\nprint n - k and newline\nelse do the following\nprint 0 and newline\nsemicolumn
"int main() {\n\tstring s;\n\tcin >> s;\n\tint k;\n\tcin >> k;\n\tint cnt = 0;\n\tif (k > s.size())\n\t\tcout << ""impossible"" << endl;\n\telse {\n\t\tint exrt;\n\t\tint freq[30] = {0};\n\t\tfor (int i = 0; i < s.size(); i++) {\n\t\t\texrt = int(s[i]) - 96;\n\t\t\tfreq[exrt]++;\n\t\t}\n\t\tfor (int i = 0; i < 30; i++) {\n\t\t\tif (freq[i] != 0) cnt++;\n\t\t}\n\t\tif (k <= cnt)\n\t\t\tcout << ""0"" << endl;\n\t\telse\n\t\t\tcout << k - cnt << endl;\n\t}\n\treturn 0;\n}"	"declare new string s\nread input to s\nk is a new integer\nread input to k\ncreate new integer called cnt with value 0\nif k is greater than length of s\nprint ""impossible""\nelse\ncreate new integer exrt\ncreate new array of integers freq with size 30 filled with 0\nfor i from 0 to length of s exclusive incrementing i\nassign the new value = (s[i]) - 96 to exrt\nincrement freq[exrt] by one\nin a for loop, change i from 0 to 30 exclusive\nincrement cnt if freq[i] != 0\nif k <= cnt\nprint ""0"" to the standard output\nelse\nprint k - cnt"
"const long long int INF = (1LL << 60) - 1;\nconst long long int MAX = 998244353;\nlong long int fast_exp(long long int base, long long int exp, long long int m) {\n\tlong long int res = 1;\n\twhile (exp > 0) {\n\t\tif (exp % 2 == 1) { res = (res * base) % m; }\n\t\tbase = (base * base) % m;\n\t\texp /= 2;\n\t}\n\treturn res % m;\n}\nint main() {\n\tstring s;\n\tint k, cnt = 0;\n\tcin >> s >> k;\n\tint freq[26] = {0};\n\tint n = s.length();\n\tfor (int i = 0; i < n; i++) { freq[s[i] - 'a']++; }\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (freq[i]) { cnt++; }\n\t}\n\tif (cnt >= k) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tif (n < k) {\n\t\tcout << ""impossible"" << endl;\n\t\treturn 0;\n\t}\n\tcout << k - cnt << endl;\n\treturn 0;\n}"	"create constant long long integer INF = (1LL << 60) - 1\nnew const long long integer MAX = 998244353\nfast_exp is a long long int function with long long int arguments base, exp and m\ndeclare long long integer variable res = 1\nwhile exp > 0\nif exp is odd, assign (res * base) % m to res\nchange the value of base to base squared % m\ndivide exp by 2\nreturn res modulo m\ns is a new string\ndeclare integers k and cnt with cnt = 0\nread variables s and k from the input\nfreq is a new array of integers with 26 elements filled with 0\ndeclare integer n with value length of s\nstart for loop from i = 0 to n exclusive, incrementing freq[s[i] - 'a']\nin a for loop, change i from 0 to 26 exclusive incrementing i\nif freq[i] is not 0, increment cnt by one\nif cnt >= k\nprint 0\nif n is less than k\nprint ""impossible""\nprint k - cnt"
"int main() {\n\tstring s;\n\tcin >> s;\n\tint n;\n\tcin >> n;\n\tif (n > (int)s.size())\n\t\tcout << ""impossible\n"";\n\telse {\n\t\tcout << max(0, n - (int)set<char>(s.begin(), s.end()).size()) << '\n';\n\t}\n}"	"declare string s\nread s\ndeclare integer n\nread n\nif n is greater than integer casted size of s\nprint ""impossible\n""\nelse\nprint maximum of ( o and n - size of integer casted character set initialized with ( beginning of s to end of s )), '\n'"
"string a;\nint s, num, p[1001];\nint main() {\n\tcin >> a >> s;\n\tif (a.size() < s) {\n\t\tcout << ""impossible"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < a.size(); i++) {\n\t\tif (!p[a[i]]) num++;\n\t\tp[a[i]] = 1;\n\t}\n\tcout << max(0, s - num) << endl;\n\treturn 0;\n}"	create string a\ncreate int s, num, p[1001]\nread a and s\nif size of a < s\nprint impossible\nfor i=0 to size of s exclusive\nif p[a[i]]=0, increment ans\nset p[a[i]] = 1\nprint max of 0 and s-m
"int main() {\n\tstring str;\n\tcin >> str;\n\tlong long int k;\n\tcin >> k;\n\tlong long int freq[27] = {0};\n\tif (k > str.size())\n\t\tcout << ""impossible"";\n\telse {\n\t\tfor (long long int i = 0; i < str.size(); i++) { freq[str[i] - 'a' + 1]++; }\n\t\tlong long int count = 0;\n\t\tfor (long long int i = 1; i <= 26; i++) {\n\t\t\tif (freq[i] != 0) count++;\n\t\t}\n\t\tif (count >= k)\n\t\t\tcout << ""0"";\n\t\telse {\n\t\t\tcout << (k - count);\n\t\t}\n\t}\n\tcout << endl;\n\treturn 0;\n}"	str = string\nread str\nk = long long integer\nread k\nfreq = long long integer array of size 27, freq[0] = 0\nif k > size of str\nprint impossible\nelse\nfor i = 0 to size of str exclusive, then increase by 1 freq[str[i] - a + 1]\ncount = long long integer = 0\nfor i = 1 to 26 inclusive\nif freq[i] is not 0, then increase count by 1\nif count >= k\nprint 0\nelse\nprint k - count\nprint endline
"const int maxn = 3e5 + 5;\nint a[50] = {};\nint main() {\n\tstring s;\n\tint k;\n\tcin >> s >> k;\n\tfor (int i = 0; i < s.length(); i++) a[s[i] - 'a']++;\n\tint sum = 0, cnt = 0;\n\tfor (int i = 0; i < 30; i++) {\n\t\tif (a[i] > 0) cnt++;\n\t\tsum += a[i];\n\t}\n\tif (sum < k) return puts(""impossible""), 0;\n\tif (cnt >= k) return puts(""0""), 0;\n\tcout << k - cnt << endl;\n}"	"declare constant integer maxn = 3e5 + 5\ndeclare integer array a size 50 = {}\ndeclare string s\ndeclare integer k\nread s and k\nfor i = 0 to length of s exclusive, increment a[s[i]-'a']\ndeclare integers sum = 0, cnt = 0\nfor i = 0 to 30 exclusive\nif a[i] is greater than 0, increment cnt\nincrement sum by a[i]\nif sum is less than k, return print ""impossible"", 0\nif cnt is greater than or equal to k, return print ""0"", 0\nprint k - cnt and newline"
"const int inf = 0x3f3f3f3f;\nconst int mod = (int)1e9 + 7;\nconst int maxn = (int)1e5 + 5;\nint vis[30];\nint main() {\n\tstring s;\n\tcin >> s;\n\tint len = s.size();\n\tint n;\n\tcin >> n;\n\tif (n > len) return 0 * puts(""impossible"");\n\tfor (int i = 0; i < len; i++) { vis[s[i] - 'a']++; }\n\tint cnt = 0;\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (vis[i]) cnt++;\n\t}\n\tif (cnt >= n)\n\t\tputs(""0"");\n\telse\n\t\tcout << n - cnt << endl;\n\treturn 0;\n}"	"declare constant integer inf = 0x3f3f3f3f\ndeclare constant integer mod = integer casted 1e9 + 7\ndeclare constant integer maxn = integer casted 1e5 + 5\ndeclare integer array vis size 30\ndeclare string s\nread s\ndeclare integer len = size of s\ndeclare integer n\nread n\nif n is greater than len, return 0 * print ""impossible""\nfor i = 0 to len exclusive, increment vis[s[i] - 'a']\ndeclare integer cnt = 0\nfor i = 0 to 26 exclusive\nif vis[i], increment cnt\nif cnt is greater than or equal to n\nprint ""0""\nelse\nprint n - cnt and newline"
"int main() {\n\tstring s;\n\tint k, cnt[26] = {0};\n\tcin >> s >> k;\n\tif (s.length() < k) {\n\t\tcout << ""impossible""\n\t\t\t<< ""\n"";\n\t} else {\n\t\tfor (int i = 0; i < s.length(); i++) { cnt[s[i] - 97]++; }\n\t\tint res = 0;\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\tif (cnt[i]) { res++; }\n\t\t}\n\t\tcout << max(0, k - res) << ""\n"";\n\t}\n\treturn 0;\n}"	"s=string\nk=int, cnt=array of 26 int filled with 0\nread s,k\nif length of s < k\nprint ""impossibile""\nprint newline\nelse\nfor i=0 to length of s exclusive increment cnt[s[i]-97]\nres=0\nfor i=0 to 26 exclusive\nif cnt[i] increment res\nprint max(0, k-res)"
"int main() {\n\tint k;\n\tstring s;\n\tcin >> s >> k;\n\tif (s.size() < k) return cout << ""impossible\n"", 0;\n\tsort(s.begin(), s.end());\n\ts.resize(unique(s.begin(), s.end()) - s.begin());\n\tcout << max(k - (int)s.size(), 0) << endl;\n\treturn 0;\n}"	"declare integer k\ndeclare string s\nread s and k\nif size of s is less than k, return print ""impossible\n"", 0\nsort from beginning of s to end of s\nresize s to size ( remove all duplicates but one from ( beginning of s to end of s ) - beginning of s )\nprint maximum of ( k - integer casted size of s and 0 ) and newline"
"int n, num, ans;\nstring str;\nint main() {\n\tcin >> str;\n\tcin >> n;\n\tif (str.size() < n) {\n\t\tcout << ""impossible\n"";\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (str.find('a' + i) != -1) num++;\n\t}\n\tcout << max(n - num, 0) << ""\n"";\n\treturn 0;\n}"	"declare integers n, num, ans\ndeclare string str\nread str\nread n\nif size of str is less than n\nprint ""impossible\n""\nfor i = 0 to 26 exclusive\nif first index of 'a' + i in str is not -1, increment num\nprint maximum of ( n - num and 0 ) and ""\n"""
"const int N = 2e6 + 5;\nlong long power(long long x, unsigned long long y, long long p) {\n\tlong long res = 1;\n\tx = x % p;\n\twhile (y > 0) {\n\t\tif (y & 1) res = (res * x) % p;\n\t\ty = y >> 1;\n\t\tx = (x * x) % p;\n\t}\n\treturn res;\n}\nlong long i, j;\nint main() {\n\tstring s;\n\tlong long k;\n\tcin >> s >> k;\n\tif (k > (long long)s.size()) {\n\t\tcout << ""impossible"" << '\n';\n\t\treturn 0;\n\t} else {\n\t\tset<char> temp;\n\t\tfor (i = 0; i < (long long)s.size(); i++) {\n\t\t\ttemp.insert(s[i]);\n\t\t\tif ((long long)temp.size() == k) {\n\t\t\t\tcout << 0 << '\n';\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tcout << k - (long long)temp.size() << '\n';\n\t\treturn 0;\n\t}\n\treturn 0;\n}"	"create constant integer N with value 2e6 + 5\nlong long function power with long long arguments x and p and unsigned long long argument y\ncreate new long long variable res with value 1\nassign x modulo p to x\nwhile y > 0\nif y & 1 is not 0, change res to (res * x) % p\nassign the new value = y to y\nchange x to (x * x) % p\nreturn res\ndeclare new long long variables i and j\ndeclare string variable with name s\ncreate new long long k\nread s and k from the input\nif k is greater than length of s\nprint ""impossible"" and '\n' to the standard output\nelse\ntemp is a set of unique characters\nfor i = 0 to length of s exclusive\ninsert s[i] into temp\nif length of temp = k\nprint 0 and '\n'\nprint k - length of temp and '\n'"
"int main() {\n\tstring s;\n\tint k;\n\tcin >> s >> k;\n\tif (k > s.size()) {\n\t\tcout << ""impossible\n"";\n\t\treturn 0;\n\t}\n\tsort(s.begin(), s.end());\n\ts.erase(unique(s.begin(), s.end()), s.end());\n\tcout << max(k - (int)s.size(), 0) << endl;\n\treturn 0;\n}"	"declare string s\ndeclare integer k\nread s and k\nif k is greater than size of s\nprint ""impossible\n""\nsort from beginning of s to end of s\nremove from ( remove all but first of ( beginning of s to end of s ) ) to end of s from s\nprint maximum of ( k - integer casted size of s and 0 ) and newline"
"int N, K, ans = 2e9, A[26], val, x, y;\nstring T, S;\nint main() {\n\tcin >> S >> N;\n\tif (S.length() < N) {\n\t\tcout << ""impossible\n"";\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < S.length(); i++) {\n\t\tA[S[i] - 'a']++;\n\t\tif (A[S[i] - 'a'] == 1) val++;\n\t}\n\tcout << max(0, N - val) << '\n';\n}"	let N, K, ans , val, x, y be integers with ans = 2e9 , A = array of integers of length 26\nlet T, S be strings\nread S, N\nif length of S is less than N\nprint impossible and newline\nfor integer i = 0 to length of S exclusive\nincrement A[S[i] - a] by 1\nif A[S[i] - a is equal to 1 , increment val by 1\nprint maximum of 0, N - val and newline
"int k, haSh[30];\nstring s;\nint main() {\n\tcin >> s >> k;\n\tif (k > s.size()) {\n\t\tcout << ""impossible"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (!haSh[(s[i] - 'a')]) {\n\t\t\thaSh[s[i] - 'a'] = 1;\n\t\t\tk--;\n\t\t}\n\t}\n\tif (k <= 0) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t} else {\n\t\tcout << k << endl;\n\t}\n\treturn 0;\n}"	"create new int k and an array of ints haSh with 30 elements\ndeclare string variable s\nread standard input to s and k\nif k is greater than length of s\nprint ""impossible""\nstart for loop from i = 0 to length of s exclusive\nif haSh[(s[i] - 'a')] is false\nchange haSh[s[i] - 'a'] to 1\ndecrement k by one\nif k <= 0\nprint 0\nelse\nprint k"
"int main() {\n\tstring s;\n\tint k;\n\tcin >> s >> k;\n\tset<char> ms;\n\tfor (int i = 0; i < s.size(); i++) { ms.insert(s[i]); }\n\tif (s.size() < k)\n\t\tcout << ""impossible"" << endl;\n\telse {\n\t\tif (ms.size() < k)\n\t\t\tcout << k - ms.size() << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}"	"declare string variable with name s\nk is a new integer\nread standard input to s and k\nms is a set of unique characters\ninsert all elements of s into ms\nif length of s is less than k\nprint ""impossible""\nelse\nif length of ms is less than k\nprint k - length of ms\nelse\nprint 0 to the standard output"
"const int INF = 0x3f3f3f3f;\nconst int mod = 998244353;\nstring s;\nint k, vis[26], cnt;\nint main() {\n\tcin >> s >> k;\n\tif (s.size() < k)\n\t\treturn puts(""impossible""), 0;\n\telse {\n\t\tfor (int i = 0; i < s.size(); i++) {\n\t\t\tif (vis[s[i] - 'a'] == 0) {\n\t\t\t\tvis[s[i] - 'a'] = 1;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tif (cnt >= k)\n\t\t\tcout << 0 << endl;\n\t\telse\n\t\t\tcout << k - cnt << endl;\n\t}\n\treturn 0;\n}"	"create new constant integer INF = 0x3f3f3f3f\ndeclare integer constant mod with value 998244353\ncreate new string s\ndeclare integers k and cnt and an integer array vis with 26 elements\nread s and k from the input\nif length of s is less than k\nreturn puts(""impossible""), 0\nelse\nin a for loop, change i from 0 to length of s exclusive\nif vis[s[i] - 'a'] is equal to 0\nset the value of vis[s[i] - 'a'] to 1\nincrement cnt\nif cnt >= k\nprint 0\nelse\nprint k - cnt"
"int main() {\n\tstring input, insertion;\n\tint unique, inputLength = 0;\n\tcin >> input >> unique;\n\tinputLength = input.length();\n\tif (inputLength < unique) {\n\t\tcout << ""impossible"" << endl;\n\t} else {\n\t\tset<string> inputs;\n\t\tfor (int i = 0; i < inputLength; i++) {\n\t\t\tinsertion = input[i];\n\t\t\tinputs.insert(insertion);\n\t\t}\n\t\tif (unique > inputs.size())\n\t\t\tcout << unique - inputs.size() << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t}\n}"	"create new strings input and insertion\ncreate new integers unique and inputLength with inputLength = 0\nread input and unique from the input\nassign the new value = length of input to inputLength\nif inputLength is less than unique\nprint ""impossible""\nelse\ncreate new set of unique strings called inputs\nstart for loop from i = 0 to inputLength exclusive\nchange the value of insertion to input[i]\ninsert insertion to the inputs\nif unique is greater than length of inputs\nprint unique - length of inputs\nelse\nprint 0"
"const int maxn = 3e5 + 5;\nint a[50] = {};\nint main() {\n\tstring s;\n\tint k;\n\tcin >> s >> k;\n\tfor (int i = 0; i < s.length(); i++) a[s[i] - 'a']++;\n\tint sum = 0, cnt = 0;\n\tfor (int i = 0; i < 30; i++) {\n\t\tif (a[i] > 0) cnt++;\n\t\tsum += a[i];\n\t}\n\tif (sum < k) return puts(""impossible""), 0;\n\tif (cnt >= k) return puts(""0""), 0;\n\tcout << k - cnt << endl;\n}"	maxn = constant integer = 3e5 + 5\na = integer array of size 50\ns = string\nk = integer\nread s, k\nfor i = 0 to length of s, then increase a[s[i] - a] by 1\nsum = integer = 0, cnt = integer = 0\nfor i = 0 to 30 exclusive\nif a[i] > 0, then increase cnt by 1\nsum = sum + a[i]\nif sum < k, then print impossible then end execution of code\nif cnt >= k print 0 then end execution of code\nprint k - cnt
int main() {\n\tint n, pre, cur, nex, sum = 0;\n\tcin >> n;\n\tif (n == 1 || n == 2) return cout << 0 << endl, 0;\n\tcin >> pre >> cur;\n\tn -= 2;\n\twhile (n--) {\n\t\tcin >> nex;\n\t\tif ((cur > pre && cur > nex) || (cur < pre && cur < nex)) sum++;\n\t\tpre = cur;\n\t\tcur = nex;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	let n, pre, cur, nex, sum be integers, let sum = 0\nread n\nif n equals 1 or 2, return and print 0\nread pre, cur\nsubract 2 from n\nwhile n > 0\nread nex\nif cur > pre && cur > nex or cur < pre && cur < nex, add one to sum\nlet pre = cur\nlet cur = nex\nprint sum
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tint ans = 0;\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tif ((a[i] - a[i - 1]) * (a[i] - a[i + 1]) > 0) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integer variable n\nread n\ncreate vector of integers a with size n\nread n elements from the user input and out them into a\nans is a new integer with value 0\nstart a loop from i = 1 to n - 1 exclusive\nif (a[i] - a[i - 1]) * (a[i] - a[i + 1]) is greater than 0, increment ans\nprint ans
int main() {\n\tint n, c = 0;\n\tvector<int> v;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tv.push_back(a);\n\t}\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tif (v[i] > v[i + 1] && v[i] > v[i - 1]) {\n\t\t\tc++;\n\t\t} else if (v[i] < v[1 + i] && v[i] < v[i - 1]) {\n\t\t\tc++;\n\t\t}\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	declare integers n, c = 0\ndeclare integer vector v\nread n\nfor i = 0 to n exclusive\ndeclare integer a\nread a\nadd a to end of v\nfor i = 1 to n - 1 exclusive\nif v[i] is greater than v[i+1] and v[i] is greater than v[i-1]\nincrement c\nelse if v[i] is less than v[1+i] and v[i] is less than v[i-1]\nincrement c\nprint c and newline
int a[1005];\nint main() {\n\tint n, ans = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1]) ans++;\n\t\tif (a[i] < a[i - 1] && a[i] < a[i + 1]) ans++;\n\t}\n\tcout << ans << endl;\n}	create int a[1005]\ncreate int n, set ans to 0\nread n\nfor i=0 to n exclusive, read a[i]\nfor i=1 to n-1 exclusive\nif a[i] > a[i - 1] and a[i] > a[i + 1], increment ans\nif a[i] < a[i - 1] and a[i] < a[i + 1], increment ans\nprint ans
int n, a[1001];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tint ans = 0;\n\tfor (int i = 2; i < n; i++) {\n\t\tif (a[i] > a[i + 1] && a[i] > a[i - 1]) {\n\t\t\tans++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (a[i] < a[i + 1] && a[i] < a[i - 1]) { ans++; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create int n, a[1001]\nread n\nfor i=1 to n inclusive, read a[i]\nans=0\nfor i=2 to n exclusive\nif a[i] > a[i + 1] and a[i] > a[i - 1]\nincrement ans\ncontinue\nif a[i] < a[i + 1] and a[i] < a[i - 1], increment ans\nprint ans
int maxsum, minsum, a[1005], n;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 2; i < n; i++) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1]) { maxsum++; }\n\t\tif (a[i] < a[i - 1] && a[i] < a[i + 1]) { minsum++; }\n\t}\n\tcout << maxsum + minsum << endl;\n\treturn 0;\n}	maxsum, minsum, a, n = integers with a = array of size 1005\nread n\nfor i = 1 to n, read a[i]\nfoe i = 2 to n exclusive\nif (a[i] > a[i - 1] and a[i] > a[i + 1]), increment maxsum\nif (a[i] < a[i - 1] and a[i] < a[i + 1]), increment minsum\nprint maxsum + minsum
int main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int a[n + 1] = {0};\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tlong long int c = 0, d = 0;\n\tfor (int i = 2; i < n; i++) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1] || a[i] < a[i - 1] && a[i] < a[i + 1]) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	declare long long integer n\nread n\ndeclare long long integer array a size n + 1 = {0}\nfor i = 1 to n inclusive, read a[i]\ndeclare long long integers c = 0, d = 0\nfor i = 2 to n exclusive\nif a[i] is greater than a[i-1] and a[i] is greater than a[i+1] or a[i] is less than a[i-1] and a[i] is less than a[i+1], increment c\nprint c and newline
const double g = 9.8;\nconst int mod = 1000000007;\nint n, i, j, k, ans;\nconst int x = 1e5;\nlong long a[x];\nint main() {\n\tint i, j, k, m, n, t;\n\tcin >> t;\n\tfor (i = 0; i < t; i++) cin >> a[i];\n\tint num = 0;\n\tfor (i = 1; i < t - 1; i++) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1]) num++;\n\t\tif (a[i] < a[i - 1] && a[i] < a[i + 1]) num++;\n\t}\n\tcout << num << endl;\n\treturn 0;\n}	g = 9.8\nset mod = 1000000007\ncreate int n, i, j, k, ans\nset x = 1e5\ncreate long long a[x]\ncreate int i, j, k, m, n, t\nread t\nfor i=0 to t exclusive, read a[i]\nnum=0\nfor i=1 to t-1 exclusive\nif a[i] > a[i - 1] and a[i] > a[i + 1], increment num\nif a[i] < a[i - 1] and a[i] < a[i + 1], add 1 to num\nprint num
const int maxn = 1e5 + 5;\nconst double esp = 1e-8;\ninline int read() {\n\tint X = 0, w = 0;\n\tchar ch = 0;\n\twhile (!isdigit(ch)) {\n\t\tw |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile (isdigit(ch)) X = (X << 3) + (X << 1) + (ch ^ 48), ch = getchar();\n\treturn w ? -X : X;\n}\nlong long a[maxn];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tint num = 0;\n\tfor (int i = 2; i <= n - 1; i++) {\n\t\tif (a[i] > a[i + 1] && a[i] > a[i - 1] || a[i] < a[i - 1] && a[i] < a[i + 1]) ++num;\n\t}\n\tcout << num << endl;\n}	make constant integer maxn = 1e5 + 5\nmake const double esp = 1e-8\ndeclare inline read returning integer\nmake int X = 0 and w = 0\nlet char ch = 0\nwhile ch is not a digit\nset w to w | ch == '-'\nread ch\nwhile ch is a digit, set X to X << 3) + (X << 1) + (ch ^ 48) and ch to getchar()\nreturn -X if w is truthy or X if not\nmake long long int array a of size maxn\nmake integer n\nread n\nfor i = 1 to n, read a[i]\ncreate integer num = 0\nfor i = 1 to n - 1\nif a[i] is greater than a[i + 1] and a[i] is greater than a[i - 1] or a[i] is less than a[i - 1] or a[i] is less than a[i - 1] and a[i] is less than a[i + 1], increment num\noutput num
int n, l, mid, r, now;\nint main() {\n\tcin >> n;\n\tint ans = 0;\n\tcin >> l;\n\tif (n >= 1)\n\t\t;\n\tif (n >= 2) { cin >> mid; }\n\tif (n >= 3) {\n\t\tn -= 2;\n\t\twhile (n--) {\n\t\t\tcin >> r;\n\t\t\tif (mid < l && mid < r)\n\t\t\t\tans++;\n\t\t\telse if (mid > l && mid > r)\n\t\t\t\tans++;\n\t\t\tl = mid;\n\t\t\tmid = r;\n\t\t}\n\t}\n\tcout << ans << endl;\n}	create ints n, l, mid, r, and now\nread n\nmake integer ans = 0\nread l\nif n is greater than or equal to 1\nend statement\nif n is greater than or equal to 2, read mid\nif n is greater than or equal to 3\nset n to n - 2\nwhile n-- is truthy\nread r\nif mid is less than 1 and mid is less than r\nset ans to ans + 1\nelse if mid is greater than 1 and mid is greater than r\nset ans to ans + 1\nset l to mid\nset mid to r\noutput ans
int main() {\n\tint ans = 0, a[1002], n, i;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (i = 2; i < n; i++) {\n\t\tif (a[i] > a[i + 1] && a[i] > a[i - 1]) {\n\t\t\tans++;\n\t\t} else if (a[i] < a[i + 1] && a[i] < a[i - 1]) {\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create int a[1002], n, i, set ans to 0\nread n\nfor i=1 to n inclusive, read a[i]\nfor i=2 to n exclusive\nif a[i] > a[i + 1] and a[i] > a[i - 1]\nincrement ans\nelse if a[i] < a[i + 1] and a[i] < a[i - 1]\nincrement ans\nprint ans
long long a[1001];\nint main() {\n\tlong long n, ans = 0;\n\tcin >> n;\n\tfor (long long i = 0; i < n; i++) cin >> a[i];\n\tfor (long long i = 1; i < n - 1; i++) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1]) ans++;\n\t\tif (a[i] < a[i - 1] && a[i] < a[i + 1]) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	a = long long array length 1001\nlet n, ans = 0 be long long\nread n\nread the first n elements of a\nfor long long i = 1 to n-1 exclusive\nif a[i] > a[i-1] and a[i] > a[i+1] then increment ans\nif a[i] < a[i-1] and a[i] < a[i+1] then increment ans\nprint ans
"int main() {\n\tint n, ans = 0;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; ++i) cin >> a[i];\n\tfor (int i = 1; i < n - 1; ++i)\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1] || a[i] < a[i - 1] && a[i] < a[i + 1]) ++ans;\n\tcout << ans << ""\n"";\n\tcin >> n;\n}"	let n and ans be integers, set ans to 0\nread in n\nlet a be an array of integers of size n\nread in n values into a\nfor i = 1 to n -1\nif a[i] > a[i - 1] and a[i] > a[i + 1] or a[i] < a[i - 1] and a[i] < a[i + 1], increment a\nprint ans and a newline\nread in n
int main() {\n\tint n, c = 0;\n\tcin >> n;\n\tint a[n + 2];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tif (a[i] < a[i - 1] && a[i] < a[i + 1]) {\n\t\t\tc++;\n\t\t} else if (a[i] > a[i - 1] && a[i] > a[i + 1]) {\n\t\t\tc++;\n\t\t}\n\t}\n\tcout << c << endl;\n}	create int n, set c to 0\nread n\ncreate int a[n + 2]\nfor i=0 to n exclusive, read a[i]\nfor i=1 to n-1 exclusive\nif a[i] < a[i - 1] and a[i] < a[i + 1]\nincrement c\nelse if a[i] > a[i - 1] and a[i] > a[i + 1]\nincrement c\nprint c
long long gcd(long long a, long long b) {\n\treturn !b ? a : gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) {\n\treturn (a / gcd(a, b)) * b;\n}\nint dix[] = {1, -1, 0, 0, 1, 1, -1, -1};\nint diy[] = {0, 0, 1, -1, 1, -1, 1, -1};\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> v(n);\n\tint res = 0;\n\tfor (int i = 0; i < n; i++) cin >> v[i];\n\tfor (int i = 1; i < n - 1; i++)\n\t\tif (v[i] > v[i - 1] && v[i] > v[i + 1]) res++;\n\tfor (int i = 1; i < n - 1; i++)\n\t\tif (v[i] < v[i - 1] && v[i] < v[i + 1]) res++;\n\tcout << res << '\n';\n\treturn 0;\n\t;\n}	let gcd be a function which accepts long integers a and b and returns a long integer\nreturn a if (not b) else return gcd of b and a modulo b\nlet lcm be a function which accepts long integers a and b and returns a long integer\nreturn the value of (a / gcd of a and b) * b\nlet dix be an integer array with elements as 1, -1, 0, 0, 1, 1, -1, -1\nlet diy be an integer array with elements as 0, 0, 1, -1, 1, -1, 1, -1\nlet n be a integer\nread n\ncreate a vector of integers v and size n\nthe integer value of res = 0\nfor i = 0 to n exclusive , read v[i]\nfor i = 1 to n - 1 exclusive\nif v[i] is greater than v[i - 1] and v[i] is greater than v[i + 1] , increment res by 1\nfor i = 1 to n - 1 exclusive\nif v[i] is less than v[i - 1] and v[i] is less than v[i + 1] , increment res by 1\nprint res and newline\nsemicolumn
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a[1005];\n\t\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\t\tint num = 0;\n\t\tfor (int i = 1; i < n - 1; i++) {\n\t\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1]) num++;\n\t\t\tif (a[i] < a[i - 1] && a[i] < a[i + 1]) num++;\n\t\t}\n\t\tcout << num << endl;\n\t}\n}	n = integer\nwhile read n\na = integer array of size 1005\nfor i = 0 to n exclusive, read a[i]\nnum = integer with num = 0\nfor i = 1 to n - 1 exclusive\nif (a[i] > a[i - 1] and a[i] > a[i + 1]), increment num\nif (a[i] < a[i - 1] and a[i] < a[i + 1]), increment num\nprint num
int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tint sol = 0;\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tif (((arr[i] - arr[i - 1]) * (arr[i] - arr[i + 1])) > 0) sol++;\n\t}\n\tcout << sol << endl;\n\treturn 0;\n}	n = int\nread n\narr = int array length n\nread the first n elements of arr\nsol = 0 = int\nfor i = 1 to n - 1exclusive\nif ((arr[i] - arr[i - 1]) * (arr[i] - arr[i + 1])) is stricly positive then increment sol\nprint sol
int main() {\n\tint r;\n\twhile (cin >> r) {\n\t\tint sum = 0;\n\t\tint a[1001] = {0};\n\t\tfor (int i = 0; i < r; i++) cin >> a[i];\n\t\tfor (int i = 1; i < r - 1; i++) {\n\t\t\tif (a[i] < a[i - 1])\n\t\t\t\tif (a[i] < a[i + 1])\n\t\t\t\t\tsum++;\n\t\t\t\telse\n\t\t\t\t\t;\n\t\t\telse if (a[i] > a[i - 1])\n\t\t\t\tif (a[i] > a[i + 1]) sum++;\n\t\t}\n\t\tcout << sum << endl;\n\t}\n}	r =integer\nwhile reading values r\nsum = integer with 0\na = array of 1001 integers with 0 elements\nRead r values into array a\nfor i = 1 to r - 1 exclusive\nif a[i] is less than a[i - 1]\nif a[i] is less than a[i + 1]\nincrement sum\nelse do the following\ndo nothing\nelse if a[i] is greater than a[i - 1]\nif a[i] is less than a[i + 1], then increment sum\nprint sum and new line
int main() {\n\tint n, i, extrema = 0, arr[1000 + 5];\n\tcin >> n;\n\tfor (i = 0; i < n; ++i) { cin >> arr[i]; }\n\tfor (i = 1; i < n - 1; ++i) {\n\t\tif (arr[i] > arr[i - 1] && arr[i] > arr[i + 1])\n\t\t\t++extrema;\n\t\telse if (arr[i] < arr[i - 1] && arr[i] < arr[i + 1])\n\t\t\t++extrema;\n\t}\n\tcout << extrema << endl;\n\treturn (0);\n}	let n, i, extrema = 0, arr[1000 + 5] be ints\nread n\nfor i = 0 to n exclusive increment i first, read arr[i]\nfor i = 1 to n-1 increment i first\nif arr[i] > arr[i-1] and arr[i] > arr[i+1]\nincrement first extrema\nelse if arr[i] < arr[i - 1] and arr[i] < arr[i + 1]\nincrement first extrema\nprint extrema\nreturn 0
int main() {\n\tint n;\n\tcin >> n;\n\tint *elements = new int[n];\n\tfor (int i = 0; i < n; i++) { cin >> elements[i]; }\n\tint count = 0;\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tint prev = elements[i - 1];\n\t\tint cur = elements[i];\n\t\tint next = elements[i + 1];\n\t\tif ((cur < prev && cur < next) || (cur > prev && cur > next)) { count++; }\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	let n be a integer\nread n\nlet *elements be a integer with *elements = new int[n]\nfor i = 0 to n exclusive , read elements[i]\nthe integer value of count = 0\nfor i = 1 to n - 1 exclusive\nthe integer value of prev = elements[i - 1]\nthe integer value of cur = elements[i]\nthe integer value of next = elements[i + 1]\nif (cur is less than prev and cur is less than next) or (cur is greater than prev and cur is greater than next) , increment count by 1\nprint count and newline
int main() {\n\tint a[1005], n, k;\n\twhile (cin >> n) {\n\t\tk = 0;\n\t\tfor (int i = 0; i < n; i++) cin >> a[i];\n\t\tfor (int i = 1; i < n - 1; i++)\n\t\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1] || a[i] < a[i - 1] && a[i] < a[i + 1]) k++;\n\t\tcout << k << endl;\n\t}\n\treturn 0;\n}	declare new ints n and k and an int array a with size 1005\nread n and loop further\nchange k to 0\nread n elements into a in a loop\nfor i from 1 to n - 1 exclusive incrementing i\nincrement k if a[i] > a[i - 1] and a[i] > a[i + 1] or a[i] < a[i - 1] and a[i] < a[i + 1]\nprint k to the standard output
int main() {\n\tint a[1020], n;\n\tint i;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tint cnt = 0;\n\tfor (i = 1; i < n - 1; i++) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1]) cnt++;\n\t\tif (a[i] < a[i - 1] && a[i + 1] > a[i]) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	n, a = ints with a an int array of length 1020\ni = int\nread n\nread the first n elements of a\ncnt = 0 = int\nfor i = 1 to n - 1 exclusive\nif a at i > a at i - 1 and a at i > a at i + 1 then increment cnt\nif a[i] < a[i - 1] and a[i + 1] > a[i] then increment cnt\nprint cnt
"int n, c = 0;\nvector<int> a(1000);\nint main() {\n\tcin >> n;\n\tfor (__typeof(n) i = 0; i < (n); i++) cin >> a[i];\n\tfor (__typeof(n - 2) i = 1; i <= (n - 2); i++) {\n\t\tif (a[i - 1] > a[i] && a[i + 1] > a[i]) c++;\n\t\tif (a[i - 1] < a[i] && a[i + 1] < a[i]) c++;\n\t}\n\tcout << c << ""\n"";\n}"	make ints n and c = 0\nmake integer vector a of size 1000\nread n\nfor i = 0 to n exclusive, read a[i]\nfor i = 1 to n - 2\nif a[i - 1] is greater than a[i] and a[i + 1] is greater than a[i], add 1 to c\nif a[i - 1] is less than a[i] and a[i + 1] is less than a[i], increment c\nshow c
int main() {\n\tint n;\n\tcin >> n;\n\tint v[n];\n\tfor (int q = 0; q < n; q++) { cin >> v[q]; }\n\tint ans = 0;\n\tfor (int q = 1; q < n - 1; q++) {\n\t\tif (v[q] > v[q - 1] && v[q] > v[q + 1]) {\n\t\t\tans++;\n\t\t} else if (v[q] < v[q - 1] && v[q] < v[q + 1]) {\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n}	create integer n\nread n\nv = array of integers of size n\nread n integers into array v\ncreate integer ans = 0\nfor q=1 to n-1 exclusive\nif v[q] > v[q-1] and v[q] > v[q+1] then\nincrement ans\nelse if v[q] < v[q-1] and v[q] < v[q+1] then\nincrement ans\nprint ans and newline
const int maxn = 1e4 + 10;\nint a[maxn];\nint n;\nint cnt = 0;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (int i = 2; i <= n - 1; i++) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1] || a[i] < a[i - 1] && a[i] < a[i + 1]) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	declare constant integer maxn = 1e4 + 10\na is a new array of integers with size maxn\ncreate integer variable n\ndeclare new integer cnt = 0\nread variable n from the input\nstart a loop from i = 1 to n inclusive, and read a[i] from the input on each loop\nin a for loop, change i from 2 to n - 1 inclusive incrementing i\nif a[i] > a[i - 1] and a[i] > a[i + 1] or a[i] < a[i - 1] and a[i] < a[i + 1], increment cnt\nprint cnt
"int main() {\n\tstring s;\n\tcin >> s;\n\tstack<char> st;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (st.empty())\n\t\t\tst.push(s[i]);\n\t\telse if (st.top() == s[i])\n\t\t\tst.pop();\n\t\telse\n\t\t\tst.push(s[i]);\n\t}\n\tstring tmp = """";\n\twhile (!st.empty()) {\n\t\ttmp += st.top();\n\t\tst.pop();\n\t}\n\treverse(tmp.begin(), tmp.end());\n\tcout << tmp << ""\n"";\n\treturn 0;\n}"	"create string s\nread s\ncreate character stack st\nfor i = 0 to size of s exclusive\nif st is empty\nadd element s[i] to top of st\nelse if top of st is s[i]\nremove element from top of st\nelse\nadd element s[i] to top of st\ncreate string tmp with tmp = """"\nwhile st is not empty\nincrement tmp by top of st\nremove element from top of st\nreverse element order between beginning of tmp and end of tmp\nprint tmp print ""\n"""
"stack<char> chars;\nint main() {\n\tstring str;\n\tcin >> str;\n\tchar ch;\n\tfor (int i = 0; str[i] != '\0'; i++) {\n\t\tch = str[i];\n\t\tif (!chars.empty()) {\n\t\t\tif (chars.top() == ch)\n\t\t\t\tchars.pop();\n\t\t\telse\n\t\t\t\tchars.push(ch);\n\t\t} else\n\t\t\tchars.push(ch);\n\t}\n\tvector<char> result;\n\twhile (!chars.empty()) {\n\t\tresult.push_back(chars.top());\n\t\tchars.pop();\n\t}\n\tfor (int i = result.size() - 1; i >= 0; i--) cout << result[i];\n\tcout << ""\n"";\n\treturn 0;\n}"	"create character stack chars\ncreate string str\nread str\ncreate character ch\nfor i = 0 to str[i] is not '\0', iincrementing i\nset ch to str[i]\nif chars is not empty\nif top of chars is ch\nremove element from top of chars\nelse\nadd element ch to top of chars\nelse\nadd element ch to top of chars\ncreate character vector result\nwhile chars is not empty\nadd element top of chars to end of result\nremove element from top of chars\nfor i = size of result - 1 to 0 inclusive, decrementing i, print result[i]\nprint ""\n"""
const long long OO = 1e8;\nconst int o_o = 0;\ndouble EPS = numeric_limits<double>::epsilon();\nint const MAX = 2 * 100000 + 9;\nchar ar[MAX];\nint co = -1;\nvoid inzlition() {\n\tfor (int i = 0; i < MAX; i++) { ar[i] = '0'; }\n}\nint main() {\n\tstring text;\n\tgetline(cin, text);\n\tinzlition();\n\tco = -1;\n\tfor (int i = 0; i < text.size(); i++) {\n\t\tif (co == -1) {\n\t\t\tco++;\n\t\t\tar[co] = text[i];\n\t\t} else if (text[i] == ar[co]) {\n\t\t\tar[co] = '0';\n\t\t\tco--;\n\t\t} else {\n\t\t\tco++;\n\t\t\tar[co] = text[i];\n\t\t}\n\t}\n\tfor (int j = 0; j <= co; j++) { cout << ar[j]; }\n\tcout << endl;\n\treturn 0;\n}	OO = const long long with OO = 1e8\no_o = const integer with o_o = 0\nEPS = double with EPS = double epsilon numeric_limits\nMAX = integer const with MAX = 2 * 100000 + 9\nar = character array of size MAX\nco = integer with co = -1\nin the function inzlition\nfor i = 0 to MAX exclusive, ar[i] = 0\ntext = string\nread text\ncall inzlition\nco = -1\nfor i = 0 to text.size() exclusive\nif co is -1\nincrement co\nar[co] = text[i]\nelse if text[i] is ar[co]\nar[co] = 0\ndecrement co\nelse\nincrement co\nar[co] = text[i]\nfor j = 0 to co, print ar[j]\nprint next line
int main() {\n\tstring s;\n\tvector<char> a;\n\tcin >> s;\n\tlong int n = s.size();\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a.empty())\n\t\t\ta.push_back(s[i]);\n\t\telse if (a.back() != s[i])\n\t\t\ta.push_back(s[i]);\n\t\telse {\n\t\t\ta.pop_back();\n\t\t}\n\t}\n\tfor (int i = 0; i < a.size(); i++) cout << a[i];\n\tcout << endl;\n\treturn 0;\n}	declare string s\ncreate vector of characters a\nread input to s\ndeclare long int n = length of s\nloop i from 0 to n exclusive\nif a is empty\npush s[i] into a\nelse if last element of a is not s[i]\npush s[i] into a\nelse\nremove last element from a\nfor i = 0 to length of a exclusive print a[i]\nprint a new line
"string s;\nint main() {\n\tcin >> s;\n\tint i = s.size() - 1;\n\twhile (i > 0) {\n\t\tif (s[i] == s[i - 1]) { s.erase(i - 1, 2); }\n\t\t--i;\n\t}\n\tcout << s << ""\n"";\n\treturn 0;\n}"	"create string s\nread s\ncreate integer i with i = size of s - 1\nwhile i is greater than 0\nif s[i] is s[i-1], erase from i - 1 to length 2 from s\ndecrement i\nprint s print ""\n"""
int main() {\n\tint x = 0;\n\tstring s2;\n\tcin >> s2;\n\tfor (int i = s2.length() - 2; i >= 0; i--) {\n\t\tif (s2[i] == s2[i + 1]) s2.erase(i, 2);\n\t}\n\tcout << s2 << endl;\n\treturn 0;\n}	x = integer with x = 0\ns2 = string\nread s2\nfor i = s2.length() - 2 down to 0\nif s2[i] is s2[i + 1], erase(i, 2) from s2\nprint s2
int main() {\n\tstring s;\n\tcin >> s;\n\tint l = s.length();\n\tfor (int i = 1; i < l; i++) {\n\t\tif (s[i] == s[i - 1]) {\n\t\t\ts.erase(i - 1, 2);\n\t\t\ti -= 2;\n\t\t}\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	Let s be a string\nRead s\nCreate integer l and set it to length of s\nfor i = 1 to l exclusive\nif s[i] equals s[i - 1]\nerase characters i-1 and i from s\nset i = i - 2\nPrint s
"int main() {\n\tstring str;\n\tcin >> str;\n\tint size = str.size();\n\tstack<char> s;\n\ts.push(str[0]);\n\tfor (int i = 1; i < size; i++) (!s.empty() && str[i] == s.top()) ? s.pop() : s.push(str[i]);\n\tstring ans = """";\n\twhile (!s.empty()) {\n\t\tans += s.top();\n\t\ts.pop();\n\t}\n\treverse(ans.begin(), ans.end());\n\tcout << ans << endl;\n\treturn 0;\n}"	"str = string\nread str\nsize = int with size = size of str\ns = char stack\npush str[0] to s\nfor i = 1 to size if s is not empty and str[i] is top of s then pop s else push str[i] to s\nans = string with ans = """"\nloop while s is not empty\nappend top of s to ans\npop s\nreverse ans\nprint ans"
const int maxn = 2 * 1e5 + 10;\nstack<char> s;\nchar str[maxn];\nint main() {\n\twhile (!s.empty()) s.pop();\n\tint len;\n\tgets(str + 1);\n\tlen = strlen(str + 1);\n\tfor (int i = len; i >= 1; i--) {\n\t\tif (!s.size()) {\n\t\t\ts.push(str[i]);\n\t\t} else {\n\t\t\tif (s.top() == str[i]) {\n\t\t\t\ts.pop();\n\t\t\t} else {\n\t\t\t\ts.push(str[i]);\n\t\t\t}\n\t\t}\n\t}\n\twhile (!s.empty()) {\n\t\tcout << s.top();\n\t\ts.pop();\n\t}\n\tcout << endl;\n\treturn 0;\n}	create constant integer maxn with maxn = 2 * 1e5 + 10\ncreate character stack s\ncreate string array maxn\nwhile s is not empty, remove element from top of s\ncreate integer len\nread string into str + 1\nset len to string length of str + 1\nfor i = len to 1 inclusive, decrementing i\nif not size of s\nadd element str[i] to top of s\nelse\nif top of s is str[i]\nremove element from top of s\nelse\nadd str[i] to top of s\nwhile s is not empty\nprint top of s\nremove element from top of s\nprint newline
"int main() {\n\tstack<char> s;\n\tstring f;\n\tcin >> f;\n\tfor (int i = 0; i < f.length(); i++) {\n\t\tif (s.empty()) {\n\t\t\ts.push(f[i]);\n\t\t} else {\n\t\t\tif (f[i] == s.top())\n\t\t\t\ts.pop();\n\t\t\telse\n\t\t\t\ts.push(f[i]);\n\t\t}\n\t}\n\tstring t = """";\n\twhile (!s.empty()) {\n\t\tt += s.top();\n\t\ts.pop();\n\t}\n\tfor (int i = t.length() - 1; i >= 0; i--) { cout << t[i]; }\n\tcout << endl;\n\treturn 0;\n}"	"create characters stack s\ndeclare string f\nread input to f\nfor i from 0 to length of f exclusive\nif s is empty\npush f[i] to s\nelse\nif f[i] = top element of s\nremove top element of s\nelse\npush f[i] to s\ndeclare string variable t = """"\nwhile s is not empty\nadd top element of s to t\nremove top element of s\nloop i from length of t - 1 to 0 inclusive counting down, print t[i]\nprint"
int main() {\n\tstring s;\n\tcin >> s;\n\tstack<char> c;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (!c.empty() && c.top() == s[i])\n\t\t\tc.pop();\n\t\telse\n\t\t\tc.push(s[i]);\n\t}\n\tstring a;\n\tint y = c.size();\n\twhile (!c.empty()) {\n\t\ta += c.top();\n\t\tc.pop();\n\t}\n\tfor (int i = y - 1; i >= 0; i--) cout << a[i];\n\tcout << endl;\n\treturn 0;\n}	create string s\nread s\ncreate character stack c\nfor i = 0 to size of s exclusive\nif c is not empty and top of c is s[i]\nremove element from top of c\nelse\nadd element s[i] to top of c\ncreate string a\ncreate integer y with y = size of c\nwhile c is not empty\nincrement a by top of c\nremove element from top of c\nfor i = y - 1 to 0 inclusive, decrementing i, print a[i]\nprint newline
"const int N = 1e5 + 5;\nconst int inf = 1e9;\nconst long long INF = 1e18;\nconst double PI = acos(-1.0);\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint main() {\n\tstring s;\n\tcin >> s;\n\tstack<char> st;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (st.empty())\n\t\t\tst.push(s[i]);\n\t\telse {\n\t\t\tif (!st.empty() && st.top() == s[i])\n\t\t\t\twhile (!st.empty() && st.top() == s[i]) st.pop();\n\t\t\telse\n\t\t\t\tst.push(s[i]);\n\t\t}\n\t}\n\tstring ans = """";\n\twhile (!st.empty()) ans += st.top(), st.pop();\n\treverse(ans.begin(), ans.end());\n\tcout << ans << endl;\n\treturn 0;\n}"	"create constant integer N with N = 1e5 + 5\ncreate constant integer inf with inf = 1e9\ncreate constant long long INF with INF = 1e18\ncreate constant double PI with PI = acosign of -1.0\ncreate constant double EPS with EPS = 1e-8\ncreate constant integer MOD with MOD = 1000000007\ncreate string s\nread s\ncreate character stack st\nfor i = 0 to size of s exclusive\nif st is empty\nadd element s[i] to top of st\nelse\nif st is not empty and top of st is s[i]\nwhile st is not empty and top of st is s[i], remove top of st\nelse\nadd element s[i] to top of st\ncreate string ans with ans = """"\nwhile st is not emtpy, increment and by top of st, remove top element from st\nreverse element order from beginning of and to end of ans\nprnt ans print newline"
string a;\nint i;\nint main() {\n\tcin >> a;\n\tfor (i = a.size(); i >= 0; i--) {\n\t\tif (a[i] == a[i + 1]) a.erase(i, 2);\n\t}\n\tcout << a << endl;\n\t;\n}	declare string a\ncreate int i\nread a\nloop i from length of a to 0 inclusive decrementing i\nif a[i] = a[i + 1], remove 2 elements at the index i of a\nprint a
int main() {\n\tstring s;\n\tcin >> s;\n\tchar stack[s.size()];\n\tlong int j = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (j == 0) {\n\t\t\tstack[j++] = s[i];\n\t\t} else if (stack[j - 1] != s[i]) {\n\t\t\tstack[j++] = s[i];\n\t\t} else {\n\t\t\tj--;\n\t\t}\n\t}\n\tfor (int i = 0; i < j; i++) { cout << stack[i]; }\n\tcout << endl;\n\treturn 0;\n}	create string s\nget s\ncreate character array stack with size of s\ncreate long integer j with j=0\nfor integer i=0 to size of s exclusive\nif j is equal to 0 then\nset stack[j] to s[i] and increment j\nelse if stack[j-1] not equal to s[i] then\nset stack[j] to s[i] and increment j\nelse do the following\ndecrement j\nfor i=0 to j exclusive print stack[i]\nprint a new line
const int maxn = 200010;\nchar str[maxn];\nint main() {\n\twhile (cin >> str) {\n\t\tint j = 1, len = strlen(str);\n\t\tfor (int i = 1; i < len; i++) {\n\t\t\tif (str[i] == str[j - 1]) {\n\t\t\t\tj--;\n\t\t\t\tstr[j] = '\0';\n\t\t\t} else {\n\t\t\t\tstr[j++] = str[i];\n\t\t\t}\n\t\t}\n\t\tstr[j] = '\0';\n\t\tcout << str << endl;\n\t}\n\treturn 0;\n}	maxn = const int with maxn = 200010\nstr = char array of size maxn\nloop while reading str\nj, len = int with j = 1 and len = strlen of str\nfor i = 1 to len\nif str[i] is str[j - 1]\ndecrement j\nset str[j] to '\0'\nelse\nset str[j] to str[i] then increment j\nset str[j] to '\0'\nprint str
"stack<char> st;\nint main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++)\n\t\tif (!st.empty() && st.top() == s[i])\n\t\t\tst.pop();\n\t\telse\n\t\t\tst.push(s[i]);\n\ts = """";\n\twhile (!st.empty()) {\n\t\ts += st.top();\n\t\tst.pop();\n\t}\n\tfor (int i = s.length() - 1; i >= 0; i--) cout << s[i];\n\tcout << endl;\n\treturn 0;\n}"	"create stack of chars st\ndeclare string s\nread input to s\nfor i = 0 to length of s exclusive\nif st is not empty and top element of st is not s[i]\nremove top element of st\nelse\npush s[i] into st\nset s to """"\nwhile st is not emptu\nincrease s by top element of st\nremove top element of st\nloop i from length of s - 1 to 0 inclusive decrementing i, printing s[i]\nprint a new line"
int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = s.size() - 2; i >= 0; i--) {\n\t\tif (s[i] == s[i + 1]) { s.erase(i, 2); }\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nread s\nfor i = s.size() - 2 down to 0\nif s[i] is s[i + 1], erase(i, 2) from s\nprint s
int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = (s.length() - 1); i >= 0; i--) {\n\t\tif (s[i] == s[i + 1]) s.erase(i, 2);\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	s = string array\nread s\nfor i = (s.length() - 1) to greater than or equal to 0 do the following\nif s[i] is s[i + 1] then do the following s.erase(i, 2)\noutput s
"const int INF = int(1e9 + 7);\nint main() {\n\tstring s;\n\tcin >> s;\n\tstack<char> p;\n\tfor (int a = 0; a < s.size(); a++) {\n\t\tif (p.empty())\n\t\t\tp.push(s[a]);\n\t\telse {\n\t\t\tif (p.top() == s[a])\n\t\t\t\tp.pop();\n\t\t\telse\n\t\t\t\tp.push(s[a]);\n\t\t}\n\t}\n\ts = """";\n\twhile (!p.empty()) {\n\t\ts += p.top();\n\t\tp.pop();\n\t}\n\treverse((s).begin(), (s).end());\n\tcout << s << endl;\n\treturn 0;\n}"	"declare const int INF = 1e9 + 7 casted to int\ncreate string s\nread s\np is a stack of chars\nloop a from 0 to length of s exclusive\nif p is empty\npush s[a] into p\nelse\nif top element of p = s[a]\nremove top element from p\nelse\npush s[a] into p\nassign """" to s\nwhile p is not empty\nappend top element of p to s\nremove top element from p\nreverse s\nprint s"
"int main() {\n\tstring s;\n\tcin >> s;\n\tstack<char> st;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (!st.empty() && s[i] == st.top())\n\t\t\tst.pop();\n\t\telse\n\t\t\tst.push(s[i]);\n\t}\n\ts = """";\n\twhile (!st.empty()) {\n\t\ts += st.top();\n\t\tst.pop();\n\t}\n\tfor (int i = s.size() - 1; i >= 0; i--) cout << s[i];\n\tcout << endl;\n}"	"create string s\nread s\ncreate character stack st\nfor i = 0 to size of s exclusive\nif st is not empty and s[i] is top of st\nremove element from top of st\nelse\nadd element s[i] to top of st\nset s to """"\nwhile st is not empty\nincrement s by top of st\nremove top element from st\nfor i = size of s - 1 to 0 inclusive, decrementing i, print s[i]\nprint newline"
"int main() {\n\tstring str;\n\tcin >> str;\n\tint pearls = 0, links = 0;\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == 'o')\n\t\t\tpearls++;\n\t\telse\n\t\t\tlinks++;\n\t}\n\tif (pearls == 0 || links == 0) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif ((links % pearls) != 0)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	"make string str\nread str\nlet ints pearls = 0 and links = 0\nfor i = 0 to str.size() exclusive\nif str[i] is equal to 'o'\nincrement pearls\nelse do\nadd 1 to links\nif pearls is equal to 0 or links is equal to 0\nprint ""YES""\nif (links % pearls) is not equal to 0\nshow ""NO""\notherwise\ndisplay ""YES"""
"const int maxn = 110;\nconst int inf = 0x3f3f3f3f;\nchar s[maxn];\nint main() {\n\tstring s;\n\tcin >> s;\n\tint cnt1 = 0, cnt2 = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == 'o')\n\t\t\tcnt1++;\n\t\telse\n\t\t\tcnt2++;\n\t}\n\tif (cnt1 == 0) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tif (cnt2 % cnt1 == 0)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	maxn=110\ninf=3fffffff in exadecimal\ns=array of maxn char\ns = string\nread s\ncnt1,cnt2=0\nfor i=0 to size of s exclusive\nif s[i] is 'o'\nincrement cnt1\nelse\nincrement cnt2\nif cnt1 is 0\nprint YES\nelse\nif cnt2 modulo cnt1 is 0\nprint YES\nelse\nprint NO
"int main() {\n\tchar s[106];\n\twhile (gets(s)) {\n\t\tint a = 0, b = 0, ll = strlen(s);\n\t\tfor (int i = 0; i < ll; i++) {\n\t\t\tif (s[i] == '-')\n\t\t\t\ta++;\n\t\t\telse if (s[i] == 'o')\n\t\t\t\tb++;\n\t\t}\n\t\tif (b == 0 || a % b == 0)\n\t\t\tputs(""YES"");\n\t\telse\n\t\t\tputs(""NO"");\n\t}\n}"	"declare character array s size 106\nwhile read string into s\ndeclare integers a = 0, b = 0, ll = string length of s\nfor i = 0 to ll exclusive\nif s[i] is '-'\nincrement a\nelse if s[i] is 'o'\nincrement b\nif b is 0 or a % b is 0\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint z = 0, x = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'o') { z++; }\n\t\tif (s[i] == '-') { x++; }\n\t}\n\tif (z == 0 || x == 0 || x % z == 0) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"declare string s\nread s\ndeclare integers z = 0, x = 0\nfor i = 0 to length of s exclusive\nif s[i] is 'o', increment z\nif s[i] is '-', increment x\nif z is 0 or x is 0 or x % z is 0\nprint ""YES"" and newline\nelse\nprint ""NO"" and newline"
"char s[243554], zhu, xian;\nint main() {\n\tgets(s);\n\tint len = strlen(s);\n\tfor (int i = 0; i < len; ++i) {\n\t\tif (s[i] == 'o')\n\t\t\t++zhu;\n\t\telse\n\t\t\t++xian;\n\t}\n\tif (zhu == 0)\n\t\tputs(""YES"");\n\telse if (xian % zhu == 0)\n\t\tputs(""YES"");\n\telse\n\t\tputs(""NO"");\n\treturn 0;\n}"	"create chars zhu and xian and char array s of size 243554\nread s\nmake int len = strlen(s)\nfor i = 0 to len exclusive\nif s[i] is equal to '0'\nincrement zhu\nelse do\nincrease xian by 1\nif zhu is equal to 0\nprint ""YES""\nelse if xian modulo zhu is 0\nprint ""YES""\nelse\nprint ""NO"""
"const int maxn = 110;\nconst int inf = 0x3f3f3f3f;\nchar s[maxn];\nint main() {\n\tstring s;\n\tcin >> s;\n\tint cnt1 = 0, cnt2 = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == 'o')\n\t\t\tcnt1++;\n\t\telse\n\t\t\tcnt2++;\n\t}\n\tif (cnt1 == 0) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tif (cnt2 % cnt1 == 0)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	maxn = 110 = int const\ninf = 0x3f3f3f3f = const int\ns = char array of length maxn\ns = string\nread s\ncnt1 = cnt2 = 0 = int\nfor i = 0 to size of s\nif s at i is 'o'\nincrement cnt1\nelse\nincrement cnt2\nif cnt1 = 0\nprint YES\nelse\nif cnt2 mod cnt1 is 0\nprint YES\nelse\nprint NO
"int main() {\n\tstring s;\n\tcin >> s;\n\tint x = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'o') { x++; }\n\t}\n\tif (x == 0) {\n\t\tcout << ""YES"" << '\n';\n\t} else {\n\t\tif (s.length() % x == 0) {\n\t\t\tcout << ""YES"" << '\n';\n\t\t} else {\n\t\t\tcout << ""NO"" << '\n';\n\t\t}\n\t}\n\treturn 0;\n}"	s = string\nread s\nx = 0 = int\nfor i = 0 to length of s\nif s[i] = 'o' then increment x\nif x = 0\nprint YES and new line\nelse\nif length of s mod x = 0\nprint YES\nelse\nprint NO
"string s;\nint p = 0, l = 0;\nint main() {\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '-')\n\t\t\tl++;\n\t\telse\n\t\t\tp++;\n\t}\n\tif ((p == 0) || (l % p == 0))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare new string called s\ncreate ints p and l = 0\nread from the input to s\nfor integer i = 0 to length of s exclusive\nif s[i] = '-'\nincrement l by one\nelse\nincrement p\nif p = 0 or l % p = 0\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tstring s;\n\tint j = 0, k = 0;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '-')\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\tif (k == 0)\n\t\tcout << ""YES"" << endl;\n\telse if (j % k == 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	s = string\nj, k =integers, both set to 0\nRead s\nfor i = 0 to length of string s exclusive\nif s[i] is -\nincrement j\nelse do the following\nincrement k\nif k is equal to 0\nprint Yes and a new line\nelse if j modulo k is 0\nprint Yes and a new line\nelse do the following\nprint NO and new line
"const int INF = 0x3f3f3f3f;\nchar s[1005];\nint main() {\n\tint i, j, k;\n\tint n, m;\n\tcin >> s;\n\tint cou = 0, co = 0;\n\tfor (i = 0; i < strlen(s); i++) {\n\t\tif (s[i] == 'o')\n\t\t\tcou++;\n\t\telse\n\t\t\tco++;\n\t}\n\tif (cou == 0) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif (co < cou && co > 0)\n\t\tcout << ""NO"" << endl;\n\telse {\n\t\tif (co % cou == 0)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n}"	set INF to 0x3f3f3f3f\ncreate char s[1005]\ncreate int i, j and k\ncreate int n and m\nread s\nset cou and co to 0\nfor i=0 to length of s exclusive\nif s[i] = o\nincrement cou\nelse\nincrement co\nif cou =0\nprint YES\nif co < cou and > 0\nprint NO\nelse\nif co mod cou =0\nprint YES\nelse\nprint NO
"int main() {\n\tint x = 0, o = 0;\n\tstring n;\n\tcin >> n;\n\tfor (int i = 0; i < n.length(); i++) {\n\t\tif (n[i] == 'o')\n\t\t\to++;\n\t\telse\n\t\t\tx++;\n\t}\n\tif (o > 0) {\n\t\tif (x % o == 0)\n\t\t\tcout << ""YES\n"";\n\t\telse\n\t\t\tcout << ""NO\n"";\n\t} else\n\t\tcout << ""YES\n"";\n}"	x , o =integers with x = 0, o = 0\nn =string\nRead n\nfor i = 0 to length of string t exclusive\nif n[i] is o\nincrement o\nelse do the following\nincrement x\nif o is greater than 0\nif x modulo o is 0\nprint YES and a new line\nelse do the following\nprint NO and a new line\nelse do the following\nprint YES and a new line
"int main() {\n\tchar S[101];\n\tint pearls = 0, dash = 0;\n\tcin >> S;\n\tfor (int i = 0; S[i]; i++) {\n\t\tif (S[i] == '-') {\n\t\t\tdash++;\n\t\t} else {\n\t\t\tpearls++;\n\t\t}\n\t}\n\tif (pearls == 0 || dash % pearls == 0) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n}"	set char to S[101]\nset pearls and dash to 0\nread S\nfor i=0 to S[i]\nif S[i] = -\nincrement dash\nelse\nincrement pearls\nif pearls=0 or dash mod pearls =0\nprint YES and a newline\nelse\nprint NO and a newline
"int len, n1, n2;\nchar s[105];\nint main() {\n\tcin >> s;\n\tlen = strlen(s);\n\tfor (int i = 0; i < len; i++)\n\t\tif (s[i] == 'o')\n\t\t\tn1++;\n\t\telse if (s[i] == '-')\n\t\t\tn2++;\n\tif (n1 == 0)\n\t\tcout << ""YES"" << endl;\n\telse if (n2 % n1 == 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	len, n1, n2 = long long integers\ns = array of 105 characters\nRead s\nset len to length of string s\nfor i = 0 to len exclusive\nif s[i] is o\nincrement n1\nelse if s[i] is -\nincrement n2\nif n1 is 0\nprint YES and a new line\nelse if n2 modulo n1 is 0\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint count = 0, p = 0, i, n;\n\tstring a;\n\tcin >> a;\n\tn = a.length();\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] == '-')\n\t\t\tcount++;\n\t\telse\n\t\t\tp++;\n\t}\n\tif (count == 0 || p == 0)\n\t\tcout << ""YES"" << endl;\n\telse if (count % p == 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	count , p, i, n =integers with count = 0, p = 0\na =string\nRead a\nset n to length of string a\nfor i = 0 to n exclusive\nif a[i] is -\nincrement count\nelse do the following\nincrement p\nif count is 0 OR p is 0\nprint YES and a new line\nelse if count modulo p is 0\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tstring cad;\n\tcin >> cad;\n\tint guiones = 0, perlas = 0;\n\tfor (int i = 0; i < cad.size(); i++)\n\t\tif (cad[i] == '-')\n\t\t\tguiones++;\n\t\telse\n\t\t\tperlas++;\n\tif (guiones == 0 || perlas == 0)\n\t\tcout << ""YES\n"";\n\telse {\n\t\tif (guiones < perlas)\n\t\t\tcout << ""NO\n"";\n\t\telse {\n\t\t\tif (guiones == perlas)\n\t\t\t\tcout << ""YES\n"";\n\t\t\telse {\n\t\t\t\tif (guiones % perlas == 0)\n\t\t\t\t\tcout << ""YES\n"";\n\t\t\t\telse\n\t\t\t\t\tcout << ""NO\n"";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"	"declare string variable with name cad\nread cad from the input\ndeclare new int variables guiones and perlas = 0\nfor integer i = 0 to length of cad exclusive incrementing i\nif cad[i] is equal to '-'\nincrement guiones by one\nelse\nincrement perlas\nif guiones or perlas is equal to 0\nprint ""YES\n"" to the standard output\nelse\nif guiones is less than perlas\nprint ""NO\n""\nelse\nif guiones = perlas\nprint ""YES\n"" to the standard output\nelse\nif guiones % perlas = 0\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int main() {\n\tint link = 0, pearl = 0;\n\tstring str;\n\tcin >> str;\n\tfor (int i = 0; i < str.length(); i++) {\n\t\tif (str[i] == '-')\n\t\t\tlink++;\n\t\telse\n\t\t\tpearl++;\n\t}\n\tif (pearl == 0) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif (link % pearl == 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	link, pearl = integers with link = 0, pearl = 0\nstr = string\nread str\nfor i = 0 to str.length() exclusive\nif (str[i] is -)\nincrement link\nelse\nincrement pearl\nif (pearl is 0)\nprint YES\nif (link % pearl == 0)\nprint YES\nelse\nprint NO
"int main() {\n\tstring s;\n\tcin >> s;\n\tint bul = 0, ris = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '-') {\n\t\t\tris += 1;\n\t\t} else\n\t\t\tbul += 1;\n\t}\n\tif (bul == 0) {\n\t\tcout << ""YES"" << endl;\n\t} else if (ris % bul == 0) {\n\t\tcout << ""YES"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n}"	s = string\nread s\nbul = integer = 0, ris = integer = 0\nfor i = 0 to length of s exclusive\nif s[i] is -\nris = ris + 1\nelse\nbul = bul + 1\nif bul is 0\nprint YES\nelse if ris modulo bul is 0\nprint YES\nelse\nprint NO
"int main() {\n\tchar a[1001];\n\tint n, m;\n\twhile (cin >> a) {\n\t\tn = 0, m = 0;\n\t\tfor (int i = 0; i < strlen(a); i++) {\n\t\t\tif (a[i] == '-') {\n\t\t\t\tn++;\n\t\t\t} else if (a[i] == 'o') {\n\t\t\t\tm++;\n\t\t\t}\n\t\t}\n\t\tif (n == 0 || m == 0 || n % m == 0) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t}\n}"	a=array of 1001 char\nn,m=int\nwhile read a\nn,m=0\nfor i=0 to length of s exclusive\nif a[i] is '-'\nincrement n\nelse if a[i] is 'o'\nincrement m\nif n is 0 or m is 0 or n modulo m is 0\nprint YES\nelse\nprint NO
"int main() {\n\tstring s;\n\tint a = 0, b = 0;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '-')\n\t\t\tb++;\n\t\telse\n\t\t\ta++;\n\t}\n\tif (a == 0 || b % a == 0)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	s = string\na, b = integers\nRead s\nfor i = 0 to length of string s exclusive\nif s[i] is -\nincrement b\nelse do the following\nincrement a\nif a is 0 OR b modulo a is 0\nprint YES and a new line\nelse do the following\nprint NO and a new line
const int maxN = (int)1e5;\nint main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tdouble t = ceil(n * y * 1.0 / 100.0);\n\tcout << max((int)t - x, 0) << endl;\n}	Create constant integer maxN with value 10^5\nn, x, y = integers\nread n, x, and y\ncreate double t and set it to ceil of n * y * 1.0 / 100.0\ncall max on (int) t - x and 0 and print the result
const int M = 100 + 5;\nint main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint tmp = n * y / 100 + ((n * y) % 100 != 0) - x;\n\tint ans = max(tmp, 0);\n\tcout << ans << endl;\n\treturn 0;\n}	declare const int M = 100 + 5\ndeclare ints n, x and y\nread n, x and y\ndeclare integer variable tmp = n * y / 100 + ((n * y) % 100 !=0) - x\ndeclare integer ans = max of tmp and 0\nprint ans
int main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint z = ceil((double)n * y / 100);\n\tif (z > x)\n\t\tcout << z - x << endl;\n\telse\n\t\tcout << 0 << endl;\n}	define ints n, x, and y\nread n, x, and y\ndefine integer z and set it to the ceiling of ( (double) n * y / 100)\nif z is greater than x\nprint z - x followed by a newline\nelse\nprint 0 followed by a newline
"int main() {\n\tlong long n, x, y, ans, xx;\n\tcin >> n >> x >> y;\n\txx = n * y / 100;\n\twhile (xx * 100 < n * y) xx++;\n\tans = max(0LL, xx - x);\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	"create long longs n, x, y, ans and xx\nread n, x and y\nchange xx to n * y / 100\nwhile xx * 100 < n * y\nset ans to max of 0LL and xx - x\nprint ans and ""\n"""
int main() {\n\tint n, x, y;\n\tint p = 1;\n\tcin >> n;\n\tcin >> x;\n\tcin >> y;\n\tp = n * y;\n\tif (p % 100 != 0)\n\t\tp = p / 100 + 1;\n\telse\n\t\tp = p / 100;\n\tif (p <= x)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << p - x << endl;\n\treturn 0;\n}	create integers n, x, y\ncreate integer p with p = 1\nread n\nread x\nread y\nset p to n * y\nif p % 100 is not 0\nset p to p / 100 + 1\nelse\nset p to p / 100\nif p is less than or equal to x\nprint 0 print newline\nelse\nprint p - x print newline
double size_n, size_x, size_y;\ndouble result;\nint main() {\n\tdouble man, have_now;\n\tcin >> size_n >> size_x >> size_y;\n\tman = size_n * 0.01;\n\thave_now = size_x / man;\n\tif (have_now < size_y) {\n\t\tresult = (size_y - have_now) * man;\n\t\tif (double(int(result)) != result) result += 1;\n\t} else\n\t\tresult = 0;\n\tcout << int(result) << endl;\n\treturn 0;\n}	create doubles size_n, size_x, size_y\ncreate double result\ncreate doubles man, have_now\nread size_n read size_x read size_y\nset man to size_n * 0.01\nset have_now to size_x / man\nif have_now is less than size_y\nset result to (size_y - have_now) * man\nif double casted ( integer casted ( result ) ) is not result, increment result by 1\nelse\nset result to 0\nprint integer casted result print newline
int main() {\n\tdouble n, x, y;\n\tcin >> n >> x >> y;\n\tint r = ceil(y / 100 * n);\n\tif (x >= r)\n\t\tcout << 0 << '\n';\n\telse\n\t\tcout << r - x << '\n';\n\treturn 0;\n}	define doubles n, x, and y\nread n, x, y\ndefine int r, setting it to the ceiling of (y / 100 * n)\nif x >= r...\nprint 0 and a newline\notherwise...\nprint the difference of r and x, followed by a newline
int main() {\n\tlong long int x, y, n;\n\tcin >> n >> x >> y;\n\tdouble m = (double(n * y) / 100);\n\tlong long int dem = ceil(m);\n\tif (x >= dem) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << dem - x << endl;\n\t}\n}	declare long long int variables x, y and n\nread n, x and y\ncreate double m = (n * y) / 100\ndeclare long long int dem = m rounded up\nif x >= dem\nprint 0\nelse\nprint dem - x
int n, x, y;\nint main() {\n\tcin >> n >> x >> y;\n\tcout << max(0, (n * y + 99) / 100 - x) << endl;\n}	n, x, y = integers\nread n, x, y\nprint max(0, (n * y + 99) / 100 - x)
const long long mod = 1e9 + 7;\nconst int N = 1e5 + 5;\nlong long gcd(long long a, long long b) {\n\treturn b ? gcd(b, a % b) : a;\n}\nlong long pwr(long long x, long long y);\nbool isprime(long long x);\nint main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint ans = ((n * y) / 100 + bool((n * y) % 100));\n\tif (x > ans) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tcout << (ans - x) << endl;\n\treturn 0;\n}\nlong long pwr(long long x, long long y) {\n\tlong long ans = 1;\n\tx = x % mod;\n\twhile (y > 0) {\n\t\tif (y & 1) ans = (x * ans) % mod;\n\t\tx = (x * x) % mod;\n\t\ty = y / 2;\n\t}\n\treturn ans;\n}\nbool isprime(long long x) {\n\tif (x < 2) return false;\n\tif (x < 4) return true;\n\tif (x % 2 == 0 || x % 3 == 0) return false;\n\tfor (long long i = 5; i * i <= x; i += 6) {\n\t\tif (x % i == 0 || x % (i + 2) == 0) return false;\n\t}\n\treturn true;\n}	create constant long long mod with mod = 1e9 + 7\ncreate constant integer N with N = 1e5 + 5\ndeclare gcd with long longs a, b as arguments, returning long long\nreturn result of run gcd with b, a % b as arguments if b is true, else a\ndeclare pwr with long longs x, y as arguments, returning long long\ndeclare isprime with long long x as argument, returning boolean\ncreate integers n, x, y\nread n read x read y\ncreate integer ans with ans = ((n * y ) / 100 + boolean casted ((n * y ) % 100 )\nif x is greater than ans\nprint 0 print newline\nprint ans - x print newline\ndeclare pwr with long longs x, y as arguments, returning long long\ncreate long long ans with ans = 1\nset x to x % mod\nwhile y is greater than 0\nif y bitwise and 1, set ans to (x * ans) % mod\nset x to ( x * x ) % mod\nset y to y / 2\nreturn ans from function\ndeclare isprime with long long x as argument, returning boolean\nif x is less than 2, return false from function\nif x is less than 4, return true from function\nif x % 2 is 0 or x % 3 is 0 , return false from fucntion\nfor i = 5 to i * i is less than or equal to x, increment i by 6\nif x % i is 0 or x % ( i + 2 ) is 0, return false from function\nreturn true from function
int main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint ans = ceil((double)y / 100 * n);\n\tif (ans - x > 0)\n\t\tcout << ans - x << endl;\n\telse\n\t\tcout << 0 << endl;\n}	integers = n,x,y\nread n,x,y\nans is the rounding up of ((double)y / 100 * n)\nif ans - x is greater than 0 then do the following\noutput ans - x\nelse\noutput 0
long long spf[100001];\nlong long gcd(long long a, long long b);\nlong long palindrome(string s);\nlong long modexp(long long a, long long b, long long m);\nvoid sieve();\nlong long ceil(long long a, long long b);\nvector<long long> getFactorization(long long x);\nvoid getZarr(string str, long long Z[]);\nvector<long long> prefix_function(string s);\nint main() {\n\tlong double n, x, y;\n\tcin >> n >> x >> y;\n\tlong double ans = (n * y) / 100 - x;\n\tif (ans < 0) ans = 0;\n\tcout << ceil(ans) << endl;\n}\nlong long gcd(long long a, long long b) {\n\tif (a == 0) return b;\n\tif (b == 0) return a;\n\tif (a == b) return a;\n\tif (a > b) return gcd(a % b, b);\n\treturn gcd(a, b % a);\n}\nlong long palindrome(string s) {\n\tlong long l = 0;\n\tlong long h = s.length() - 1;\n\twhile (h > l) {\n\t\tif (s[l++] != s[h--]) { return 0; }\n\t}\n\treturn 1;\n}\nlong long modexp(long long a, long long b, long long m) {\n\tif (b == 0) return 1;\n\tlong long temp = modexp(a, b / 2, m);\n\ttemp = (temp * temp) % m;\n\tif (b & 1) return (temp * (a % m)) % m;\n\treturn temp;\n}\nvoid sieve() {\n\tspf[1] = 1;\n\tfor (long long i = 2; i < 100001; i++) spf[i] = i;\n\tfor (long long i = 4; i < 100001; i += 2) spf[i] = 2;\n\tfor (long long i = 3; i * i < 100001; i++) {\n\t\tif (spf[i] == i) {\n\t\t\tfor (long long j = i * i; j < 100001; j += i)\n\t\t\t\tif (spf[j] == j) spf[j] = i;\n\t\t}\n\t}\n}\nvector<long long> getFactorization(long long x) {\n\tvector<long long> ret;\n\twhile (x != 1) {\n\t\tret.push_back(spf[x]);\n\t\tx = x / spf[x];\n\t}\n\treturn ret;\n}\nlong long ceil(long long a, long long b) {\n\treturn a / b + (a % b != 0);\n}\nvoid getZarr(string str, long long Z[]) {\n\tlong long n = str.length();\n\tlong long L, R, k;\n\tL = R = 0;\n\tfor (long long i = 1; i < n; ++i) {\n\t\tif (i > R) {\n\t\t\tL = R = i;\n\t\t\twhile (R < n && str[R - L] == str[R]) R++;\n\t\t\tZ[i] = R - L;\n\t\t\tR--;\n\t\t} else {\n\t\t\tk = i - L;\n\t\t\tif (Z[k] < R - i + 1)\n\t\t\t\tZ[i] = Z[k];\n\t\t\telse {\n\t\t\t\tL = i;\n\t\t\t\twhile (R < n && str[R - L] == str[R]) R++;\n\t\t\t\tZ[i] = R - L;\n\t\t\t\tR--;\n\t\t\t}\n\t\t}\n\t}\n}\nvector<long long> prefix_function(string s) {\n\tlong long n = (long long)s.length();\n\tvector<long long> pi(n);\n\tfor (long long i = 1; i < n; i++) {\n\t\tlong long j = pi[i - 1];\n\t\twhile (j > 0 && s[i] != s[j]) j = pi[j - 1];\n\t\tif (s[i] == s[j]) j++;\n\t\tpi[i] = j;\n\t}\n\treturn pi;\n}	create long long array spf with size 100001\ndeclare gcd with long longs a, b as arguments, returning long long\ndeclare palindrome with string s as argument, returning long long\ndeclare modexp with long longs a, b, m as arguments, returning long long\ndeclare sieve with no arguments, returning void\ndeclare ceil with long longs a, b as arguments, returning long long\ndeclare getFactorization with long long x as argument, returning long long vector\ndeclare getZarr with string str, long long array Z as arguments, returning void\ndeclare prefix_function with string s as argument, returning long long vector\ncreate long doubles n, x, y\nread n read x read y\ncreate long double ans with ans = (n * y) / 100 - x\nif ans is less than 0, set ans to 0\nprint result of run ceil with ans as argument print newline\ndeclare gcd with long longs a, b as arguments, returning long long\nif a is 0, return b from function\nif b is 0, return a from function\nif a is b, return a from function\nif a is greater than b, return result of run gcd with a % b, b as arguments, from function\nreturn result of run gcd with a, b % a as arguments, from function\ndeclare palindrome with string s as argument, returning long long\ncreate long long l with l = 0\ncreate long long h with h = length of s - 1\nwhile h is greater than l\nif s[increment l] is not s[decrement h], return 0 from function\nreturn 1 from function\ndeclare modexp with long longs a, b, m as arguments, returning long long\nif b is 0, return 1 from function\ncreate long long temp with temp = result of run modexp with a, b / 2, m as arguments\nset temp to ( temp * temp ) % m\nif b bitwise and 1, return (temp * (a % m)) % m from function\nreturn temp from function\ndeclare sieve with no arguments, returning void\nset spf[1] to 1\nfor i = 2 to 100001 exclusive, set spf[i] to i\nfor i = 4 to 100001 exclusive, incrementing i by 2, set spf[i] to 2\nfor i = 3 to i * i is less than 100001, incrementing i\nif spf[i] is i\nfor j = i * i to 100001 exclusive, incrementing j by i\nif spf[j] is j, set spf[j] to i\ndeclare getFactorization with long long x as argument, returning long long vector\ncreate long long vector ret\nwhile x is not 1\nadd element spf[x] to end of ret\nset x to x / spf[x]\nreturn ret from function\ndeclare ceil with long longs a, b as arguments, returning long long\nreturn a / b + ( a % b is not 0 )\ndeclare getZarr with string str, long long array Z as arguments, returning void\ncreate long long n with n = length of str\ncreate long longs L, R, K\nset L to R to 0\nfor i = 1 to n exclusive\nif i is greater than R\nset L to R to i\nwhile R is less than n and str[R-L] is str[R], increment R\nset Z[i] to R - L\ndecrement R\nelse\nset k to i - L\nif Z[k] is less than R - i + 1\nset Z[i] to Z[k]\nelse\nset L to i\nwhile R is less than n and str[R-L] is str[R], increment R\nset Z[i] to R - L\ndecrement R\ndeclare prefix_function with string s as argument, returning long long vector\ncreate long long n with n = long long casted length of s\ncreate long long vector pi initialized with n\nfor i = 1 to n exclusive\ncreate long long j with j = pi[i-1]\nwhile j is greater than 0 and s[i] is not s[j], set j to pi[j-1]\nif s[i] is s[j], increment j\nset pi[i] to j\nreturn pi from function
int main() {\n\tdouble n, x, y;\n\tcin >> n >> x >> y;\n\tint temp = x;\n\twhile ((x / n) * 100 < y) { x++; }\n\tcout << x - temp << endl;\n}	declare doubles n, x and y\nread n, x and y\ndeclare integer variable temp = x\nwhile (x / n) * 100 < y\nprint x - temp
int main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint res = ceil((y / 100.0) * n) - x;\n\tif (res < 0) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << res << endl;\n\t}\n\treturn 0;\n}	declare integers n, x and y\nread n, x and y\ncreate int res = ((y / 100.0) * n) rounded up - x\nif res is less than 0\nprint 0\nelse\nprint res
const int MOD = 1e9 + 7;\ndouble gcd(double a, double b) {\n\treturn a < 0.01 ? b : gcd(fmod(b, a), a);\n}\nlong long int max(long long int a, long long int b) {\n\treturn (a > b) ? a : b;\n}\nlong long int max(long long int a, long long int b, long long int c) {\n\treturn max(a, max(b, c));\n}\nlong long int min(long long int a, long long int b) {\n\treturn (a < b) ? a : b;\n}\nlong long int min(long long int a, long long int b, long long int c) {\n\treturn min(a, min(b, c));\n}\nlong long int power(long long int x, long long int y) {\n\tlong long int res = 1;\n\tx = x % MOD;\n\twhile (y > 0) {\n\t\tif (y & 1) res = (res * x) % MOD;\n\t\ty = y >> 1;\n\t\tx = (x * x) % MOD;\n\t}\n\treturn res;\n}\nvoid swap(char *x, char *y) {\n\tchar temp;\n\ttemp = *y;\n\t*y = *x;\n\t*x = temp;\n}\nlong long int mod(long long int a) {\n\tif (a > 0)\n\t\treturn a;\n\telse\n\t\treturn -a;\n}\nint main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint r = ceil((n * y) / 100.0);\n\tcout << (((r - x) >= 0) ? r - x : 0) << endl;\n\treturn 0;\n}	create constant integer MOD with MOD = 1e9 + 7\ndeclare gcd with doubles a, b as arguments, returning double\nreturn b if a is less than 0.01, else result of run gcd with ( (floating point remainder of b/a), a ) as arguments from function\ndeclare max with long long integers a, b as arguments, returning long long integer\nreturn a if a is greater than b, else b from function\ndeclare max with long long integers a, b, c as arguments, returning long long integer\nreturn maximum of ( a and maximum of ( b and c ) ) from function\ndeclare min with long long integers a, b as arguments, returning long long integer\nreturn a if a is less than b, else b from function\ndeclare min with long long integers a, b, c as arguments, returning long long integer\nreturn minimum of ( a and minimum of ( b and c ) ) from function\ndeclare power with long long integers x, y as arguments, returning long long integer\ndeclare long long integer res with res = 1\nset x to x % MOD\nwhile y is greater than 0\nif y bitwise and 1, set res to ( res * x ) % MOD\nset y to y bitshift right 1\nset x to ( x * x ) % MOD\nreturn res from function\ndeclare swap with character pointers x, y as arguments, returning void\ncreate character temp\nset temp to value of y\nset value of y to value of x\nset value of x to temp\ndeclare mod with long long integer a as argument, returning long long integer\nif a is greater than 0\nreturn a\nelse\nreturn -a\ncreate integers n, x, y\nread n read x read y\ncreate integer r with r = round up ( (n*y) / 100.0 )\nprint r - x if ( r - x ) is greater than or equal to 0, else 0 print newline
"int main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint temp = (y * n / 100) + ((y * n % 100) ? 1 : 0);\n\ttemp -= x;\n\tif (temp <= 0)\n\t\tcout << ""0\n"";\n\telse\n\t\tcout << temp << '\n';\n\treturn 0;\n}"	"n, x, y = int\nread n then x then y\ntemp = int with temp = (y * n / 100) + 1 if (y * n % 100) is not 0\ndecrement temp by x\nif temp is less or equal to 0\nprint ""0""\nelse\nprint temp"
"int main() {\n\tdouble x, y, z;\n\tcin >> x >> y >> z;\n\tint ans = ceil((x * z) / 100) - y;\n\tif (ans < 0)\n\t\tcout << 0 << ""\n"";\n\telse\n\t\tcout << ans << ""\n"";\n\treturn 0;\n}"	Create x, y, and z as double precision number\nSet x to the first input, y to the second input, and z to the third input\nCreate ans as an integer and set to the next bigger integer of (x*z)/100 then subtract y\nIf ans is negative\nOutput 0\nOtherwise\nOutput ans
int main() {\n\tdouble n, x, y;\n\tcin >> n >> x >> y;\n\tlong long z = ceil((y / 100) * n);\n\tlong long ans = 0;\n\tif (z > x) { ans = z - x; }\n\tcout << ans << endl;\n\treturn 0;\n}	create doubles n, x, y\nread n read x read y\ncreate long long z with z = round up ( ( y / 100 ) * n )\ncreate long long ans with ans = 0\nif z is greater than x, set ans to z - x\nprint ans print newline
int main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tcout << (y * n - min(y * n, x * 100) + 99) / 100 << endl;\n\treturn 0;\n}	let n, x, y be ints\nread n, x, and y\nprint (y*n - min(y*n, x*100) + 99)/100
int main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tdouble p = (x * 100.0) / (n * 1.0);\n\tif (p >= y) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tint S = 0;\n\tfor (int i = x + 1; i <= 1000010; i++) {\n\t\tS++;\n\t\tif ((i * 100.0) / (n * 1.0) >= y) break;\n\t}\n\tcout << S << endl;\n\treturn 0;\n}	create int n, x and y\nread n, x, y\nset p to (x * 100.0) / (n * 1.0)\nif p >= y\nprint 0\nS=0\nfor i= x+1 to 1000010 inclusive\nincrement S\nif (i * 100.0) / (n * 1.0) >= y, break the loop\nprint S
int main() {\n\tint n, x, y;\n\tcin >> n >> x >> y;\n\tint clones = (n * y + 99) / 100 - x;\n\tif (clones < 0) { clones = 0; }\n\tcout << clones << endl;\n\treturn 0;\n}	define ints n, x, y\nread n, x, and y\ndefine int clones set to (n y + 99) / 100 - x\nif clones is negative, then set clones to 0\nprint clones and newline
int N, K, ans, A[10], val, x, y;\nstring T, S, P;\nbool cek;\nint main() {\n\tcin >> N >> x >> y;\n\tcout << max(0, (N * y - 1) / 100 + 1 - x) << '\n';\n}	N, K, ans, A, val, x, y = integers with A = array of size 10\nT, S, P = string\ncek = bool\nread N, x, y\nprint max(0, (N * y - 1) / 100 + 1 - x)
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint el, st;\n\tel = abs(x - z) * t2 + 3 * t3 + abs(y - x) * t2;\n\tst = abs(x - y) * t1;\n\tif (st < el)\n\t\tcout << ""NO\n"";\n\telse\n\t\tcout << ""YES\n"";\n\treturn 0;\n}"	"create integers x, y, z, t1, t2, t3\nread x read y read z read t1 read t2 read t3\ncreate integers el, st\nset el to absolute value of ( x - z ) * t2 + 3 * t3 + absolute value of ( y - x ) * t2\nset st to absolute value of ( x - y ) * t1\nif st is less than el\nprint ""NO\n""\nelse\nprint ""YES\n"""
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint k = x - y;\n\tif (k < 0) { k = k * (-1); }\n\tint l = z - x;\n\tif (l < 0) { l = l * (-1); }\n\tint stairs = k * t1;\n\tint elevator = l * t2 + k * t2 + 3 * t3;\n\tif (stairs < elevator) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n\treturn 0;\n}"	x, y, z, t1, t2, t3 = integers\nread x and y and z and t1 and t2 and t3\nset k = x - y\nif k < 0 set k = k * -1\nset l = z - x\nif l < 0 then l = l * -1\nset stairs = k * t1\nset elevator = 1 * t2 + k * t2 + 3 * t3\nif stairs < elevator\nprint NO\nelse\nprint YES
"int main() {\n\tint x, y, z, t1, t2, t3, st, el;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tst = abs(x - y) * t1;\n\tel = (abs(x - z) + abs(x - y)) * t2 + t3 * 3;\n\tif (el <= st)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create integers x, y, z, t1, t2, t3, st, el\nread x read y read z read t1 read t2 read t3\nset st to absolute value of (x - y) * t1\nset el to (absolute value of (x-z) + absolute value of(x-y)) * t2 + t3 * 3\nif el is less than or equal to st\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int x, y, z, t1, t2, t3;\nint main() {\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tif ((fabs(z - x) + fabs(x - y)) * t2 + 3 * t3 <= fabs(x - y) * t1)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create integers x, y, z, t1, t2, t3\nread x read y read z read t1 read t2 read t3\nif ( ( absolute value of ( z - x ) + absolute value of ( x - y ) ) * t2 + 3 * t3 is less than or equal to absolute value of ( x - y ) * t1\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint masha_time = abs(x - y) * t1;\n\tint elevator_time = abs(x - z) * t2 + abs(x - y) * t2 + t3 + t3 + t3;\n\tif (elevator_time <= masha_time)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	x, y, z, t1, t2, t3 =integers\nRead x, y, z, t1, t2, t3\nmasha_time = integer, set to absolute value of x - y * t1\nelevator_time = integer, set to absolute value of x - z * t2 + absolute value of x - y * t2 + t3 + t3 + t3\nif elevator_time is less than or equal to masha_time\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tif (abs(x - z) * t2 + abs(x - y) * t2 + t3 * 3 <= abs(x - y) * t1)\n\t\tcout << ""YES"" << '\n';\n\telse\n\t\tcout << ""NO"" << '\n';\n\treturn 0;\n}"	"let x, y, z, t1, t2 and t3 be integers\nread x, y, z, t1, t2 and t3\nif abs(x - z) * t2 + abs(x - y) * t2 + t3 * 3 <= abs(x - y) * t1\nprint ""YES"" and '\n'\nelse\nprint ""NO"" and '\n'"
"const int INF = 0x3f3f3f3f;\nint main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint tv = 0, ts = 0;\n\tts = t1 * abs(y - x);\n\ttv = t2 * abs(z - x) + t2 * abs(y - x) + t3 * 3;\n\tif (tv <= ts)\n\t\tputs(""YES"");\n\telse\n\t\tputs(""NO"");\n\treturn 0;\n}"	"create constant integer INF with INF = 0x3f3f3f3f\ncreate integers x, y, z, t1, t2, t3\nread x read y read z read t1 read t2 read t3\ncreate integers tv, ts with tv = 0, ts = 0\nset ts to t1 * absolute value of ( y - x )\nset tv to t2 * absolute value of ( z - x ) + t2 * absolute value of ( y - x ) + t3 * 3\nif tv is less than or equal to ts\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint str_dif = x - y;\n\tint elv_dif = x - z;\n\tif (str_dif < 0 || elv_dif < 0) {\n\t\tif (str_dif < 0) str_dif = str_dif * -1;\n\t\tif (elv_dif < 0) elv_dif = elv_dif * -1;\n\t}\n\tint str_time = str_dif * t1;\n\tint elv_time = elv_dif * t2 + str_dif * t2 + 3 * t3;\n\tif (str_time < elv_time)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	"create integers x, y, z, t1, t2, t3\nread x read y read z read t1 read t2 read t3\ncreate integer str_dif with str_dif = x - y\ncreate integer elv_dif with elv_dif = x - z\nif str_dif is less than 0 or elv_dif is less than 0\nif str_dif is less than 0, set str_dif to str_dif * -1\nif elv_dif is less than 0, set elv_dif to elv_dif * -1\ncreate integer str_time with str_time = str_dif * t1\ncreate integer elv_time with elv_time = elv_dif * t2 + str_dif * t2 + 3 * t3\nif str_time is less than elv_time\nprint ""NO"" print newline\nelse\nprint ""YES"" print newline"
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint stairs = abs(y - x) * t1;\n\tint elevator = abs(z - x) * t2 + abs(y - x) * t2 + 3 * t3;\n\tif (elevator <= stairs) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	x, y, z, t1, t2, t3 = integers\nread x, y, z, t1, t2, t3\nset stairs to abs(y - x) * t1\nelevator = abs(z - x) * t2 + abs(y - x) * t2 + 3 * t3\nif elevator <= stairs\nprint YES\nelse\nprint NO
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tif (((abs(x - y) + abs(x - z)) * t2) + (3 * t3) <= ((abs(x - y)) * t1)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}"	x , y, z , t1 ,t2 ,t3 = integers\nread x , y, z , t1 ,t2 and t3\nif (((abs(x - y) + abs(x - z)) * t2) + (3 * t3) <= ((abs(x - y)) * t1)))\nprint YES\nelse\nprint NO
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint ans1, ans2 = abs(x - y) * t1;\n\tans1 = abs(z - x) * t2 + t3 * 3 + abs(x - y) * t2;\n\tif (ans1 <= ans2)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare integer variables x, y, z, t1, t2 and t3\nread x, y, z, t1, t2 and t3\ndeclare integer variables ans1 and ans2 with ans2 = (absolute value of x - y) * t1\nans1 = (absolute value of z - x) * t2 + t3 * 3 + (absolute value of x - y) * t2\nif ans1 <= ans2\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"int main() {\n\tint a, b, c, d, e, f, g, m, s, l, n, t;\n\tcin >> a >> b >> c >> d >> e >> f;\n\ts = (a - b) * d;\n\tif (s < 0) { s = -1 * s; }\n\tl = ((c - a) * e);\n\tif (l < 0) l = -l;\n\tt = (a - b) * e;\n\tif (t < 0) t = -t;\n\tm = t + l + 3 * f;\n\tif (m <= s)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let a, b, c, d, e, f, g, m, s, l, n, t be integers\nread a,b,c,d,e and f\ns is equal to (a - b) * d\nif (s is less than 0) , s is equal to -1 * s\nl is equal to ((c - a) * e);\nif (l is less than 0) , l is equal to -l;\nt is equal to (a - b) * e\nif (t is less than 0) , t is equal to -t\nm is equal to t + l + 3 * f\nif (m is less than or equal to s)\nprint YES and endline\nelse do something\nprint NO and endline
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tlong long a, b, c, d;\n\tif (y > x) {\n\t\ta = y - x;\n\t} else {\n\t\ta = x - y;\n\t}\n\tc = a * t1;\n\tif (z > x) {\n\t\tb = z - x;\n\t} else {\n\t\tb = x - z;\n\t}\n\td = (b + a) * t2 + 3 * t3;\n\tif (c >= d) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}"	x, y, z, t1, t2, t3=integers\nread x, y, z, t1, t2 and t3\na,b,c,d = long integers\nif(x>y) execute\nset a to y-x\nelse execute\nset a to x-y\nset c to a*t1\nif(z is greater than x) execute\nb=z-x\nelse execute\nb=x-z\nset d to (b + a) * t2 + 3 * t3\nif(c is greater than or equal to d)\nPrint out YES\nelse\nPrint out NO
"int main() {\n\tlong long int x, y, z, t1, t2, t3, s, e;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tif (x > y) {\n\t\ts = (x - y) * t1;\n\t} else {\n\t\ts = (y - x) * t1;\n\t}\n\tif (x >= y && x >= z) {\n\t\te = ((x - y) * t2) + ((x - z) * t2) + (3 * t3);\n\t\tif (e <= s) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t} else if (x <= y && x >= z) {\n\t\te = ((y - x) * t2) + ((x - z) * t2) + (3 * t3);\n\t\tif (e <= s) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t} else if (x <= y && x <= z) {\n\t\te = ((y - x) * t2) + ((z - x) * t2) + (3 * t3);\n\t\tif (e <= s) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t} else if (x >= y && x <= z) {\n\t\te = ((x - y) * t2) + ((z - x) * t2) + (3 * t3);\n\t\tif (e <= s) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t}\n}"	"declare long long integer variables x, y, z, t1, t2, t3, s and e\nread x, y, z, t1, t2 and t3\nif x is greater than y\ns = (x - y) * t1\nelse\ns = (y - x) * t1\nif x >= y && x >= z\ne = ((x - y) * t2) + ((x - z) * t2) + (3 * t3)\nif e <= s\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line\nelse if x <= y && x >= z\ne = ((y - x) * t2) + ((x - z) * t2) + (3 * t3)\nif e <= s\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line\nelse if x <= y && x <= z\ne = ((y - x) * t2) + ((z - x) * t2) + (3 * t3)\nif e <= s\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line\nelse if x >= y && x <= z\ne = ((x - y) * t2) + ((z - x) * t2) + (3 * t3)\nif e <= s\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"const int MAX = 4;\nint main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint a, b;\n\ta = abs(z - x) * t2 + t3 * 3 + abs(x - y) * t2;\n\tb = abs(x - y) * t1;\n\tif (a <= b)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"assign value 4 to constant integer MAX\nlet x, y, z, t1, t2 and t3 be integers\nread x, y, z, t1, t2 and t3\nlet a and b be integers\na = abs(z - x) * t2 + t3 * 3 + abs(x - y) * t2\nb = abs(x - y) * t1\nif a <= b\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"int main() {\n\tint x, y, z, a, b, c;\n\tcin >> x >> y >> z >> a >> b >> c;\n\tint stair = abs(x - y) * a;\n\tint lift = (abs(x - z) + abs(x - y)) * b + (3 * c);\n\tif (lift <= stair)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n}"	"declare integers x, y, z, a, b, c\nread x, y, z, a, b, c\ndeclare integer stair as (absolute value of x-y) times a\ndeclare integer lift as (absolute value (x - z) + absolute value (x - y)) * b + (3 * c)\nif lift is less than or equal to stair\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint tot1 = abs(z - x) * t2 + t3 * 3 + abs(y - x) * t2;\n\tint tot2 = abs(y - x) * t1;\n\tif (tot1 > tot2)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n\treturn 0;\n}"	"create integers x, y, z, t1, t2, t3\nread x read y read z read t1 read t2 read t3\ncreate integer tot1 with tot1 = absolute value of ( z - x ) * t2 + t3 * 3 + absolute value of ( y - x ) * t2\ncreate integer tot2 with tot2 = absolute value of ( y - x ) * t1\nif tot1 is greater than tot2\nprint ""NO"" print newline\nelse\nprint ""YES"" print newline"
"long long x, y, z, t1, t2, t3, e;\nint main() {\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\te = abs(z - x) * t2;\n\te += t3 * 3;\n\te += abs(y - x) * t2;\n\tt1 *= abs(y - x);\n\tif (t1 >= e)\n\t\tcout << ""YES"" << '\n';\n\telse\n\t\tcout << ""NO"" << '\n';\n\treturn 0;\n}"	let x, y, z, t1, t2, t3, e be long integers\nread the values x, y, z, t1, t2, t3\nlet the value of e is equal to abs(z - x) * t2\nlet the value of e is equal to e + t3 * 3\nlet the value of e is equal to e +abs(y - x) * t2\nlet the value of t1 is equal to t1 * abs(y - x)\nif ( t1 is greater than or equal to e )\nprint YES and newline\nelse , do the following\nprint NO and newline
"long long mod = 1e9 + 7;\nmap<int, int> mp;\nlong long a[200001];\nlong long b[200001];\nlong long c[11];\nlong long u[151];\nint main() {\n\tlong long n, m, mn = 0, l, t1, t2, t3;\n\tlong long cnt = 0, ans = 0;\n\tcin >> n >> m >> l;\n\tcin >> t1 >> t2 >> t3;\n\tlong long res = abs(n - l) * t2 + t3 + t3 + abs(n - m) * t2 + t3;\n\tlong long oi = abs(n - m) * t1;\n\tif (res > oi)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n\treturn 0;\n}"	let mod is a long integer with value 1e9 + 7\ndo map<int, int> mp\nlet a is an array of size 200001 which is a long integer\nlet b is an array of size 200001 which is a long integer\nlet c is an array of size 11 which is a long integer\nlet u is an array of size 151 which is a long integer\nlet n, m, mn , l, t1, t2, t3 be long integers with mn is equal to 0\ninitialize the long integers cnt and ans to 0\nread the values n,m and l\nread the values t1,t2 and t3\nlet the value of long integer res = abs(n - l) * t2 + t3 + t3 + abs(n - m) * t2 + t3;\nlet the value of long integer oi is equal to abs(n - m) * t1\nif (res is greater than oi)\nprint NO and newline\nelse do the following\nprint YES and endline
"int abs(int x) {\n\tif (x < 0) return -x;\n\treturn x;\n}\nvoid solve() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint timeWalk = abs(y - x) * t1;\n\tint timeTakeElevator = t3 * 3;\n\ttimeTakeElevator += abs(x - z) * t2;\n\ttimeTakeElevator += abs(y - x) * t2;\n\tif (timeTakeElevator > timeWalk) {\n\t\tcout << ""NO\n"";\n\t} else {\n\t\tcout << ""YES\n"";\n\t}\n}\nint main() {\n\tsolve();\n\treturn 0;\n}"	"declare abs with integer x as argument, returning integer\nif x is less than 0, return -x\nreturn x\ndeclare solve with no arguments, returning void\ncreate integers x, y, z, t1, t2, t3\nread x read y read z read t1 read t2 read t3\ncreate integer timeWalk with timeWalk = absolute value of ( y - x ) * t1\ncreate integer timeTakeElevator with timeTakeElevator = t3 * 3\nincrement timeTakeElevator by absolute value of ( x - z ) * t2\nincrement timeTakeElevator by absolute value of ( y - x ) * t2\nif timeTakeElevator is greater than timeWalk\nprint ""NO\n""\nelse\nprint ""YES\n""\nrun solve"
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint fd = abs(x - y);\n\tint cd = abs(x - z);\n\tint stt, lift_t;\n\tstt = fd * t1;\n\tint nw;\n\tnw = fd + cd;\n\tlift_t = (nw * t2) + (3 * t3);\n\tint mn;\n\tif (lift_t <= stt) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	"x,y,z,t1,t2,t3 = int\nread x,y,z,t1,t2,t3\nfd = absolute value of x-y\ncd = absolute value of x-z\nstt, lift_t = int\nstt = fd*t1\nnw = int\nnw = fd+cd\nlift_t = (nw*t2)+(3*t3)\nmn = int\nif lift_t <= stt\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tint x, y, z, t1, t2, t3;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\tint walk_time = abs(x - y) * t1;\n\tint lift_time = abs(x - z) * t2 + abs(x - y) * t2;\n\tlift_time += (t3 * 3);\n\tif (lift_time <= walk_time)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"x, y, z, t1, t2 and t3 are integers\nread x, y, z, t1, t2 and t3\nwalk_time is integer = asbolute value of(x - y) * t1\nlift_time = asbolute value of( x - z ) * t2 + asbolute value of( x - y ) * t2\nincrease lift_time by (t3 * 3)\nif lift_time <= walk_time\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"int x, y, z, a, b, c;\nint main() {\n\tcin >> x >> y >> z >> a >> b >> c;\n\tint r = abs(x - y) * a;\n\tint s = abs(x - z) * b + 3 * c + abs(x - y) * b;\n\tif (r < s)\n\t\tcout << ""NO\n"";\n\telse\n\t\tcout << ""YES\n"";\n}"	"create integers x, y, z, a, b, c\nread x read y read z read a read b read c\ncreate integer r with r = absolute value of ( x - y ) * a\ncreate integer s with s = absolute value of ( x - z ) * b + 3 * c + absolute value of ( x - y ) * b\nif r is less than s\nprint ""NO\n""\nelse\nprint ""YES\n"""
"int absu(int q) {\n\tif (q > 0)\n\t\treturn q;\n\telse\n\t\treturn -q;\n}\nint main() {\n\tint x, y, z, t1, t2, t3, a, b;\n\tcin >> x >> y >> z >> t1 >> t2 >> t3;\n\ta = absu(x - y) * t1;\n\tb = absu(x - z) * t2 + absu(x - y) * t2 + 3 * t3;\n\tif (a < b) {\n\t\tcout << ""NO"" << endl;\n\t} else\n\t\tcout << ""YES"" << endl;\n}"	"function absu with integer argument q that returns integer\nif q is greater than 0\nreturn q\nelse\nreturn -q\ncreate integers x, y, z, t1, t2, t3, a and b\nread x, y, z, t1, t2 and t3\na = absu(x - y) * t1\nb = absu(x - z) * t2 + absu(x - y) * t2 + 3 * t3\nif a is less than b\nprint ""NO"" and a new line\nelse\nprint ""YES"" and a new line"
"const long long int MOD = 998244353;\nlong long int N, M, K, H, W, L, R;\nint main() {\n\tint a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tN = abs(a - b) * d;\n\tM = abs(a - c) * e;\n\tM += abs(b - a) * e;\n\tM += 3 * f;\n\tif (N >= M)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	MOD = 998244353\nN, M, K, H, W, L, R = long long integers\na, b, c, d, e, f = integers\nread a, b, c, d, e and f\nN = absolute value of (a - b) * d\nM = absolute value of (a - c) * e\nM = M + absolute value of (b - a) * e\nM = M + 3 * f\nif N is greater or equal than M\nprint YES\nelse\nprint NO
int main() {\n\tint a[100];\n\tint n, count, ans = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (int i = 0; i <= n; i++) {\n\t\tcount = 0;\n\t\tfor (int j = i; j < n; j++) {\n\t\t\tif (a[j] == 1) count++;\n\t\t}\n\t\tfor (int k = 0; k < i; k++) {\n\t\t\tif (a[k] == 0) count++;\n\t\t}\n\t\tans = max(ans, count);\n\t}\n\tcout << ans << endl;\n}	a = array of integers of length 100\nlet n, count, ans be integers with ans = 0\nread n\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to n inclusive\ncount is equal to 0\nfor j = i to n exclusive\nif a[j] is equal to 1, increment count by 1\nfor k = 0 to i exclusive\nif a[k] is equal to 0, increment count by 1\nans = maximum of ans, count\nprint ans and newline
int main() {\n\tint n, a[105], temp, ans = 1, i, j;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (i = 0; i < n; i++) {\n\t\ttemp = 0;\n\t\tfor (j = 0; j <= i; j++) {\n\t\t\tif (!a[j]) temp++;\n\t\t}\n\t\tfor (j = i; j < n; j++) {\n\t\t\tif (a[j]) temp++;\n\t\t}\n\t\tans = max(ans, temp);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create int n, a[105], temp, ans, i and j, set ans to 1\nread n\nfor i=0 to n exclusive, read a[i]\nfor i=0 to n exclusive\ntemp=0\nfor j=0 to i exclusive\nif a[j]=0, increment temp\nfor j=i to n exclusive\nif a[j] different from 0, increment temp\nset ans to max of ans and temp\nprint ans
const int inf = 0x3f3f3f3f;\nint s[105], n, dp[105];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> s[i];\n\tdp[1] = s[1];\n\tint len = 1;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (s[i] >= dp[len])\n\t\t\tdp[++len] = s[i];\n\t\telse {\n\t\t\tint index = upper_bound(dp + 1, dp + 1 + len, s[i]) - dp;\n\t\t\tdp[index] = s[i];\n\t\t}\n\t}\n\tcout << len << endl;\n\treturn 0;\n}	inf = const int with inf = 0x3f3f3f3f\ns, dp = int array of size 105 each and n = int\nread n\nfor i = 1 to n inclusive read s[i]\nset dp[1] to s[1]\nlen = int with len = 1\nfor i = 2 to n inclusive\nif s[i] >= dp[len]\nincrement lent then set dp[len] to s[i]\nelse\nindex = int with index = upper_bound of (dp + 1, dp + 1 + len, s[i]) - dp\nset dp[index] to s[i]\nprint len
int main() {\n\tint n;\n\tcin >> n;\n\tint a[200];\n\tint one = 0, zero = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i]) one++;\n\t}\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] == 0) zero++;\n\t\tans = max(ans, one + zero);\n\t\tif (a[i] == 1) one--;\n\t}\n\tcout << ans << '\n';\n}	n = integer\nread n\na = integer array of size 200\none, zero = integers with one = 0, zero = 0\nfor i = 0 to n exclusive\nread a[i]\nif (a[i]) increment one\nans = integer with ans = 0\nfor i = 0 to n exclusive\nif (a[i] is 0) increment zero\nans = max ans and one + zero\nif (a[i] is 1) decrement one\nprint ans
int cont[1005];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> cont[i]; }\n\tint ans = 0;\n\tint now = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (cont[i] == 0) {\n\t\t\tnow++;\n\t\t\tans = max(ans, now);\n\t\t} else {\n\t\t\tint tmp = now;\n\t\t\tfor (int j = i; j < n; j++) {\n\t\t\t\tif (cont[j]) { tmp++; }\n\t\t\t}\n\t\t\tans = max(ans, tmp);\n\t\t}\n\t}\n\tcout << ans << endl;\n}	create integer array cont of size 1005\nmake int n\nread n\nfor i = 0 to n exclusive, read cont[i]\nlet integer ans = 0\nlet int now = 0\nfor i = 0 to n exclusive\nif cont[i] is 0\nadd 1 to now\nset ans to max of ans and now\nelse do\ncreate int tmp = now\nfor j = i to n exclusive\nif cont[j] is truthy, add 1 to tmp\nset ans to max of ans and temp\ndisplay ans
const int MAXN = 100 + 5;\nconst int INF = 0x3f3f3f3f;\nint main() {\n\tint n;\n\tcin >> n;\n\tint data[MAXN];\n\tfor (int i = 0; i < n; i++) cin >> data[i];\n\tint cnt, ans = n;\n\tfor (int i = 1; i < n; i++) {\n\t\tcnt = 0;\n\t\tif (data[i - 1] == data[i]) continue;\n\t\tfor (int j = 0; j < i; j++)\n\t\t\tif (data[j] != 0) cnt++;\n\t\tfor (int j = i; j < n; j++)\n\t\t\tif (data[j] != 1) cnt++;\n\t\tans = min(ans, cnt);\n\t}\n\tcnt = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (data[i] != 0) cnt++;\n\t}\n\tans = min(ans, cnt);\n\tcnt = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (data[i] != 1) cnt++;\n\t}\n\tans = min(ans, cnt);\n\tcout << n - ans << '\n';\n}	declare new constant integer MAXN with value 100+5\ncreate constant integer called INF = 0x3f3f3f3f\ncreate new integer called n\nread standard input to n\ndata is a new array of integers with MAXN elements\nread n elements to data from the user input\nlet cnt and ans be integers where ans = n\nstart for loop from i = 1 to n exclusive incrementing i\nchange the value of cnt to 0\nif data[i - 1] = data[i], go to the start of the loop\nfor j = 0 to i exclusive\nif data[j] != 0, increment cnt\nfor j from i to n exclusive incrementing j\nif data[j] != 1, increment cnt\nassign min of ans and cnt to ans\nset cnt to 0\nin a for loop, change i from 0 to n exclusive incrementing i\nif data[i] != 0, increment cnt by one\nassign min of ans and cnt to ans\nchange the value of cnt to 0\nstart for loop from i = 0 to n exclusive incrementing i\nif data[i] != 1, add 1 to cnt\nset ans to min of ans and cnt\nprint n - ans and '\n' to the standard output
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint game[n];\n\t\tfor (int i = 0; i < n; i++) cin >> game[i];\n\t\tint large = 0, prezero = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (game[i] == 0) {\n\t\t\t\tprezero++;\n\t\t\t\tlarge = max(large, prezero);\n\t\t\t} else {\n\t\t\t\tint cur = prezero;\n\t\t\t\tfor (int j = i; j < n; j++) {\n\t\t\t\t\tif (game[j] == 1) { cur++; }\n\t\t\t\t}\n\t\t\t\tlarge = max(cur, large);\n\t\t\t}\n\t\t}\n\t\tcout << large << '\n';\n\t}\n}	create int n\nwhile read n\ncreate int game[n]\nfor i=0 to n exclusive, read game[i]\nset large and prezero =0\nfor i=0 to n exclusive\nif game[i] =0\nincrement prezero\nset large to max of large and prezero\nelse\nset cur to prezero\nfor j=i to n exclusive\nif game[j] =1, increment cur\nset large to max of cur and large\nprint large and a newline
const int maxn = 100005;\nint s[maxn], dp[maxn];\nint n;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> s[i];\n\tdp[1] = s[1];\n\tint len = 1;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (s[i] >= dp[len])\n\t\t\tdp[++len] = s[i];\n\t\telse {\n\t\t\tint index = upper_bound(dp + 1, dp + len + 1, s[i]) - dp;\n\t\t\tdp[index] = s[i];\n\t\t}\n\t}\n\tcout << len << endl;\n\treturn 0;\n}	make const integer maxn = 100005\nmake int arrays s of size maxn and dp of size maxn\ncreate int n\nread n\nfor i = 1 to n, read s[i]\nset dp[1] to s[1]\ncreate int len = 1\nfor i = 2 to n\nif s[i] is greater than or equal to dp[len]\nset dp[++len] to s[i]\notherwise\ncreate int index = upper_bound(dp + 1, dp + len + 1, s[i]) - dp\nset dp[index] to s[i]\nprint len
int main() {\n\tint i, j, n, a = 1, t, s[10000];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> s[i];\n\tfor (i = 0; i < n; i++) {\n\t\tt = 0;\n\t\tfor (j = 0; j <= i; j++) {\n\t\t\tif (!s[j]) t++;\n\t\t}\n\t\tfor (j = i; j < n; j++) {\n\t\t\tif (s[j]) t++;\n\t\t}\n\t\ta = max(a, t);\n\t}\n\tcout << a << endl;\n\treturn 0;\n}	i,j,n,t=int, a=1, s=array of 10000 int\nread n\nfor i=0 to n exclusive read s[i]\nfor i=0 to n exclusive\nt=0\nfor j=0 to i inclusive\nif not s[j] increment t\nfor j=i to n exclusive\nif s[j] increment t\na=max(a,t)\nprint a
int a[4005], d[4005];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\td[1] = a[1];\n\tint len = 1;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (a[i] >= d[len])\n\t\t\td[++len] = a[i];\n\t\telse {\n\t\t\tint j = upper_bound(d + 1, d + len + 1, a[i]) - d;\n\t\t\td[j] = a[i];\n\t\t}\n\t}\n\tcout << len << endl;\n\treturn 0;\n}	a, d = integer array of size 4005\nn = integer\nread n\nfor i = 1 to n, read a[i]\nd[1] = a[1]\nlen = integer with len = 1\nfor i = 2 to n\nif (a[i] >= d[len])\nd[increment len] = a[i]\nelse\nj = integer with j = upper_bound(d + 1, d + len + 1, a[i]) - d\nd[j] = a[i]\nprint len
int main() {\n\tint n, a[1000], p = 1, cnt = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tint t = 0;\n\t\tfor (int j = 1; j <= i; j++)\n\t\t\tif (a[j] == 0) t++;\n\t\tfor (int j = i; j <= n; j++)\n\t\t\tif (a[j] == 1) t++;\n\t\tcnt = max(cnt, t);\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	create ints n, p = 1, and cnt = 0 and int array a of size 1000\nread n\nfor i = 1 to n, read a[i]\nfor i = 1 to n\ncreate int t = 0\nfor j = 1 to i\nif a[j] is equal to 0, increment t\nfor j = i to n\nif a[j] is equal to 1, increment t\nset cnt to max of cnt and t\nprint cnt
"const int N = 105;\nint n, s[N], dp[N], ans;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) cin >> s[i];\n\tfor (int i = 1; i <= n; ++i) {\n\t\tdp[i] = 1;\n\t\tfor (int j = i - 1; j >= 1; --j) {\n\t\t\tif (s[i] == 0) {\n\t\t\t\tif (s[j] == 0) dp[i] = max(dp[i], 1 + dp[j]);\n\t\t\t} else {\n\t\t\t\tdp[i] = max(dp[i], 1 + dp[j]);\n\t\t\t}\n\t\t}\n\t\tans = max(dp[i], ans);\n\t}\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	"declare new constant integer called N = 105\ncreate new ints n and ans; declare int arrays s and dp with N elements\nread user input to n\nread input to s[i] from the index 1 to n inclusive\nfor integer i = 1 to n inclusive\nset dp[i] to 1\nfor j from i - 1 to 1 inclusive decrementing j\nif s[i] is equal to 0\nif s[j] = 0, change the value of dp[i] to max of dp[i] and 1 + dp[j]\nelse\nchange the value of dp[i] to max of dp[i] and 1 + dp[j]\nassign max of dp[i] and ans to ans\nprint ans and ""\n"""
"const int size = 105;\nint suf[size] = {0}, pre[size] = {0};\nint main() {\n\tint n;\n\tcin >> n;\n\tint arr[n + 1] = {0};\n\tfor (int i = 1; i <= n; i++) cin >> arr[i], suf[i] = (arr[i]), pre[i] = (!arr[i]);\n\tfor (int i = n; i >= 1; i--) suf[i] += suf[i + 1];\n\tfor (int i = 1; i <= n; i++) pre[i] += pre[i - 1];\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) ans = max(ans, pre[i] + suf[i]);\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	size = const integer with size = 105\nsuf, pre = integers with pre, suf = integer array of size size = {0}\nn = integer\nread n\narr = integer array of size n + 1 = {0}\nfor i = 1 to n, read arr[i], suf[i] = (arr[i]), pre[i] = (not arr[i])\nfor i = n down to 1, suf[i] = suf[i] + suf[i + 1]\nfor i = 1 to n, pre[i] = pre[i] + pre[i - 1]\nans = integer with ans = 0\nfor i = 1 to n, ans = max(ans, pre[i] + suf[i])\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tint a[200];\n\tint one = 0, zero = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i]) one++;\n\t}\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] == 0) zero++;\n\t\tans = max(ans, one + zero);\n\t\tif (a[i] == 1) one--;\n\t}\n\tcout << ans << '\n';\n}	n = integer\nread n\na = integer array of size 200\none, zero = integers with one = 0, zero = 0\nfor i = 0 to n exclusive\nread a[i]\nif (a[i]) increment one\nans = integer with ans = 0\nfor i = 0 to n\nif (a[i] is 0), increment zero\nans = max of ans and one + zero\nif (a[i] is 1), decrement one\nprint ans
const int maxn = 10005;\nint s[maxn];\nint dp[maxn];\nint len = 0;\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> s[i];\n\tfor (int i = 0; i < n; i++) {\n\t\tdp[i] = 1;\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tif (s[i] >= s[j] && dp[j] + 1 > dp[i]) dp[i] = dp[j] + 1;\n\t\t}\n\t\tlen = max(dp[i], len);\n\t}\n\tcout << len << endl;\n\treturn 0;\n}	create const integer maxn = 10005\ncreate integer array s of size maxn\nmake int array dp of size dp\ncreate int len = 0\ncreate int n\nread n\nfor i = 0 to n exclusive, read s[i]\nfor i = 0 to n exclusive\nset dp[i] to 1\nfor j = 0 to i exclusive\nif s[i] is greater than or equal to s[j] and dp[j] + 1 is greater than dp[i], set dp[i] to dp[j] + 1\nset len to max of dp[i] and len\nprint len
long long int a[204];\nint main() {\n\tlong long int n, i, j, k, x, y, t, m;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tlong long int mx = 0, cnt1 = 0;\n\tfor (i = 1; i <= n; i++) {\n\t\tlong long int cnt = 0;\n\t\tif (a[i] == 1) cnt1++;\n\t\tif (a[i] == 0) {\n\t\t\tfor (j = 1; j <= i; j++) {\n\t\t\t\tif (a[j] == 0) cnt++;\n\t\t\t}\n\t\t\tfor (j = i + 1; j <= n; j++) {\n\t\t\t\tif (a[j] == 1) cnt++;\n\t\t\t}\n\t\t\tmx = max(mx, cnt);\n\t\t}\n\t}\n\tcout << max(mx, cnt1) << endl;\n}	make long long integer a of size 204\ncreate long long integer n, i, j, k, x, y, t, and m\nread n\nfor i = 1 to n, read a[i]\nmake long long integer mx = 0 and cnt1 = 0\nfor i = 1 to n\ncreate long long integer cnt = 0\nif a[i] is 1, increment cnt1\nif a[i] is 0\nfor j = 1 to i\nif a[j] is 0, increment cnt\nfor j = i + 1 to n\nif a[j] is 1, add 1 to cnt\nset mx to max of mx and cnt\nprint max of mx and cnt1
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> game(n);\n\tint numOf0 = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> game[i];\n\t\tif (game[i] == 0) numOf0++;\n\t}\n\tif (numOf0 == 0 || numOf0 == n) {\n\t\tcout << n << '\n';\n\t\treturn 0;\n\t}\n\tint last0 = n - 1;\n\twhile (last0 >= 0 && game[last0] == 1) { last0--; }\n\tint numOf1 = n - 1 - last0;\n\tint ans = numOf0 + numOf1;\n\tfor (int i = last0; i >= 0; --i) {\n\t\tif (game[i] == 1) {\n\t\t\tnumOf1++;\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tans = max(ans, numOf0 + numOf1);\n\t\t\tnumOf0--;\n\t\t}\n\t}\n\tcout << max(ans, numOf1) << '\n';\n\treturn 0;\n}	n = int\nread n\ngame = int vector of size n\nnumOf0 = int with numOf0 = 0\nfor i = 0 to n\nread game[i]\nif game[i] is 0 increment numOf0\nif numOf0 is 0 or n\nprint n\nlast0 = int with last0 = n - 1\nloop while last0 >= 0 and game[last0] is 1 decrement last0\nnumOf1 = int with numOf1 = n - 1 - last0\nans = int with ans = numOf0 + numOf1\nfor i = last0 to 0 inclusive decrementing i\nif game[i] is 1\nincrement numOf1\ncontinue\nelse\nset ans to max of ans, numOf0 + numOf1\ndecrement numOf0\nprint max of ans, numOf1
"int main() {\n\tint n, res = 0, one = 0, zero = 0;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i]) {\n\t\t\tone = max(one, zero);\n\t\t\tone++;\n\t\t} else {\n\t\t\tzero++;\n\t\t}\n\t}\n\tres = max(one, zero);\n\tcout << res << ""\n"";\n\treturn 0;\n}"	"create integers n, res, one and zero, all except n with value 0\nread from the input to n\na is a new array of integers with n elements\nfor integer i = 0 to n exclusive incrementing i\nread a[i]\nif a[i] is true\nset one to max of one and zero\nincrement one by one\nelse\nincrement zero\nchange the value of res to max of one and zero\nprint res and ""\n"" to the standard output"
int main() {\n\tint n, i, j, s = 0, max = 0, a[105], b[105];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 0) s++;\n\t\tb[i] = s;\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] == 0)\n\t\t\tif (2 * b[i] + n - 1 - i - s > max) max = 2 * b[i] + n - 1 - i - s;\n\t\tif (a[i] == 1)\n\t\t\tif (2 * b[i] + n - i - s > max) max = 2 * b[i] + n - i - s;\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	n,i,j=int, s,max=0, a and b=array of 105 int\nread n\nfor i=0 to n exclusive\nread a[i]\nif a[i] is 0 increment s\nb[i]=s\nfor i=0 to n exclusive\nif a[i] is 0\nif 2*b[i]+n-1-i-s > max max=2*b[i]+n-1-i-s\nif a[i] is 1\nif 2*b[i]+n-i-s > max max=2*b[i]+n-i-s\nprint max
int main() {\n\tlong long x;\n\tcin >> x;\n\tif (x % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	x=long long\nread x\nif x is even\nprint 2\nelse\nprint 1
int main() {\n\tlong long a;\n\tcin >> a;\n\tif (a % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	create new long long variable a\nread user input to a\nif a is even\nprint 2\nelse\nprint 1 to stdout
long long int k, n, a[100000];\nint main() {\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	create long long int k, n, a[100000]\nread n\nif n is even\nprint 2\nelse\nprint 1
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n & 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 2 << endl;\n}	declare n as long long\nread n\nif n bitwise and 1\nprint 1, newline\nelse\nprint 2 and newline
int main() {\n\tlong long x, y;\n\tcin >> x;\n\ty = x % 2;\n\tif (y == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	create long longs x and y\nread from the input to x\nassign x % 2 to y\nif y = 0\nprint 2 to the standard output\nelse\nprint 1
int main() {\n\tstring s;\n\tcin >> s;\n\treverse(s.begin(), s.end());\n\tif (s[0] == '0' || s[0] == '2' || s[0] == '4' || s[0] == '6' || s[0] == '8')\n\t\tcout << '2' << endl;\n\telse\n\t\tcout << '1' << endl;\n\treturn 0;\n}	create string s\nread s\nreverse s\nid s[0]=0, 2, 4, 6 or 8\nprint 2\nelse\nprint 1 and a newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 2 << endl;\n}	create long long n\nread n\nif n mod 2 = 1\nprint 1\nelse\nprint 2
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << 2 - n % 2 << endl;\n\treturn 0;\n}	declare new long long called n\nread n from the user input\nprint 2 - n % 2
long long n, mid, f;\nint main() {\n\tcout << setprecision(30) << fixed;\n\tcin >> n;\n\tcout << 2 - n % 2 << '\n';\n\treturn 0;\n}	declare long long variables n, mid and f\nset decimal precision of the output to 30 and change notation to floating-point\nread standard input to n\nprint 2 - n % 2 and '\n' to the standard output
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 2 << endl;\n\treturn 0;\n}	create long long int n\nread n\nif n modulo 2 is 1\nprint 1\nelse\nprint 2
int main() {\n\tunsigned long long n;\n\tcin >> n;\n\tn % 2 == 0 ? cout << 2 << endl : cout << 1 << endl;\n\treturn 0;\n}	create new unsigned long long variable n\nread from the input to n\nprint 2 if n is even and 1 if n is odd
;\nconst long long INT64M = 0X3F3F3F3F3F3F3F3F;\nconst int INT32M = 0x3F3F3F3F;\nconst int mod = 1e9 + 7;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n & 1) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tcout << 2 << endl;\n\t}\n}	end statement\ndeclare constant long long INT64M = 0X3F3F3F3F3F3F3F3F\ndeclare constant integer INT32M = 0x3F3F3F3F\ndeclare constant integer mod = 1e9 + 7\ndeclare n as long long\nread n\nif n bitwise and 1\nprint 1, newline\nelse\nprint 2, newline
const int MAX = 1e5 + 5;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	MAX = n, a[1005], sum = 0, m, cmp\ncreate long long n\nread n\nif n is even\nprint 2\nelse\nprint 1 and a newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	let n be a long integer\nread n\nif n modulo 2 is equal to 0\nprint 2 and newline\nelse do the following\nprint 1 and newline
int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n % 2)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 2 << endl;\n}	n = long long int\nread n\nif n is uneven\nprint 1\nelse\nprint 2
vector<long long int> v;\nint main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	v is a new vector of long long integers\ncreate new long long integer variable n\nread n from the input\nif n is even\nprint 2 to the standard output\nelse\nprint 1
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2)\n\t\tputs(""1"");\n\telse\n\t\tputs(""2"");\n}"	"create new long long variable called n\nread the value of n from the input\nif n modulo 2 is not 0\nprint ""1"" to the output\nelse\nprint ""2"" to stdout"
int main() {\n\tunsigned long long int n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << 2 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n}	create new unsigned long long integer called n\nread n\nif n is even\nprint 2\nelse\nprint 1
const int inf = 0x3f3f3f;\nint main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tif (n % 2 == 0)\n\t\t\tcout << 2 << endl;\n\t\telse\n\t\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	create constant integer inf with value 0x3f3f3f\ncreate new long long n\nread n and loop further\nif n is even\nprint 2\nelse\nprint 1 to the standard output
int main() {\n\tlong long a;\n\tcin >> a;\n\tcout << (a % 2 == 1 ? 1 : 2) << endl;\n\treturn 0;\n}	a = long long\nread a\nif a is uneven print 1 else print 2
const int INF = 0x3f3f3f3f;\nlong long mod = 10000000000LL;\nlong long cheng(long long a, long long b, long long c) {\n\tlong long ret = 0;\n\twhile (b) {\n\t\tif (b & 1) {\n\t\t\tret += a;\n\t\t\tif (ret >= c) ret -= c;\n\t\t}\n\t\ta += a;\n\t\tif (a >= c) a -= c;\n\t\tb >>= 1;\n\t}\n\treturn ret;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tlong long ans = cheng(n, n, mod);\n\tif (ans % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	create constant int INF = 0x3f3f3f3f\nlet long long integer mod = 10000000000LL\ndeclare cheng taking in long long integers a, b, and c and returning long long integer\nmake long long int ret = 0\nwhile b is truthy\nif b & 1 are truthy\nset ret to ret + a\nif ret is greater than or equal to c, set ret to ret - c\nset a to a + a\nif a is greater than or equal to c, set a to a - c\nmove bits of b 1 place to right\nreturn ret\ncreate long long int n\nread n\nmake long long integer ans = cheng(n, n, mod)\nif ans modulo 2 is 0\nprint 2\nelse\nprint 1
const long long MAX = 1000;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 2 << endl;\n}	create constant long long MAX = 1000\ndeclare long long variable n\nread input to n\nif n is odd\nprint 1\nelse\nprint 2 to the output
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << (n % 2 == 1 ? 1 : 2) << endl;\n\treturn 0;\n}	n=long long\nread n\nprint 1 if n is odd else 2
const int MAX = 1e5 + 5;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	create constant int MAX = 1e5 + 5\nlet long long n\nread n\nif n modulo 2 is 0\nprint 2\nelse\nprint 1
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << 2 - (n % 2) << endl;\n}	declare long long n\nread n from the input\nprint 2 - (n modulo 2) to the standard output
int main() {\n\tlong long n;\n\tlong long a = 1;\n\tlong long b = 2;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << b << endl;\n\t} else {\n\t\tcout << a << endl;\n\t}\n}	n is a new long long variable\ndeclare new long long called a = 1\ncreate new long long called b with value 2\nread user input to n\nif n is even\nprint b to the standard output\nelse\nprint a
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << ""2"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	let n = long long\nread n\nif n is even\nprint 2\nelse\nprint 1
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 2 << endl;\n\treturn 0;\n}	create long long n\nread n\nif n is odd\nprint 1\nelse\nprint 2
long long a, b, c, e, f;\nint main() {\n\tcin >> a;\n\tif (a % 2)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 2 << endl;\n}	make long long integers a, b, c, e, and f\nread a\nif a modulo 2 is truthy\nprint 1\notherwise do\nprint 2
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n & 1)\n\t\tcout << ""1\n"";\n\telse\n\t\tcout << ""2\n"";\n\treturn 0;\n}"	create long long int n\nread n\nif n and 1 different from 0\nprint 1\n\nelse\nprint 2\n
"int main() {\n\tlong long int n;\n\twhile (cin >> n) {\n\t\tif (n % 2 == 1)\n\t\t\tcout << ""1"";\n\t\telse\n\t\t\tcout << ""2"";\n\t\tcout << endl;\n\t}\n}"	"create long long int n\nread n and while n is truthy\nif n modulo 2 is 1\nprint ""1""\nelse\nprint ""2""\nprint new line"
int main() {\n\tunsigned long long n;\n\tcin >> n;\n\tn % 2 == 0 ? cout << 2 << endl : cout << 1 << endl;\n\treturn 0;\n}	n = unsigned long long\nread n\nif n is even then print 2 else print 1
"const int maxn = 1e5 + 5;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2)\n\t\tcout << ""1"" << endl;\n\telse\n\t\tcout << ""2"" << endl;\n}"	"declare constant integer maxn = 1e5 + 5\ndeclare long long n as argument\nread n\nif n % 2\nprint ""1"", newline\nelse\nprint ""2"", newline"
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << ""2"" << endl;\n\t} else {\n\t\tcout << ""1"" << endl;\n\t}\n\treturn 0;\n}"	"declare n as long long\nread n\nif n % 2 is 0\nprint ""2"", newline\nelse\nprint ""1', newline"
int main() {\n\tlong long x;\n\tcin >> x;\n\tif (x % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	declare long long x\nread x\nif x % 2 is 0\nprint 2 and newline\nelse\nprint 1 and newline
"int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tif (n % 2 == 0) {\n\t\t\tcout << ""2"" << endl;\n\t\t} else {\n\t\t\tcout << ""1"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"declare new long long n\nread n and keep looping\nif n is even\nprint ""2"" to the otuput stream\nelse\nprint ""1"""
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << 2 - (n % 2) << endl;\n\treturn 0;\n}	create long long n\nread n\nprint 2 - (n % 2)
int main() {\n\tlong long a_i, b_i, n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n}	a_i, b_i, n = long long\nread n\nif n is even\nprint 2\nelse\nprint 1
const int maxn = 1e5 + 10;\nconst int maxm = 1e6 + 10;\nconst int INF = 0x3f3f3f3f;\nlong long casn, n, m, k;\nlong long num[maxn];\nlong long cal(long long x) {\n\tlong long ans = 1;\n\tfor (long long i = 1; i <= x; i++) { ans *= i; }\n\treturn ans;\n}\nint main() {\n\tcin >> n;\n\tcout << 1 + (n % 2 == 0) << endl;\n\treturn 0;\n}	declare constant integer maxn = 1e5 + 10\ndeclare constant integer maxm = 1e6 + 10\ndeclare constant integer INF = 0x3f3f3f3f\ndeclare long longs casn, n, m, k\ndeclare long long array num size maxn\ndeclare cal with long long x as argument, returning lon glong\ndeclare long long ans = 1\nfor i = 1 to x inclusive, let ans be ans * i\nreturn ans from function\nread n\nprint 1 + ( n % 2 is 0 ), newline
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> count(101);\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\t++count[x];\n\t}\n\tcout << *max_element(count.begin(), count.end()) << endl;\n\treturn 0;\n}	let n be a integer\nread n\nlet count be a vector of integers\nfor integer i = 0 to n exclusive\nread x\nread x\nincrease count[x] by 1\nprint *max_element from beginning to end of count and endline
long long n, ans = 0, a[111], vis[100010];\ninline long long read() {\n\tlong long x = 0;\n\tbool f = 0;\n\tchar ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) f ^= (ch == '-');\n\tfor (; isdigit(ch); ch = getchar()) x = (x << 3) + (x << 1) + (ch ^ 48);\n\treturn f ? -x : x;\n}\nint main() {\n\tn = read();\n\tfor (register int i = 1; i <= n; i++) a[i] = read(), vis[a[i]]++;\n\tfor (register int i = 1; i <= n; i++)\n\t\tif (ans < vis[a[i]]) ans = vis[a[i]];\n\tcout << ans << endl;\n\treturn 0;\n}	let n, ans = 0, a[111], vis[100010] be long long\nin inline long long function read\nx = long long = 0\nbool = 0 = f\nch = char = get char\nfor , until not ch is digit set ch to get char, f bit exclusive or (ch == '-')\nfor , is digit of ch = false, set ch = get char; set x to (x << 3) + (x << 1) + (ch ^ 48)\nis f not 0 ? then return -x else return x\nn = read()\nfor resgister int i = 1 to n inclusive, set a[i] to read, increment vis at a[i]\nfor register int i = 1 to n inclusive\nif ans < vis at a[i]\nthen set ans to vis at a[i]
int max_elemento(vector<int> coins_array) {\n\tint max_element = 0;\n\tfor (int i = 0; i < coins_array.size(); i++) {\n\t\tif (coins_array[i] > max_element) { max_element = coins_array[i]; }\n\t}\n\treturn max_element;\n}\nint main() {\n\tint coins_nro;\n\tint coin_value;\n\tvector<int> coins_array(105, 0);\n\tint result;\n\tcin >> coins_nro;\n\tfor (int i = 0; i < coins_nro; i++) {\n\t\tcin >> coin_value;\n\t\tcoins_array[coin_value]++;\n\t}\n\tresult = max_elemento(coins_array);\n\tcout << result << '\n';\n\treturn 0;\n}	max_elemento is a integer function with vector of integers argument coins_array\ncreate integer max_element with value 0\nfor i from 0 to length of coins_array exclusive incrementing i\nif coins_array[i] is greater than max_element, set max_element to coins_array[i]\nreturn max_element\ncreate integer coins_nro\ncreate new integer variable coin_value\ncreate vector of integers coins_array with size 105 filled with 0\nresult is a new integer variable\nread variable coins_nro from the input\nin a for loop, change i from 0 to coins_nro exclusive incrementing i\nread from the input to coin_value\nincrement coins_array[coin_value] by one\nassign the new value = max_elemento(coins_array) to result\nprint result and '\n'
int a[10005];\nint main() {\n\tint n, m, d = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> m;\n\t\ta[m]++;\n\t}\n\tfor (int j = 0; j < 10000; j++) {\n\t\tif (a[j] > d) { d = a[j]; }\n\t}\n\tcout << d << endl;\n\treturn 0;\n}	declare integer array a size 10005\ndeclare integers n, m, d = 0\nread n\nfor i = 1 to n inclusive\nread m\nincrement a[m]\nfor j = 0 to 10000 exclusive\nif a[j] is greater than d, let d be a[j]\nprint d and newline
int main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int a[n], c = 0;\n\tlong long int x[101] = {0};\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tx[a[i]]++;\n\t}\n\tcout << *max_element(x, x + 101) << endl;\n\treturn 0;\n}	create long long integer n\nread n\nmake long long int array a of size and long long c = 0\nlet long long int array x of size 101 containing {0}\nfor i = 0 to n exclusive\nread a[i]\nincrement x[a[i]]\ndisplay *max_element(x, x + 101)
"int a[250], ans, sum = 1;\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n == 1) {\n\t\tcout << ""1"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (a[i] == a[i - 1]) sum++;\n\t\tans = max(ans, sum);\n\t\tif (a[i] != a[i - 1]) sum = 1;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	"declare integer array a size 250, integers ans, sum = 1\ndeclare integer n\nread n\nif n is 1\nprint ""1"" and newline\nfor i = 0 to n inclusive, read a[i]\nsort from a + 1 to a + n + 1\nfor i = 2 to n inclusive\nif a[i] is a[i-1], increment sum\nlet ans be maximum of ans and sum\nif a[i] is not a[i-1], let sum be 1\nprint ans and newline"
int main() {\n\tint n, a[1000], i, j;\n\tmemset(a, 0, sizeof(a));\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> j;\n\t\ta[j]++;\n\t}\n\tint m = -999;\n\tfor (i = 0; i < 1000; i++) {\n\t\tif (a[i] > m) { m = a[i]; }\n\t}\n\tcout << m << endl;\n\treturn 0;\n}	integer as n,a[1000],i,j\ncreate memset with pointer a, value of 0, and byte size of a\nread n\nfor = 0 to less than n do the following\nread j\nadd one to a[j]\ninteger as m = -999\nfor = 0 to less than 1000 do the following\nif a[i] is greater than m then do the following m = a[i]\noutput m
const int INF = 0x3f3f3f3f;\nint v[105];\nint main() {\n\tint i, j, k;\n\tint n, m, x;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> x, v[x]++;\n\tsort(v, v + 101);\n\tcout << v[100] << endl;\n}	let INF be a constant integer with INF = 0x3f3f3f3f\nlet v be an integer array of size 105\nlet i, j, k be integers\nlet n, m, x be integers\nread n\nfor i = 0 to n exclusive, read x and increase v[x] by 1\nsort the values v and v + 101\nprint v[100] and endline
int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; ++i) { cin >> arr[i]; }\n\tint count[101];\n\tfor (int i = 0; i < 101; ++i) { count[i] = 0; }\n\tfor (int i = 0; i < n; ++i) { count[arr[i]]++; }\n\tint answer = 0;\n\tfor (int i = 0; i < 101; ++i) {\n\t\tif (count[i] > answer) { answer = count[i]; }\n\t}\n\tcout << answer << endl;\n}	let n be a integer\nread n\narr = array of integers of length n\nfor i = 0 to n exclusive , read arr[i]\ncount = array of integers of length 101\nfor i = 0 to 101 exclusive , count[i] is equal to 0\nfor i = 0 to n exclusive , increment count[arr[i]] by 1\nthe integer value of answer = 0\nfor i = 0 to 101 exclusive\nif count[i] is greater than answer , answer is equal to count[i]\nprint answer and newline
vector<int> arr(10000);\nint main() {\n\tint n, x;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\t++arr[x];\n\t}\n\tcout << *max_element(arr.begin(), arr.end()) << endl;\n}	arr is a vector of integers\nn,x be integers\nread n\nfor integer i = 0 to n exclusive\nread x\nincrease arr[x] by 1\nprint *max_element(arr.begin(), arr.end()) and endline
bool cmp(int a, int b) {\n\treturn a > b;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tint a[200] = {0};\n\tfor (int i = 0; i < n; i++) {\n\t\tint mid;\n\t\tcin >> mid;\n\t\ta[mid]++;\n\t}\n\tsort(a, a + 105, cmp);\n\tcout << a[0] << endl;\n\treturn 0;\n}	declare cmp with integers a, b as arguments, returning boolean\nreturn a is greater than b\ndeclare integer n\nread n\ndeclare integer array a size 200 = {0}\nfor i = 0 to n exclusive\ndeclare integer mid\nread mid\nincrement a[mid]\nsort from a to a + 105 using cmp to compare\nprint a[0] and newline
int a[10005];\nint main() {\n\tint n, m, b = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> m;\n\t\ta[m]++;\n\t}\n\tfor (int i = 0; i <= 10000; i++) {\n\t\tif (a[i] > b) b = a[i];\n\t}\n\tcout << b << endl;\n\treturn 0;\n}	integer as array a of size 10005\ninteger as n,m,b = 0\nread n\nfor i = 1 to less than or equal to n do the following\nread m\nadd one to a[m]\nfor i = 0 to less than or equal to 10000 do the following\nif a[i] is greater than b then b = a[i]\noutput b
int main() {\n\tlong long n;\n\tcin >> n;\n\tvector<long long> coins;\n\tfor (long long i = 0; i < n; i++) {\n\t\tlong long aux;\n\t\tcin >> aux;\n\t\tcoins.push_back(aux);\n\t}\n\tsort(coins.begin(), coins.end());\n\tlong long cont = 1, resp = 1;\n\tfor (long long i = 0; i < n; i++) {\n\t\tif (coins[i] == coins[i - 1]) {\n\t\t\tcont++;\n\t\t} else {\n\t\t\tif (cont > resp) { resp = cont; }\n\t\t\tcont = 1;\n\t\t}\n\t}\n\tif (cont > resp) { resp = cont; }\n\tcout << resp << endl;\n\treturn 0;\n}	create long long n\nread n\nmake long long vector coins\nfor i = 0 to n exclusive\ncreate long long aux\nread aux\nappend aux to coins\nsort coins\ncreate long long ints cont = 1 and resp = 1\nfor i = 0 to n exclusive\nif coins[i] is equal to coins[i - 1]\nincrement cont\nelse do\nif cont is greater than resp, set resp to cont\nset cont to 1\nif cont is greater than resp, set resp to cont\ndisplay resp
int main() {\n\tint n, arr[105], max = -1, cnt;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tcnt = 0;\n\t\tif (arr[i] == -5000000) { continue; }\n\t\tint tmp = arr[i];\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tif (tmp == arr[j]) {\n\t\t\t\tcnt++;\n\t\t\t\tarr[j] = -5000000;\n\t\t\t}\n\t\t}\n\t\tif (cnt >= max) { max = cnt; }\n\t}\n\tcout << max << endl;\n}	declare integers n, max = -1, cnt, integer array arr size 105\nread n\nfor i = 0 to n exclusive, read arr[i]\nfor i = 0 to n exclusive\nlet cnt be 0\nif arr[i] is -5000000, end loop iteration\ndeclare integer tmp = arr[i]\nfor j = 0 to n exclusive\nif tmp is arr[j]\nincrement cnt\nlet arr[j] be -5000000\nif cnt is greater than or equal to max, let max be cnt\nprint max, newline
int main() {\n\tint n;\n\tcin >> n;\n\tint ma = 0;\n\tint a[110];\n\tmemset(a, 0, sizeof(a));\n\tfor (int i = 0; i < n; i++) {\n\t\tint num;\n\t\tcin >> num;\n\t\ta[num]++;\n\t\tma = max(a[num], ma);\n\t}\n\tcout << ma << endl;\n}	create integer n\nread n\nmake integer ma = 0\nmake integer array a of size 110\nset all content of a to 0\nfor i = 0 to n exclusive\nmake integer num\nread num\nadd 1 to a[num]\nset ma to max of a[num] and ma\nprint ma
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> v(101, 0);\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tv[x]++;\n\t}\n\tint MAX = *max_element(v.begin(), v.end());\n\tcout << MAX << endl;\n\treturn 0;\n}	integer as n\nread n\ncreate integer vector of v(101, 0)\nfor i = 0 to less than n do the following\ninteger as x\nread x\nadd one to v[x]\ninteger as MAX = value pointed to by max_element within v\noutput MAX
"int main() {\n\tlong long int n, i;\n\tcin >> n;\n\tlong long int a[n], max = 0;\n\tmap<long long int, long long int> m;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tm[a[i]]++;\n\t\tif (m[a[i]] > max) max = m[a[i]];\n\t}\n\tcout << max << ""\n"";\n}"	create long long ints n and i\nread n\nmake long long array a of size n and long long max = 0\nmake map m of long long ints to long long ints\nfor i = 0 to n exclusive\nread a[i]\nincrement m[a[i]]\nif m[a[i]] is greater than max, set max to m[a[i]]\nprint max
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint ans = 0;\n\t\tmap<int, int> p;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint val;\n\t\t\tcin >> val;\n\t\t\tp[val]++;\n\t\t\tans = max(p[val], ans);\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n is a new integer\nloop, reading n from the input\ndeclare integer ans with value 0\nlet p be a map from integers to integers\nincrement i in a loop from 0 to n exclusive\nnew integer val\nread val\nincrement p[val]\nassign the new value = max of p[val] and ans to ans\nprint ans
long long cont[101];\nint main() {\n\tlong long n;\n\tcin >> n;\n\tfor (long long i = 0; i < n; i++) {\n\t\tlong long num;\n\t\tcin >> num;\n\t\tcont[num]++;\n\t}\n\tlong long maxi = 0;\n\tfor (long long i = 1; i <= 100; i++) { maxi = max(maxi, cont[i]); }\n\tcout << maxi << endl;\n}	let cont be a long integer array\nn is a long integer\nread n\nfor long integer i = 0 to n exclusive\nnum is a long integer\nread num\nincrease cont[num] by 1\nmaxi is a long integer 0\nfor long integer i = 1 to 100 inclusive, maxi = max(maxi, cont[i]\nprint maxi and endline
int main() {\n\tint n, i, j, maxx;\n\tcin >> n;\n\tint a[n];\n\tint freq[101] = {0};\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tfreq[a[i]]++;\n\t}\n\t{}\n\tmaxx = INT_MIN;\n\tfor (int i = 0; i < 101; i++) {\n\t\tif (freq[i] >= maxx) { maxx = freq[i]; }\n\t}\n\tcout << maxx << endl;\n\treturn 0;\n}	integer as n,i,j,maxx\nread n\ninteger as a[n]\ninteger as freq[101] = 0\nfor i = 0 to less than n do the following\nread array a[i]\nadd one to freq[a[i]]\ndo nothing\nset maxx to INT_MIN\nfor i = 0 to less than 101 do the following\nif freq[i] is greater than or equal to maxx then do the following maxx = freq[i]\noutput maxx
int main() {\n\tint n, arr[101], m = 0, c = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (arr[i - 1] == arr[i])\n\t\t\tc++;\n\t\telse\n\t\t\tc = 0;\n\t\tm = max(m, c);\n\t}\n\tif (m == 0)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << m + 1 << endl;\n\treturn 0;\n}	n, m, c = int with m = 0 and c = 0 and arr = int array of size 101\nread n\nread n values into arr\nsort arr from index 0 to n\nfor i = 1 to n\nif arr[i - 1] is arr[i]\nincrement c\nelse\nset c to 0\nset m to max of m, c\nif m is 0\nprint 1\nelse\nprint m + 1
int main() {\n\tint n = 0, i = 0, t = 0, max = 0;\n\tcin >> n;\n\tvector<int> f(101, 0);\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> t;\n\t\tf[t]++;\n\t}\n\tfor (i = 1; i <= 100; i++) { max = (f[i] > max) ? f[i] : max; }\n\tcout << max << endl;\n\treturn 0;\n}	create integers n, i, t and max = 0\nread user input to n\nf is a new vector of integers with size 101 filled with 0\nstart for loop from i = 0 to n exclusive incrementing i\nread standard input to t\nincrement f[t]\nin a for loop, change i from 1 to 100 inclusive, changing max to maximum of f[i] and max on each iteration\nprint max
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long c[n], max = 1;\n\tfor (long long i = 0; i < n; i++) { cin >> c[i]; }\n\tfor (long long i = 0; i < n - 1; i++) {\n\t\tlong long cnt = 1;\n\t\tfor (long long j = i + 1; j < n; j++) {\n\t\t\tif (c[j] == c[i]) { cnt++; }\n\t\t}\n\t\tif (i == 0) max = cnt;\n\t\tif (cnt >= max) max = cnt;\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	create long long n\nread n\nmake long long int array c of size n and int max = 1\nfor i = 0 to n exclusive, read c[i]\nfor i = 0 to n - 1 exclusive\ncreate long long cnt = 1\nfor j = i + 1 to n exclusive\nif c[j] is equal to c[i], increment cnt\nif i is equal to 0, set max to cnt\nif cnt is greater than or equal to max, set max to cnt\ndisplay max
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> coins(101, 0);\n\tfor (int i = 0; i < n; i++) {\n\t\tint value;\n\t\tcin >> value;\n\t\tcoins[value]++;\n\t}\n\tint minPockets = -1;\n\tfor (int i = 0; i < 101; i++) minPockets = max(minPockets, coins[i]);\n\tcout << minPockets << endl;\n\treturn 0;\n}	integer as n\nread n\ncreate integer vector of coins 101, 0\nfor i = 0 to less than n do the following\ninteger as value\nread value\nadd one to coins[value]\ninteger as minPockets = -1\nfor i = 0 to less than 101 then minPockets = maximum of minpockets or coins[i]\noutput minPockets
"int p1, p2, p3, p4, a, b;\nint main() {\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tint ans = 0;\n\tint p = min(p1, p2);\n\tp = min(p, p3);\n\tp = min(p, p4);\n\tif (b < p) {\n\t\tcout << b - a + 1 << ""\n"";\n\t\treturn 0;\n\t}\n\tif (p - a > 0) { ans = p - a; }\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	p1,p2,p3,p4,a,b=int\nread p1,p2,p3,p4,a,b\nans=0\np=min(p1,p2)\np=min(p,p3)\np=min(p,p4)\nif b<p\nprint b-a+1\nif p-a>0 ans=p-a\nprint ans
int p[4], a, b, ans;\nint main() {\n\tfor (int i = 0; i < 4; ++i) cin >> p[i];\n\tcin >> a >> b;\n\tans = b - a + 1;\n\tfor (int i = a; i <= b; ++i) {\n\t\tfor (int j = 0; j < 4; ++j) {\n\t\t\tif (i < p[j]) continue;\n\t\t\t--ans;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integer array p size 4, integers a, b, ans\nfor i = 0 to 4 exclusive, read p[i]\nread a, b\nlet ans be b - a + 1\nfor i = a to b inclusive\nfor j = 0 to 4 exclusive\nif i is less than p[j], end loop iteration\ndecrement ans\nend loop\nprint ans and newline
int main() {\n\tint p1, p2, p3, p4, a, b;\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tint sum = 0;\n\tfor (int i = a; i <= b; i++) {\n\t\tif (i % p1 == i && i % p2 == i && i % p3 == i && i % p4 == i) { sum++; }\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	declare integers p1, p2, p3, p4, a and b\nread input to p1, p2, p3, p4, a and b\ndeclare integer variable with name sum = 0\nfor i from a to b inclusive\nif i % p1 = i and i % p2 = i and i % p3 = i and i % p4 = i, increment sum by one\nprint sum
int main() {\n\tint p[4];\n\tfor (int i = 0; i < 4; i++) cin >> p[i];\n\tint esq, dir;\n\tcin >> esq >> dir;\n\tint res = 0;\n\tfor (int i = esq; i <= dir; i++) {\n\t\tsort(p, p + 4);\n\t\tint cnt = 0;\n\t\tdo {\n\t\t\tint x = i;\n\t\t\tfor (int j = 0; j < 4; j++) x = x % p[j];\n\t\t\tif (x == i) cnt++;\n\t\t} while (next_permutation(p, p + 4));\n\t\tif (cnt >= 7) res++;\n\t}\n\tcout << res << endl;\n\treturn 0;\n}	p=array of 4 int\nfor i=0 to 4 exclusive read p[i]\nesq,dir=int\nread esq,dir\nres=0\nfor i=esq to dir inclusive\nsort p\ncnt=0\ndo\nx=i\nfor j=0 to 4 exclusive x=x modulo p[j]\nif x is i increment cnt\nwhile next_permutation(p, p+4)\nif cnt >= 7 increment res\nprint res
int main() {\n\tint p1, p2, p3, p4;\n\tint a, b;\n\tint ans = 0;\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tfor (int i = a; i <= b; i++) {\n\t\tif (i % p1 == i && i % p2 == i && i % p3 == i && i % p4 == i) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	p1, p2, p3, p4 = int\na, b = int\nans = int with ans = 0\nread p1 then p2 then p3 then p4 then a then b\nfor i = a to b inclusive\nif i mod p1 is i and i mod p2 is is and i mod p3 is i and i mod p4 is i increment ans\nprint ans
int main() {\n\tlong long p1, p2, p3, p4, a, b, ans = 0;\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tfor (int i = a; i <= b; i++)\n\t\tif (i % p1 == i && i % p2 == i && i % p3 == i && i % p4 == i) ans++;\n\tcout << ans << endl;\n}	create long long ints p1, p2, p3, p4, a, b, and ans = 0\nread p1, p2, p3, p4, a, and b\nfor i = a to b\nif i % p1 is equal to i, i % p2 is equal to i, i % p3 is equal to i, and i % p4 is equal to i, increment ans\nprint ans
"int main() {\n\tint p1, p2, p3, p4, a, b, cnt = 0, x;\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tfor (int i = a; i <= b; i++) {\n\t\tx = (((i % p1) % p2) % p3) % p4;\n\t\tif (x == i) { cnt++; }\n\t}\n\tcout << cnt << ""\n"";\n\treturn 0;\n}"	p1,p2,p3,p4,a,b,x=int, cnt=0\nread p1,p2,p3,p4,a,b\nfor i=a to b inclusive\nx = (((i modulo p1) modulo p2) modulo p3) modulo p4\nif x is i increment cnt\nprint cnt
int main() {\n\tint a, b, c, d, x, y, s = 0;\n\tcin >> a >> b >> c >> d >> x >> y;\n\tfor (int i = x; i <= y; i++)\n\t\tif (i % a == i && i % b == i && i % c == i && i % d == i) s++;\n\tcout << s << endl;\n\treturn 0;\n}	create integers a, b, c, d, x, y and s where s = 0\nread standard input to a, b, c, d, x and y\nfor i from x to y inclusive\nif i % a, i % b, i % c and i % d are all equal to i, increment s\nprint s
int main() {\n\tshort a, b, p, q, r, s;\n\tcin >> p >> q >> r >> s >> a >> b;\n\tshort ans = 0;\n\tfor (int i = a; i <= b; i++) {\n\t\tif (((((i % p) % q) % r) % s) == i) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	a, b, p, q, r, s = short\nread p then q then r then s then a then b\nans = short with ans = 0\nfor i = a to b inclusive\nif ((((i mod p) mod q) mod r) mod s) is i increment ans\nprint ans
int main() {\n\tint p, a, b;\n\tint min = 99999999;\n\tfor (int i = 1; i <= 4; i++) {\n\t\tcin >> p;\n\t\tif (p < min) min = p;\n\t}\n\tcin >> a >> b;\n\tif (min >= a && min <= b)\n\t\tcout << min - a << endl;\n\telse if (min < a)\n\t\tcout << 0 << endl;\n\telse if (min > b)\n\t\tcout << b - a + 1 << endl;\n}	create int p, a, b\nset min to 99999999\nfor i=1 to 4 inclusive\nread p\nif p < min, min=p\nread a and b\nif min >=a and <= b\nprint min-a\nelse if min < a\nprint 0\nelse if min > b\nprint b - a + 1
"ifstream in(""txt.in"");\nofstream out(""txt.out"");\nint main() {\n\tcout << fixed << setprecision(12);\n\tlong long mx = 2e9;\n\tfor (int i = 1; i <= 4; ++i) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\tmx = min(mx, x);\n\t}\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long cnt = 0;\n\tfor (int i = a; i <= b; ++i) { cnt += (i < mx); }\n\tcout << cnt << '\n';\n\treturn 0;\n}"	ifstream in( txt.in )\nofstream out( txt.out )\nprint fixed and setprecision(12)\nlet mx be a long integer with mx = 2e9\nfor i = 1 to 4 inclusive\nlet x be a long integer\nread x\nmx is equal to minimum of mx, x\nlet a, b be long integers\nread a, b\nlet cnt be a long integer with cnt = 0\nfor i = a to b inclusive , cnt is equal to cnt + i is less than mx\nprint cnt and newline
int main() {\n\tint a, b, p[4];\n\tfor (int i = 0; i < 4; i++) cin >> p[i];\n\tcin >> a >> b;\n\tsort(p, p + 4);\n\tint x, cnt = 0;\n\tfor (int i = a; i <= b; i++) {\n\t\tint match = 0;\n\t\tdo {\n\t\t\tx = i;\n\t\t\tfor (int i = 0; i < 4; i++) x %= p[i];\n\t\t\tif (x == i) match++;\n\t\t} while (next_permutation(p, p + 4));\n\t\tif (match >= 7) cnt++;\n\t}\n\tcout << cnt << '\n';\n\treturn 0;\n}	declare integers a, b, integer array p size 4\nfor i = 0 to 4 exclusive, read p[i]\nread a and b\nsort between p and p + 4\ndeclare integers x, cnt = 0\nfor i = a to b inclusive\ndeclare integer match = 0\nstart loop\nlet x be i\nfor i = 0 to 4 exclusive, let x be x % p[i]\nif x is i, increment match\nwhile ( re-arrange elements lexicographically p, p + 4 )\nif match is greater than or equal to 7, increment cnt\nprint cnt and '\n'
int main() {\n\tint a, b, c, d, x, y, cnt;\n\twhile (cin >> a >> b >> c >> d >> x >> y) {\n\t\tcnt = 0;\n\t\tfor (int i = x; i <= y; i++)\n\t\t\tif (i % a % b % c % d == i) cnt++;\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}	declare ints a, b, c, d, x, y and cnt\nread a, b, c, d, x and y and keep looping\nchange the value of cnt to 0\nfor i from x to y inclusive\nif i % a % b % c % d is equal to i, increment cnt by one\nprint cnt
int main() {\n\tint p[4], a, b, s = 0;\n\tcin >> p[0] >> p[1] >> p[2] >> p[3] >> a >> b;\n\tsort(p, p + 4);\n\tfor (int i = a; i <= b; i++)\n\t\tif (i < p[0]) s++;\n\tcout << s << endl;\n\treturn 0;\n}	let a, b, s be integers with s = 0 , p = array of integers of length 4\nread p[0] , p[1] , p[2] , p[3] , a , b\nsort the values p, p + 4\nfor i = a to b inclusive\nif i is less than p[0], increment s by 1\nprint s and newline
int main() {\n\tint p1, p2, p3, p4, a, b;\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tint ans = 0;\n\tfor (int i = a; i <= b; i++) {\n\t\tint ans1 = ((((i % p1) % p2) % p3) % p4);\n\t\tif (ans1 == i) ans++;\n\t}\n\tcout << ans << endl;\n}	declare integers p1, p2, p3, p4, a, b\nread p1, p2, p3, p4, a, b\ndeclare ans = 0 as integer\nfor i = a to b inclusive\ndeclare integer ans = ((((i % p1) % p2) % p3) % p4)\nif ans is i, increment ans\nprint ans and newline
int main() {\n\tint x;\n\tcin >> x;\n\tfor (int i = 0; i < (int)3; i++) {\n\t\tint y;\n\t\tcin >> y;\n\t\tx = min(x, y);\n\t}\n\tint a, b;\n\tcin >> a >> b;\n\tint c = 0;\n\tfor (int i = a; i <= b && i < x; i++) c++;\n\tcout << c << endl;\n}	create int x\nread x\nfor i=0 to 3 exclusive\ncreate int y\nread y\nx = min of x and y\ncreate int a and b\nread a and b\nc=0\nfor i=a to b inclusive and to x, increment c\nprint c
"int main() {\n\tint s[4], a, b;\n\twhile (cin >> s[0] >> s[1] >> s[2] >> s[3] >> a >> b) {\n\t\tsort(s, s + 4);\n\t\tif (s[0] > b)\n\t\t\tcout << b - a + 1 << endl;\n\t\telse if (s[0] > a)\n\t\t\tcout << s[0] - a << endl;\n\t\telse\n\t\t\tcout << ""0"" << endl;\n\t}\n\treturn 0;\n}"	"a, b = int and s = int array of size 4\nloop while reading s[0] then s[1] then s[2] then s[3] then a then b\nsort s\nif s[0] > b\nprint b - a + 1\nelse if s[0] > a\nprint s[0] - a\nelse\nprint ""0"""
"int main() {\n\tcout.precision(7);\n\t{\n\t\tint p1, p2, p3, p4, a, b;\n\t\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\t\tint minP = min(p1, min(p2, min(p3, p4)));\n\t\tcout << max(0, min(minP - a, b - a + 1)) << ""\n"";\n\t}\n\treturn 0;\n}"	call precision of 7 on cout\np1, p2, p3, p4, a, b = int\nread p1 then p2 then p3 then p4 then a then b\nminP = int with minP = mind of p1, min of p2, min of p3, p4\nprint max of 0, min of minP - a, b - a + 1
int main() {\n\tint a, b, c, d;\n\tint n, m;\n\tint p = 1000, q = 31415;\n\tint ans;\n\tcin >> a >> b >> c >> d;\n\tcin >> n >> m;\n\tp = min(p, a);\n\tp = min(p, b);\n\tp = min(p, c);\n\tp = min(p, d);\n\tif (p > m)\n\t\tans = m - n + 1;\n\telse\n\t\tans = p - n;\n\tif (ans < 0) ans = 0;\n\tcout << ans << endl;\n}	create int a, b, c, d\ncreate int p and m\nset p to 1000 and q to 31415\ncreate int ans\nread a, b, c and d\nread n and m\nset p to min of p and a\nassign min of p and b to p\nset p = min of p and c\np = min(p, d)\nif p > m\nset ans to m - n + 1\nelse\nset ans = p - n\nif ans <0, set ans equal to 0\nprint ans
int main() {\n\tint p1, p2, p3, p4;\n\tint a, b;\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tint ans = 0;\n\tfor (int i = a; i <= b; ++i)\n\t\tif (i == (((i % p1) % p2) % p3) % p4) ++ans;\n\tcout << ans << endl;\n\treturn 0;\n}	declare integers p1, p2, p3, p4\ndeclare integers a, b\nread p1, p2, p3, p4, a, b\ndeclare integer ans = 0\nfor i = a to b inclusive\nif i is (((i % p1) % p2) % p3) % p4, increment ans\nprint ans and newline
int p[4];\nint a, b;\nint cnt;\nint main() {\n\tcin >> p[0] >> p[1] >> p[2] >> p[3] >> a >> b;\n\tfor (int i = a; i <= b; ++i) {\n\t\tsort(p, p + 4);\n\t\tint s = 0;\n\t\tdo {\n\t\t\tif ((((i % p[0]) % p[1]) % p[2]) % p[3] == i) ++s;\n\t\t} while (next_permutation(p, p + 4));\n\t\tif (s >= 7) ++cnt;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	declare new array of integers p with size 4\nlet a and b be new integer variables\ncreate integer variable with name cnt\nread input to p[0], p[1], p[2], p[3], a and b\nstart for loop from i = a to b inclusive incrementing i\nsort p\ncreate integer variable s with value 0\nstart the loop\nincrement s if (((i % p[0]) % p[1]) % p[2]) % p[3] == i\nloop again while next_permutation(p, p + 4) is true\nif s >= 7\nprint cnt
long long p1, p2, p3, p4, a, b, ans = 0;\ninline long long read() {\n\tlong long x = 0;\n\tbool f = 0;\n\tchar ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) f ^= (ch == '-');\n\tfor (; isdigit(ch); ch = getchar()) x = (x << 3) + (x << 1) + (ch ^ 48);\n\treturn f ? -x : x;\n}\nint main() {\n\tp1 = read(), p2 = read(), p3 = read(), p4 = read();\n\ta = read(), b = read();\n\tfor (register long long i = a; i <= b; i++) {\n\t\tlong long z = i % p1, zz = i % p2, zzz = i % p3, zzzz = i % p4;\n\t\tif (zz == zzz && zz == z && zz == zzzz && z == i) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare long longs p1, p2, p3, p4, a, b, ans = 0\ndeclare inline read with no arguments, returning long long\ndeclare x = 0 as long long\ndeclare f = 0 as boolean\ndeclare ch = read character as character\nfor ch is not digit, setting ch to read character, let f be f xor ( ch is '0' )\nfor ch is digit, setting ch to read character, let x be ( x bitshift left 3 ) + ( x bitshift left 1 ) + ( ch bitwise xor 48 )\nreturn -x if f is true, else x\nlet p1 = result of run read, p2 = result of run read, p3 = result of run read, p4 = result of run read\nlet a be result of run read, let b be result of run read\nfor i = a to b inclusive\ndeclare long longs z = i % p1, zz = i % p2, zzz = i % p3, zzzz = i % p4\nif zz is zzz and zz is z and zz is zzzz and z is i, increment ans\nprint ans and newline
int main() {\n\tint p1, p2, p3, p4, a, b, p = 0;\n\tcin >> p1 >> p2 >> p3 >> p4 >> a >> b;\n\tfor (int i = a; i <= b; i++) {\n\t\tif (i % p1 % p2 % p3 % p4 == i) p++;\n\t}\n\tcout << p << endl;\n}	p1,p2,p3,p4,a,b=int, p=0\nread p1,p2,p3,p4,a,b\nfor i=a to b inclusive\nif i modulo p1 modulo p2 modulo p3 modulo p4 is i increment p\nprint p
int minn(int a, int b, int c, int d) {\n\ta = min(a, b);\n\tc = min(c, d);\n\treturn min(a, c);\n}\nint main() {\n\tint p1, p2, p3, p4, a, b;\n\twhile (cin >> p1 >> p2 >> p3 >> p4 >> a >> b) {\n\t\tif (p1 <= a || p2 <= a || p3 <= a || p4 <= a) {\n\t\t\tcout << 0 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint p = minn(p1, p2, p3, p4);\n\t\tif (p > b) {\n\t\t\tcout << b - a + 1 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tcout << p - a << endl;\n\t}\n\treturn 0;\n}	let minn be a integer function which accepts integers a, b, c, d\na is equal to minimum of a and b\nc is equal to minimum of c and d\nreturn the value minimum of a and c\nlet p1, p2, p3, p4, a, b be integers\nwhile read p1, p2, p3, p4, a, b\nif p1 <= a or p2 <= a or p3 <= a or p4 <= a\nprint 0 and newline\nproceed to next\nlet the value of integer p = minn(p1, p2, p3, p4)\nif p is greater than b\nprint b - a + 1 and newline\nproceed to next\nprint p - a and newline
int p[5], a, b;\nint ans = 0;\nint main() {\n\tcin >> p[1] >> p[2] >> p[3] >> p[4] >> a >> b;\n\tint Min = min(min(min(p[1], p[2]), p[3]), p[4]);\n\tif (a < Min) {\n\t\tans += (Min - a);\n\t\tif (b >= Min) {\n\t\t\tcout << ans << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tans = b - a + 1;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	a, b = integer, p = integer array of size 5\nans = integer = 0\nread p[1], p[2], p[3], p[4], a, b\nMin = integer = the lowest value between p[1], p[2], p[3], p[4]\nif a < Min\nans = ans + (Min - a)\nif b >= Min\nprint ans\nans = b = a + 1\nprint ans
"const double pi = 3.14159265358979323846;\nint main() {\n\tint p[4];\n\tint a, b;\n\tcin >> p[0] >> p[1] >> p[2] >> p[3] >> a >> b;\n\tint i, j, k, l, m;\n\tint ctr = 0;\n\tint ans = 0;\n\tfor (i = a; i < b + 1; i++) {\n\t\tfor (j = 0; j < 4; j++) {\n\t\t\tfor (k = 0; k < 4; k++) {\n\t\t\t\tif (k == j) continue;\n\t\t\t\tfor (l = 0; (l < 4); l++) {\n\t\t\t\t\tif ((l == j) || (l == k)) continue;\n\t\t\t\t\tfor (m = 0; m < 4; m++) {\n\t\t\t\t\t\tif ((m == l) || (m == j) || (m == k)) continue;\n\t\t\t\t\t\tif (i == (((i % p[j]) % p[k]) % p[l]) % p[m]) ctr++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ctr >= 7) ans++;\n\t\tctr = 0;\n\t}\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	create constant double pi = 3.14159265358979323846\ncreate int array p of size 4\ncreate integers a and b\nread p[0], p[1], p[2], p[3], a, and b\nlet ints i, j, k, l, and m\ncreate integer ctr = 0\nmake integer ans = 0\nfor i = a to b + 1 exclusive\nfor j = 0 to 4 exclusive\nfor k = 0 to 4 exclusive\nif k is equal to j, continue to next loop\nif l = 0 to 4 exclusive\nif i is equal to j or l is equal to k, continue to next loop iteration\nfor m = 0 to 4 exclusive\nif m is 1 or m is j or m is k, continue loop\nif i is equal to (((i % p[j]) % p[k]) % p[l]) % p[m], increment ctr\nif ctr is greater than or equal to 7, increment ans\nset ctr to 0\nprint ans
"int arrA[100005];\nint arrB[100005];\nint nA, nB, k, m;\nint main() {\n\tcin >> nA >> nB;\n\tcin >> k >> m;\n\tfor (int i = 0; i < nA; i++) cin >> arrA[i];\n\tfor (int i = 0; i < nB; i++) cin >> arrB[i];\n\tif (arrA[k - 1] < arrB[nB - m])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	arrA be integer array with 100005 elements\narrB be integer array with 100005 elements\nnA, nB, k, m be integer\nread nA, nB\nread k, m\nfor integer i = 0 to nA exclusive, read arrA[i]\nfor integer i = 0 to nA exclusive, read arrB[i]\nif arrA[k - 1] is less than arrB[nB - m]\nprint YES and newline\nelse\nprint NO and newline
"int main() {\n\tint n1, n2, k, m;\n\tcin >> n1 >> n2 >> k >> m;\n\tk--;\n\tm--;\n\tvector<int> v1(n1), v2(n2);\n\tfor (int i = 0; i < n1; i++) cin >> v1[i];\n\tfor (int i = 0; i < n2; i++) cin >> v2[i];\n\tsort(v1.begin(), v1.end());\n\tsort(v2.begin(), v2.end());\n\tif (v1[k] < v2[v2.size() - m - 1])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let n1, n2, k, m be integers\nread n1, n2, k, m\ndecrease k by 1\ndecrease m by 1\nv1, v2 are ineger vectors\nfor integer i = 1 to n1 inclusive, read v1[i]\nfor integer i = 1 to n2 inclusive, read v2[i]\nsort v1 from begin to end\nsort v2 from begin to end\nif v1[k] is less than v2[v2.size() - m - 1]\nprint YES and endline\nelse\nprint NO and newline
"const int s = 1E5 + 2;\nint a[s], b[s];\nint main() {\n\tint n1, n2;\n\tcin >> n1 >> n2;\n\tint k, m;\n\tcin >> k >> m;\n\tfor (int i = 0; i < n1; i++) cin >> a[i];\n\tfor (int i = 0; i < n2; i++) cin >> b[i];\n\tif (a[k - 1] < b[n2 - m])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	s=100002\na and b=array of s int\nn1,n2=int\nread n1,n2\nk,m=int\nread k,m\nfor i=0 to n1 exclusive read a[i]\nfor i=0 to n2 exclusive read b[i]\nif a[k-1] < b[n2-m]\nprint YES\nelse\nprint NO
"int main() {\n\tlong long a, b, m, n;\n\tcin >> a >> b;\n\tcin >> m >> n;\n\tint ar[a + 5], br[b + 5];\n\tfor (int i = 0; i < a; i++) { cin >> ar[i]; }\n\tfor (int j = 0; j < b; j++) { cin >> br[j]; }\n\tif (ar[m - 1] < br[b - n])\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	long long integer as a,b,m,n\nread a,b\nread m,n\ninteger as array ar size a + 5 and array br with size of b + 5\nfor i = 0 to less than a do the following\nfor j = 0 to less than b do the following\nif ar[m - 1] is less than br[b - n] then do the following\noutput YES\nelse\noutput NO
"int main() {\n\tint a, b, n, k, c = 0, p = 0, i = 0;\n\tcin >> a >> b >> n >> k;\n\tint A[a], B[b];\n\tfor (i = 0; i < a; i++) { cin >> A[i]; }\n\tfor (i = 0; i < b; i++) { cin >> B[i]; }\n\tfor (int j = b - 1; j > b - 1 - k; j--) {\n\t\tif (A[n - 1] < B[j])\n\t\t\tc++;\n\t\telse\n\t\t\tgoto jump;\n\t}\njump:\n\tif (c == k)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"a, b, n, k, c, p, i = int with c = 0 and p = 0 and i = 0\nread a then b then n then k\nA = int array of size a and B = int array of size b\nread a values into A\nread b values into B\nfor j = b - 1 to b - 1 - k decrementing j\nif A[n - 1] < B[j]\nincrement c\nelse\ngoto jump\ngoto label jump\nif c is k\nprint ""YES""\nelse\nprint ""NO"""
"int64_t na;\nint64_t nb;\nint64_t k;\nint64_t m;\nint64_t i = 0;\nint64_t a;\nint main() {\n\tcin >> na;\n\tcin >> nb;\n\tcin >> k;\n\tcin >> m;\n\tint64_t an[na];\n\tint64_t bn[nb];\n\twhile (i < na) {\n\t\tcin >> a;\n\t\tan[i] = a;\n\t\ti += 1;\n\t};\n\ti = 0;\n\twhile (i < nb) {\n\t\tcin >> a;\n\t\tbn[i] = a;\n\t\ti += 1;\n\t}\n\tsort(an, an + na);\n\tsort(bn, bn + nb);\n\tif (an[k - 1] < bn[nb - m]) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t};\n\treturn 0;\n}"	na=int64_t\nnb=int64_t\nk=int64_t\nm=int64_t\ni=0\na=int64_t\nread na\nread nb\nread k\nread m\nan=array of na int64_t\nbn=array of nb int64_t\nwhile i<na\nread a\nan[i]=a\nincrement i\nend of while\ni=0\nwhile i<nb\nread a\nbn[i]=a\nincrement i\nsort an\nsort bn\nif an[k-1]<bn[nb-m]\nprint YES\nelse\nprint NO\nend if
"int main() {\n\tint a, b, k, m;\n\tcin >> a >> b >> k >> m;\n\tint arr1[a + 5], arr2[b + 5];\n\tfor (int i = 0; i < a; i++) { cin >> arr1[i]; }\n\tsort(arr1, arr1 + a);\n\tfor (int i = 0; i < b; i++) { cin >> arr2[i]; }\n\tsort(arr2, arr2 + b);\n\tif (arr1[k - 1] < arr2[b - m]) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}"	a,b,k,m=int\nread a,b,k,m\narr1=array of a+5 int,arr2=array of b+5 int\nfor i=0 to a exclusive read arr1[i]\nsort first a items of arr1\nfor i=0 to b exclusive read arr2[i]\nsort first b items of arr2\nif arr1[k-1]<arr2[b-m]\nprint YES\nelse\nprint NO
"int main() {\n\tint n, m, a, b, arr[100009], brr[100009];\n\tcin >> n >> m >> a >> b;\n\tfor (int i = 1; i <= n; i++) { cin >> arr[i]; }\n\tfor (int i = 1; i <= m; i++) { cin >> brr[i]; }\n\tif (arr[a] < brr[m - b + 1])\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n}"	let n, m, a, b be integers , arr = array of integers of length 100009 , brr = array of integers of length 100009\nread n, m, a, b\nfor i = 1 to n inclusive , read arr[i]\nfor i = 1 to m inclusive , read brr[i]\nif arr[a] is less than brr[m - b + 1]\nprint YES and newline\nelse do the following\nprint NO and newline
"int main() {\n\tint na, nb, ka, kb;\n\tcin >> na >> nb >> ka >> kb;\n\tvector<int> a(na), b(nb);\n\tfor (int i = 0; i < na; i++) { cin >> a[i]; }\n\tfor (int i = 0; i < nb; i++) { cin >> b[i]; }\n\tint k = 0;\n\tfor (int i = nb - 1; i >= 0; i--) {\n\t\tif (a[ka - 1] < b[i]) {\n\t\t\tk++;\n\t\t} else if (k < kb && a[ka - 1] >= b[i]) {\n\t\t\tcout << ""NO\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""YES\n"";\n\treturn 0;\n}"	na,nb,ka,kb=int\nread na,nb,ka,kb\na=vector of na int, b=vector of nb int\nfor i=0 to na exclusive read a[i]\nfor i=0 to nb exclusive read b[i]\nk=0\nfor i=nb-1 down to 0 inclusive\nif a[ka-1]<b[i]\nincrement k\nelse if k<kb and a[ka-1]>=b[i]\nprint NO\nprint YES
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint n, m;\n\tcin >> n >> m;\n\tint mx, mn;\n\tfor (int i = 0; i < a; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (i + 1 == n) { mx = x; }\n\t}\n\tfor (int i = 0; i < b; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (i == b - m) { mn = x; }\n\t}\n\tif (mx < mn) {\n\t\tcout << ""YES"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n}"	let a and b be integers\nread in a and b\nlet n and m be integers\nread in n and m\nlet mx and mn be integers\niterate for a times\nlet x be an integer\nread in x\nif i + 1 is equal to n, set mx to x\niterate for b times\nlet x be an integer\nread in x\nif i is equal to b - m, set mn to x\nif mx is less than mn\nprint YES\nor else\nprint NO
"int main() {\n\tlong long int line1, line2, first, second, i, j;\n\tcin >> line1 >> line2;\n\tcin >> first >> second;\n\tlong long int stud1[line1], stud2[line2];\n\tfor (i = 0; i < line1; i++) { cin >> stud1[i]; }\n\tfor (i = 0; i < line2; i++) { cin >> stud2[i]; }\n\tsort(stud1, stud1 + line1);\n\tsort(stud2, stud2 + line2);\n\tint mx = stud2[line2 - (second)];\n\tint tot = 0, y = 0;\n\tfor (i = 0; i < line1; i++) {\n\t\tif (stud1[i] < mx) { ++tot; }\n\t\tif (tot == first) {\n\t\t\t++y;\n\t\t\tbreak;\n\t\t}\n\t\tif (stud1[i] > mx) { break; }\n\t}\n\tif (y) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	let line1, line2, first, second, i, j be long integers\nread line1, line2\nread first, second\nstud1 = array of integers of length line1 , stud2 = array of integers of length line2\nfor i = 0 to line1 exclusive , read stud1[i]\nfor i = 0 to line2 exclusive , read stud2[i]\nsort the values of stud1 and stud1 + line1\nsort the values of stud2 and stud2 + line2\nthe integer value of mx = stud2[line2 - (second)]\nlet tot , y be integers with tot = 0, y = 0\nfor i = 0 to line1 exclusive\nif stud1[i] is less than mx , increment tot by 1\nif tot equals first\nincrement y by 1\nstop\nif stud1[i] is greater than mx , stop\nif y is true\nprint YES and newline\nelse do the following\nprint NO and newline
"vector<int> a;\nvector<int> b;\nint main() {\n\tint na, nb, counta = 0, countb = 0;\n\tcin >> na >> nb;\n\tint k, m, A, B;\n\tcin >> k >> m;\n\tfor (int i = 0; i < na; i++) {\n\t\tcin >> A;\n\t\ta.push_back(A);\n\t}\n\tfor (int i = 0; i < nb; i++) {\n\t\tcin >> B;\n\t\tb.push_back(B);\n\t}\n\tsort(a.begin(), a.end());\n\tsort(b.rbegin(), b.rend());\n\tif (a[k - 1] < b[m - 1])\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n}"	"declare integer vector a\ndeclare integer vector b\ndeclare integers na, nb, counta = 0, countb = 0\nread na, nb\ndeclare integers k, m, A, B\nread k, m\nfor i = 0 to na exclusive\nread A\nadd A to end of a\nfor i = 0 to nb exclusive\nread B\nadd B to end of b\nsort from beginning of a to end of a\nsort from reverse beginning of b to reverse end of b\nif a[k-1] is less than b[m-1]\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int n1, n2, k, m;\nint main() {\n\tint v1, v2, x;\n\tcin >> n1 >> n2;\n\tcin >> k >> m;\n\tfor (int i = 0; i < n1; i++) {\n\t\tcin >> x;\n\t\tif (i == k - 1) { v1 = x; }\n\t}\n\tfor (int i = 0; i < n2; i++) {\n\t\tcin >> x;\n\t\tif (i == n2 - m) { v2 = x; }\n\t}\n\tif (v1 < v2)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"declare strings n1, n2, k, m\ndeclare integers v1, v2, x\nread n1, n2\nread k, m\nfor i = 0 to n1 exclusive\nread x\nif i is k - 1, let v1 be k\nfor i = 0 to n2 exclusive\nread x\nif i is n2 - m, let v2 be x\nif v1 is less than v2\nprint ""YES\n""\nelse\nprint ""NO\n"""
"long long int n1, n2;\nlong long int a[100007];\nlong long int b[100007];\nlong long int k, m;\nint main() {\n\tcin >> n1 >> n2;\n\tcin >> k >> m;\n\tfor (long long int i = 0; i <= n1 - 1; i++) { cin >> a[i]; }\n\tfor (long long int i = 0; i <= n2 - 1; i++) { cin >> b[i]; }\n\tsort(a, a + n1);\n\tsort(b, b + n2, greater<long long int>());\n\tif (a[k - 1] < b[m - 1]) {\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\t} else {\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\t}\n\treturn 0;\n}"	let n1, n2 be long integers\na is a long integer array of size 100007\nb is a long integer array of size 100007\nlet k, m be long integers\nread n1, n2\nread k, m\nfor long integer i = 0 to n1-1, read a[i]\nfor long integer i = 0 to n2-1, read b[i]\nsort the values a, a + n1\nsort the values b, b + n2, greater<long long int>()\nif a[k - 1] is less than b[m - 1]\nprint YES\nnewline\nelse\nprint NO\nnewline
"int r1[100001], r2[100001];\nint main() {\n\tint a, b, c, d, e, f, g, h;\n\tvector<int> v;\n\twhile (cin >> a >> b) {\n\t\tcin >> c >> d;\n\t\tfor (e = 1; e <= a; e++) { cin >> r1[e]; }\n\t\tf = 0;\n\t\tfor (e = 1; e <= b; e++) {\n\t\t\tcin >> r2[e];\n\t\t\tif (r2[e] > r1[c]) { f++; }\n\t\t}\n\t\tif (f >= d) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	let r1, r2 be integer array of size 100001\nlet a, b, c, d, e, f, g, h be integers\nlet v be a vector of integers\nwhile read a, b\nread c, d\nfor e= 1 to a inclusive, read r1[e]\nf equals 0\nfor e= 1 to b inclusive\nread r2[e]\nif r2[e] > r1[c], increase f by 1\nif f is greater than or equal to d\nprint YES and newline\nelse\nprint NO and newline
"int main() {\n\tint a[100500], b[100040];\n\tint na, nb;\n\tint x1, x2, y1, y2;\n\tint i, k, j, m;\n\tchar s[20000][20];\n\tcin >> na >> nb;\n\tcin >> k >> m;\n\tfor (i = 0; i < na; i++) cin >> a[i];\n\tfor (j = 0; j < nb; j++) cin >> b[j];\n\tsort(a, a + na);\n\tsort(b, b + nb);\n\tfor (i = 0; i < nb; i++)\n\t\tif (b[i] > a[k - 1]) break;\n\tif (i + m <= nb) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	a, b be integer arrays of size 100040\nlet na, nb be integers\nlet x1, x2, y1, y2 be integers\nlet i, k, j, m be integers\ns is a 2d character array\nread na, nb\nread k, m\nfor i = 0 to na exclusive , read a[i]\nfor j = 0 to nb exclusive , read b[j]\nsort from a to a + na\nsort from b to b + nb\nfor i = 0 to nb exclusive\nif b[i] is greater than a[k - 1], stop\nif i + m is less than or equal to nb\nprint YES and newline\nelse\nprint NO and newline
"int main() {\n\tvector<int> arr1, arr2;\n\tint a, b, k, m;\n\tcin >> a >> b >> k >> m;\n\tif (k > a || m > b) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < a; i++) {\n\t\tint inp;\n\t\tcin >> inp;\n\t\tarr1.push_back(inp);\n\t}\n\tfor (int i = 0; i < b; i++) {\n\t\tint inp;\n\t\tcin >> inp;\n\t\tarr2.push_back(inp);\n\t}\n\tif (arr1[k - 1] < arr2[b - m]) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	create integer vector of arr1, arr2\ninteger as a,b,k,m\nread a,b,k,m\nif k is greater than a or m is greater than b then do the following\noutput NO\nfor i = 0 to less than a do the following\ninteger as inp\nread inp\nadd new element inp to end of vector arr1\nfor i = 0 to less than b do the following\ninteger as inp\nread inp\nadd new element inp to end of vector arr2\nif arr1[k - 1] is less than arr2[b - m] then do the following\noutput YES\nelse\noutput NO
"const int MAX = 100001;\nlong long An[MAX], Bn[MAX];\nint main() {\n\tint n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tfor (int i = 1; i <= n; i++) cin >> An[i];\n\tfor (int i = 1; i <= m; i++) cin >> Bn[i];\n\tsort(An + 1, An + n + 1);\n\tsort(Bn + 1, Bn + m + 1);\n\tif (An[a] < Bn[m - b + 1])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare constant integer MAX = 100001\ndeclare long long arrays An size MAX, Bn size MAX\ndeclare integers n, m, a, b\nread n, m, a, b\nfor i = 1 to n inclusive, read An[i]\nfor i = 1 to m inclusive, read Bn[i]\nsort from An + 1 to An + n + 1\nsort from Bn + 1 to Bn + m + 1\nif An[a] is less than Bn[m-b+1]\nprint ""YES"" and newline\nelse\nprint ""NO"", newline"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint k, m;\n\tcin >> k >> m;\n\tint ar1[a];\n\tint ar2[b];\n\tfor (int i = 0; i < a; i++) { cin >> ar1[i]; }\n\tfor (int i = 0; i < b; i++) { cin >> ar2[i]; }\n\tif (ar1[k - 1] < ar2[b - m] && k <= a && m <= b)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	a,b=int\nread a,b\nk,m=int\nread k,m\nar1=array of a int\nar2=array of b int\nfor i=0 to a exclusive read ar1[i]\nfor i=0 to b exclusive read ar2[i]\nif ar1[k-1]<ar2[b-m] and k<=a and m<=b\nprint YES\nelse\nprint NO
int main() {\n\tint a, b, c, d;\n\tcin >> a >> b;\n\tif (a < b) {\n\t\tc = a;\n\t\td = (b - a) / 2;\n\t\tcout << c << ' ' << d << endl;\n\t} else {\n\t\tc = b;\n\t\td = (a - b) / 2;\n\t\tcout << c << ' ' << d << endl;\n\t}\n\treturn 0;\n}	define integers a, b, c and d\nread user input to a and b\nif a is less than b\nassign a to c\nchange the value of d to (b - a) / 2\nprint c, ' ' and d to the standard output\nelse\nchange c to b\nset the value of d to (a - b) / 2\nprint c, ' ' and d to the output
"int a, b, c, d;\nint main() {\n\tcin >> a >> b;\n\td = min(a, b);\n\tc = max(a, b) - d;\n\tif (c % 2) c -= 1;\n\tcout << d << "" "" << c / 2 << endl;\n}"	a,b,c,d=int\nread a,b\nd=min(a,b)\nc=max(a,b)-d\nif c is odd, change sign of c\nprint d, space, c/2
"int main() {\n\tint a = 0, b = 0;\n\tint counter_moda = 0, counter_utility = 0;\n\tcin >> a >> b;\n\twhile (a > 0 && b > 0) {\n\t\ta--;\n\t\tb--;\n\t\tcounter_moda++;\n\t}\n\twhile (a >= 2 || b >= 2) {\n\t\tcounter_utility++;\n\t\tif (a > b) {\n\t\t\ta -= 2;\n\t\t} else {\n\t\t\tb -= 2;\n\t\t}\n\t}\n\tcout << counter_moda << "" "" << counter_utility << endl;\n\treturn 0;\n}"	"declare integers a = 0, b = 0\ndeclare integer counter_moda = 0, counter_utility = 0\nread a and b\nwhile a is greater than 0 and b is greater than 0\ndecrement a\ndecrement b\nincrement counter_moda\nwhile a is greater than or equal to 2 or b is greater than or equal to 2\nincrement counter_utility\nif a is greater than b\ndecrement a by 2\nelse\ndecrement b by 2\nprint counter_moda, "" "", counter_utility, newline"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a > b) swap(a, b);\n\tcout << a << "" "" << (b - a) / 2 << endl;\n\treturn 0;\n}"	a,b=int\nread a,b\nif a>b swap a and b\nprint a, space, (b-a)/2
int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint m = min(a, b);\n\tcout << m << ' ';\n\ta -= m;\n\tb -= m;\n\tcout << a / 2 + b / 2 << endl;\n\treturn 0;\n}	declare integers a, b\nread a, b\ndeclare m = minimum of a and b as integer\nprint m, ' '\ndecrement a by m\ndecrement b by m\nprint a/ 2 + b / 2, newline
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint r1 = min(a, b);\n\tint r2 = (max(a, b) - min(a, b)) / 2;\n\tcout << r1 << "" "" << r2 << endl;\n}"	let a, b be integers\nread a, b\nthe integer value of r1 = minimum of a and b\nthe integer value of r2 = (max(a, b) - min(a, b)) / 2\nprint r1 and space and r2 and newline
int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint MIN = min(a, b);\n\tint MAX = max(a, b);\n\tcout << MIN << ' ' << (MAX - MIN) / 2 << endl;\n\treturn 0;\n}	declare integers a, b\nread a, b\ndeclare integer MIN = minimum of a and b\ndeclare integer MAX = maximum of a and b\nprint MIN and ' ' and (MAX-MIN) / 2 and newline
"int main() {\n\tint a, b, ans = 0;\n\tcin >> a >> b;\n\tans = min(a, b);\n\tcout << ans << "" "";\n\tans = ((max(a, b) - ans) >> 1);\n\tcout << ans << endl;\n\treturn 0;\n}"	let a, b, ans be integers with ans = 0\nread a, b\nans is equal to mimimum of a, b\nprint ans and space\nans equals max(a, b) - ans) >> 1\nprint ans and endline
"int main() {\n\tint a, b;\n\twhile (cin >> a >> b) { cout << min(a, b) << "" "" << (max(a, b) - min(a, b)) / 2 << endl; }\n}"	a,b=int\nwhile read a,b print min(a,b),space,(max(a-b)-min(a,b))/2
"long long n, a, b, res;\nstring s;\nlong long arr[100005];\nlong long arr1[100005];\nint main() {\n\tcin >> a >> b;\n\tcout << min(a, b) << "" "" << abs(a - b) / 2;\n\tcout << ""\n"";\n\treturn 0;\n}"	"declare long long n, a, b, res\ndeclare string s\ndeclare long long array arr size 100005\ndeclare long long array arr1 size 100005\nread a, b\nprint minimum of ( a and b ), "" "", absolute value of ( a - b ) / 2\nprint ""\n"""
"int a, b, x;\nint main() {\n\tcin >> a >> b;\n\tx = min(a, b);\n\tcout << x << "" "";\n\ta -= x;\n\tb -= x;\n\ta == 0 ? cout << b / 2 : cout << a / 2;\n\tcout << ""\n"";\n}"	"declare integer variables a, b and x\nread variables a and b from the input\nassign the new value = min of a and b to x\nprint x and "" ""\ndecrease a by x\nchange b to b - x\nprint b / 2 if a = 0, or a / 2 if a is not 0\nprint ""\n"""
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint a = min(n, m);\n\tint b = (max(n, m) - a) / 2;\n\tcout << a << "" "" << b << endl;\n}"	"declare integers n, m\nread n and m\ndeclare integer a = minimum of n and m\ndeclare integer b = ( maximum of ( n and m ) - a ) / 2\nprint a and "" "" and b and newline"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint ds = 0, ss = 0, k = 0;\n\tif (a > b) {\n\t\tds = b;\n\t\tk = a - b;\n\t\tss = k / 2;\n\t} else if (a < b) {\n\t\tds = a;\n\t\tk = b - a;\n\t\tss = k / 2;\n\t} else {\n\t\tds = a;\n\t\tss = 0;\n\t}\n\tcout << ds << "" "" << ss << endl;\n\treturn 0;\n}"	"a, b = int\nread a, b\nds, ss, k = int with ds = 0, ss = 0, k = 0\nif (a > b)\nds = b\nk = a - b\nss = k / 2\nelse if (a < b)\nds = a\nk = b - a\nss = k / 2\nelse\nds = a\nss = 0\nprint ds,"" "",ss"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a == b) {\n\t\tcout << a << "" ""\n\t\t\t<< ""0"" << endl;\n\t} else if (a > b) {\n\t\tcout << b << "" "" << (a - b) / 2 << endl;\n\t} else {\n\t\tcout << a << "" "" << (b - a) / 2 << endl;\n\t}\n\treturn 0;\n}"	let a, b be integers\nread a , b\nif a equals b\nprint a and space\nprint 0 and newline\nelse if a is greater than b\nprint b and space and (a - b) / 2 and newline\nelse do the following\nprint a and space and (b - a) / 2 and newline
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint prazn = min(a, b);\n\tint podin = (int)((max(a, b) - prazn) / 2);\n\tcout << prazn << "" "" << podin << endl;\n\treturn 0;\n};"	"declare integer variables a and b\nread input to a and b\nprazn is a new integer with value min of a and b\ncreate new integer podin = ((max of a and b) - prazn) / 2\nprint prazn, "" "" and podin to the standard output"
"int main() {\n\tint r, b;\n\tcin >> r >> b;\n\tif (r < b) {\n\t\tcout << r << "" "" << (b - r) / 2 << endl;\n\t\t;\n\t} else {\n\t\tcout << b << "" "" << (r - b) / 2 << endl;\n\t\t;\n\t}\n}"	"declare ints r and b\nread r and b from the user input\nif r is less than b\nprint r, "" "" and (b - r) / 2\nelse\nprint b, "" "" and (r - b) / 2"
int main() {\n\tint n, m, i, k;\n\twhile (cin >> n >> m) {\n\t\ti = n < m ? n : m;\n\t\tk = abs(n - m) / 2;\n\t\tcout << i << ' ' << k << endl;\n\t}\n}	let n, m, i and k be integers\nwhile reading in n and m\nif n is less than m set i to n, otherwise set i to m\nset k to abs(n - m) / 2\nprint i, ' ', and k
"int main() {\n\tint a, b, count1 = 0, count2 = 0;\n\tcin >> a >> b;\n\tfor (int i = 0;; i++) {\n\t\tif ((a == 0 && b == 1) || (a == 1 && b == 0) || (a == 0 && b == 0)) break;\n\t\t--a;\n\t\t--b;\n\t\t++count1;\n\t\tif (a == 0 && b > 1) {\n\t\t\twhile (b != 0) {\n\t\t\t\tb = b - 2;\n\t\t\t\t++count2;\n\t\t\t\tif (b < 0 || b == 1) break;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (a > 1 && b == 0) {\n\t\t\twhile (a != 0) {\n\t\t\t\ta = a - 2;\n\t\t\t\t++count2;\n\t\t\t\tif (a < 0 || a == 1) break;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << count1 << "" "" << count2 << endl;\n}"	let a, b, count1 , count2 be integers with count1 = 0, count2 = 0\nread a , b\nfor integer i = 0 , the condition is always true , increment i by 1\nif (a equals 0 and b equals 1) or (a equals 1 and b equals 0) or (a equals 0 and b equals 0) , stop\ndecrement a by 1\ndecrement b by 1\nincrement count1 by 1\nif a equals 0 and b is greater than 1\nwhile b is not equal to 0\ndecrement b by 2\nincrement count2 by 1\nif b is less than 0 or b equals 1 , stop\nstop\nif a is greater than 1 and b equals 0\nwhile a is not equal to 0\ndecrement a by 2\nincrement count2 by 1\nif a is less than 0 or a equals 1 , stop\nstop\nprint count1 and space and count2 and newline
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tcout << min(n, m) << "" "" << (max(n, m) - min(n, m)) / 2 << endl;\n\treturn 0;\n}"	let n, m be integers\nread n and m\nprint min(n, m) and space and (max(n, m) - min(n, m)) / 2 and newline
"int main() {\n\tint r, b;\n\tint p, q;\n\tcin >> r >> b;\n\tp = min(r, b);\n\tq = abs(r - b) / 2;\n\tcout << p << "" "" << q << ""\n"";\n\treturn 0;\n}"	r,b=int\np,q=int\nread r,b\np=min(r,b)\nq=abs(r-b)/2\nprint p, space, q
"bool prime(int n) {\n\tint c = 0;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (n % i == 0) c++;\n\t}\n\tif (c == 1)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n\tint a, b, a2, b2, a1 = 0, b1 = 0;\n\tcin >> a >> b;\n\tif (a > b) {\n\t\ta2 = a;\n\t\tfor (int i = 0; i < a2; i++) {\n\t\t\tif (b != 0) {\n\t\t\t\ta1++;\n\t\t\t\tb--;\n\t\t\t\ta--;\n\t\t\t}\n\t\t\tif (b == 0) { b1 = a / 2; }\n\t\t}\n\t} else if (a < b) {\n\t\tb2 = b;\n\t\tfor (int i = 0; i < b2; i++) {\n\t\t\tif (a != 0) {\n\t\t\t\ta1++;\n\t\t\t\tb--;\n\t\t\t\ta--;\n\t\t\t}\n\t\t\tif (a == 0) { b1 = b / 2; }\n\t\t}\n\t} else {\n\t\ta1 = (a + b) / 2;\n\t}\n\tcout << a1 << "" "" << b1 << endl;\n\treturn 0;\n}"	"function prime with int argument n that returns bool\ndeclare integer c with value 0\nin a for loop, change i from 1 to n exclusive incrementing i\nincrement c if n modulo i is 0\nif c is equal to 1\nreturn true\nelse\nreturn false\ncreate ints a, b, a2, b2, a1 and b1 with a1 and b1 = 0\nread standard input to a and b\nif a is greater than b\nset a2 to a\nfor i = 0 to a2 exclusive\nif b != 0\nincrement a1 by one\ndecrement b\ndecrement a by one\nif b is equal to 0, set the value of b1 to a / 2\nelse if a is less than b\nchange b2 to b\nfor i from 0 to b2 exclusive incrementing i\nif a != 0\nincrement a1 by one\ndecrement b\ndecrement a\nif a is equal to 0, set the value of b1 to b / 2\nelse\nset a1 to (a + b) / 2\nprint a1, "" "" and b1 to the standard output"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint mn = min(a, b), mx = max(a, b);\n\tcout << mn << "" "" << (mx - mn) / 2 << endl;\n\treturn 0;\n}"	a,b=int\nread a,b\nmn=min(a,b), mx=max(a,b)\nprint mn, space, (mx-mn)/2
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tcout << min(a, b) << "" "" << (max(a, b) - min(a, b)) / 2 << endl;\n}"	let a , b be integers\nread a , b\nprint min(a, b) and space and (max(a, b) - min(a, b)) / 2 and newline
"const int INF = 0x7FFFFFFF;\nconst int MOD = 1e9 + 7;\nconst double EPS = 1e-10;\nconst double PI = 2 * acos(0.0);\nconst int maxn = 1e5 + 1666;\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint c = min(a, b);\n\tcout << c << "" "";\n\ta -= c, b -= c;\n\tif (a == 0)\n\t\tcout << b / 2 << endl;\n\telse\n\t\tcout << a / 2 << endl;\n\treturn 0;\n}"	INF=3f3f3f3f in exadecimal\nmod = 1000000007\nEPS=0.0000000001\nPI=2*acos(0)\nmaxn=101666\na,b=int\nread a,b\nc=min(a,b)\nprint c, space\nsubtract c from a and from b\nif a is 0\nprint b/2\nelse\nprint a/2
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint ans1, ans2;\n\tans1 = min(a, b);\n\tans2 = max(a, b);\n\tans2 = ans2 - ans1;\n\tans2 = ans2 / 2;\n\tcout << ans1 << "" "" << ans2 << endl;\n\treturn 0;\n}"	a,b=int\nread a,b\nans1 and ans2=int\nans1=min(a,b)\nans2=max(a,b)\nsubtract ans1 from ans2\ndivide ans2 by 2\nprint ans1, space, ans2
"int main() {\n\tint a, b;\n\twhile (cin >> a >> b) {\n\t\tint ans1 = min(a, b);\n\t\tint k = max(a, b);\n\t\tint ans2 = (k - ans1) / 2;\n\t\tcout << ans1 << "" "" << ans2 << endl;\n\t}\n\treturn 0;\n}"	"declare integers a, b\nwhile read a, b\ndeclare integer ans1 = minimum of a and b\ndeclare integer k = maximum of a and b\ndeclare integer ans2 = ( k - ans1 ) / 2\nprint ans1 and "" "" ans2 and newline"
"int main() {\n\tint a, b, x, y, c = 0;\n\tcin >> a >> b;\n\tx = abs(a - b);\n\tcout << min(a, b) << "" "" << x / 2 << endl;\n\treturn 0;\n}"	"declare integers a, b, x, y, c = 0\nread a, b\nlet x be absolute value of ( a - b )\nprint minimum of ( a and b ), "" "", x / 2, newline"
"int a, b;\nint main() {\n\tcin >> a >> b;\n\tcout << min(a, b) << "" "" << (max(a, b) - min(a, b)) / 2 << endl;\n\treturn 0;\n}"	"declare integers a, b\nread a, b\nprint minimum of a and b, "" "", ( maximum of ( a and b ) - minimum of ( a and b ) ) / 2, newline"
"int dx[] = {1, 0, -1, 0};\nint dy[] = {0, -1, 0, 1};\nint main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long Min, s;\n\tif (a > b) {\n\t\tMin = min(a, b);\n\t\ts = (a - Min) / 2;\n\t\tcout << Min << "" "" << s << endl;\n\t} else {\n\t\tMin = min(a, b);\n\t\ts = (b - Min) / 2;\n\t\tcout << Min << "" "" << s << endl;\n\t}\n}"	"declare integer dx = {1, 0, -1, 0}\ndeclare integer dy = {0, -1, 0, 1}\ndeclare long longs a, b\nread a, b\ndeclare long longs Min, s\nif a is greater than b\nlet Min be minimum of a and b\nlet s be ( a - Min ) / 2\nprint Min and "" "" and s and newline\nelse\nlet Min be minimum of a and b\nlet s be ( b - Min ) / 2\nprint Min and "" "" and s and newline"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a < b) { swap(a, b); }\n\tcout << b << "" "" << (a - b) / 2 << endl;\n\treturn 0;\n}"	a, b = int\nread a then b\nif a < b swap a and b\nprint b and a - b
"int main() {\n\tint a, b, max, min, ans;\n\tcin >> a >> b;\n\tif (a > b) {\n\t\tmax = a;\n\t\tmin = b;\n\t} else {\n\t\tmax = b;\n\t\tmin = a;\n\t}\n\tans = (max - min) / 2;\n\tcout << min << "" "" << ans << endl;\n\treturn 0;\n}"	a, b, max, min, ans be integers\nread a, b\nif a is greater than b\nmax equals a\nmin equals b\nelse\nmax equals b\nmin equals a\nans equals (max - min) / 2\nprint min space ans and endline
"long long int n, m, a, b;\nint main() {\n\tcin >> n >> m >> a >> b;\n\tlong long int _s = 0;\n\tif (n % m != 0) {\n\t\tlong long int x = (long long int)n / m * m + m;\n\t\tlong long int y = x - m;\n\t\t_s = min((x - n) * a, (n - y) * b);\n\t}\n\tcout << _s << ""\n"";\n\treturn 0;\n}"	"create long long ints n, m, a and b\nread n, m, a and b\ndeclare long long int variable _s = 0\nif n % m is not 0\ncreate long long int x = n / m * m + m\ndeclare long long int variable y = x - m\nchange _s to min of (x - n) * a and (n - y) * b\nprint _s and ""\n"""
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tif (n % m == 0)\n\t\tcout << 0 << endl;\n\telse if (n > m) {\n\t\tlong long res;\n\t\tif (n / m == 1) {\n\t\t\tres = 2;\n\t\t} else {\n\t\t\tres = n / m + 1;\n\t\t}\n\t\tcout << min((n - n / m * m) * b, (res * m - n) * a) << endl;\n\t} else {\n\t\tcout << min(n * b, (m - n) * a) << endl;\n\t}\n\treturn 0;\n}	n, m, a, b = long long\nread n then m then a then b\nif n is a multiple of m\nprint 0\nelse if n is greater than m\nres = long long\nif n / m equals 1\nset res to 2\nelse\nset res to n / m + 1\nprint min of (n - n / m * m) * b and (res * m - n) * a\nelse\nprint min of n * b and (m - n) * a
int main() {\n\tlong long a, b, n, m, ans;\n\tcin >> n >> m >> a >> b;\n\tif (n % m == 0)\n\t\tans = 0;\n\telse if (n < m) {\n\t\tans = min(n * b, (m - n) * a);\n\t} else {\n\t\tlong long cnt1, cnt2;\n\t\tcnt1 = n % m;\n\t\tcnt2 = n / m + 1;\n\t\tans = min((cnt2 * m - n) * a, cnt1 * b);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create long longs a, b, n, m and ans\nread n, m, a and b\nif n % m is 0\nassign 0 to ans\nelse if n is less than m\nassign min(n * b, (m - n) * a) to ans\nelse\ndeclare long longs cnt1 and cnt2\nset cnt1 to n modulo m\nset cnt2 to n / m + 1\nassign min((cnt2 * m - n) * a, cnt1 * b) to ans\nprint ans
string S, T;\nlong long N, M, A, B, sum, x, y, K, ans, val, L, a;\nchar C;\nint main() {\n\tcin >> N >> M >> A >> B;\n\tx = ((N - 1) / M + 1) * M;\n\ty = N / M * M;\n\tcout << min((x - N) * A, (N - y) * B) << '\n';\n}	S, T = string\nM,A,B,sum,x,y,K,ans,val,L,a = long long integer\ncreate character variable C\nread N,M,A,B\nset x to ((N - 1) / M + 1) * M\nset y to N / M * M\noutput min((x - N) * A, (N - y) * B)
int const lim = 2e5;\nint inp[lim + 3];\nint main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long ans = min((n % m) * b, (m - (n % m)) * a);\n\tcout << ans << endl;\n}	lim = const int with lim = 2e5\ninp = int array of size lim + 3\nn, m, a, b = long long\nread n then m then a then b\nans = long long with ans = min of (n mod m) * b and (m - (n mod m)) * a\nprint ans
long long n, m, a, b;\nint main() {\n\twhile (cin >> n >> m >> a >> b) {\n\t\tlong long tmp = n / m;\n\t\tlong long ans = 1e15;\n\t\tans = min(ans, (n - tmp * m) * b);\n\t\tans = min(ans, ((tmp + 1) * m - n) * a);\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	declare long longs n, m, a and b\nread n, m, a and b and loop further\ndeclare long long tmp = n / m\ndeclare long long ans = 1e15\nset ans to min of ans and (n - tmp * m) * b\nset ans to min of ans and (tmp + 1) * m - n) * a\nprint ans
int main() {\n\tlong long n, m;\n\tint a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long x = (n - n / m * m) * b, y = ((n / m + 1) * m - n) * a;\n\tif (x > y)\n\t\tcout << y << endl;\n\telse\n\t\tcout << x << endl;\n\treturn 0;\n}	n, m = long long integers\nintegers = a,b\nread n,m,a,b\nset long long x to (n - n / m * m) * b, y =((n / m + 1) * m - n) * a\nif x is greater than y then do\noutput y\nelse\noutput x
const double pi = acos(-1);\nconst double EPS = 1e-6;\nconst int INF = 1e9 + 40;\nconst long long INF64 = 1e18 + 40;\nconst double INFd = 1e9 + 40.0;\nconst long long MOD = (int)1e18 + 7;\nconst long long MODf = 998244353;\nconst int N = 1000 * 10 + 15;\nint solve() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tcout << min(n % m * b, (m - n % m) * a) << '\n';\n\treturn 0;\n}\nint main() {\n\tsolve();\n}	declare const double pi = acos(-1)\ndeclare const double EPS = 1e-6\ndeclare const int INF = 1e9 + 40\ncreate const long long INF64 = 1e18 + 40\ncreate const double INFd = 1e9 + 40.0\ndeclare const long long MOD = (int)1e18 + 7\ndeclare const long long MODf = 998244353\ndeclare const int N = 1000 * 10 + 15\ninteger function solve\ndeclare long longs n, m, a and b\nread n, m, a and b\nprint min of n % m * b and (m - n % m) * a; print '\n'\ncall function solve
int main() {\n\tlong long int n, m, a, b;\n\tlong long int dem, bui, tm;\n\tcin >> n >> m >> a >> b;\n\ttm = n / m;\n\tdem = (n - (tm * m)) * b;\n\tbui = ((tm + 1) * m - n) * a;\n\tcout << min(dem, bui) << endl;\n\treturn 0;\n}	define integers n, m, a, b\ndefine ints dem, bui, and tm\nread n, m, a, and b\nset tm to n / m\nassign (n - tm m) b to dem\nset bui to ((tm + 1) m - n) a\nprint min(dem, bui) and a newline
long long m, n, a, b;\nint main() {\n\tcin >> n >> m >> a >> b;\n\tif (n % m == 0)\n\t\tcout << 0 << '\n';\n\telse\n\t\tcout << min(((m * (n / m + 1)) - n) * a, n % m * b) << '\n';\n}	m, n, a, b = integers\nRead m, n, a, b\nif n modulo m is 0\nprint 0 and a new line\nelse do the following\nprint minimum value of (m * (n / m + 1) - n) * a and n % m * b and a new line
int main() {\n\tlong long int i, j, k, m, n, t, a, b;\n\tcin >> n >> m >> a >> b;\n\tif (n % m == 0) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tk = n / m;\n\ti = n - k * m;\n\tj = (k + 1) * m - n;\n\tcout << min(a * j, b * i) << endl;\n\treturn 0;\n}	i, j, k, m, n, t, a, b =integers\nRead n, m, a, b\nif n modulo m is 0\nprint 0 and a new line\nset k to n / m\nset i to n - k * m\nset j to (k + 1) * m - n\nprint minimum value of a * j and b * i and a new line
int main() {\n\tlong long int n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long int sum, min, ans;\n\tif (n % m == 0)\n\t\tmin = 0;\n\telse {\n\t\t{\n\t\t\tsum = a * (((n / m + 1) * m) - n);\n\t\t\tmin = sum;\n\t\t\tans = b * (n - ((n / m) * m));\n\t\t\tif (ans < min) min = ans;\n\t\t}\n\t}\n\tcout << min << endl;\n\treturn 0;\n}	create long long int n, m a and b\nprint n, m, a and b\nlet sum, min, ans be long long int\nif n mod m = 0\nset min = 0\nelse\nsum = a * (((n / m + 1) * m) - n)\nassign sum to min\nset ans = b * (n - ((n / m) * m))\nif ans less than min, min = ans\nprint min
"const long long mod = 1e9 + 7;\nconst int MAX = 1e6 + 7;\nlong long n, d, a, b;\nint main() {\n\tcin >> n >> d >> a >> b;\n\tlong long ans = (n % d) * b;\n\tlong long r = (n / d + 1) * d;\n\tans = min(ans, (r - n) * a);\n\tcout << ans << ""\n"";\n}"	"create constant long long mod with mod = 1e9+7\ncreate constant integer MAX with MAX = 1e6+7\ncreate long longs n, d, a, b\nread n read d read a read b\ncreate long long ans with ans = ( n % d ) * b\ncreate long long r with r = ( n / d + 1 ) * d\nset ans to minimum of ( ans and ( r - n ) * a )\nprint ans print ""\n"""
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tcout << min(b * (n % m), a * (((n / m) + 1) * m - n)) << endl;\n}	n,m,a,b = long long integers\nread n,m,a,b\noutput min(b * (n modulo m), a * (((n / m) + 1) * m - n))
int main() {\n\tlong long n, m, a, b;\n\twhile (cin >> n >> m >> a >> b) { cout << min((m - n % m) * a, n % m * b) << endl; }\n\treturn 0;\n}	create long longs n, m, a, b\nwhile read n read m read a read b, print minimum of ( (m - n % m) * a and n % m * b ) print newline
long long n, k;\nint a, b;\nint main() {\n\tcin >> n >> k >> a >> b;\n\tif (n % k == 0)\n\t\tcout << 0 << endl;\n\telse {\n\t\tlong long sum1 = n % k * b;\n\t\tlong long sum2 = (k - n % k) * a;\n\t\tcout << min(sum1, sum2) << endl;\n\t}\n}	declare long long variables n and k\ncreate ints a and b\nread n, k, a and b\nif n % k is 0\nprint 0\nelse\ndeclare long long sum1 = n % k * b\ndeclare long long variable sum2 = (k - n % k) * a\nprint min of sum1 and sum2
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tif (n % m == 0)\n\t\tcout << 0 << endl;\n\telse {\n\t\tlong long tmp = n / m;\n\t\tcout << min((n - tmp * m) * b, ((tmp + 1) * m - n) * a) << endl;\n\t}\n\treturn 0;\n}	n,m,a,b = long long integers\nread n,m,a,b\nif n modulo m is 0 then do\noutput 0\nelse\nset long long tmp to n / m\noutput min((n - tmp * m) * b, ((tmp + 1) * m - n) * a)
int main() {\n\tlong long n, m, a, b, sum1, sum2;\n\tcin >> n >> m >> a >> b;\n\tif ((n % m == 0)) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tsum1 = ((n / m + 1) * m - n) * a;\n\tsum2 = (n - (n / m) * m) * b;\n\tif (sum1 > sum2)\n\t\tcout << sum2 << endl;\n\telse\n\t\tcout << sum1 << endl;\n\treturn 0;\n}	n, m, a, b, sum1, sum2 =integers\nRead n, m, a, b\nif(n modulo m is 0\nprint 0 and a new line\nset sum1 to ((n / m + 1) * m - n) * a\nset sum2 to (n - (n / m) * m) * b\nif sum1 is greater than sum2\nprint sum2 and a new line\nelse do the following\nprint sum1 and a new line
int main() {\n\tlong long n, m;\n\tint a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long plus = 0, minus = 0;\n\tlong long mod = n % m;\n\tlong long div = n / m;\n\tif (n % m != 0) {\n\t\tif (n < m) {\n\t\t\tplus = m - n;\n\t\t\tminus = n;\n\t\t} else {\n\t\t\tplus = abs(n - ((div * m) + m));\n\t\t\tminus = mod;\n\t\t}\n\t} else {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tcout << min(plus * a, minus * b) << endl;\n}	n, m = long long\na, b = int\nread n then m then a then b\nplus, minus = long long with plus = 0 and minus = 0\nmod = long long with mod = n mod m\ndiv = long long with div = n / m\nif n is not a multiple of m\nif n is less than m\nset plus to m - n\nset minus to n\nelse\nset plus to absolute of n - ((div * m) + m)\nset minus to mod\nelse\nprint 0\nprint min of plus * a and minus * b
int main() {\n\tlong long int n, m, a, b, r;\n\tcin >> n >> m >> a >> b;\n\tr = n % m;\n\tcout << (min(r * b, (m - r) * a)) << '\n';\n\treturn 0;\n}	n, m, a, b, r = long long int\nread n, m, a, b\nr = n modulo m\nprint min of r * b and (m - r) * a)
int main() {\n\tlong long n, m, a, b, x;\n\tcin >> n >> m >> a >> b;\n\tlong long sum1 = 0, sum2 = 0;\n\tif (n >= m) {\n\t\tif (n % m == 0) {\n\t\t\tcout << 0 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tx = n % m;\n\tsum1 += b * x;\n\tsum2 += a * (m - x);\n\tcout << min(sum1, sum2) << endl;\n\treturn 0;\n}	n, m, a, b, x =integers\nRead n, m, a, b\nsum, sum2 =integers, both set to 0\nif n is greater than or equal to m\nif n modulo m is 0\nprint 0 and a new line\nset x to n modulo m\nset sum1 to sum1 + b * x\nset sum2 to sum2 + a * (m - x)\nprint minimum value of sum1 and sum2 and a new line
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long resa, resb;\n\tlong long mod = n % m;\n\tresb = mod * b;\n\tif (n >= m) {\n\t\tresa = (ceil(double(n) / m) * m - n) * a;\n\t} else\n\t\tresa = (m - n) * a;\n\tcout << min(resa, resb) << endl;\n}	create long longs n, m, a, b\nread n read m read a read b\ncreate long longs resa, resb\ncreate long long mod with mod = n % m\nset resb to mod * b\nif n is greater than or equal to m\nset resa to ( round up ( double casted ( n ) / m ) * m - n ) * a\nelse\nset resa to ( m - n ) * a\nprint minimum of resa and resb print newline
const int INF = 0x3f3f3f3f;\nconst double PI = acos(-1.0);\nint main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long res = min((m - (n % m)) * a, (n % m) * b);\n\tcout << res << endl;\n\treturn 0;\n}	create constant integer INF with INF = 0x3f3f3f3f\ncreate constant double PI with PI = acosign of -1.0\ncreate long longs n, m, a , b\nread n read m read a read b\ncreate long long res with res = minimum of ( (m - (n % m)) * a and (n % m) * b)\nprint res print newline
int main() {\n\tlong long n, m, a, b, num = 0;\n\tcin >> n >> m >> a >> b;\n\tif (n % m == 0) {\n\t\tnum = 0;\n\t} else if (n < m) {\n\t\tnum = min(a * (m - n), n * b);\n\t} else {\n\t\tlong long y = n % m, z = m - n % m;\n\t\tnum = min(y * b, z * a);\n\t}\n\tcout << num << endl;\n\treturn 0;\n}	n, m , a, b num = long long with num having value of 0\nread n, m, a and b\nif n mod m equals 0\nset num to 0\nelse if n is less than m\nset num to the minimum of (a * (m-n)) and n*b\nelse\ny, z = long long with y value of n mod m and z value of m minus n mod m\nset num to the minimum of y*b and z*a\nprint num
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tcout << min((m - n % m) * a, n % m * b) << endl;\n\treturn 0;\n}	n, m, a, b =integers\nRead n, m, a, b\nprint minimum value of (m - n % m) * a and n % m * b and a new line
int main() {\n\tlong long n, m;\n\tint a, b;\n\tcin >> n >> m >> a >> b;\n\tcout << min(n % m * b, (m - n % m) * a) << endl;\n\treturn 0;\n}	declare long longs n and m\ndeclare integers a and b\nread from the input to n, m, a and b\nprint min of n % m * b and (m - n % m) * a
int main() {\n\tlong long n, m, a, b;\n\twhile (cin >> n >> m >> a >> b) { cout << min((m - n % m) * a, n % m * b) << endl; }\n\treturn 0;\n}	let n, m, a, b = long long\nwhilte reading new values for n, m, a, and b, print min((m - n modulo m) * a, n modulo m * b)
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long ans;\n\tif (n > m)\n\t\tans = min(((m - n % m) % m) * a, (n % m) * b);\n\telse {\n\t\tif (n % m == 0)\n\t\t\tans = 0;\n\t\telse {\n\t\t\tans = (n + (m - n % m) % m) / m;\n\t\t\tans = min((ans * m - n) * a, (n - (n / m) * m) * b);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n, m, a, b = long long\nread n, m, a, b\nans = long long\nif n > m\nans = min of (m - n modulo m) modulo m * a and (n % m) * b\nelse\nif n modulo m is 0\nans = 0\nelse\nans = (n + (m - n modulo m) modulo m) / m\nans = min of (ans * m - n) * a and (n - (n / m) * m) * b\nprint ans
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long s = (n + m - 1) / m;\n\tlong long t = n / m;\n\tcout << min((s * m - n) * a, (n - t * m) * b) << endl;\n\treturn 0;\n}	n, m, a, b = long long\nread n then m then a then b\ns = long long with s = (n + m - 1) / m\nt = long long with t = n / m\nprint min of (s * m - n) * a and (n - t * m) * b
"int main() {\n\tlong long int n, m, a, b, x, y;\n\tcin >> n >> m >> a >> b;\n\tx = n % m;\n\ty = m - x;\n\tx = x * b;\n\ty = y * a;\n\tcout << min(x, y) << ""\n"";\n\treturn 0;\n}"	n, m, a, b, x, y =integers\nRead n, m, a, b\nset x to n modulo m\nset y to m - x\nset x to x * b\nset y to y * a\nprint minimum value of x and y and a new line
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tlong long k = n / m;\n\tlong long t1 = (n - k * m) * b;\n\tlong long t2 = (m * (k + 1) - n) * a;\n\tif (t1 > t2) {\n\t\tcout << t2 << endl;\n\t} else {\n\t\tcout << t1 << endl;\n\t}\n\treturn 0;\n}	let n, m, a and b be long long\nread n, m, a and b\nset k= n/m\nassign (n - k * m) * b to t1\nt2 = (m * (k + 1) - n) * a\nif t1 greater than t2\nprint t2\nelse\nprint t1 and a newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint x, y, z;\n\tz = sqrt((b * c) / a);\n\ty = c / z;\n\tx = b / z;\n\tcout << 4 * (x + y + z) << endl;\n}	a,b,c=int\nread a,b,c\nx,y,z=int\nz=sqrt((b*c)/a)\ny=c/z\nx=b/z\nprint 4*(x+y+z)
vector<int> di[3];\nvector<int> linha0[10010];\nvector<int> linha1[10010];\nvector<int> linha2[10010];\nvoid multiplos(int a, int b, int h) {\n\tint menor = a;\n\tif (a > b) b = menor;\n\tfor (int i = 1; i <= menor; i++) {\n\t\tif (a % i == 0 && b % i == 0) { di[h].push_back(i); }\n\t}\n}\nint main() {\n\tint a, b, c, s;\n\tcin >> a >> b >> c;\n\tmultiplos(a, b, 0);\n\tmultiplos(a, c, 1);\n\tmultiplos(b, c, 2);\n\tfor (int i = 0; i < (int)di[0].size(); i++) {\n\t\tfor (int j = 0; j < (int)di[1].size(); j++) {\n\t\t\tif (di[0][i] * di[1][j] == a) {\n\t\t\t\tfor (int u = 0; u < (int)di[2].size(); u++) {\n\t\t\t\t\tif (di[0][i] * di[2][u] == b) {\n\t\t\t\t\t\tif (di[1][j] * di[2][u] == c) { s = di[2][u] + di[1][j] + di[0][i]; }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint total = 4 * s;\n\tcout << total << endl;\n}	di = int vector array of size 3\nlinha0 = int vector array of size 10010\nlinha1 = int vector array of size 10010\nlinha2 = int vector array of size 10010\nin function multiplos taking int a, int b, int h\nmenor = int with menor = a\nif a > b set b to menor\nfor i = 1 to menor inclusive\nif a and b are a multiple of i append i to di[h]\na, b, c, s = int\nread a then b then c\ncall multiplos on a, b, 0\ncall multiplos on a, c, 1\ncall multiplos on b, c, 2\nfor i = 0 to size of di[0]\nfor j = 0 to size of di[1]\nif di[0][i] * di[1][j] is a\nfor u = 0 to size of di[2]\nif d[0][i] * di[2][u] is b\nif di[1][j] * di[2][u] is c set s to di[2][u] + di[1][j] + di[0][i]\ntotal = int with total = 4 * s\nprint total
"int main() {\n\tint A1, A2, A3;\n\tcin >> A1 >> A2 >> A3;\n\tint l = (int)sqrt(A1 * A2 / A3);\n\tint b = (int)sqrt(A3 * A1 / A2);\n\tint h = (int)sqrt(A3 * A2 / A1);\n\tcout << 4 * (l + b + h) << ""\n"";\n\treturn 0;\n}"	"create ints A1, A2 and A3\nread standard input to A1, A2 and A3\ndeclare integer variable with name l = square root of (A1 * A2 / A3)\ndeclare integer variable b with value = square root of (A3 * A1 / A2)\ncreate new integer called h = square root of (A3 * A2 / A1)\nprint 4 * (l + b + h) and ""\n"""
int main() {\n\tint ab, bc, ca, a, b, c, s;\n\tcin >> ab >> bc >> ca;\n\ta = sqrt((ab * ca) / bc);\n\tb = sqrt((bc * ab) / ca);\n\tc = sqrt((ca * bc) / ab);\n\ts = 4 * (a + b + c);\n\tcout << s << endl;\n}	create ints ab, bc, ca, a, b, c and s\nread user input to ab, bc and ca\nassign square root of ((ab * ca) / bc) to a\nchange b to the square root of ((bc * ab) / ca)\nset c to the square root of ((ca * bc) / ab)\nassign 4 * (a + b + c) to s\nprint s
long long a, b, c;\nint main() {\n\tcin >> a >> b >> c;\n\tlong long z = sqrt((b * c) / a);\n\tlong long x = c / z;\n\tlong long y = b / z;\n\tcout << x * 4 + y * 4 + z * 4 << '\n';\n\treturn 0;\n}	create new long longs a, b and c\nread from the input to a, b and c\ncreate long long variable with name z with value = sqrt((b * c) / a)\ncreate new long long x = c / z\ndeclare long long y = b / z\nprint x * 4 + y * 4 + z * 4 and '\n'
int main() {\n\tint l, h, b, a1, a2, a3;\n\tcin >> a1 >> a2 >> a3;\n\tl = sqrt((a2 * a3) / a1);\n\tb = sqrt((a1 * a3) / a2);\n\th = sqrt((a2 * a1) / a3);\n\tcout << 4 * (l + b + h) << endl;\n\treturn 0;\n}	l,h,b,a1,a2,a3=int\nread a1,a2,a3\nl=sqrt((a2*a3)/a1)\nb=sqrt((a1*a3)/a2)\nh=sqrt((a2*a1)/a3)\nprint 4*(l+b+h)
int main() {\n\tlong long int u, v, w;\n\tcin >> u >> v >> w;\n\tlong long int t1, t2, t3;\n\tt1 = sqrt((u * v * w)) / u;\n\tt2 = sqrt((u * v * w)) / v;\n\tt3 = sqrt((u * v * w)) / w;\n\tcout << 4 * (t1 + t2 + t3) << endl;\n\treturn 0;\n}	u,v,w=long long int\nread u,v,w\nt1,t2,t3=long long int\nt1=sqrt((u*v*w))/u\nt2=sqrt((u*v*w))/v\nt3=sqrt((u*v*w))/w\nprint 4*(t1+t2+t3)
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << 4 * (sqrt(a * c / b) + sqrt(b * c / a) + sqrt(a * b / c)) << endl;\n}	a,b,c=int\nread a,b,c\nprint 4*(sqrt(a*c/b)+sqrt(b*c/a)+sqrt(a*b/c))
int main() {\n\tdouble a, b, c;\n\tcin >> a >> b >> c;\n\tdouble s = sqrt(a * b * c);\n\tcout << 4.0 * (s / a + s / b + s / c) << endl;\n\treturn 0;\n}	let a, b, c be double values\nread a, b, c\nlet s be a double value with s = square root of a * b * c\nprint 4.0 * (s / a + s / b + s / c) and newline
int main() {\n\tint lb, bh, hl, l, b, h;\n\tcin >> lb >> bh >> hl;\n\tb = (int)sqrt(lb * bh / hl);\n\tl = lb / b;\n\th = hl / l;\n\tcout << 4 * (l + b + h) << endl;\n\treturn 0;\n}	lb,bh,hl,l,b,h=int\nread lb,bh,hl\nb=sqrt(lb*bh/hl)\nl=lb/b\nh=hl/l\nprint 4*(l+b+h)
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint m = max(a, max(b, c));\n\tint r = 0;\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (a % i == 0 && b % i == 0 && ((a / i) * (b / i) == c)) {\n\t\t\tr = a / i + b / i + i;\n\t\t\tr *= 4;\n\t\t}\n\t}\n\tcout << r << endl;\n}	create ints a, b and c\nread user input to a, b and c\ncreate new integer m with value = (max of a and max(b, c))\ndeclare integer r = 0\nin a for loop, change i from 1 to m inclusive incrementing i\nif a % i = 0 and b % i = 0 and (a / i) * (b / i) = c\nchange r to a / i + b / i + i\nset r to r multiplied by 4\nprint r to the standard output
int gcd(int a, int b) {\n\tif (b == 0)\n\t\treturn a;\n\telse\n\t\tgcd(b, a % b);\n}\nint main() {\n\tint x, y, z;\n\twhile (cin >> x >> y >> z) {\n\t\tint c = sqrt((z * y) / x);\n\t\tint a = (x * c) / y;\n\t\tint b = x / a;\n\t\tcout << a * 4 + b * 4 + c * 4 << endl;\n\t}\n}	in the function gcd that takes integer a,b and returns integer\nif b is 0\nreturn a\nelse\ngcd of b and a modulo b\nx, y, z = integers\nwhile read x, y, z\nc = integer with c = square root of (z * y) / x)\na = integer with a = (x * c) / y\nb = integer with b = x / a\nprint a * 4 + b * 4 + c * 4
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << 4 * (sqrt(a * b / c) + sqrt(b * c / a) + sqrt(a * c / b)) << endl;\n\treturn 0;\n}	a, b, c = int\nread a then b then c\nprint 4 * (sqrt of a * b / c + sqrt of b * c / a + sqrt of a * c / b)
int main() {\n\tint a, b, c, i, j, k;\n\tcin >> a >> b >> c;\n\tfor (i = 1; i < 10005; i++) {\n\t\tfor (j = 1; j < 10005; j++) {\n\t\t\tfor (k = 1; k < 10005; k++) {\n\t\t\t\tif (i * j == a && i * k == b && j * k == c) {\n\t\t\t\t\tcout << 4 * i + 4 * j + 4 * k << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (i * k > b || j * k > c) break;\n\t\t\t}\n\t\t\tif (i * j > a || j > c) break;\n\t\t}\n\t\tif (i > a || i > b) break;\n\t}\n\treturn 0;\n}	a, b, c, i, j, k = int\nread a then b then c\nfor i = 1 to 10005\nfor j = 1 to 10005\nfor k = 1 to 10005\nif i * j is a and i * k is b and j * k is c\nprint 4 * i + 4 * j + 4 * k\nif i * k is greater than b or j * k is greater than c break\nif i * j is greater than a or j is greater than c break\nif i is greater than a or b beak
int *fatora(int factor, int n) {\n\tint *f = new int[2];\n\twhile (n % factor != 0) { factor++; }\n\tf[0] = factor;\n\tf[1] = n / factor;\n\treturn f;\n}\nint main() {\n\tvector<int> area;\n\tint a, f3_1, f3_2, edges_sum;\n\tint *factor;\n\tfor (int i = 0; i < 3; i++) {\n\t\tcin >> a;\n\t\tarea.push_back(a);\n\t}\n\tfor (int i = 0; i < (area[0] / 2) + 1; i++) {\n\t\tfactor = fatora(i + 1, area[0]);\n\t\tif (area[1] % factor[0] == 0 && area[2] % factor[1] == 0) {\n\t\t\tf3_1 = area[1] / factor[0];\n\t\t\tf3_2 = area[2] / factor[1];\n\t\t\tif (f3_1 == f3_2) break;\n\t\t} else if (area[2] % factor[0] == 0 && area[1] % factor[1] == 0) {\n\t\t\tf3_1 = area[1] / factor[1];\n\t\t\tf3_2 = area[2] / factor[0];\n\t\t\tif (f3_1 == f3_2) break;\n\t\t}\n\t}\n\tedges_sum = 4 * (factor[0] + factor[1] + f3_1);\n\tcout << edges_sum << endl;\n\treturn 0;\n}	in function fatora taking int factor, int n and returning pointer to int\nf = pointer to int with f = new int of size 2\nloop while n mod factor is not 0 increment factor\nset f[0] to factor\nset f[1] to n / factor\nreturn f\narea = int vector\na, f3_1, f3_2, edges_sum = int\nfactor = pointer to int\nfor i = 0 to 3\nread a\nappend a to area\nfor i = 0 to area[0] / 2 + 1\nset factor to fatora of i + 1, area[0]\nif area[1] mod factor[0] is 0 and area[2] mod factor[1] is 0\nset f3_1 to area[1] / factor[0]\nset f3_2 to area[2] / factor[1]\nif f3_1 is f3_2 break\nelse if area[2] mod factor[0] is 0 and area[1] mod factor[1] is 0\nset f3_1 to area[1] / factor[1]\nset f3_2 to area[2] / factor[0]\nif f3_1 is f3_2 break\nset edges_sum to 4 * (factor[0] + factor[1] + f3_1)\nprint edges_sum
vector<int> di[3];\nvector<int> linha0[10010];\nvector<int> linha1[10010];\nvector<int> linha2[10010];\nvoid multiplos(int a, int b, int h) {\n\tint menor = a;\n\tif (a > b) b = menor;\n\tfor (int i = 1; i <= menor; i++) {\n\t\tif (a % i == 0 && b % i == 0) { di[h].push_back(i); }\n\t}\n}\nint main() {\n\tint a, b, c, s;\n\tcin >> a >> b >> c;\n\tmultiplos(a, b, 0);\n\tmultiplos(a, c, 1);\n\tmultiplos(b, c, 2);\n\tfor (int i = 0; i < (int)di[0].size(); i++) {\n\t\tfor (int j = 0; j < (int)di[1].size(); j++) {\n\t\t\tif (di[0][i] * di[1][j] == a) {\n\t\t\t\tfor (int u = 0; u < (int)di[2].size(); u++) {\n\t\t\t\t\tif (di[0][i] * di[2][u] == b) {\n\t\t\t\t\t\tif (di[1][j] * di[2][u] == c) { s = di[2][u] + di[1][j] + di[0][i]; }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint total = 4 * s;\n\tcout << total << endl;\n}	let di be a vector containing integers with size 3\nlet linha0 be a vector containing integers with size 10010\nlet linha1 be a vector containing integers with size 10010\nlet linha2 be a vector containing integers with size 10010\nlet multiplos be a void function which accepts int a, int b, int h\nlet menor be a integer with menor = a\nif a is greater than b, b is equal to menor\nfor i = 1 to menor inclusive\nif a modulo i is equal to 0 and b modulo i is equal to 0, push_back i in di[h]\nlet a, b, c, s be integers\nread a, b, c, s\nmultiplos of a, b, 0\nmultiplos of a, c, 1\nmultiplos of b, c, 2\nfor i = 0 to (int)di[0].size() exclusive\nfor j = 0 to (int)di[1].size() exclusive\nif di[0][i] * di[1][j] is equal to a\nfor u = 0 to (int)di[2].size() exclusive\nif di[0][i] * di[2][u] is equal to b\nif di[1][j] * di[2][u] is equal to c , the value of s = di[2][u] + di[1][j] + di[0][i]\nlet total be a integer with total = 4 * s\nprint total and newline
int main() {\n\tint x, y, z;\n\tcin >> x >> y >> z;\n\tint a, b, c;\n\ta = sqrt((x * z) / y);\n\tb = sqrt((x * y) / z);\n\tc = sqrt((y * z) / x);\n\tcout << 4 * (a + b + c) << endl;\n\treturn 0;\n}	declare x, y, z as integers\nread x, y, z\ndeclare integers a, b, c\nlet a be square root of (x * z) / y\nlet b be square root of (x * y) / z\nlet c be square root of (y * z) / x\nprint 4 * ( a + b + c ), newline
int main() {\n\tint a, b, c;\n\twhile (cin >> a >> b >> c) {\n\t\tint ans = 4 * (sqrt(a * b / c) + sqrt(a * c / b) + sqrt(b * c / a));\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	a, b, c = int\nloop while reading a then b then c\nans = int with ans = 4 * (sqrt of a * b / c + sqrt of a * c / b + sqrt of b * c / a)\nprint ans
int main() {\n\tdouble A, B, C;\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tA = sqrt(a * b / c);\n\tB = sqrt(b * c / a);\n\tC = sqrt(c * a / b);\n\tint count = (A + B + C) * 4;\n\tcout << count << endl;\n}	create doubles A, B and C\ndeclare integers a, b and c\nread a, b and c\nchange A to the square root of a * b / c\nassign sqrt(b * c / a) to B\nassign the square root of c * a / b to C\ncreate new integer variable count = (A + B + C) * 4\nprint count to the standard output
long long a, b, c, s;\nvoid solve() {\n\tcin >> a >> b >> c;\n\ts += (long long)sqrt(a * b / c);\n\ts += (long long)sqrt(b * c / a);\n\ts += (long long)sqrt(a * c / b);\n\tcout << s * 4 << endl;\n}\nvoid prep() {}\nint main() {\n\tlong long t = 1;\n\tprep();\n\tcout << fixed << setprecision(12);\n\twhile (t--) solve();\n\treturn 0;\n}	create long long integers a, b, c, and s\ndeclare solve\nread a, b, and c\nset s to s + (long long)sqrt(a * b / c)\nset s to s + (long long)sqrt(b * c / a)\nset s to s + (long long)sqrt(a * c / b)\nprint s * 4\ndeclare prep\nlet long long int t = 1\ncall prep\nprint fixed and setprecision(12)\nwhile t-- is truthy, call solve
int main() {\n\tint ab, bc, ac;\n\tcin >> ab >> bc >> ac;\n\tint b = sqrt(ab * bc / ac);\n\tint a = ab / b;\n\tint c = bc / b;\n\tcout << a * 4 + b * 4 + c * 4 << endl;\n}	declare three integer variables ab, bc, and ac\nread in ab, bc and ac\nvariable b is equal to the square root of the value of ab * bc divided by ac\nvariable a is equal to ab divided by b\nc is equal to bc divided by b\nprint the sum of a multiplied by 4, b multiplied by 4 and c multiplied by 4
int main() {\n\tint a, b, c;\n\tint x, y, z;\n\tcin >> a >> b >> c;\n\tx = sqrt((a * c) / b);\n\ty = sqrt((b * a) / c);\n\tz = sqrt((b * c) / a);\n\tcout << x * 4 + y * 4 + z * 4 << endl;\n\treturn 0;\n}	a,b,c=int\nx,y,z=int\nread a,b,c\nx=sqrt((a*c)/b)\ny=sqrt((b*a)/c)\nz=sqrt((b*c)/a)\nprint x*4+y*4+z*4
int main() {\n\tlong long x, y, z;\n\tcin >> x >> y >> z;\n\tlong long abc = (long long)(sqrt(x * y * z + 0.00001));\n\tlong long ans = 4 * (abc / x + abc / y + abc / z);\n\tcout << ans << endl;\n\treturn 0;\n}	x, y, z = long long\nread x then y then z\nabc = long long with abc = (sqrt of x * y * z + 0.00001) as long long\nans = long long with ans = 4 * (abc / x + abc / y + abc / z)\nprint ans
int main() {\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tlong long p = sqrt(a * b * c);\n\tlong long res = 0;\n\tres += (p / a + p / b + p / c);\n\tcout << res * 4 << endl;\n}	create long long ints a, b, and c\nread a, b, and c\nlet long long int p = sqrt(a * b * c)\nlet long long integer res = 0\nset res to res + (p / a + p / b + p / c)\nprint res * 4
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint sum = 0;\n\tsum = sqrt((a * b) / c) + sqrt((b * c) / a) + sqrt((c * a) / b);\n\tcout << sum * 4 << endl;\n}	create int a, b and c\nread a, b, c\nsum=0\nset sum to square root of (a * b) / c) + sqrt of (b * c) / a) + sqrt((c * a) / b)\nprint sum*4
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint x = 0, y = 0, z = 0, flag = 0;\n\tx = sqrt((b * c) / a);\n\ty = sqrt((c * a) / b);\n\tz = sqrt((a * b) / c);\n\tcout << 4 * (x + y + z) << endl;\n\treturn 0;\n}	declare a, b, c, as integers\nread a and b and c\ndeclare x = 0, y = 0, z = 0, flag = 0, as integers\nlet x be square root of ((b * c) / a)\nlet y be square root of ((c * a) / b)\nlet z be square root of ((a * b) / c)\nprint 4 * ( x + y + z ), newline
int main() {\n\tint m, n, p;\n\tcin >> m >> n >> p;\n\tint a = sqrt(p * m / n);\n\tint b = sqrt(m * n / p);\n\tint c = sqrt(n * p / m);\n\tint sum = 4 * (a + b + c);\n\tcout << sum << endl;\n\treturn 0;\n}	m,n,p=int\nread m,n,p\na=sqrt(p*m/n)\nb=sqrt(m*n/p)\nc=sqrt(n*p/m)\nsum=4*(a+b+c)\nprint sum
int main() {\n\tint m, n, p, sum = 0, a, b, c;\n\tcin >> m >> n >> p;\n\ta = sqrt(p * m / n);\n\tb = sqrt(m * n / p);\n\tc = sqrt(n * p / m);\n\tsum = 4 * (a + b + c);\n\tcout << sum << endl;\n\treturn 0;\n}	declare integers m, n, p, sum = 0, a, b, c\nread m read n read p\nlet a be square root of p * m / n\nlet b be square root of m * n / p\nlet b be square root of n * p / m\nlet sum = 4 * (a + b + c)\nprint sum print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint x = sqrt((a * b) / c);\n\tint y = sqrt((a * c) / b);\n\tint z = sqrt((b * c) / a);\n\tcout << 4 * (x + y + z) << endl;\n\treturn 0;\n}	declare integers a, b and c\nread standard input to a, b and c\ndeclare integer variable with name x with value sqrt((a * b) / c)\ndeclare integer y with value = square root of ((a * c) / b)\nz is a new integer = square root of ((b * c) / a)\nprint 4 * (x + y + z) to the standard output
int main() {\n\tint x1, x2, x3;\n\tcin >> x1 >> x2 >> x3;\n\tint sum = sqrt((x1 * x3) / x2) + sqrt((x2 * x1) / x3) + sqrt((x3 * x2) / x1);\n\tsum = sum * 4;\n\tcout << sum << endl;\n\treturn 0;\n}	x1, x2, x3 = integers\nread x1, x2, x3\nsum = integer with sum = sqrt((x1 * x3) / x2) + sqrt((x2 * x1) / x3) + sqrt((x3 * x2) / x1)\nsum = sum * 4\nprint sum
int arr[104];\nint main() {\n\tint n, k;\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tint total = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\ttotal += arr[i];\n\t\tk -= min(total, 8);\n\t\ttotal -= min(total, 8);\n\t\tif (k <= 0) {\n\t\t\tcout << i + 1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << -1 << endl;\n\treturn 0;\n}	create integer array arr of size 104\nmake ints n and k\nread n and k\nfor i = 0 to n exclusive, read arr[i]\nmake integer total = 0\nfor i = 0 to n exclusive\nfor i = 0 to n exclusive\nset total to total + arr[i]\nsubtract min(total, 8) from total\nif k is less than or equal to 0\nprint i + 1\nshow -1
"int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint a;\n\tint totalChocolate = 0, days = 0, remain = 0;\n\tbool flag = false;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\ta += remain;\n\t\tif (a > 8) {\n\t\t\tremain = a - 8;\n\t\t\ttotalChocolate += 8;\n\t\t} else {\n\t\t\ttotalChocolate += a;\n\t\t\tremain = 0;\n\t\t}\n\t\tdays++;\n\t\tif (totalChocolate >= k) {\n\t\t\tflag = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (flag) {\n\t\tcout << days << endl;\n\t} else {\n\t\tcout << ""-1"" << endl;\n\t}\n\treturn 0;\n}"	"declare int variables n and k\nread from the input to n and k\ndefine new integer a\ndefine integers totalChocolate, days and remain = 0\ndeclare boolean variable with name flag with value false\nfor integer i = 0 to n exclusive\nread standard input to a\nchange a to the sum of a and remain\nif a is greater than 8\nassign a - 8 to remain\nchange totalChocolate to the sum of totalChocolate and 8\nelse\nadd a to totalChocolate\nassign the new value = 0 to remain\nincrement days by one\nif totalChocolate >= k\nassign true to flag\nbreak\nif flag is true\nprint days\nelse\nprint ""-1"" to the standard output"
const int MAX = 100001;\nint An[MAX], Bn[MAX];\nint main() {\n\tint n, k;\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++) cin >> An[i];\n\tint sum = 0, flag = 0, coun = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcoun += An[i];\n\t\tif (coun > 8) {\n\t\t\tsum += 8;\n\t\t\tcoun -= 8;\n\t\t} else {\n\t\t\tsum += coun;\n\t\t\tcoun = 0;\n\t\t}\n\t\tif (sum >= k) {\n\t\t\tflag = 1;\n\t\t\tcout << i << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!flag) cout << -1 << endl;\n\treturn 0;\n}	let MAX be a constant integer 100001\nAn, Bn are integer arrays\nn, k are integers\nread n, k\nfor integer i = 1 to n inclusive, print An[i]\nsum , flag, coun be integers 0\nfor integer i = 1 to n inclusive\nincrease coun by An[i]\nif coun is greater than 8\nincrease sum by 8\ndecrease coun by 8\nelse\nincrease sum by coun\ncoun is 0\nif sum is greater than k\nflag is 0\nprint i and endline\nstop\nif flag is 0, print -1 and endline
int main() {\n\tint n, k, a, c = 0, v = 0;\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\tif (a <= 8)\n\t\t\tif (c >= 8 - a) {\n\t\t\t\tv += 8;\n\t\t\t\tc -= 8 - a;\n\t\t\t} else {\n\t\t\t\tv += a + c;\n\t\t\t\tc = 0;\n\t\t\t}\n\t\telse {\n\t\t\tv += 8;\n\t\t\tc += a - 8;\n\t\t}\n\t\tif (v >= k) {\n\t\t\tcout << i << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << -1 << endl;\n\treturn 0;\n}	n,k,a=int, c,v=0\nread n,k\nfor i=1 to n inclusive\nread a\nif a <= 8\nif c >= 8-a\nadd 8 to v\nsubtract 8-a from c\nelse\nadd a+c to v\nc=0\nelse\nadd 8 to v\nadd a-8 to c\nif v >= k\nprint i\nprint -1
int main() {\n\tint a, b, c, t, l, i, j, sum = 0, count = 0, m;\n\tcin >> a >> b;\n\tfor (i = 1; i <= a; i++) {\n\t\tcin >> c;\n\t\tsum += c;\n\t\tm = min(8, sum);\n\t\tsum -= m;\n\t\tb -= m;\n\t\tcount++;\n\t\tif (b <= 0) { break; }\n\t}\n\tif (b > 0) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << count << endl;\n\t}\n}	create int a, b, c, t, l, i, j, m, set sum and count to 0\nread a and b\nfor i=1 to a inclusive\nread c\nset sum to sum + c\nset m to min of 8 and sum\nset sum to sum - m\nb= b-m\nincrement count\nif b<=0\nif b>0\nprint -1\nelse\nprint count
"int main() {\n\tint n, k, ans, sum, aux, candies;\n\tans = sum = candies = 0;\n\tbool found = false;\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> aux;\n\t\tif (found) continue;\n\t\tcandies += aux;\n\t\taux = min(candies, 8);\n\t\tsum += aux;\n\t\tans++;\n\t\tcandies -= aux;\n\t\tif (sum >= k) found = true;\n\t}\n\tif (!found)\n\t\tcout << ""-1\n"";\n\telse\n\t\tcout << ans << ""\n"";\n}"	n,k,ans,sum,aux,candies=int\nans,sum,candies=0\nfound=false\nread n,k\nfor i=0 to n exclusive\nread aux\nif found continue\nadd aux to candies\naux=min(candies, 8)\nadd aux to sum\nincrement ans\nsubtract aux from candies\nif sum>=k found=true\nif not found\nprint -1\nelse\nprint ans
int main() {\n\tint n, k, a, b = 1, c = 0, d = 0, e, s[117];\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++) { cin >> s[i]; }\n\twhile (b <= n) {\n\t\te = s[b] + d;\n\t\tif (e <= 8) {\n\t\t\tc = c + e;\n\t\t\td = 0;\n\t\t\tb++;\n\t\t\tif (c >= k) { break; }\n\t\t} else if (e > 8) {\n\t\t\tc = c + 8;\n\t\t\td = e - 8;\n\t\t\tb++;\n\t\t\tif (c >= k) { break; }\n\t\t}\n\t}\n\tif (c < k) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << b - 1 << endl;\n\t}\n\treturn 0;\n}	let n, k, a, b = 1, c = 0, d = 0, e, s be integers\nread n. k\nfor integer i = 1 to n inclusive. read s[i]\nwhile b is less than or equal to n\ne equals s[b] + d\nif e is less than or equal to 8\nc equals c + e\nd equals 0\nb increased by 1\nif c is greater than or equal to k, stop\nelse if e is greater than 8\nincrement c by 8\nd equals e minus 8\nincrement b by 1\nif c is greater than or equal to k, stop\nif c is less than k\nprint -1 and newline\nelse\nprint b - 1 and newline
"long long int n, k;\nlong long int a[1007];\nint main() {\n\tcin >> n >> k;\n\tlong long int _d = 0, _c = 0;\n\tfor (long long int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tif (k > 0) {\n\t\t\t_c += a[i];\n\t\t\tlong long int x = min(8LL, _c);\n\t\t\tk -= x;\n\t\t\t_c -= x;\n\t\t\t_d = i;\n\t\t}\n\t}\n\tif (k <= 0) {\n\t\tcout << _d << ""\n"";\n\t} else {\n\t\tcout << -1 << ""\n"";\n\t}\n\treturn 0;\n}"	n, k = integers\na = array of 1007 integers\nRead n, k\n_d, _c =integers with _d = 0, _c = 0\nfor i = 1 to n exclusive\nRead n values into array a\nif k is greater than 0\nset _c to _c + a[i]\nx = integer, set to minimum value of 8LL,and _c\nset k to k - x\nset _c to _c - x\nset _d to i\nif k is less than or equal to 0\nprint _d and a new line\nelse do the following\nprint -1 and a new line
int main() {\n\tlong long int n, k;\n\tcin >> n >> k;\n\tlong long int arr[n] = {0};\n\tint answer = 0;\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tint temp = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tarr[i] += temp;\n\t\tif (arr[i] >= 8) {\n\t\t\tk -= 8;\n\t\t\ttemp = arr[i] - 8;\n\t\t\tanswer++;\n\t\t} else {\n\t\t\tk -= arr[i];\n\t\t\ttemp = 0;\n\t\t\tanswer++;\n\t\t}\n\t\tif (k <= 0) {\n\t\t\tcout << answer << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << -1 << endl;\n\treturn 0;\n}	n, k =integers\nRead n, k\narr = array of n integers with 0 elements\nanswer = integer with 0\nsum = integer with 0\nRead n values into array arr\ntemp = integer with 0\nfor i = 0 to n exclusive\nset arr[i] to arr[i] + temp\nif arr[i] is greater than or equal to 8\nset k to k - 8\nset temp to arr[i] - 8\nincrement answer\nelse do the following\nset k to k - arr[i]\nset temp to 0\nincrement answer\nif k is less than or equal to 0\nprint answer and a new line\nprint -1 and a new line
int main() {\n\tint n, k, a, b = 1, c = 0, d = 0, e, s[117];\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++) { cin >> s[i]; }\n\twhile (b <= n) {\n\t\te = s[b] + d;\n\t\tif (e <= 8) {\n\t\t\tc = c + e;\n\t\t\td = 0;\n\t\t\tb++;\n\t\t\tif (c >= k) { break; }\n\t\t} else if (e > 8) {\n\t\t\tc = c + 8;\n\t\t\td = e - 8;\n\t\t\tb++;\n\t\t\tif (c >= k) { break; }\n\t\t}\n\t}\n\tif (c < k) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << b - 1 << endl;\n\t}\n\treturn 0;\n}	n, k, a, b, c, d, e = integers and s = array of 117 integers\nRead n and k\nRead n values into array s\nwhile b is less than or equal to n\nset e to s[b] + d\nif e is less than or equal to 8\nset c to c + e\nset d to 0\nincrement b\nif c is greater than or equal to k, then Terminate the loop\nelse if e is greater than 8\nset c to c + 8\nset d to e - 8\nincrement b\nif c is greater than or equal to k, then Terminate the loop\nif c is less than k\nprint -1 and a new line\nelse do the following\nprint b - 1 and a new line
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint arya = 0, bran = 0;\n\tint s = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint t;\n\t\tcin >> t;\n\t\tif (t + arya >= 8) {\n\t\t\tbran += 8;\n\t\t\tarya += t - 8;\n\t\t\t++s;\n\t\t} else {\n\t\t\tbran += t + arya;\n\t\t\tarya = 0;\n\t\t\t++s;\n\t\t}\n\t\tif (bran >= k) {\n\t\t\tcout << s << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (bran <= k) { cout << -1 << endl; }\n}	define integers n and k\nread n and k\ndeclare integer variables arya and bran = 0\ndefine new integer called s = 0\nfor i = 0 to n exclusive\ncreate integer t\nread standard input to t\nif t + arya >= 8\nincrease bran by 8\nincrease arya by t - 8\nincrease s by 1\nelse\nadd t + arya to bran\nchange arya to 0\nincrease s by 1\nif bran >= k\nprint s\nif bran <= k, print -1 to the standard output
int solve(int arr[], int n, int k) {\n\tint t = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tt += arr[i];\n\t\tint val = min(8, t);\n\t\tk -= val;\n\t\tt -= val;\n\t\tif (k <= 0) return i + 1;\n\t}\n\treturn -1;\n}\nint main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tcout << solve(arr, n, k) << endl;\n\treturn 0;\n}	declare solve taking in ints n and k and int array arr and returning integer\ncreate integer t = 0\nfor i = 0 to n exclusive\nset t to t + arr[i]\nmake integer val = min(8, t)\nsubtract val from k\nset t to t - val\nif k is less than or equal to 0, return i + 1\nreturn -1\ncreate ints n and k\nread n and k\ncreate int array arr of size n\nfor i = 0 to n exclusive, read arr[i]\nprint the result of solve(arr, n, k)
int main() {\n\tint n, i, k, j, t = 0, m;\n\tcin >> n >> k;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> j;\n\t\tj += t;\n\t\tt = 0;\n\t\tif (j >= 8) {\n\t\t\tt += j - 8;\n\t\t\tj = 8;\n\t\t}\n\t\tk -= j;\n\t\tif (k <= 0) { break; }\n\t}\n\tif (k > 0) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << i + 1 << endl;\n\t}\n\treturn 0;\n}	n, i, k, j, t, m =integers with t = 0\nRead n and k\nfor i = 0 to n exclusive\nRead j\nset j to j + t\nset t to 0\nif j is greater than or equal to 8\nset t to t + j - 8\nset j to 8\nset k to k - j\nif k is greater than or equal to 0, then Terminate the loop\nif k is greater than 0\nprint -1 and new line\nelse do the following\nprint i + 1 and a new line
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tvector<int> a(n);\n\tint curr = 0;\n\tint goal = k;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tcurr = curr + a[i];\n\t\tint maxGive = min(8, curr);\n\t\tcurr = curr - maxGive;\n\t\tgoal = goal - maxGive;\n\t\tif (goal <= 0) {\n\t\t\t;\n\t\t} else {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (goal > 0) { count = -2; }\n\tcout << count + 1 << endl;\n\treturn 0;\n}	declare new integer variables n and k\nread n and k from the input\ncreate vector of integers a with n elements\ncreate new integer called curr = 0\ngoal is a new integer = k\ncreate integer variable count with value 0\nfor integer i = 0 to n exclusive incrementing i\nread a[i]\nset curr to curr + a[i]\ndeclare integer variable with name maxGive = min of 8 and curr\nset the value of curr to curr - maxGive\nchange goal to goal - maxGive\nif goal <= 0\nelse\nincrement count\nif goal is greater than 0, set the value of count to -2\nprint count + 1
"int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint c[n];\n\tfor (int i = 0; i < n; i++) { cin >> c[i]; }\n\tif (k <= n * 8) {\n\t\tint sum = 0;\n\t\tint p = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (c[i] <= 8) {\n\t\t\t\tc[i] = c[i];\n\t\t\t} else {\n\t\t\t\tint a = c[i] - 8;\n\t\t\t\tc[i] = 8;\n\t\t\t\tc[i + 1] = (c[i + 1] + a);\n\t\t\t}\n\t\t\tsum += c[i];\n\t\t\tif (sum >= k) {\n\t\t\t\tcout << i + 1 << endl;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tp++;\n\t\t\t}\n\t\t}\n\t\tif (p == n) { cout << ""-1"" << endl; }\n\t} else {\n\t\tcout << ""-1"" << endl;\n\t}\n}"	n, k = int\nread n, k\nc = int array length n\nfor i = 0 to n exclusive, read c[i]\nif k <= n*8\nsum = 0 = int\np = 0 = int\nfor i = 0 to n excluisve\nif c[i] <= 8\nset c[i] to c[i]\nelse\na = int = c[i] - 8\nset c[i] to 8\nset c[i+1] to c[i+1]+a\nincrement sum by c[i]\nif sum >= k\nprint i + 1\nexit loop\nelse\nincrement p\nif p = n then print -1\nelse\nprint -1
int main() {\n\tint a, b, c = 0;\n\tcin >> a >> b;\n\twhile (b) {\n\t\tint d = b % 10;\n\t\tc = c * 10 + d;\n\t\tb /= 10;\n\t}\n\tcout << a + c << endl;\n\treturn 0;\n}	declare integers a, b, c = 0\nread a, b\nwhile b is true\ndeclare integer d = b % 10\nlet c be c * 10 + d\nlet b be b / 10\nprint a + c and newline
int main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long temp = 0;\n\twhile (b > 0) {\n\t\ttemp = (temp * 10) + (b % 10);\n\t\tb /= 10;\n\t}\n\tcout << a + temp << endl;\n\treturn 0;\n}	a, b = long long\nread a, b\ntemp = long long with temp = 0\nwhile (b > 0)\ntemp = (temp * 10) + (b modulo 10)\nb = b / 10\nprint a + temp
int main() {\n\tint a, num = 0;\n\tchar b[100];\n\tcin >> a;\n\tcin >> b;\n\treverse(b, b + strlen(b));\n\tfor (int i(0); i < (strlen(b)); i++) { num = (num * 10) + (b[i] - '0'); }\n\tcout << num + a << endl;\n\treturn 0;\n}	a and num are integers with num = 0\nb is a new array of characters with 100 elements\nread a from the user input\nread standard input to b\nreverse b\nincrement i by 1 in a loop, starting from 0 to the length of b, ans change num to (num * 10) + (b[i] - '0') on every loop\nprint num + a
int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint y[30] = {};\n\tint r = b, d = 0;\n\twhile (r > 0) {\n\t\ty[d] = r % 10;\n\t\tr /= 10;\n\t\td++;\n\t}\n\tfor (int i = 0; i < d / 2; i++) swap(y[i], y[d - 1 - i]);\n\tint w = 0, k = 1;\n\tfor (int i = 0; i < d; i++) {\n\t\tw += y[i] * k;\n\t\tk *= 10;\n\t}\n\tcout << w + a << endl;\n\treturn 0;\n}	a,b=int\nread a,b\ny=array of 30 int\nr=b, d=0\nwhile r>0\ny[d]=r modulo 10\ndivide r by 10\nincrement d\nfor i=0 to d/2 exclusive swap y[i] and y[d-1-i]\nw=0, k=1\nfor i=0 to d exclusive\nadd y[i]*k to w\nmultiply k by 10\nprint w+a
int main() {\n\tint a, b, c = 0;\n\tcin >> a >> b;\n\twhile (b != 0) {\n\t\tc = c * 10 + b % 10;\n\t\tb = b / 10;\n\t}\n\tcout << a + c << endl;\n\treturn 0;\n}	a, b, c = integers set c = 0\nread a and b\nwhile b != 0\nset c = c * 10 + b decrement 10\nset b = b / 10\nprint a + c
int a, be, eb = 0;\nint main() {\n\tcin >> a >> be;\n\twhile (be) {\n\t\teb = 10 * eb + be % 10;\n\t\tbe /= 10;\n\t}\n\tcout << a + eb << '\n';\n}	a, be and eb are integers with eb = 0\nread standard input to a and be\nwhile be is not 0\nchange the value of eb to 10 * eb + be % 10\nchange the value of be to be divided by 10\nprint a + eb and '\n'
int main() {\n\tint a, b, c = 0;\n\tcin >> a >> b;\n\twhile (b) {\n\t\tint d = b % 10;\n\t\tc = c * 10 + d;\n\t\tb /= 10;\n\t}\n\tcout << a + c << endl;\n\treturn 0;\n}	let a, b and c be integers, set c to 0\nread in a and b\nwhile b is not 0\nlet d be an integer and set it to b % 10\nset c to c * 10 + d\nset b to b / 10\nprint a + c
int main() {\n\tlong long a, ans = 0, plus;\n\tstring b;\n\tcin >> a >> b;\n\tfor (int i = 0; i <= b.size() - 1; i++) {\n\t\tplus = ((int)b[i] - 48);\n\t\tfor (int j = 0; j <= i; j++) plus *= 10;\n\t\tplus /= 10;\n\t\tans += plus;\n\t}\n\tans += a;\n\tcout << ans << endl;\n}	let a, ans , plus be long integers with ans = 0\nlet b be a string\nread a and b\nfor i = 0 to (length of b) - 1 inclusive\nplus = (int)b[i] - 48\nfor j = 0 to i inclusive , plus is equal to plus * 10\ndivide plus by 10\nincrement ans by plus\nincrement ans by a\nprint ans and new line
int main() {\n\tlong int a, b;\n\tcin >> a >> b;\n\tint reversedNumber = 0, remainder;\n\twhile (b != 0) {\n\t\tremainder = b % 10;\n\t\treversedNumber = reversedNumber * 10 + remainder;\n\t\tb /= 10;\n\t}\n\tcout << a + reversedNumber << endl;\n\treturn 0;\n}	a, b =integers\nRead a, b\nreversedNumber, remainder = integers with reversedNumber = 0\nwhile b is not equal to 0\nset remainder to b modulo 10\nset reversedNumber to reversedNumber * 10 + remainder\nset b to b / 10\nprint a + reversedNumber and a new line
int rever(int n) {\n\tint rn = 0;\n\twhile (n) {\n\t\trn = rn * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn rn;\n}\nint main() {\n\tint a, b;\n\twhile (cin >> a >> b) { cout << a + rever(b) << endl; }\n\treturn 0;\n}	in int rever taking n = int\nrn = 0 = int\nwhile n\nset rn to rn * 10 + n mod 10\ndivide n by 10\nreturn rn\na,b = int\nwhile reading a and b, print a + rever of b
"int main() {\n\tifstream ff(""file.txt"");\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\treverse(s2.begin(), s2.end());\n\twhile (s1.length() != s2.length()) {\n\t\tif (s1.length() > s2.length()) {\n\t\t\ts2.insert(s2.begin(), 1, '0');\n\t\t} else {\n\t\t\ts1.insert(s1.begin(), 1, '0');\n\t\t}\n\t}\n\tint x, y;\n\tistringstream iss(s2);\n\tiss >> x;\n\tistringstream iss1(s1);\n\tiss1 >> y;\n\tcout << x + y << endl;\n\treturn 0;\n}"	let ff be the ifstream file.txt\ns1, s2 = string\nread s1 and s2\nreverse s2\nwhile length of s1 is not length of s2\nif lenght of s1 is > length of s2\ncall insert on s2 with args beginning of s2, 1, '0'\nelse\ncall insert on s1 with args beginning of s1, 1, '0'\nx, y = int\niss of s2 = istringstream\niss >> x\niss1 of s1 = istringstream\niss1 >> y\nprint x+y
int main() {\n\tint a, b, c = 0;\n\tcin >> a >> b;\n\twhile (b) {\n\t\tint d = b % 10;\n\t\tc = c * 10 + d;\n\t\tb /= 10;\n\t}\n\tcout << a + c << endl;\n\treturn 0;\n}	create int int a, b, c, set c to 0\nread a and b\nwhile b different from b\nset d to b mod 10\nset c to c * 10 + d\nassign b/10 to b\nprint a+c
long long rev(long long x) {\n\tlong long ans = 0;\n\twhile (x) {\n\t\tans = ans * 10 + (x % 10);\n\t\tx /= 10;\n\t}\n\treturn ans;\n}\nint main() {\n\tlong long a, b;\n\twhile (cin >> a >> b) {\n\t\tb = rev(b);\n\t\tcout << a + b << '\n';\n\t}\n\treturn 0;\n}	declare rev taking in long long x and returning long long\ncreate long long int ans = 0\nwhile x is truthy\nset ans to ans * 10 + (x % 10)\nset x to x / 10\nreturn ans\nmake long long ints a and b\nread a and b and while a and b are truthy\nset b to return result of rev(b)\noutput a + b
"int main() {\n\tstring a, b, c;\n\tcin >> a >> b;\n\treverse(a.begin(), a.end());\n\twhile (a.size() < b.size()) a += ""0"";\n\twhile (b.size() < a.size()) b += ""0"";\n\tvector<int> ans;\n\tint sisa = 0;\n\tfor (int i = 0; i < a.size(); i++) {\n\t\tint x = a[i] - '0' + b[i] - '0' + sisa;\n\t\tsisa = 0;\n\t\tans.push_back(x % 10);\n\t\tsisa = x / 10;\n\t}\n\twhile (sisa > 0) {\n\t\tans.push_back(sisa % 10);\n\t\tsisa /= 10;\n\t}\n\twhile (ans.size() > 1 && ans.back() == 0) ans.pop_back();\n\tfor (int i = ans.size() - 1; i >= 0; i--) cout << ans[i];\n\tcout << endl;\n\treturn 0;\n}"	"declare strings a, b, c\nread a and b\nreverse sort from beginning of a to end of a\nwhile size of a is less than size of b, increment a by ""0""\nwhile size of b is less than size of a, increment b by ""0""\ndeclare integer vector ans\ndeclare integer sisa = 0\nfor i = 0 to size of a exclusive\ndeclare integer x = a[i] - '0' + b[i] - '0' + sisa\nlet sisa be 0\nadd ( x % 10 ) to end of ans\nlet sisa be x / 10\nwhile sisa is greater than 0\nadd (sisa%10) to end of ans\nlet sisa be sisa / 10\nwhile size of ans is greater than 1 and back of ans is 0, remove last element from ans\nfor i = size of ans - 1 to 0 inclusive, decrementing i, print ans[i]\nprint newline"
long long n, i, j, ans = 0;\nint main() {\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\treverse(s2.begin(), s2.end());\n\tstringstream geek(s2), geek1(s1);\n\tlong long a;\n\tgeek >> a;\n\tlong long b;\n\tgeek1 >> b;\n\tcout << a + b << endl;\n}	declare long longs n, i, j, ans = 0\ndeclare strings s1, s2\nread s1, s2\nreverse sort from beginning of s2 to end of s2\ndeclare stringstreams geek initialized with s2, geek1 initialized with s1\ndeclare long long a\nread a using geek\ndeclare long long b\nread b using geek1\nprint a + b and newline
int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\treverse(b.begin(), b.end());\n\tstringstream n1(a);\n\tstringstream n2(b);\n\tint num1, num2;\n\tn1 >> num1;\n\tn2 >> num2;\n\tlong long int res = num1 + num2;\n\tcout << res << endl;\n\treturn 0;\n}	declare new string variables a and b\nread a and b\nreverse b\ncreate new stringstream n1 from the string a\ncreate new stringstream n2 from the string b\ndefine new integers num1 and num2\nread num1 from n1\nread the new value for num2 from n2\ndeclare long long integer res = num1 + num2\nprint res to the standard output
int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\treverse(b.begin(), b.end());\n\tstringstream n1(a);\n\tstringstream n2(b);\n\tint num1, num2;\n\tn1 >> num1;\n\tn2 >> num2;\n\tlong long int res = num1 + num2;\n\tcout << res << endl;\n\treturn 0;\n}	let a, b be strings\nread a, b\nreverse the values of b from beginning to end\nstringstream allows you to read n1 from a\nstringstream allows you to read n2 from b\nlet num1, num2 be integers\nn1 >> num1\nn2 >> num2\nthe long integer value of res = num1 + num2\nprint res and newline
int main() {\n\tint a, b, c = 0;\n\tcin >> a >> b;\n\twhile (b) {\n\t\tint d = b % 10;\n\t\tc = c * 10 + d;\n\t\tb /= 10;\n\t}\n\tcout << a + c << endl;\n\treturn 0;\n}	create int a, b, c, set c to 0\nread a and b\nwhile b different from 0\nd= b mod 10\nset c = c * 10 + d\nb= b/10\nprint a +c
int main() {\n\tint a1, a2, k, a3 = 0;\n\tcin >> a1 >> a2;\n\twhile (a2 != 0) {\n\t\tk = a2 % 10;\n\t\ta3 = a3 * 10 + k;\n\t\ta2 /= 10;\n\t}\n\tcout << a1 + a3 << endl;\n\treturn 0;\n}	a1, a2, k, a3 =integers with a3 = 0\nRead a1, a2\nwhile a2 is not equal to 0\nsett k to a2 modulo 10\nset a3 to a3 * 10 + k\nset a2 to a2 / 10\nprint a1 + a3 and a new line
int a, b, c;\nint main() {\n\tcin >> a >> b;\n\twhile (b > 0) {\n\t\tint d = b % 10;\n\t\tc = c * 10 + d;\n\t\tb /= 10;\n\t}\n\tcout << a + c << endl;\n\treturn 0;\n}	create int a, b, c\nread a and b\nwhile b > 0\nset d to b mod 10\nset c = c * 10 + d\nassign b/10 to b\nprint a + c
bool flag;\nint a[71720], n, i, sumend, dp[811][811], m, j, k, x, y, b, c;\nlong long int sum;\nbool cmp(int a, int b) {\n\treturn a > b;\n}\nint gcd(int a, int b) {\n\tif (!b) return a;\n\treturn gcd(b, a % b);\n}\nint maxx(short int a, short int b) {\n\tif (a > b) return a;\n\treturn b;\n}\nint gqt(int n) {\n\tif (!n || n) return 1;\n\tif (n == 2) return 0;\n\tfor (i = 3; i <= sqrt(n); i++)\n\t\tif (n % i == 0) return 1;\n\treturn 0;\n}\nint main() {\n\tcin >> x >> y;\n\twhile (y != 0) {\n\t\tsum = y % 10;\n\t\tsumend *= 10;\n\t\tsumend += sum;\n\t\ty /= 10;\n\t}\n\tsumend += x;\n\tcout << sumend << endl;\n\treturn 0;\n\treturn 0;\n}	declare boolean flag\ndeclare integer arrays a size 71720, dp size 811 by 811, integers n, i, sumend, m, j, k, x, y, b, c\ndeclare long long integer sum\ndeclare boolean cmp with integers a, b as arguments, returning boolean\nreturn a is greater than b\ndeclare gcd with integers a, b as arguments, returning integer\nif not b, return a from function\nreturn result of run gcd(b,a%b)\ndeclare maxx with short integers a, b as arguments, returning integer\nif a is greater than b, return a\nreturn b from function\ndeclare gqt with integer n as argument, returning integer\nif not n or n, return 1 from function\nif n is 2, return 0 from function\nfor i = 3 to square root of n inclusive\nif n % i is 0, return 1\nread x, y\nwhile y is not 0\nlet sum be y % 10\nlet sumend be sumend * 10\nincrement sumend by sum\nlet y be y / 10\nincrement sumend by x\nprint sumend and newline
int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tvector<int> x, y;\n\twhile (a) {\n\t\tx.push_back(a % 10);\n\t\ta /= 10;\n\t}\n\twhile (b) {\n\t\ty.push_back(b % 10);\n\t\tb /= 10;\n\t}\n\treverse(y.begin(), y.end());\n\twhile (x.size() < y.size()) x.push_back(0);\n\twhile (y.size() < x.size()) y.push_back(0);\n\tfor (int i = 0; i < y.size(); i++) x[i] += y[i];\n\tlong long ans = 0;\n\tfor (int i = x.size() - 1; i >= 0; i--) ans = (long long)10 * ans + (long long)x[i];\n\tcout << ans << endl;\n\treturn 0;\n}	declare int variables a and b\nread input to a and b\ncreate integers vectors x and y\nwhile a is not 0\npush a % 10 after the last element of x\nchange the value of a to a divided by 10\nwhile b\npush b % 10 to the end of y\nset b to b divided by 10\nreverse y\npush 0 to x while size of x < size of y\npush 0 to y while size of y < size of x\nfor i from 0 to length of y exclusive, increase x[i] by y[i]\ndeclare new long long ans = 0\nin a loop for i from size of - 1 to 0 inclusive, counting down, change ans to 10 * ans + x[i]\nprint ans to the standard output
int main() {\n\tint a, b, i, j, x;\n\tcin >> a >> b;\n\tint sum = 0;\n\twhile (b != 0) {\n\t\tsum = sum * 10;\n\t\tsum += b % 10;\n\t\tb /= 10;\n\t}\n\tsum += a;\n\tcout << sum << endl;\n\treturn 0;\n}	create integers a, b, i, j, and x\nread a and b\ncreate integer sum = 0\nwhile b is not 0\nset sum to sum * 10\nset sum to sum + b % 10\ndivide b by 10\nset sum to sum + a\ndisplay sum
int main() {\n\tstring s, ss;\n\tcin >> s >> ss;\n\treverse(ss.begin(), ss.end());\n\tint x, y;\n\tstringstream sss, ssss;\n\tsss << s;\n\tsss >> x;\n\tssss << ss;\n\tssss >> y;\n\tcout << x + y << endl;\n}	let s, ss be strings\nread s, ss\nreverse the values of ss from beginning to end\nlet x , y be integers\nread a stringstream into sss and read a stringstream into ssss\nshift sss to the right by s\nshift sss to the left by x\nshift ssss to the right by ss\nshift ssss to the left by y\nprint x + y and newline
int main() {\n\tstring b;\n\tlong long a, c, d;\n\tcin >> a >> b;\n\tc = 0;\n\tfor (int i = b.length() - 1; i >= 0; i--) { c = c * 10 + b[i] - '0'; }\n\td = a + c;\n\tcout << d << endl;\n}	create string b\ncreate long long a, c, d\nread a and b\nc=0\nfor I00 to length of b -1 exclusive, set c = c * 10 + b[i] - 0\nd=a+c\nprint d
int main() {\n\tint n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint 25 and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	n=int\nread n\nprint 25
int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	let n be a long integer\nread n\nprint 25 and newline
"int main() {\n\tint a, b;\n\tcin >> a;\n\tcout << ""25"" << endl;\n}"	"declare new int variables a and b\nread variable a from the input\nprint ""25"""
"int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	"n = long long\nread n\nprint ""25"""
int main() {\n\tfloat n, a, i;\n\tint s;\n\tcin >> n;\n\ts = 25;\n\tif (n == 1) { s = 5; }\n\tcout << s << endl;\n\treturn 0;\n}	let n, a, i be float values\nlet s be a integer\nread n\ns is equal to 25\nif n is equal to 1 , s is equal to 5\nprint s and newline
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	n=long long int\nread n\nprint 25
"int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tif (n == 1) {\n\t\t\tcout << 5 << endl;\n\t\t} else {\n\t\t\tcout << 25 << endl;\n\t\t}\n\t}\n}	n = long long\nloop while reading n\nif n is 1\nprint 5\nelse\nprint 25
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	n = integer\nread n\nprint 25
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 1) { cout << 5 << endl; }\n\tif (n == 0) { cout << 1 << endl; }\n\tif (n >= 2) { cout << 25 << endl; }\n}	create long long int n\nread n\nif n is equal to 1, print 5\nif n equals 0, print 1\nif n is greater than or equal to 2, print 25
long long Q_pow(long long a, long long b) {\n\tlong long ans = 1;\n\twhile (b > 0) {\n\t\tif (b % 2 == 1) {\n\t\t\ta %= 100;\n\t\t\tans %= 100;\n\t\t\tans *= a;\n\t\t}\n\t\ta %= 100;\n\t\ta *= a;\n\t\tb /= 2;\n\t}\n\treturn ans % 100;\n}\nint main() {\n\tlong long n;\n\twhile (cin >> n) { cout << Q_pow(5, n) << endl; }\n}	long long function Q_pow with long long arguments a and b\ndeclare long long variable with name ans = 1\nwhile b > 0\nif b is odd\nchange a to the remainder of a divided by 100\nchange ans to the ans modulo 100\nset ans to ans multiplied by a\nchange a to a modulo 100\nmultiply a by a\ndivide b by 2\nreturn ans % 100\ncreate long long variable n\nread n and print the result of Q_pow(5, n)
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tint in, ans = 25;\n\tcin >> in;\n\tcout << ans << endl;\n\treturn 0;\n}	in, ans =integer with ans = 25\nRead in\nprint ans and a new line
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint 25 and a new line
int i, j;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tcout << 25 << endl;\n}	create integer i, j\ncreate long long n\nread n\nprint 25
"int main() {\n\tlong long n;\n\twhile (cin >> n) { cout << ""25"" << endl; }\n}"	n = long long\nwhile n can be read as a valid long long, print 25
int main() {\n\tcout << 25 << endl;\n\treturn 0;\n}	print 25 and a new line
int main() {\n\tunsigned long long n;\n\tcin >> n;\n\tcout << 25 << endl;\n}	create unsigned long long variable n\nread user input to n\nprint 25 to the standard output
"int main() {\n\tint j;\n\tcin >> j;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	j =integer\nRead j\nprint 25 and a new line
int main() {\n\tint n, b = 25;\n\tcin >> n;\n\tcout << b << endl;\n\treturn 0;\n}	n, b =integers with b = 25\nRead n\nprint b and a new line
int n;\nint main() {\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n=int\nread n\nprint 25
int main() {\n\tcout << 25 << endl;\n}	print 25
int main() {\n\tcout << 25 << endl;\n\treturn 0;\n}	print 25 and a new line
"int main() {\n\tlong long n;\n\twhile (cin >> n) { cout << ""25"" << endl; }\n}"	let n be a long integer\nwhile read n , print 25 and newline
int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	create long long int n\nread n\nprint 25
int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint 25 and a new line
long long Q_pow(long long a, long long b) {\n\tlong long ans = 1;\n\twhile (b > 0) {\n\t\tif (b % 2 == 1) {\n\t\t\ta %= 100;\n\t\t\tans %= 100;\n\t\t\tans *= a;\n\t\t}\n\t\ta %= 100;\n\t\ta *= a;\n\t\tb /= 2;\n\t}\n\treturn ans % 100;\n}\nint main() {\n\tlong long n;\n\twhile (cin >> n) { cout << Q_pow(5, n) << endl; }\n}	in function Q_pow that returns a long long and takes arguments a, b = long long\nans = long long with value of 1\nwhile b is greater than 0\nif b mod 2 equals 1\nset a to a mod 100\nset ans to ans mod 100\nset ans to ans * a\nset a to a mod 100\nset a to a * a\nset b to b/2\nreturn ans mod 100\nn = long long\nwhile read n do print the return of function Q_pow with arguments a = 5 and b = n
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tlong long n;\n\twhile (cin >> n) { cout << 25 << endl; }\n\treturn 0;\n}	n = long long\nloop while reading n print 25
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint 25 and a new line
"int main() {\n\tunsigned long long n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	n=unsigned long lon\nread n\nprint 25
"int n;\nint main() {\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	n = integer\nread n\nprint 25
const long long mod = 100;\nlong long re(long long a, long long n) {\n\tlong long ans = 1;\n\twhile (n > 0) {\n\t\tif (n & 1) ans = (ans * a) % mod;\n\t\ta = (a * a) % mod;\n\t\tn >>= 1;\n\t}\n\treturn ans;\n}\nint main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tlong long result = re(5, n);\n\t\tcout << result << endl;\n\t}\n\treturn 0;\n}	mod = const long long with mod = 100\nin function re taking long long a, long long n and returning long long\nans = long long with ans = 1\nloop while n > 0\nif n bitwise-and 1 set ans to (ans * a) modulo mod\nset a to (a * a) modulo mod\nset n to n bitshfit right by 1\nreturn ans\nn = long long\nloop while reading n\nresult = long long with result = re of 5, n\nprint result
int main() {\n\tlong long n;\n\twhile (cin >> n) { cout << 25 << endl; }\n\treturn 0;\n}	n = long long\nwhile reading n print 25
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	create long long integer n\nread n\nprint 25
const int MOD = 100;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tint v = 5;\n\tint ans = 1;\n\tfor (int i = 0; i <= 62; i++, v = (v * v) % MOD) {\n\t\tif (n & (1 << i)) { ans = (ans * v) % MOD; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	MOD = const integer with MOD = 100\nn = long long\nread n\nv = integer with v = 5\nans = integer with ans = 1\nfor i = 0 to 62 with increment i, v = (v * v) modulo MOD\nif (n bitwise and (left shift i 1 place)), ans = (ans * v) modulo MOD\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tcout << 25 << endl;\n}	create int n\nread n\nprint 25
int main() {\n\tlong long n;\n\twhile (cin >> n) { cout << 25 << endl; }\n\treturn 0;\n}	create long long n\nread n and while n is truthy, print 25
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	"declare integer n\nread n\nprint ""25"" and newline"
int main() {\n\tlong long i, j, n, c = 0, ans = 25;\n\tcin >> n;\n\tcout << ans << endl;\n\treturn 0;\n}	i, j, n, c, ans =integers with c = 0 and ans = 25\nRead n\nprint ans and a new line
"int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	"n = long long\nread n\nprint ""25"""
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n\treturn 0;\n}"	n = integer\nread n\nprint 25
"int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	n = long long\nread n\nprint 25
int main() {\n\tint n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n = int\nread n\nprint 25
int main() {\n\tint n;\n\tcin >> n;\n\tcout << 25 << endl;\n}	n =integer\nRead n\nprint 25 and a new line
"int main() {\n\tunsigned long long n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	n = unsigned long long\nread n\nprint 25
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tchar n[20];\n\twhile (cin >> n) { cout << 25 << endl; }\n\treturn 0;\n}	create char n[20]\nwhile read n, print 25
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << ""25"" << endl;\n}"	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint 25 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tcout << 25 << endl;\n\treturn 0;\n}	n = integer\nread n\nprint 25
const double eps = 1e-6;\nconst int MAXN = 8000;\ndouble a[MAXN];\nint main() {\n\tint n;\n\tcin >> n;\n\tdouble x;\n\tfor (int i = 0; i < 2 * n; i++) cin >> a[i];\n\tdouble sum = 0;\n\tint num = 0;\n\tfor (int i = 0; i < 2 * n; i++) {\n\t\tx = ((int)a[i] + 1) * 1.0 - a[i];\n\t\tif (fabs(x - 1) <= eps)\n\t\t\tnum++;\n\t\telse\n\t\t\tsum += x;\n\t}\n\tint m = 0;\n\tif (num < n) m = n - num;\n\tdouble res = 0x3f3f3f3f * 1.0;\n\tfor (; m <= min(2 * n - num, n); m++) res = min(res, fabs(sum - m));\n\tcout << fixed << setprecision(3) << res << endl;\n\treturn 0;\n}	create constant double eps = 1e-6\nlet const int MAXN = 8000\nlet double array a of size MAXN\ncreate int n\nread n\nlet double x\nfor i = 0 to 2 exclusive, read a[i]\nlet double sum = 0\ncreate int num = 0\nfor i = 0 to 2 exclusive\nset x to ((int)a[i] + 1) * 1.0 - a[i]\nif (fabs(x - 1) <= eps\nincrement num++\nelse\nset sum to sum + x\ncreate integer m = 0\nif num is less than 0, set m to n - num\nlet double res = 0x3f3f3f3f * 1.0\nloop until m <= min(2 * n - num, n), set res to min of res and fabs(sum - m)\nprint fixed, setprecision(3), and res
"ifstream infile;\nofstream outfile;\nlong double a[2 * 2005], dp[2 * 2005][2005];\nint n;\nint OpenFile() {\n\tinfile.open(""351A.INP"", ios::in);\n\toutfile.open(""351A.OUT"", ios::out);\n\tif (infile.fail()) {\n\t\tcout << ""Khong mo duoc file input !"" << endl;\n\t\treturn -1;\n\t}\n\tif (outfile.fail()) {\n\t\tcout << ""khong mo duoc file output!"" << endl;\n\t\treturn -1;\n\t}\n}\nvoid input() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) cin >> a[i];\n}\nvoid init() {\n\tfor (int i = 0; i <= 2 * n; i++)\n\t\tfor (int j = 0; j <= n; j++) dp[i][j] = INT_MAX;\n\tdp[0][0] = 0;\n}\nvoid process() {\n\tfor (int i = 1; i <= 2 * n; i++) {\n\t\tfor (int j = 0; j <= min(i, n); j++) {\n\t\t\tlong double val1 = INT_MAX, val2 = INT_MAX;\n\t\t\tif (j > 0) val1 = dp[i - 1][j - 1] + ceil(a[i]) - a[i];\n\t\t\tif ((i - j) <= n) val2 = dp[i - 1][j] + floor(a[i]) - a[i];\n\t\t\tdp[i][j] = val1;\n\t\t\tif (fabs(val2) < fabs(val1)) dp[i][j] = val2;\n\t\t}\n\t}\n}\nvoid output() {\n\tcout << fixed << setprecision(3) << fabs(dp[2 * n][n]) << endl;\n}\nvoid in() {\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t\tfor (int j = 0; j <= n; j++) {\n\t\t\tif (dp[i][j] == INT_MAX)\n\t\t\t\tcout << 999999 << "" "";\n\t\t\telse if (dp[i][j] >= 0)\n\t\t\t\tcout << "" "" << dp[i][j] << "" "";\n\t\t\telse\n\t\t\t\tcout << dp[i][j] << "" "";\n\t\t}\n\t\tcout << endl;\n\t}\n}\nint main() {\n\tinput();\n\tinit();\n\tprocess();\n\toutput();\n}"	"create ifstream infile\ncreate ofstream outfile\ncreate long double array a with size 2 * 2005, create 2d long double array dp with size 2 * 2005 by 2005\ncreate integer n\ndeclare OpenFile with no arguments, returning integer\nusing infile open file ""351A.INP"" in ios::in mode\nusing outfile open file ""351A.OUT"" in ios::out mode\nif stream infile failed\nprint ""Khong mo duoc file input !"" print newline\nreturn -1 from function\nif stream outfile failed\nprint ""khong mo duoc file output!"" print newline\nreturn -1 from function\ndeclare input with no arguments, returning void\nread n\nfor i = 1 to 2 * n inclusive, read a[i]\ndeclare init with no arguments, returning void\nfor i = 0 to 2 * n inclusive\nfor j = 0 to n inclusive, set dp[i][j] to INT_MAX\nset dp[0][0] to 0\ndeclare process with no arguments, returning void\nfor i = 1 to 2 * n inclusive\nfor j = 0 to minimum of i and n inclusive\ncreate long doubles val1, val2 with val1 = INT_MAX, val2 = INT_MAX\nif j is greater than 0, set val to dp[i - 1][j - 1] + round up(a[i]) - a[i]\nif i - j is less than or equal to n, set val2 to dp[i - 1][j] + round down(a[i]) - a[i]\nset dp[i][j] to val1\nif absolute value of val2 is less than absolute value of val1, set dp[i][j] to val2\ndeclare output with no arguments, returning void\nset stream format to fixed, set precision to 3, print absolute value of dp[2 * n][n] print newline\ndeclare in with no arguments, returning void\nfor i = 0 to 2 * n inclusive\nfor j = 0 to n inclusive\nif dp[i][j] is INT_MAX\nprint 999999 print "" ""\nelse if dp[i][j] is greater than or equal to 0\nprint "" "" print dp[i][j] print "" ""\nelse\nprint dp[i][j] print "" ""\nprint newline\nrun input\nrun init\nrun process\nrun output"
"ifstream infile;\nofstream outfile;\nlong double a[2 * 2005], dp[2 * 2005][2005];\nint n;\nint OpenFile() {\n\tinfile.open(""input.txt"", ios::in);\n\toutfile.open(""output.txt"", ios::out);\n\tif (infile.fail()) {\n\t\tcout << ""Khong mo duoc file input !"" << endl;\n\t\treturn -1;\n\t}\n\tif (outfile.fail()) {\n\t\tcout << ""khong mo duoc file output!"" << endl;\n\t\treturn -1;\n\t}\n}\nvoid input() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) cin >> a[i];\n}\nvoid init() {\n\tfor (int i = 0; i <= 2 * n; i++)\n\t\tfor (int j = 0; j <= n; j++) dp[i][j] = INT_MAX;\n\tdp[0][0] = 0;\n}\nvoid process() {\n\tfor (int i = 1; i <= 2 * n; i++) {\n\t\tfor (int j = 0; j <= min(i, n); j++) {\n\t\t\tlong double val1 = INT_MAX, val2 = INT_MAX;\n\t\t\tif (j > 0) val1 = dp[i - 1][j - 1] + ceil(a[i]) - a[i];\n\t\t\tif ((i - j) <= n) val2 = dp[i - 1][j] + floor(a[i]) - a[i];\n\t\t\tdp[i][j] = val1;\n\t\t\tif (fabs(val2) < fabs(val1)) dp[i][j] = val2;\n\t\t}\n\t}\n}\nvoid output() {\n\tcout << fixed << setprecision(3) << fabs(dp[2 * n][n]) << endl;\n}\nvoid in() {\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t\tfor (int j = 0; j <= n; j++) {\n\t\t\tif (dp[i][j] == INT_MAX)\n\t\t\t\tcout << 999999 << "" "";\n\t\t\telse if (dp[i][j] >= 0)\n\t\t\t\tcout << "" "" << dp[i][j] << "" "";\n\t\t\telse\n\t\t\t\tcout << dp[i][j] << "" "";\n\t\t}\n\t\tcout << endl;\n\t}\n}\nint main() {\n\tinput();\n\tinit();\n\tprocess();\n\toutput();\n}"	"create ifstream infile\ncreate ofstream outfile\ncreate long double array a with size 2 * 2005, create 2d long double array dp with size 2 * 2005 by 2005\ncreate integer n\ndeclare OpenFile with no arguments, returning integer\nusing infile open ""input.txt"" using ios::in mode\nusing outfile open ""output.txt"" using ios::out mode\nif infile failed\nprint ""Khong mo duoc file input !"" print newline\nreturn -1 from function\nif outfile failed\nprint ""khong mo duoc file output!"" print newline\nreturn -1 from function\ndeclare input with no arguments, returning void\nread n\nfor i = 1 to 2 * n inclusive, read a[i]\ndeclare init with no arguments, returning void\nfor i = 0 to 2 * n inclusive\nfor j = 0 to n inclusive, set dp[i][j] to INT_MAX\nset dp[0][0] to 0\ndeclare process with no arguments, returning void\nfor i = 1 to 2 * n inclusive\nfor j = 0 to minimum of i and n inclusive\ncreate long doubles val1, val2 with val1 = INT_MAX, val2 = INT_MAX\nif j is greater than 0, set val1 to dp[i - 1][j - 1] + round up(a[i]) - a[i]\nif ( i - j ) is less than or equal to n, set val2 to dp[i - 1][j] + round down(a[i]) - a[i]\nset dp[i][j] to val1\nif absolute value of val2 is less than absolute value of val1, set dp[i][j] to val2\ndeclare output with no arguments, returning void\nset cout flag fixed, set cout precision to 3, print absolute value of dp[2 * n][n] print newline\ndeclare in with no arguments, returning void\nfor i = 0 to 2 * n inclusive\nfor j = 0 to n inclusive\nif dp[i][j] is INT_MAX\nprint 999999 print "" ""\nelse if dp[i][j] is greater than or equal to 0\nprint "" "" print dp[i][j] print "" ""\nelse\nprint dp[i][j] print "" ""\nprint newline\nrun input\nrun init\nrun process\nrun output"
int fastMax(int x, int y) {\n\treturn (((y - x) >> (32 - 1)) & (x ^ y)) ^ y;\n}\nint fastMin(int x, int y) {\n\treturn (((y - x) >> (32 - 1)) & (x ^ y)) ^ x;\n}\nconst long long int MAXN = 2001;\nlong double a[2 * MAXN];\nlong long int n;\nlong double dp[MAXN][MAXN];\nbool visit[MAXN][MAXN];\ndouble recursion(long long int i, long long int ceils, long long int floors) {\n\tif (i > 2 * n) return 0;\n\tif (visit[ceils][floors]) return dp[ceils][floors];\n\tlong double val1 = INT_MAX;\n\tlong double val2 = INT_MAX;\n\tif (ceils < n) val1 = ceil(a[i]) - a[i] + recursion(i + 1, ceils + 1, floors);\n\tif (floors < n) val2 = floor(a[i]) - a[i] + recursion(i + 1, ceils, floors + 1);\n\tlong double ans;\n\tif (fabs(val1) < fabs(val2))\n\t\tans = val1;\n\telse\n\t\tans = val2;\n\tvisit[ceils][floors] = true;\n\treturn dp[ceils][floors] = ans;\n}\nvoid solve() {\n\tcin >> n;\n\tfor (int i = (1); i <= (2 * n); ++i) cin >> a[i];\n\tcout << fixed << setprecision(3);\n\tcout << fabs(recursion(1, 0, 0)) << endl;\n}\nint main() {\n\tlong long int t;\n\tt = 1;\n\twhile (t--) solve();\n}	in function fastMax taking two ints x and y and returning an int\nreturn (((y - x) bitshift right by (32 - 1)) bitwise-and (x bitwise-xor y)) bitwise-xor y\nin function fastMin taking two ints x and y and returning an int\nreturn (((y - x) bitshift right by (32 - 1)) bitwise-and (x bitwise-xor y)) bitwise-xor x\nMAX = const long long int with MAXN = 2001\na = long double array of size 2 * MAXN\nn = long long int\ndp = two dimensional long double array of sizes MAXN and MAXN\nvisit = two dimensional bool array of sizes MAXN and MAXN\nin function recursion taking three long long ints i, ceils and floors and returning a double\nif i is greater than 2 * n then return 0\nif visit[ceils][floors] is true return dp[ceils][floors]\nval1 = long double with val1 = INT_MAX\nval2 = long double with val2 = INT_MAX\nif ceils is less than n set val1 to ceil of a[i] - a[i] + recursion of i + 1, ceils + 1 and floors\nif floors is less than n then set val2 to floor of a[i] - a[i] + recursion of i + 1, ceils and floors + 1\nans = long double\nif fabs of val is less than fabs of val2\nset ans to val1\nelse\nset ans to val2\nset visit[ceils][floors] to true\nset dp[ceils][floors] to ans and return dp[ceils][floors]\nin function solve\nread n\nfor i = 1 to 2 * n inclusive read a[i]\ncall fixed and setprectision of 3 on cout\nprint fabs of recursion of 1, 0, 0\nt = long long int\nset t to 1\ncall solve t times
double frac(double x) {\n\treturn x - (long long)x;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tdouble diff = 0;\n\tlong long c = 0;\n\tvector<double> a;\n\tfor (int i = 0; i < 2 * n; i++) {\n\t\tdouble x;\n\t\tcin >> x;\n\t\ta.push_back(frac(x));\n\t\tif (a[i] == 0) c++;\n\t\tdiff += a[i];\n\t}\n\tdouble ans = 1e9;\n\tfor (int i = 0; i <= c; i++) {\n\t\tif (i < c - n) { continue; }\n\t\tdouble p = abs(diff - (n - i) * 1.0);\n\t\tans = min(p, ans);\n\t}\n\tcout << setprecision(3) << fixed;\n\tcout << ans << '\n';\n\treturn 0;\n}	frac is a double function with double argument x\nreturn x - (x casted to long long)\ncreate integer n\nread variable n from the input\ndeclare double variable diff with value 0\ncreate new long long called c with value 0\na is a new vector of doubles\nloop i from 0 to 2 * n exclusive\nx is a new double\nread x from the user input\npush frac(x) to the end of a\nif a[i] = 0, increment c\nincrease diff by a[i]\ncreate new double ans = 1e9\nfor i from 0 to c inclusive\nif i is less than c - n, go to the start of the loop\ndeclare new double variable p = abs(diff - (n - i) * 1.0)\nset ans to min of p and ans\nset decimal output precision to 3 and force it to usefixed floating-point notation\nprint ans and '\n' to the output
"ifstream infile;\nofstream outfile;\nlong double a[2 * 2005], dp[2 * 2005][2005];\nint n;\nint OpenFile() {\n\tinfile.open(""351A.INP"", ios::in);\n\toutfile.open(""351A.OUT"", ios::out);\n\tif (infile.fail()) {\n\t\tcout << ""Khong mo duoc file input !"" << endl;\n\t\treturn -1;\n\t}\n\tif (outfile.fail()) {\n\t\tcout << ""khong mo duoc file output!"" << endl;\n\t\treturn -1;\n\t}\n}\nvoid input() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) cin >> a[i];\n}\nvoid init() {\n\tfor (int i = 0; i <= 2 * n; i++)\n\t\tfor (int j = 0; j <= n; j++) dp[i][j] = INT_MAX;\n\tdp[0][0] = 0;\n}\nvoid process() {\n\tfor (int i = 1; i <= 2 * n; i++) {\n\t\tfor (int j = 0; j <= min(i, n); j++) {\n\t\t\tlong double val1 = INT_MAX, val2 = INT_MAX;\n\t\t\tif (j > 0) val1 = dp[i - 1][j - 1] + ceil(a[i]) - a[i];\n\t\t\tif ((i - j) <= n) val2 = dp[i - 1][j] + floor(a[i]) - a[i];\n\t\t\tdp[i][j] = val1;\n\t\t\tif (fabs(val2) < fabs(val1)) dp[i][j] = val2;\n\t\t}\n\t}\n}\nvoid output() {\n\tcout << fixed << setprecision(3) << fabs(dp[2 * n][n]) << endl;\n}\nvoid in() {\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t\tfor (int j = 0; j <= n; j++) {\n\t\t\tif (dp[i][j] == INT_MAX)\n\t\t\t\tcout << 999999 << "" "";\n\t\t\telse if (dp[i][j] >= 0)\n\t\t\t\tcout << "" "" << dp[i][j] << "" "";\n\t\t\telse\n\t\t\t\tcout << dp[i][j] << "" "";\n\t\t}\n\t\tcout << endl;\n\t}\n}\nint main() {\n\tinput();\n\tinit();\n\tprocess();\n\toutput();\n}"	"create ifstrean called infile\ncreate ofstream outfile\ndeclare an array of long doubles a with 2 * 2005 elements and 2d array dp with size 2 * 2005 by 2005\ncreate new integer variable n\nOpenFile is a integer function\nopen file called ""351A.INP"" with parameter ios::in, to ifstream\nopen file called ""351A.OUT"" with parameter ios::out, to ofstream\nif infile.fail()\nprint ""Khong mo duoc file input !""\nreturn -1\nif outfile.fail()\nprint ""khong mo duoc file output!""\nreturn -1\nfunction input\nread n from the input\nstart for loop from i = 1 to 2 * n inclusive, read user input to a[i] on each loop\ndefine function init\nin a for loop, change i from 0 to 2 * n inclusive incrementing i\nfor loop, changing j from 0 to n inclusive and assigning INT_MAX to dp[i][j] on each iteration\nchange dp[0][0] to 0\nfunction process\nin a for loop, change i from 1 to 2 * n inclusive incrementing i\nfor integer j = 0 to min of i and n inclusive\ncreate long double variables val1 with value INT_MAX and val2 = INT_MAX\nif j is greater than 0, change val1 to dp[i - 1][j - 1] + ceil(a[i]) - a[i]\nif (i - j) <= n, set val2 to dp[i - 1][j] + (a[i]) - a[i]) rounded down\nassign val1 to dp[i][j]\nif fabs(val2) is less than fabs(val1), change dp[i][j] to val2\nvoid function output\nchange output format to fixed, set decimal precision to 3 and print fabs(dp[2 * n][n])\nin the function in\nstart for loop from i = 0 to 2*n inclusive incrementing i\nstart for loop from j = 0 to n inclusive\nif dp[i][j] is equal to INT_MAX\nprint 999999 and "" "" to the standard output\nelse if dp[i][j] >= 0\nprint "" "", dp[i][j] and "" ""\nelse\nprint dp[i][j] and "" "" to the standard output\nprint new line\ncall input()\ncall function init()\ncall method process()\ncall output()"
int main() {\n\tint n;\n\tcin >> n;\n\tn = 2 * n;\n\tlong double a[100005];\n\tint i;\n\tvector<long double> v1, v, v2;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == (int)a[i]) {\n\t\t\tv.push_back(a[i]);\n\t\t} else {\n\t\t\tv1.push_back(a[i]);\n\t\t}\n\t}\n\tfor (i = 0; i < v1.size(); i++) {\n\t\tlong double g = ceil(v1[i]) - v1[i];\n\t\tv2.push_back(g);\n\t}\n\tsort(v2.begin(), v2.end());\n\tint h = n / 2;\n\tint j;\n\tint hh = v2.size();\n\tlong double ans1 = 0, ans = 0, ans2 = 1e9;\n\tfor (i = -1; i < hh; i++) {\n\t\tif (i == -1) {\n\t\t} else {\n\t\t\tans += v2[i];\n\t\t}\n\t\tans1 = 0;\n\t\tif (((i + 1) + v.size()) >= h && (n - (i + 1)) >= h) {\n\t\t\tfor (j = i + 1; j < hh; j++) { ans1 -= 1 - v2[j]; }\n\t\t\tans2 = min(ans2, abs(ans + ans1));\n\t\t}\n\t}\n\tcout << fixed << setprecision(3) << ans2 << endl;\n}	declare int n\nread n\nset n to 2 * n\ndeclare an array of long doubles a with 100005 elements\ndeclare integer i\ndeclare vectors of long doubles v, v1 and v2\nfor i = 0 to n exclusive\nread a[i]\nif a[i] = (int)a[i]\npush a[i] into v\nelse\npush a[i] into v1\nfor i from 0 to length of v1 exclusive\ndeclare long double variable g = v1[i] rounded up - v1[i]\npush g into v2\nsort v2\ndeclare integer h = n / 2\ncreate int j\ndeclare int variable hh = length of v2\ndeclare long double variables ans1 and ans = 0 and ans2 = 1e9\nfor i from -1 to hh exclusive\nif i is equal to -1\nelse\nincrease ans by v2[i]\nassign 0 to ans1\nif ((i + 1) + length of v) >= h and (n - (i + 1)) >= h\nfor j from i + 1 to hh exclusive, subtract 1 - v2[j] from ans1\nset ans2 to min of ans2 and abs(ans + ans1)\nset output fixed flag, set decimal precision to 3 and print ans2
"long double a[2 * 2005], dp[2 * 2005][2005];\nint n;\nint input() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) cin >> a[i];\n\treturn 0;\n}\nint init() {\n\tfor (int i = 0; i <= 2 * n; i++)\n\t\tfor (int j = 0; j <= n; j++) dp[i][j] = INT_MAX;\n\tdp[0][0] = 0;\n\treturn 0;\n}\nint process() {\n\tfor (int i = 1; i <= 2 * n; i++) {\n\t\tfor (int cei = 0; cei <= min(i, n); cei++) {\n\t\t\tlong double val1 = INT_MAX, val2 = INT_MAX;\n\t\t\tif (cei > 0) val1 = dp[i - 1][cei - 1] + ceil(a[i]) - a[i];\n\t\t\tif ((i - cei) <= n) val2 = dp[i - 1][cei] + floor(a[i]) - a[i];\n\t\t\tdp[i][cei] = val1;\n\t\t\tif (fabs(val2) < fabs(val1)) dp[i][cei] = val2;\n\t\t}\n\t}\n\treturn 0;\n}\nint output() {\n\tcout << fixed << setprecision(3) << fabs(dp[2 * n][n]) << endl;\n\treturn 0;\n}\nvoid in() {\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t\tfor (int j = 0; j <= n; j++) {\n\t\t\tif (dp[i][j] == INT_MAX)\n\t\t\t\tcout << 999999 << "" "";\n\t\t\telse if (dp[i][j] >= 0)\n\t\t\t\tcout << "" "" << dp[i][j] << "" "";\n\t\t\telse\n\t\t\t\tcout << dp[i][j] << "" "";\n\t\t}\n\t\tcout << endl;\n\t}\n}\nint main() {\n\tinput();\n\tinit();\n\tprocess();\n\toutput();\n}"	"create long double array a with size 2 * 2005, create 2d long double array dp with size 2 * 2005 by 2005\ncreate integer n\ndeclare input with no arguments, returning integer\nread n\nfor i = 1 to 2 * n inclusive, read a[i]\ndeclare init with no arguments, returning integer\nfor i = 0 to 2 * n inclusive\nfor j = 0 to n inclusive, set dp[i][j] to INT_MAX\nset dp[0][0] to 0\ndeclare process with no arguments, returning integer\nfor i = 1 to 2 * n inclusive\nfor cei = 0 to minimum of i and n inclusive\ncreate long doubles val1, val2 with val1 = INT_MAX, val2 = INT_MAX\nif cei is greater than 0, set val1 to dp[i - 1][cei - 1] + round up(a[i]) - a[i]\nif ( i - cei ) is less than or equal to n, set val2 to dp[i - 1][cei] + round down(a[i]) - a[i]\nset dp[i][cei] to val1\nif absolute value of val2 is less than absolute value of val1, set dp[i][cei] to val2\ndeclare output with no arguments, returning integer\nprint fixed, set cout precision to 3, print absolute value of dp[2 * n][n], print newline\ndeclare in with no arguments, returning void\nfor i = 0 to 2 * n inclusive\nfor j = 0 to n inclusive\nif dp[i][j] is INT_MAX\nprint 999999 print "" ""\nelse if dp[i][j] is greater than or equal to 0\nprint "" "" print dp[i][j] print "" ""\nelse\nprint dp[i][j] print "" ""\nprint newline\nrun input\nrun init\nrun process\nrun output"
int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 1)\n\t\tcout << 1 << endl;\n\telse {\n\t\tif (n % 2 != 0) n--;\n\t\tcout << n / 2 + 1 << endl;\n\t}\n\treturn 0;\n}	n =integer\nRead n\nif n is 1\nprint 1 and a new line\nelse do the following\nif n is odd, then decrement n\nprint n / 2 + 1 and a new line
const int N = 1e5 + 10, INF = 1e9 + 7;\nint n;\nint main() {\n\tcin >> n;\n\tcout << (n / 2) + 1 << '\n';\n\treturn 0;\n}	Create global constant integers n = 100010 and INF = 1000000007\nCreate n as a global integer\nSet n to the input\nOutput one plus n divided by 2
"const int maxa = 1000000;\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n == 1)\n\t\tcout << ""1"" << endl;\n\telse {\n\t\tcout << int(n / 2) + 1 << endl;\n\t}\n\treturn 0;\n}"	set const int maxa to 1000000\nintegers = n\nread n\nif n is 1 then do the following\noutput 1\nelse\noutput (n / 2) + 1
int main() {\n\tint n;\n\twhile (cin >> n) { cout << (n) / 2 + 1 << endl; }\n\treturn 0;\n}	create integer n\nwhile read n is true, print n / 2 + 1 print newline
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << '\n';\n\treturn 0;\n}	declare int n\nread from the input to n\nprint n / 2 + 1 and '\n'
const long long int MOD = 1000000007;\nlong long int N, M, K, H, W, L, R;\nint main() {\n\tcin >> N;\n\tcout << N / 2 + 1 << endl;\n\treturn 0;\n}	create const long long int MOD = 1000000007\ncreate long long ints N, M, K, H, W, L and R\nread from the input to N\nprint N / 2 + 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n}	n =integer\nRead n\nprint n / 2 + 1 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint n / 2 + 1 and a new line
int a;\nint main() {\n\tcin >> a;\n\tcout << a / 2 + 1 << endl;\n\treturn 0;\n}	a = integer\nRead a\nprint a / 2 + 1 and a new line
int main() {\n\tlong long int num;\n\tcin >> num;\n\tcout << (num / 2) + 1 << endl;\n\treturn 0;\n}	num =integer\nRead num\nprint (num / 2) + 1 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	create integer n\nread input to n\nprint n / 2 + 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	create int n\nread n\nprint n/2 +1
const double pi = 2 * acos(0.0);\nconst int maxn = 2e2 + 10;\nint main() {\n\tint n;\n\tcin >> n;\n\tn /= 2;\n\tcout << n + 1 << endl;\n\treturn 0;\n}	pi = const double with pi = 2 * acos of 0.0\nmaxn = const int with maxn = 2e2 + 10\nn = int\nread n\nset n to n / 2\nprint n + 1
int main() {\n\tunsigned long int i, j, n, sum = 0;\n\tcin >> n;\n\tsum = n / 2 + 1;\n\tcout << sum << endl;\n}	create unsigned long integer i, j, n, sum with sum = 0\nread n\nset sum to n / 2 + 1\nprint sum print newline
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	integers = n\nread n\noutput n / 2 + 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	create int n\nread n\nprint n divided by 2 +1
long long n, k, s, p;\nint main() {\n\tcin >> n;\n\tcout << n / 2 + 1 << '\n';\n}	n, k, s, p = integers\nread n\nprint n/2 + 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << (n / 2) + 1 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint (n / 2) + 1 and a new line
int main() {\n\tint n, m;\n\tcin >> n;\n\tm = n / 2;\n\tcout << m + 1 << endl;\n\treturn 0;\n}	create integers n and m\nread n\nset m to n divided by 2\nprint m +1
int n;\nint main() {\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	integers = n\nread n\noutput n / 2 + 1
int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	integers = n\nread n\nif n is 1 then do the following\noutput 1\nelse\noutput n / 2 + 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	let n be a integer\nread n\nprint n / 2 + 1 and newline
int main() {\n\tlong long n, ans = 2;\n\tcin >> n;\n\tif (n == 1) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tif (n == 2 || n == 3) {\n\t\tcout << 2 << endl;\n\t\treturn 0;\n\t}\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	n, ans = long long with ans = 2\nread n\nif n is 1\nprint 1\nif n is 2 or n is 3\nprint 2\nprint n / 2 + 1
const double PI = 2.0 * acos(0.0);\nconst int MOD = 1e9 + 7;\nconst int oo = 2 * MOD + 1e3;\nlong long gcd(long long a, long long b) {\n\treturn !b ? a : gcd(b, a % b);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << '\n';\n\treturn 0;\n}	declare constant double PI to 2 times the arccosine of 0\ndeclare constant int MOD to be 1e9 + 7\ndeclare constant int oo to be 2 * MOD plus 1e3\ndeclare function long long gcd of long long a, long long b\nif not b, return a, and if b, return gcd of b and a mod b\ndeclare int n\ninput n\noutput n over 1 plus 1 and a newline
const double PI = acos(-1.0);\nconst double eps = 1e-6;\nconst int INF = 0x3f3f3f3f;\nconst int maxn = 100;\nint T, n, m;\nint main() {\n\twhile (cin >> n) { cout << n / 2 + 1 << endl; }\n\treturn 0;\n}	PI = const double with PI = acos of -1.0\neps = const double with eps = 1e-6\nINF = const int with INF = 0x3f3f3f3f\nmaxn = const int with maxn = 100\nT, n, m = int\nloop while reading n print n / 2 + 1
int main() {\n\tlong long int n;\n\tcin >> n;\n\tcout << (n / 2 + 1) << endl;\n\treturn 0;\n}	integers = long int n\nread n\noutput (n / 2 + 1)
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint n / 2 + 1 and a new line
const int inf = 205;\nint a[inf];\nint b[inf];\nint main() {\n\tint m, n, k, t, x;\n\twhile (cin >> n) { cout << n / 2 + 1 << endl; }\n\treturn 0;\n}	set inf = 205\nlet a[inf] be int array\ncreate int array b[inf]\ncreate int m, n, k, t, x\nwhile read n, print n/2 +1
long long n, m, a, b, x, ff = 2e7 + 1, l, r, cnt, ans;\nvector<long long> v, f, res;\nstring s1, s2;\nlong long used[1001];\nint main() {\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n}	set long long n, m, a, b, x, ff to 2e7 + 1, l, r, cnt, ans\nmake a vector using long long integer out of v,f,and res\ns1, s2 = string\nused array of 1001 = long long integers\nread n\noutput n / 2 + 1
int main() {\n\tint n, k;\n\tcin >> n;\n\tk = n / 2;\n\tk++;\n\tcout << k << endl;\n\treturn 0;\n}	n, k =integers\nRead n\nset k to n / 2\nincrement k\nprint k and a new line
long long n;\nint main() {\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n}	n = long long integers\nread n\noutput n / 2 + 1
int main() {\n\tint a;\n\twhile (cin >> a) { cout << (a / 2) + 1 << endl; }\n\treturn 0;\n}	integers = a\nwhile input of a output (a / 2) + 1
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n}	n =integer\nRead n\nprint n / 2 + 1 and a new line
int main() {\n\tint n, b;\n\tcin >> n;\n\tb = n / 2 + 1;\n\tcout << b << endl;\n\treturn 0;\n}	n, b =integers\nRead n\nset b to n / 2 + 1\nprint b and a new line
int n;\nint main() {\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	n = integer\nRead n\nprint n / 2 + 1 and a new line
int main() {\n\tlong long n, ans;\n\twhile (cin >> n) {\n\t\tans = n / 2 + 1;\n\t\tcout << ans << endl;\n\t}\n}	n, ans =integers\nwhile reading values n\nset ans to n / 2 + 1\nprint ans and a new line
"int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << n / 2 + 1 << ""\n"";\n}"	"create long long n\nread n\nprint n / 2 + 1 print ""\n"""
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	integers = n\nread n\noutput n / 2 + 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << (n / 2) + 1 << endl;\n}	n =integer\nRead n\nprint (n / 2) + 1 and a new line
long long n;\nint main() {\n\twhile (cin >> n) {\n\t\tint m, ans;\n\t\tm = n / 2;\n\t\tans = m + 1;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	= long long integers\nread n\nintegers = m,ans\nset m to n / 2\nset ans to m + 1\noutput ans
int main() {\n\tint n;\n\twhile (cin >> n) { cout << n / 2 + 1 << endl; }\n\treturn 0;\n}	create integer n\nread n and print n / 2 + 1 in a loop
int N;\nint main() {\n\tcin >> N;\n\tcout << N / 2 + 1 << endl;\n\treturn 0;\n}	N = integer\nRead N\nprint N / 2 + 1 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tcout << (n + 2) / 2 << endl;\n}	declare integer n\nread from the input to n\nprint (n + 2) / 2
int main() {\n\tint num;\n\tcin >> num;\n\tcout << num / 2 + 1 << endl;\n\treturn 0;\n}	num =integer\nRead num\nprint num / 2 + 1 and a new line
int main() {\n\tint n, ans = 0;\n\twhile (cin >> n) { cout << n / 2 + 1 << endl; }\n}	declare integers n and ans with ans = 0\nread n and keep looping, printing n / 2 + 1 on each iteration
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << '\n';\n}	create integer n\nread n\nprint n / 2 + 1 print '\n'
int dp[5000][5];\nint s[5000], c[5000];\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	declare 2d int array dp with size 5000 by 5\ndeclare integer arrays s and c with size 5000\ncreate int n\nread input to n\nprint n / 2 + 1
int main() {\n\tlong long n, ans = 2;\n\tcin >> n;\n\tif (n == 1) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tif (n == 2 || n == 3) {\n\t\tcout << 2 << endl;\n\t\treturn 0;\n\t}\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	declare long longs n and ans where ans = 2\nread from the input to n\nif n = 1\nprint 1\nif n is 2 or n is 3\nprint 2\nprint n / 2 + 1
int main() {\n\tint n, count = 0;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	declare an uninitialized integer n and initialize integer count to zero\nread n\nprint the value of n with one added after being divided by two and a newline
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n / 2 + 1 << endl;\n\treturn 0;\n}	n =integer\nRead n\nprint n / 2 + 1 and a new line
"int main() {\n\tlong long l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (long long i = x; i <= y; i++) {\n\t\tif (i * k >= l && i * k <= r) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	l, r, x, y, k = long long\nread l, r, x, y, k\nfor long long i = x to y inclusive\nif i*k >= l and di* k < = r\nprint YES\nprint NO
"int main() {\n\tlong long z, x, c, v, b;\n\tcin >> z >> x >> c >> v >> b;\n\tbool cek = false;\n\tfor (long long q = c; q <= v; q++) {\n\t\tlong long asd = q * b;\n\t\tif (asd >= z && asd <= x) cek = true;\n\t}\n\tif (cek == true)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"declare long long variables z, x, c, v and b\nread standard input to z, x, c, v and b\ncreate new boolean cek with value false\nin a for loop, change q from c to v inclusive\ndeclare long long variable asd = q * b\nif asd >= z and asd <= x, assign the new value = true to cek\nif cek = true\nprint ""YES""\nelse\nprint ""NO"" to the standard output"
"int main() {\n\tlong long int l, r, x, y, k, flag = 0;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (int j = x; j <= y; j++) {\n\t\tif ((k * j) >= l && (k * j) <= r) { flag = 1; }\n\t}\n\tif (flag) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	l, r, x, y, k, flag = long long integers with flag = 0\nread l, r, x, y, k\nfor j = x to y\nif ((k * j) >= l and (k * j) <= r), flag = 1\nif (flag)\nprint YES\nelse\nprint NO
"int main() {\n\tlong long l, r, x, y, k, i, j, c = 0;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (j = x; j <= y; j++) {\n\t\tif (k * j <= r && k * j >= l) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tc = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (c == 0) { cout << ""NO"" << endl; }\n\treturn 0;\n}"	create long long l, r, x, y, k, i, j, c, c=0\nread l, r, x, y, k\nfor j=x to y inclusive\nif k * j <= r and k * j >= l\nprint YES\nc=1\nbreak\nif c=0, print NO
"int main() {\n\tlong long int l, r, x, y, k;\n\tbool exist = false;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (int i = x; i <= y; i++) {\n\t\tif ((i * k) <= r and (i * k) >= l) {\n\t\t\texist = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (exist)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	let l, r, x, y, and k long long ints\nlet exist a bool with value false\nread l, r, x, y, and k\nfor i from x to y\nif i * k at most r and i * k at least l\nset exist to true\nleave loop\nif exist\nprint YES\notherwise\nprint NO
"long long l, r, x, y, k;\nint main() {\n\tcin >> l >> r >> x >> y >> k;\n\tlong long i;\n\tint ok = 0;\n\tfor (i = x; i <= y; i++)\n\t\tif (l <= i * k && r >= i * k) ok = 1;\n\tif (ok)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let l, r, x, y, k be long integers\nread l, r, x, y, k\nlet i be a long integer\nlet ok be an integer which equals 0\nfor i = x to y inclusive\nif l <= i * k and r >= i * k, ok = 1\nif ok is true\nprint YES and newline\nelse do the following\nprint NO and newline
"int main() {\n\tlong long l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (int i = x; i <= y; i++) {\n\t\tif (k * i >= l && k * i <= r) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tgoto end;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\nend:;\n\treturn 0;\n}"	l,r,x,y,k=long long\nread l,r,x,y,k\nfor i=x to y inclusive\nif k*i>=l and k*i<=r\nprint YES\ngoto end\nprint NO\nlabel end
"int main() {\n\tint l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (int i = l, j = x; i <= r && j <= y;) {\n\t\tif (i / j == k && i % j == 0) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t} else if (i / j >= k) {\n\t\t\tj++;\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let l, r, x, y, k be integers\nread l, r, x, y, k\nfor integer i is equal to l, j is equal to x, i <= r and j <= y\nif i / j is equal to k and i modulo j is equal to 0\nprint YES and newline\nelse if i / j >= k\nincrement j by 1\nelse do the following\nincrement i by 1\nprint NO and newline
"int main() {\n\tdouble l, r, x, y;\n\tdouble k;\n\tbool flag = false;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (double i = x; i <= y; i++) {\n\t\tif (k * i <= r && k * i >= l) flag = true;\n\t}\n\tif (flag)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let l, r, x, and y be doubles\nlet k be a double\nlet flag be a boolean, set flag to false\nread in l, r, x, y, and k\nfor i = 0 iterate until i <= y\nif k * i <= r and k * i >= l, set flag to true\nif flag is true\nprint YES\nor else\nprint NO
"int main() {\n\tlong long l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tint flag = 0;\n\tfor (int i = x; i <= y; i++) {\n\t\tif (i * k >= l && i * k <= r) {\n\t\t\tflag = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (flag)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	l, r, x, y, k = long long\nread l, r, x, y, k\nflag = 0 = int\nfor i = x to y inclusve\nif i * k >= 1 and i * k <= r\nset flag to 1\nexit loop\nif flag\nprint YES\nelse\nprint NO
"int main() {\n\tlong long int l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tbool found = false;\n\tfor (long long int b = x; b <= y; ++b) {\n\t\tlong long int a = k * b;\n\t\tif (a >= l && a <= r) {\n\t\t\tfound = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (found) {\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\t} else {\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\t}\n\treturn 0;\n}"	create long long int l, r, x, y, k\nread l, r, x, y, k\nfound = false\nfor b=x to y inclusive\nset a = k*b\nif a >= 1 and a <= r\nset found to true\nbreak\nif found different from 0\nprint YES\nprint a newline\nelse\nprint NO\nprint a newline
"int main() {\n\tlong long int l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (int i = x; i <= y; i++) {\n\t\tif ((i * k) >= l && (i * k) <= r) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	l, r, x, y, k = long long int\nread l, r, x, y, k\nfor i = x to i <= y\nif i*k >= 1 and i*k <= r\nprint YES\nprint NO
"const int maxn = 15;\nconst int inf = 0x3f3f3f3f;\nconst double eps = 1e-10;\nint main() {\n\tdouble l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tif (r < k * x || l > k * y)\n\t\tcout << ""NO"" << endl;\n\telse {\n\t\tfor (long long i = x; i <= y; i++) {\n\t\t\tif (i * k >= l && i * k <= r) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create new constant integer maxn = 15\ndeclare new cons integer called inf = 0x3f3f3f3f\ndeclare new constant double eps with value 1e-10\ndeclare doubles l, r, x, y and k\nread standard input to l, r, x, y and k\nif r < k * x or l > k * y\nprint ""NO""\nelse\nstart for loop from i = x to y inclusive incrementing i\nif i * k >= l and i * k <= r\nprint ""YES"" to the standard output\nprint ""NO"""
"const long long int maxn = 2e5 + 3;\nint main() {\n\tlong long int l, r, x, y, k, t = 0;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (long long int i = x; i <= y; i++) {\n\t\tif (i * k >= l && i * k <= r) {\n\t\t\tt = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (t)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	let maxn a constant long long int with value 2e5 + 3\nlet l, r, x, y, k, t long long ints with t = 0\nread l, r, x, y, and k\nfor long long int i from x to y\nif i * k at least l and i * k at most r\nset t to 1\nleave loop\nif t\nprint YES\notherwise\nprint NO
"int main() {\n\tlong long l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tif (l > k * y || r < k * x) {\n\t\tcout << ""NO"" << endl;\n\t\treturn 0;\n\t}\n\tfor (long long i = l; i <= r; i++) {\n\t\tfor (long long j = x; j <= y; j++) {\n\t\t\tif (i > k * y || i < k * x)\n\t\t\t\tbreak;\n\t\t\telse if (i == k * j) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare long longs l, r, x, y, k\nread l, r, x, y, k\nif l is greater than k * y or r is less than k * x\nprint ""NO"", newline\nfor i = l to r inclusive\nfor j = x to y inclusive\nif i is greater than k * y or i is less than k * x\nend loop\nelse if i is k * j\nprint ""YES"" and newline\nprint ""NO"" and newline"
"int marked[101];\nint main() {\n\tlong long l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (long long i = x; i <= y; i++) {\n\t\tif (i * k >= l && i * k <= r) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tgoto pause;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\npause:\n\tint pause;\n\tcin >> pause;\n\treturn 0;\n}"	"declare integer array marked with size 101\ndeclare long longs l, r, x, y, k\nread l, r, x, y, k\nfor i = x to y inclusive\nif i * k is greater than or equal to l and i * k is less than or equal to r\nprint ""YES"" and newline\ngo to jump point pause\nprint ""NO"" and newline\nmark jump point pause\ndeclare integer pause\nread pause"
"int main() {\n\tfloat a, s, d, f, g;\n\tint i, flag = 0;\n\tcin >> a >> s >> d >> f >> g;\n\tfor (i = d; i <= f; i++)\n\t\tif (i * g <= s && g * i >= a) {\n\t\t\tflag = 1;\n\t\t\tbreak;\n\t\t}\n\tif (flag)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create float a, s, d, f, g\ncreate int i and flag, set flag to 0\nread a, s, d, f, g\nfor i=d to f inclusive\nif i*g <= s and g*i >= a\nflag=1\nbreak\nif flag different from 0\nprint YES\nelse\nprint NO and a newline
"int main() {\n\tlong long int l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (long long i = x; i <= y; i++) {\n\t\tif (i * k >= l && i * k <= r) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	l, r, x, y, k =integers\nRead l, r, x, y, k\nfor i = x to y exclusive\nif i * k is greater than or equal to l an i * k is less than or equal to r\nprint YES and a new line\nprint NO and a new line
"int main() {\n\tlong long l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\twhile (l <= r && x <= y) {\n\t\tif (l / x < k)\n\t\t\tl++;\n\t\telse if (l / float(x) == k) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t} else\n\t\t\tx++;\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create long long l, r, x, y, k\nread l, r, x, y, k\nwhile l <= r and x <= y\nif l / x < k\nincrement l\nelse if l/x=k\nprint YES\nelse\nincrement x\nprint NO and a newline
"const int inf = 0x3f3f3f3f;\nlong int l, r, x, y, k;\nbool find(long int start, long int end) {\n\tlong int mid = (start + end) / 2;\n\tif (start + 1 == end) return false;\n\tif (mid * k > r) {\n\t\tif (find(start, mid))\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t} else if (mid * k < l) {\n\t\tif (find(mid, end))\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t} else\n\t\treturn true;\n}\nint main() {\n\tlong long int a, b, c, d, e;\n\tcin >> a >> b >> c >> d >> e;\n\tfor (int i = c; i <= d; i++) {\n\t\tlong long num = i * e;\n\t\tif (num >= a && num <= b) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t} else if (num > b) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n\treturn 0;\n}"	"declare constant integer variable inf = 0x3f3f3f3f\ndeclare long ints l, r, x, y and k\nbool function find with long int arguments start and end\ncreate new long integer variable mid = (start + end) / 2\nreturn false if start + 1 is equal to end\nif mid * k is greater than r\nif find(start,mid) returned true\nreturn true\nelse\nreturn false\nelse if mid * k is less than l\nif find(mid,end) returned true\nreturn true\nelse\nreturn false\nelse\nreturn true\ncreate long long ints a, b, c, d and e\nread input to a, b, c, d and e\nfor i = c to d inclusive incrementing i\ndeclare new long long num with value i*e\nif num >= a and num <= b\nprint ""YES""\nelse if num is greater than b\nbreak\nprint ""NO"""
"int main() {\n\tlong long l, r, x, y, k;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (int b = x; b <= y; b++) {\n\t\tlong long a = k * b;\n\t\tif (a >= l && a <= r) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create long long l, r, x, y, k\nread l, r, x, y, k\nfor b=x to y inclusive\nset a to k*b\nif a>=1 and a<=r\nprint YES\nprint NO
"int main() {\n\tint l, r, x, y;\n\tfloat k;\n\tint flag = 0;\n\tcin >> l >> r >> x >> y >> k;\n\tfor (int i = x; i <= y; i++) {\n\t\tif (l <= k * i && k * i <= r) { flag = 1; }\n\t}\n\tif (flag)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	l,r,x,y=int\nk=float\nflag=0\nread l,r,x,y,k\nfor i=x to y inclusive\nif l<=k*i and k*i>=r flag=1\nif flag\nprint YES\nelse\nprint NO
int main() {\n\tint n, k;\n\twhile (cin >> n >> k) {\n\t\tint a = n * 2 / k + (n * 2 % k == 0 ? 0 : 1);\n\t\tint b = n * 5 / k + (n * 5 % k == 0 ? 0 : 1);\n\t\tint c = n * 8 / k + (n * 8 % k == 0 ? 0 : 1);\n\t\tcout << a + b + c << endl;\n\t}\n\treturn 0;\n}	create ints n and k\nread n and k and while they're truthy\ncreate int a = n * 2 / k + (n * 2 % k == 0 ? 0 : 1)\nmake integer b = n * 5 / k + (n * 5 % k == 0 ? 0 : 1)\nlet int c = n * 8 / k + (n * 8 % k == 0 ? 0 : 1)\nshow the result of a + b + c
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint red = n * 2 / k;\n\tint green = n * 5 / k;\n\tint blue = n * 8 / k;\n\tif (red < n * 2.0 / k) { red = red + 1; }\n\tif (green < n * 5.0 / k) { green = green + 1; }\n\tif (blue < n * 8.0 / k) { blue += 1; }\n\tcout << red + green + blue << endl;\n\treturn 0;\n}	make ints n and k\nread n and k\ncreate integer red = n * 2 / k\nmake int green = n * 5 / k\nlet int blue = n * 8 / k\nif red is less than n * 2.0 / k, set red to red + 1\nif green is less than n * 5.0 / k, add 1 to green\nif blue is less than n * 8.0 / k, increase blue by 1\nprint the result of red + green + blue
long long n, k;\nint main() {\n\tcin >> n >> k;\n\tlong long ans = 0LL;\n\tans = (n * 2LL) / k + (n * 2LL % k != 0);\n\tans += (n * 5LL) / k + (n * 5LL % k != 0);\n\tans += (n * 8LL) / k + (n * 8LL % k != 0);\n\tcout << ans << '\n';\n\treturn 0;\n}	let n , k be long integers\nread n , k\nlet ans be a long integer with ans = 0LL\nans is equal to (n * 2LL) / k + (n * 2LL modulo k is not equal to 0)\nincrement ans by (n * 5LL) / k + (n * 5LL modulo k is not equal to 0)\nincrement ans by (n * 8LL) / k + (n * 8LL modulo k is not equal to 0)\nprint ans and newline
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint sum = 0;\n\tif (n * 2 % k == 0) {\n\t\tsum += n * 2 / k;\n\t} else {\n\t\tsum += n * 2 / k + 1;\n\t}\n\tif (n * 5 % k == 0) {\n\t\tsum += n * 5 / k;\n\t} else {\n\t\tsum += n * 5 / k + 1;\n\t}\n\tif (n * 8 % k == 0) {\n\t\tsum += n * 8 / k;\n\t} else {\n\t\tsum += n * 8 / k + 1;\n\t}\n\tcout << sum << endl;\n}	n, k =integers\nRead n and k\nsum = integer with 0\nif n * 2 modulo k is 0\nset sum to sum + n * 2 / k\nelse do the following\nset sum to sum + n * 2 / k + 1\nif n * 5 modulo k is 0\nset sum to sum + n * 5 / k\nelse do the following\nset sum to sum + n * 5 / k + 1\nif n * 8 modulo k is 0\nset sum to sum + n * 8 / k\nelse do the following\nset sum to sum + n * 8 / k + 1\nprint sum and a new line
int main() {\n\tlong long n, k, red, green, blue, notebooks;\n\tcin >> n >> k;\n\tred = 2 * n;\n\tgreen = 5 * n;\n\tblue = 8 * n;\n\tnotebooks = (red / k) + (green / k) + (blue / k);\n\tif (red % k != 0) { notebooks += 1; }\n\tif (green % k != 0) { notebooks += 1; }\n\tif (blue % k != 0) { notebooks += 1; }\n\tcout << notebooks << endl;\n\treturn 0;\n}	n,k,red,green,blue,notebooks = long long integers\nread n,k\nset red to 2 * n\nset green to 5 * n\nset blue to 8 * n\nset notebooks to (red / k) + (green / k) + (blue / k)\nif red modulo k is not equal to 0 then do the following notebooks += 1\nif green modulo k is not equal to 0 then do the following notebooks += 1\nif blue modulo k is not equal to 0 then do the following notebooks += 1\nwrite notebooks value
int main() {\n\tdouble p, q, lal, sobuj, nil;\n\tcin >> p >> q;\n\tlal = ceil((p * 2) / q);\n\tsobuj = ceil((p * 5) / q);\n\tnil = ceil((p * 8) / q);\n\tint mot = lal + sobuj + nil;\n\tcout << mot << endl;\n}	p, q, lal, sobuj, nil = integers\nread p, q\nlal = ceil((p * 2) / q)\nsobuj = ceil((p * 5) / q)\nnil = ceil((p * 8) / q)\nmot = integer with mot = lal + sobuj + nil\nprint mot
int main() {\n\tint n, k;\n\tint res, cur;\n\tcin >> n >> k;\n\tres = 0;\n\tcur = n * 2;\n\tres += (cur + k - 1) / k;\n\tcur = n * 5;\n\tres += (cur + k - 1) / k;\n\tcur = n * 8;\n\tres += (cur + k - 1) / k;\n\tcout << res << endl;\n}	n, k = int\nres, cur = int\nread n then k\nset res to 0\nset cur to 2 * n\nincrement res by (cur + k - 1) / k\nset cur to n * 5\nincrement res by (cur + k - 1) / k\nset cur to n * 8\nincrement res by (cur + k - 1) / k\nprint res
int divUp(int a, int b) {\n\treturn a / b + (a % b > 0 ? 1 : 0);\n}\nint main() {\n\tint n, k;\n\tcin >> n >> k;\n\tcout << (divUp(2 * n, k) + divUp(5 * n, k) + divUp(8 * n, k)) << endl;\n}	declare integer divUp\nreturn a / b + ( 1 if a % b is greater than 0, else 0)\ndeclare integers n, k\nread n and k\nprint result of run divUp with 2 * n, k as arguments + result of run divUp(5 * n, k) + result of run divUp(8 * n, k), newline
int main() {\n\tdouble n, k;\n\tcin >> n >> k;\n\tlong long red = n * 2, green = n * 5, blue = n * 8;\n\tcout << (long long)(ceil(red / k) + ceil(green / k) + ceil(blue / k)) << endl;\n}	make doubles n and k\nread n and k\ncreate long long ints red = n * 2, green = n * 5, and blue = n * 8\ndisplay (long long)(ceil(red / k) + ceil(green / k) + ceil(blue / k))
const long long inf = 1e16;\nconst long long MAXN = 1e6;\nconst double pi = acos(-1);\nlong long n, k, ans;\nint main() {\n\tcin >> n >> k;\n\tk--;\n\tans += (n * 2 + k) / (k + 1);\n\tans += (n * 5 + k) / (k + 1);\n\tans += (n * 8 + k) / (k + 1);\n\tcout << ans << endl;\n\treturn 0;\n}	create long long constant inf = 1e16\nnew long long constant MAXN with value 1e6\ndeclare new double constant variable pi = acos of -1\ndeclare new long longs n, k and ans\nread from the input to n and k\ndecrement k by one\nchange ans to ans + (n * 2 + k) / (k + 1)\nchange ans to the sum of ans and (n * 5 + k) / (k + 1)\nadd (n * 8 + k) / (k + 1) to ans\nprint ans to the standard output
int main() {\n\tlong long sum = 0, a, b;\n\tcin >> a >> b;\n\tif ((a * 2) % b == 0)\n\t\tsum += (a * 2) / b;\n\telse\n\t\tsum += ((a * 2) / b) + 1;\n\tif ((a * 5) % b == 0)\n\t\tsum += (a * 5) / b;\n\telse\n\t\tsum += ((a * 5) / b) + 1;\n\tif ((a * 8) % b == 0)\n\t\tsum += (a * 8) / b;\n\telse\n\t\tsum += ((a * 8) / b) + 1;\n\tcout << sum << endl;\n\treturn 0;\n}	create long long ints sum = 0, a, and b\nread a and b\nif (a * 2) % b is equal to 0\nadd (a * 2) / b to sum\notherwise\nadd ((a * 2) / b) + 1 to sum\nif (a * 5) % b is equal to 0\nset sum to sum + (a * 5) / b\nelse do\nset sum to sum + ((a * 5) / b) + 1\nif (a * 8) % b is equal to 0\nset sum to sum + (a * 8) / b\nelse do\nset sum to sum + ((a * 8) / b) + 1\nshow sum
int main() {\n\tlong long n, k;\n\twhile (cin >> n >> k) {\n\t\tlong long sum1, sum2, sum3;\n\t\tsum1 = 2 * n / k;\n\t\tif (2 * n % k != 0) { sum1++; }\n\t\tsum2 = 5 * n / k;\n\t\tif (5 * n % k != 0) { sum2++; }\n\t\tsum3 = 8 * n / k;\n\t\tif (8 * n % k != 0) { sum3++; }\n\t\tcout << sum1 + sum2 + sum3 << endl;\n\t}\n\treturn 0;\n}	create long longs n and k\nloop, reading n and k from the input\ndeclare new long longs sum1, sum2 and sum3\nset sum1 to 2 * n / k\nif 2 * n % k != 0, add 1 to sum1\nassign 5 * n / k to sum2\nif 5 * n modulo k is not 0, increment sum2\nchange sum3 to 8 * n / k\nif 8 * n modulo k != 0, increment sum3 by one\nprint sum1 + sum2 + sum3
long n, k, ans;\nlong sheets(long a, long b) {\n\tlong d, m;\n\td = a / b;\n\tm = a % b;\n\tif (m) return (d + 1);\n\treturn d;\n}\nint main() {\n\tcin >> n >> k;\n\tans += sheets(2 * n, k);\n\tans += sheets(5 * n, k);\n\tans += sheets(8 * n, k);\n\tcout << ans << endl;\n\treturn 0;\n}	n, k, ans = long\nin the function sheets that takes long a, b and returns long\nd, m = long\nd = a / b\nm = a modulo b\nif (m), return (d + 1)\nreturn d\nread n, k\nans = ans + sheets(2 * n, k)\nans = ans + sheets(5 * n, k)\nans = ans + sheets(8 * n, k)\nprint ans
int main() {\n\tint n, k, a, b, c, x, y, z, s;\n\tcin >> n >> k;\n\ta = (n * 2);\n\tb = (n * 5);\n\tc = (n * 8);\n\tif (a < k) {\n\t\tx = 1;\n\t} else {\n\t\tif (a % k == 0) {\n\t\t\tx = (a / k);\n\t\t} else {\n\t\t\tx = (a / k) + 1;\n\t\t}\n\t}\n\tif (b < k) {\n\t\ty = 1;\n\t} else {\n\t\tif (b % k == 0) {\n\t\t\ty = (b / k);\n\t\t} else {\n\t\t\ty = (b / k) + 1;\n\t\t}\n\t}\n\tif (c < k) {\n\t\tz = 1;\n\t} else {\n\t\tif (c % k == 0) {\n\t\t\tz = (c / k);\n\t\t} else {\n\t\t\tz = (c / k) + 1;\n\t\t}\n\t}\n\ts = x + y + z;\n\tcout << s << endl;\n\treturn 0;\n}	n, k, a, b, c, x, y, z, s =integers\nRead n and k\nset a to n * 2\nset b to n * 5\nset c to n * 8\nif a is less than k\nset x to 1\nelse do the following\nif a modulo k is 0\nset x to a / k\nelse do the following\nset x to (a / k) + 1\nif b is less than k\nset y to 1\nelse do the following\nif b modulo k is 0\nset y to b / k\nelse do the following\nset y to (b / k) + 1\nif c is less than k\nset z to 1\nelse do the following\nif c modulo k is 0\nset z to c / k\nelse do the following\nset z to (c / k) + 1\nset s to x + y + z\nprint s and a new line
int main() {\n\tint n, k, r;\n\tcin >> n >> k;\n\tr = (int)((2 * n) / k) + (int)((5 * n) / k) + (int)((8 * n) / k);\n\tif ((2 * n) % k != 0) r++;\n\tif ((5 * n) % k != 0) r++;\n\tif ((8 * n) % k != 0) r++;\n\tcout << r << endl;\n\treturn 0;\n}	n, k, r = integer\nread n, k\nr = ((2 * n) / k) + ((5 * n) / k) + ((8 * n) / k)\nif (2 * n) modulo k is not 0, increase r by 1\nif (5 * n) modulo k is not 0, increase r by 1\nif (8 * n) modulo k is not 0, increase r by 1\nprint r
int main() {\n\tint s = 0, n, k;\n\tcin >> n >> k;\n\tif ((8 * n) % k == 0) {\n\t\ts = s + 8 * n / k;\n\t} else {\n\t\ts = s + 8 * n / k + 1;\n\t}\n\tif ((2 * n) % k == 0) {\n\t\ts = s + 2 * n / k;\n\t} else {\n\t\ts = s + 2 * n / k + 1;\n\t}\n\tif ((5 * n) % k == 0) {\n\t\ts = s + 5 * n / k;\n\t} else {\n\t\ts = s + 5 * n / k + 1;\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	s, n and k are integers with s = 0\nread n and k from the user input\nif (8 * n) modulo k = 0\nassign the new value = s + 8 * n / k to s\nelse\nchange s to s + 8 * n / k + 1\nif (2 * n) % k is equal to 0\nassign s + 2 * n / k to s\nelse\nassign s + 2 * n / k + 1 to s\nif (5 * n) modulo k is 0\nassign the new value = s + 5 * n / k to s\nelse\nchange the value of s to s + 5 * n / k + 1\nprint s
int main() {\n\tint n, k;\n\tint ans, asn;\n\tcin >> n >> k;\n\tans = 0;\n\tasn = n * 2;\n\tans += (asn + k - 1) / k;\n\tasn = n * 5;\n\tans += (asn + k - 1) / k;\n\tasn = n * 8;\n\tans += (asn + k - 1) / k;\n\tcout << ans << endl;\n\treturn 0;\n}	n, k =integers\nans, asn = integers\nRead n, k\nset ans to 0\nset asn to n * 2\nset ans to ans + (asn + k - 1) / k\nset asn to n * 5\nset ans to ans + (asn + k - 1) / k\nset asn to n * 8\nset ans to ans + (asn + k - 1) / k\nprint ans and a new line
int main() {\n\tint n, k, red, green, blue;\n\tcin >> n >> k;\n\tred = 2 * n;\n\tgreen = 5 * n;\n\tblue = 8 * n;\n\tif (red % k == 0)\n\t\tred = red / k;\n\telse\n\t\tred = red / k + 1;\n\tif (green % k == 0)\n\t\tgreen = green / k;\n\telse\n\t\tgreen = green / k + 1;\n\tif (blue % k == 0)\n\t\tblue = blue / k;\n\telse\n\t\tblue = blue / k + 1;\n\tcout << red + green + blue << endl;\n\treturn 0;\n}	n, k, red, green, blue =integers\nRead n and k\nset red to 2 * n\nset green to 5 * n\nset blue to 8 * n\nif red modulo k is 0\nset red to red / k\nelse do the following\nset red to red / k + 1\nif green modulo k is 0\nset green to green / k\nelse do the following\nset green to green / k + 1\nif blue modulo k is 0\nset blue to blue / k\nelse do the following\nset blue to blue / k + 1\nprint red + green + blue and a new line
int main() {\n\tint n, k, t, l, m, g;\n\tcin >> n >> k;\n\tif (n * 2 % k == 0) {\n\t\tt = n * 2 / k;\n\t} else {\n\t\tt = n * 2 / k + 1;\n\t}\n\tif (n * 5 % k == 0) {\n\t\tl = n * 5 / k;\n\t} else {\n\t\tl = n * 5 / k + 1;\n\t}\n\tif (n * 8 % k == 0) {\n\t\tm = n * 8 / k;\n\t} else {\n\t\tm = n * 8 / k + 1;\n\t}\n\tg = m + l + t;\n\tcout << g << endl;\n\treturn 0;\n}	n, k, t, l, m, g =integers\nRead n and k\nif n * 2 modulo k is 0\nset t to n * 2 / k\nelse do the following\nset t to n * 2 / k + 1\nif n * 5 modulo k is 0\nset l to n * 5 / k\nelse do the following\nset l to n * 5 / k + 1\nif n * 8 modulo k is 0\nset m to n * 8 / k\nelse do the following\nset m to n * 8 / k + 1\nset g to m + l + t\nprint g and a new line
int main() {\n\tint n, a;\n\tint ans, cnt;\n\tcin >> n >> a;\n\tans = 0;\n\tcnt = n * 2;\n\tans += (cnt + a - 1) / a;\n\tcnt = n * 5;\n\tans += (cnt + a - 1) / a;\n\tcnt = n * 8;\n\tans += (cnt + a - 1) / a;\n\tcout << ans << endl;\n\treturn 0;\n}	create ints n and a\nmake ints ans and cnt\nread n and a\nset ans to 0\nset cnt to n * 2\nset ans to ans + (cnt + a - 1) / a\nset cnt to n * 5\nadd (cnt + a - 1) / a to ans\nset cnt to n * 8\nset ans to ans + (cnt + a - 1) / a\nshow ans
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint red = 0, green = 0, blue = 0;\n\tint bookred = 0, bookgreen = 0, bookblue = 0;\n\tred = n * 2;\n\tgreen = n * 5;\n\tblue = n * 8;\n\tif (red % k == 0) {\n\t\tbookred = red / k;\n\t} else {\n\t\tbookred = red / k + 1;\n\t}\n\tif (blue % k == 0) {\n\t\tbookblue = blue / k;\n\t} else {\n\t\tbookblue = blue / k + 1;\n\t}\n\tif (green % k == 0) {\n\t\tbookgreen = green / k;\n\t} else {\n\t\tbookgreen = green / k + 1;\n\t}\n\tint total = 0;\n\ttotal = bookred + bookblue + bookgreen;\n\tcout << total << endl;\n\treturn 0;\n}	let n, k be integers\nread n, k\nlet red , green , blue be integers with red = 0, green = 0, blue = 0\nlet bookred , bookgreen , bookblue be integers with bookred = 0, bookgreen = 0, bookblue = 0\nred is equal to n * 2\ngreen is equal to n * 5\nblue is equal to n * 8\nif red modulo k is equal to 0\nbookred is equal to red / k\nelse do the following\nbookred is equal to red / k + 1\nif blue modulo k is equal to 0\nbookblue is equal to blue / k\nelse do the following\nbookblue is equal to blue / k + 1\nif green modulo k is equal to 0\nbookgreen is equal to green / k\nelse do the following\nbookgreen is equal to green / k + 1\nlet total be a integer with total is equal to 0\ntotal is equal to bookred + bookblue + bookgreen\nprint total and newline
int Ceil(int n, int k) {\n\treturn (n + k - 1) / k;\n}\nint main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint ans = Ceil(2 * n, k) + Ceil(5 * n, k) + Ceil(8 * n, k);\n\tcout << ans << '\n';\n\treturn 0;\n}	function Ceil with int arguments n and k that returns int\nreturn (n + k - 1) / k\ndeclare new ints n and k\nread input to n and k\nans is a new integer variable = Ceil(2 * n, k) + Ceil(5 * n, k) + Ceil(8 * n, k)\nprint ans and '\n'
int a[1010];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tint i;\n\tfor (i = n - 1; i >= 0; i--) {\n\t\tint b = sqrt(a[i]);\n\t\tif (b * b == a[i])\n\t\t\tcontinue;\n\t\telse\n\t\t\tbreak;\n\t}\n\tcout << a[i] << endl;\n\treturn 0;\n}	a = int array of size 1010\nn = int\nread n\nread n values into a\nsort a from beginning to n\ni = int\nfor i = n - 1 to 0 inclusive decrementing i\nb = int with b = sqrt of a[i]\nif b * b is a[i]\ncontinue\nelse\nbreak\nprint a[i]
int main() {\n\tint n, i, x, maxi = -1000000007, tem, flag;\n\tdouble p;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tflag = 0;\n\t\tcin >> x;\n\t\tif (x < 0) {\n\t\t\tif (x > maxi) maxi = x;\n\t\t\tflag = 1;\n\t\t}\n\t\tif (flag == 1) x = -x;\n\t\tp = sqrt(x * 1.00);\n\t\ttem = p;\n\t\tif (tem != p && flag != 1) {\n\t\t\tif (x > maxi) maxi = x;\n\t\t}\n\t}\n\tcout << maxi << endl;\n\treturn 0;\n}	create integers n, i, x, maxi, tem, flag, with maxi = -1000000007\ncreate double p\nread n\nfor i = 1 to n inclusive\nset flag to 0\nread x\nif x is less than 0\nif x is greater than maxi, set maxi to x\nset flag to 1\nif flag is 1, set x to -x\nset p to square root of ( x * 1.00 )\nset tem to p\nif tem is not p and flag is not 1\nif x is greater than maxi, set maxi to x\nprint maxi print newline
int main() {\n\tint n, a;\n\tcin >> n;\n\tpriority_queue<int> t;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\tint l = sqrt(a);\n\t\tif ((l * l) != a) { t.push(a); }\n\t}\n\tcout << t.top() << endl;\n}	declare integer variables n and a\nread n\ncreate priority_queue of integers t\nfor i from 0 to n exclusive\nread input to a\ndeclare int variable l = square root of a\nif l squared != a, push a into t\nprint top element of t
const int INF = 0x3f3f3f3f;\nint main() {\n\tint i, j, k;\n\tint n, m, t;\n\tint a[1005];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tint x = 0;\n\tfor (i = n - 1; i >= 0; i--)\n\t\tif (a[i] < 0) break;\n\tif (i < 0)\n\t\tx = 0;\n\telse\n\t\tx = i;\n\tfor (i = n - 1; i > x; i--) {\n\t\tif (sqrt(a[i]) - floor(sqrt(a[i])) > 0.000001) {\n\t\t\tcout << a[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (i <= x) { cout << a[x] << endl; }\n}	let INF be a constant integer with INF = 0x3f3f3f3f\nlet i, j, k be integers\nlet n, m, t be integers\na = array of integers of length 1005\nread n\nfor i = 0 to n exclusive , read a[i]\nsort the values a and a + n\nlet x be a integer with x = 0\nfor i is equal to n - 1, i greater than or equal to 0 , decrement i by 1\nif a[i] is less than 0, stop\nif i is less than 0\nthe value of x is equal to 0\nelse do the following\nthe value of x is equal to i\nfor i is equal to n - 1 , i greater than x , decrement i by 1\nif square root of a[i] - floor of square root of a[i] is greater than 0.000001\nprint a[i] and newline\nstop\nif i <= x , print a[x] and newline
int main() {\n\tint n, i, j, x, ans;\n\tvector<int> vec;\n\twhile (cin >> n) {\n\t\tfor (i = 1; i <= n; i++) {\n\t\t\tcin >> x;\n\t\t\tvec.push_back(x);\n\t\t}\n\t\tsort(vec.begin(), vec.end());\n\t\tint flag = 0;\n\t\tfor (i = n - 1; i >= 0; i--) {\n\t\t\tans = sqrt(vec[i]);\n\t\t\tans *= ans;\n\t\t\tif (ans != vec[i]) {\n\t\t\t\tflag = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout << vec[flag] << endl;\n\t}\n\treturn 0;\n}	create integers n, i, j, x, ans\ncreate vector of integers vec\nwhile read n is not 0\nfor i = 0 to n inclusive\nread n\nadd x to the end of vec\nsort vec\nlet flag be an int = 0\nfor i = n - 1 to i 0 inclusive decrement 1\nset ans to the square root of vec[i]\nset ans to ans squared\nif ans is different from vec[i]\nset flag to i\nexit loop\nprint vec[flag] and new line
const int maxn = 1010;\nint n;\nint a[maxn];\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) { cin >> a[i]; }\n\tsort(a, a + n);\n\tfor (int i = n - 1; i >= 0; --i) {\n\t\tif (((int)(sqrt(a[i]))) * ((int)(sqrt(a[i]))) != a[i]) {\n\t\t\tcout << a[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	create const int maxn = 1010\ndeclare int n\ndeclare int array a with size maxn\nread n\nloop i from 0 to n exclusive, read a[i]\nsort a\nfor i from n - 1 to 0 inclusive counting down\nif square root of a[i] * square root of a[i] != a[i]\nprint a[i]\nstop the loop
int main() {\n\tint n, i, x, ans = -1000001;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tif ((int)pow((int)sqrt(x), 2) != x && x > ans) ans = x;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n, i, x = integers, ans = integer = -1000001\nread n\nfor i = 0 to n exclusive\nread x\nif the square root of x to the power of 2 is not x and x > ans, then ans = x\nprint ans
const int maxn = 1e3 + 5;\nint arr[maxn];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (arr[i] < 0) {\n\t\t\tcout << arr[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tint temp = arr[i];\n\t\tif (floor(sqrt(temp)) == sqrt(temp))\n\t\t\tcontinue;\n\t\telse {\n\t\t\tcout << arr[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}	maxn = const int with maxn = 1e3 + 5\narr = int array of size maxn\nn = int\nread n\nread n values into arr\nsort arr from beginning to n\nfor i = n - 1 to 0 inclusive decrementing i\nif arr[i] is less than 0\nprint arr[i]\ntemp = int with temp = arr[i]\nif floor of sqrt of temp is sqrt of temp\ncontinue\nelse\nprint arr[i]
int t;\nint a[1005];\nbool cmp(int a, int b) {\n\treturn a > b;\n}\nint main() {\n\tcin >> t;\n\tfor (int i = 1; i <= t; i++) { cin >> a[i]; }\n\tsort(a + 1, a + 1 + t, cmp);\n\tfor (int i = 1; i <= t; i++) {\n\t\tif ((int)sqrt(a[i]) * (int)sqrt(a[i]) != a[i]) {\n\t\t\tcout << a[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	let t be integer\nlet a be integer array with length 1005\nfunction cmp with integer argument a and b returns boolean\nreturn a greater than b\nread t\nfor i =1 to t inclusive read i element of array a\ncall sort function on a +1, a + 1 + t, and cmp\nfor i = 1 to t inclusive\nif ((int)sqrt(a[i]) * (int)sqrt(a[i]) is not equal to i element of array a\nprint i element of array a\nbreak
bool cmp(const int &A, const int &B) {\n\treturn A > B;\n}\nint num[1005];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> num[i]; }\n\tsort(num, num + n, cmp);\n\tint i = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tint p = sqrt(num[i]);\n\t\tif (p * p != num[i]) break;\n\t}\n\tcout << num[i] << endl;\n\treturn 0;\n}	define Boolean function cmp, consuming pass-by-reference int constants A and B\nreturn A > B\ndefine 1,005-element int array num\ndefine int n\nread n\nfor i from 0 to n (exclusive) by 1, read num[i]\nsort(num, num + n, cmp)\ndefine int i and set it to 0\nfor i from 0 to n (exclusive) by 1\ndefine int p, set to squareroot of num[i]\nif p ^ 2 isn't num[i], then break\nprint num[i] and newline
int t;\nint a[1005];\nbool cmp(int a, int b) {\n\treturn a > b;\n}\nint main() {\n\tcin >> t;\n\tfor (int i = 1; i <= t; i++) { cin >> a[i]; }\n\tsort(a + 1, a + 1 + t, cmp);\n\tfor (int i = 1; i <= t; i++) {\n\t\tif ((int)sqrt(a[i]) * (int)sqrt(a[i]) != a[i]) {\n\t\t\tcout << a[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	create integer t\ncreate integer array a with size 1005\ndeclare cmp with integers a, b as arguments, returning boolean\nreturn a is greater than b from function\nread t\nfor i = 1 to t inclusive, read a[i]\nsort elements from a + 1 to a + 1 + t using cmp to compare\nfor i = 1 to t inclusive\nif integer casted square root of a[i] * integer casted square root of a[i] is not a[i]\nprint a[i] print newline\nbreak loop
int nums[1001];\nbool compare_int(int &lhs, int &rhs) {\n\treturn lhs > rhs;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tint max_num = 0;\n\tfor (int currnum = 0; currnum < n; ++currnum) { cin >> nums[currnum]; }\n\tsort(nums, nums + n, compare_int);\n\tint non_perfect = 0;\n\tfor (int currnum = 0; currnum < n; ++currnum) {\n\t\tint sqrtroot = sqrt(nums[currnum]);\n\t\tif (sqrtroot * sqrtroot != nums[currnum]) {\n\t\t\tnon_perfect = nums[currnum];\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << non_perfect << endl;\n\treturn 0;\n}	create integer array nums with size 1001\ndeclare compare_int with integer addresses lhs, rhs as arguments, returning boolean\nreturn lhs is greater than rhs from function\ncreate integer n\nread n\ncreate integer max_num with max_num = 0\nfor currnum = 0 to n exclusive, read nums[currnum]\nsort elements from nums to nums + n using compare_int to compare\ncreate integer non_perfect with non_perfect = 0\nfor currnum = 0 to n exclusive\ncreate integer sqrtroot with sqrtroot = square root of nums[currnum]\nif sqrtroot * sqrtroot is not nums[currnum]\nset non_perfect to nums[currnum]\nbreak loop\nprint non_perfect print newline
int check(int x) {\n\tif (x < 0) return 1;\n\tint t = sqrt(x);\n\tif (t * t == x)\n\t\treturn 0;\n\telse\n\t\treturn 1;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tint a[1005];\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (check(a[i])) {\n\t\t\tcout << a[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n}	declare check taking in integer x and returning integer\nif x is less than 0, return 1\ncreate integer t = sqrt(x)\nif t * t is equal to x\nelse\nreturn 1\ncreate integer n\nread n\ncreate integer a[1005]\nfor i = 0 to n exclusive, read a[i]\nsort array a\nfor i = n - 1 to 0\nif check(a[i]) returns truthy\nprint a[i]\nbreak loop
int main() {\n\tint n;\n\tcin >> n;\n\tint a[1005];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tint t = sqrt(a[i]);\n\t\tif (t * t != a[i]) {\n\t\t\tcout << a[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n}	n =integer\nRead n\na = array of 1005 integers\nRead n values into array a\nsort array elements of a in ascending order\nfor i = n-1 to 0 exclusive\nt = integer, set to square root of a[i]\nif t * t is not a[i]\nprint a[i] and a new line
int a[2000005];\nint main() {\n\tint n, tmp;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> tmp;\n\t\ta[tmp + 1000000]++;\n\t}\n\tint ans = 0;\n\tfor (int i = 0; i <= 1000; i++) { a[i * i + 1000000] = 0; }\n\tfor (int i = 0; i < 2000005; i++)\n\t\tif (a[i]) { ans = i - 1000000; }\n\tcout << ans << endl;\n\treturn 0;\n}	a = array of integers of length 2000005\nlet n, tmp be integers\nread n\nfor i = 0 to n exclusive\nread tmp\nincrement a[tmp + 1000000] by 1\nlet ans be integer with ans = 0\nfor i = 0 to 1000 inclusive, the value of a[i * i + 1000000] is equal to 0\nfor i = 0 to 2000005 exclusive\nif a[i] is true , the value of ans = i - 1000000\nprint ans and newline
int sq[1001] = {\n\t0,\n};\nint check(int x) {\n\tif (!binary_search(sq, sq + 1001, x))\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i <= 1000; i++) { sq[i] = i * i; }\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tint m = INT_MIN;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] > m && check(a[i])) { m = a[i]; }\n\t}\n\tcout << m << endl;\n}	create integer array sq with size 1001 with sq =\n0\nend statement\ndeclare check with integer x as argument, returning integer\nif not element between sq and sq + 1001 is x\nreturn 1 from function\nelse\ncreate integer n\nread n\ncreate integer array a with size n\nfor i = 0 to 1000 inclusive, set sq[i] to i * i\nfor i = 0 to n exclusive, read a[i]\ncreate integer m with m = INT_MIN\nfor i = 0 to n exclusive\nif a[i] is greater than m and result of run check with a[i] as argument is true, set m to a[i]\nprint m print newline
int main() {\n\tint a[10000];\n\tfor (int i = 0; i < 1001; i++) { a[i] = i * i; }\n\tint b, c[10000];\n\tcin >> b;\n\tfor (int i = 0; i < b; i++) { cin >> c[i]; }\n\tsort(c, c + b);\n\tfor (int i = b - 1; i > -1; i--) {\n\t\tfor (int j = 0; j < 1001; j++) {\n\t\t\tif (c[i] == a[j]) { goto momo; }\n\t\t}\n\t\tcout << c[i] << endl;\n\t\treturn 0;\n\tmomo:;\n\t}\n}	create integer array a with size 10000\nfor i = 0 to 1001 exclusive, set a[i] to i * i\ncreate integer b create integer array c with size 10000\nread b\nfor i = 0 to b exclusive, read c[i]\nsort elements form c to c + b\nfor i = b - 1 to -1 exclusive, decrementing i\nfor j = 0 to 1001 exclusive\nif c[i] is a[j], go to jump point momo\nprint c[i] print newline\nmark jump point momo
int a[1005];\nmap<int, int> mp;\nconst double eps = 1e-8;\nvoid init() {\n\tfor (int i = 0; i <= 1000; i++) { mp[i * i] = 1; }\n}\nint main() {\n\tinit();\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (!mp[a[i]]) {\n\t\t\tcout << a[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n}	create integer array a with size 1005\ncreate map mp from integer to integer\ncreate constant double eps with eps = 1e-8\ndeclare init with no arguments, returning void\nfor i = 0 to 1000 inclusive, set mp[i*i] to 1\nrun init\ncreate integer n\nread n\nfor i = 0 to n exclusive, read a[i]\nsort elements from a to a + n\nfor i = n - 1 to 0 inclusive, decrementing i\nif not mp[a[i]]\nprint a[i] print newline
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> arr;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint temp;\n\t\tcin >> temp;\n\t\tarr.push_back(temp);\n\t}\n\tsort(arr.begin(), arr.end());\n\tfor (int i = n - 1; i >= 0; --i) {\n\t\tint s = sqrt(arr[i]);\n\t\tif (s * s != arr[i]) {\n\t\t\tcout << arr[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n}	n=int\nread n\narr=vector of int\nfor i=0 to n exclusive\ntemp=int\nread temp\nadd temp at end of arr\nsort arr\nfor i=n-1 down to 0 inclusive\ns=sqrt(arr[i])\nif s^2 not equal arr[i]\nprint arr[i]\nbreak
"int main() {\n\tint A, B, C, D;\n\tcin >> A >> B >> C >> D;\n\tif ((A * 2 + 3 > D && D + 1 >= A) || (B * 2 + 3 > C && C + 1 >= B)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	create int A, B, C, D\nread A, B, C, D\nif (A * 2 + 3 > D and D + 1 >= A) or (B * 2 + 3 > C and C + 1 >= B)\nprint YES\notherwise\nprint NO and a new line
"int main() {\n\tint A, B, C, D;\n\tcin >> A >> B >> C >> D;\n\tif ((A * 2 + 3 > D && D + 1 >= A) || (B * 2 + 3 > C && C + 1 >= B)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	let A, B, C, D be integers\nread A, B, C, D\nif ((A * 2 + 3 is greater than D and D + 1 is greater than or equal to A) or (B * 2 + 3 is greater than C and C + 1 is greater than or equal to B))\nprint YES and newline\nelse do the following\nprint NO and newline
"bool solve(int a, int b) {\n\treturn a <= b + 1 && b <= (a + 1) * 2;\n}\nint main() {\n\tint la, ra, lb, rb;\n\tcin >> la >> ra >> lb >> rb;\n\tif (solve(la, rb) || solve(ra, lb))\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	let boolean solve(int a, int b) be a function which accepts integers a and b and returns integer values\nreturn the value of ( a is less than or equal to b + 1 and b is less than or equal to (a + 1) * 2)\nlet la, ra, lb, rb be integers\nread la, ra, lb, rb\nif (solve(la, rb) or solve(ra, lb))\nprint YES and newline\nelse do the following\nprint NO and newline
"int main() {\n\tint gl, gr, bl, br;\n\tcin >> gl >> gr >> bl >> br;\n\tif (2 * (gl + 1) >= br && gl - 1 <= br || 2 * (gr + 1) >= bl && gr <= bl)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare integers gl, gr, bl and br\nread gl, gr, bl and br\nif 2 * (gl + 1) >= br && gl - 1 <= br || 2 * (gr + 1) >= bl && gr <= bl\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tint a, s, z, x;\n\tcin >> a >> s >> z >> x;\n\tbool cek = false;\n\tif ((x >= (a - 1) && x <= (a * 2) + 2) || (z >= (s - 1) && z <= (s * 2) + 2)) cek = true;\n\tif (cek)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"create integers a, s, z, x\nread a read s read z read x\ncreate boolean cek with cek = false\nif ( x is greater than or equal to a - 1 and x is less than or equal to a * 2 + 2 ) or ( z is greater than or equal to s - 1 and z is less than or equal to s * 2 + 2 ) , set cek to true\nif cek is true\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int l, r, ml, mr;\nbool judge(int g, int b) {\n\tif (b < g - 1)\n\t\treturn false;\n\telse if (b > 2 * g + 2)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nint main() {\n\tcin >> l >> r >> ml >> mr;\n\tif (judge(l, mr) || judge(r, ml))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare integers l, r, ml and mr\njudge is a boolean function with integer arguments g and b\nif b is less than g - 1\nreturn false\nelse if b is greater than 2 * g + 2\nreturn false\nelse\nreturn true\nread l, r, ml and mr\nif judge(l, mr) or judge(r, ml) are true\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tlong long a, b, c, d;\n\twhile (cin >> a >> b >> c >> d) {\n\t\tlong long ck = 0;\n\t\tlong long a1 = a * 2 + 2;\n\t\tlong long a2 = a - 1;\n\t\tif (d >= a2 && d <= a1) ck = 1;\n\t\ta1 = b * 2 + 2;\n\t\ta2 = b - 1;\n\t\tif (c >= a2 && c <= a1) ck = 1;\n\t\tif (ck == 1)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n}"	let a, b, c, d be long integers\nwhile ( read the values a,b,c,d )\nlet ck be a long integer with value as 0\nlet a1 be a long integer with value as a1 is equal to a * 2 + 2\nlet a2 be a long integer with value a2 is equal to a-1\nif (d is greater than or equal to a2 and d is less than or equal to a1) , ck is equal to 1\nlet a1 is equal to ( b * 2 + 2)\nlet a2 is equal to b - 1\nif (c is greater than or equal to a2 and c is less than or equal to a1), ck is equal to 1\nif (ck is equal to 1)\nprint YES and newline\nelse do the following\nprint NO and newline
"int main() {\n\tlong long gl, gr, bl, br;\n\tcin >> gl >> gr >> bl >> br;\n\tif (br >= gl - 1 && br <= 2 * (gl + 1)) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif (bl >= gr - 1 && bl <= 2 * (gr + 1)) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t} else\n\t\tcout << ""NO"" << endl;\n}"	"create long longs gl, gr, bl, br\nread gl read gr read bl read br\nif br is greater than or equal to gl - 1 and br is less than or equal to 2 * ( gl + 1 )\nprint ""YES"" print newline\nif bl is greater than or equal to gr - 1 and bl is less than or equal to 2 * ( gr + 1 )\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int gl, gr, bl, br;\nint main() {\n\tcin >> gl >> gr >> bl >> br;\n\tif (gl - 1 <= br && br <= 2 * gl + 2)\n\t\tcout << ""YES"" << '\n';\n\telse if (gr - 1 <= bl && bl <= 2 * gr + 2)\n\t\tcout << ""YES"" << '\n';\n\telse\n\t\tcout << ""NO"" << '\n';\n\treturn 0;\n}"	"create integers gl, gr, bl, br\nread gl read gr read bl read br\nif gl - 1 is less than or equal to br and br is less than or equal to 2 * gl + 2\nprint ""YES"" print '\n'\nelse if gr - 1 is less than or equal to bl and bl is less than or equal to 2 * gr + 2\nprint ""YES"" print '\n'\nelse\nprint ""NO"" print '\n'"
"int main() {\n\tint A, B, C, D;\n\tcin >> A >> B >> C >> D;\n\tif ((A * 2 + 3 > D && D + 1 >= A) || (B * 2 + 3 > C && C + 1 >= B)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create integers A, B, C, D\nread A read B read C read D\nif ( A * 2 + 3 is greater than D and D + 1 is greater than or equal to A ) or ( B * 2 + 3 is greater than C and C + 1 is greater than or equal to B )\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tint a1, a2, a11, a12, b1, b2, b11, b12;\n\tcin >> b1 >> b2 >> a1 >> a2;\n\tif (a1 % 2 == 0)\n\t\ta11 = a1 / 2 - 1;\n\telse\n\t\ta11 = a1 / 2;\n\tif (a2 % 2 == 0)\n\t\ta12 = a2 / 2 - 1;\n\telse\n\t\ta12 = a2 / 2;\n\tb11 = b1 - 1;\n\tb12 = b2 - 1;\n\tif (b12 <= a1 && a11 <= b2 || a12 <= b1 && b11 <= a2)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create integers a1, a2, a11, a12, b1, b2, b11, b12\nread b1 read b2 read a1 read a2\nif a1 % 2 is 0\nset a11 to a1 / 2 - 1\nelse\nset a11 to a1 / 2\nif a2 % 2 is 0\nset a12 to a2 / 2 - 1\nelse\nset a12 to a2 / 2\nset b11 to b1 - 1\nset b12 to b2 - 1\nif b12 is less than or equal to a1 and a11 is less than or equal to b2 or a12 is less than or equal to b1 and b11 is less than or equal to a2\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int vl, vr, ml, mr;\nbool judge(int g, int b) {\n\tif (b < g - 1)\n\t\treturn false;\n\telse if (b > 2 * g + 2)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nint main() {\n\tcin >> vl >> vr >> ml >> mr;\n\tif (judge(vl, mr) || judge(vr, ml))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create integers vl, vr, ml and mr\nboolean function judge with integer arguments g and b\nif b is less than g - 1\nreturn false\nelse if b is greater than 2 * g + 2\nreturn false\nelse\nreturn true\nread vl, vr, ml and mr\nif either judge(vl, mr) or judge(vr, ml) is true\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tint b, bb, g, gg, yes = 0;\n\tcin >> g >> gg >> b >> bb;\n\tif (g <= bb + 1 && bb <= (g + 1) * 2) { yes = 1; }\n\tif (gg <= b + 1 && b <= (gg + 1) * 2) { yes = 1; }\n\tif (yes) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create integers b, bb, g, gg, yes, with yes = 0\nread g read gg read b read bb\nif g is less than or equal to bb + 1 and bb is less than or equal to (g + 1) * 2, set yes to 1\nif gg is less than or equal to b + 1 and b is less than or equal to (gg+1) * 2, set yes to 1\nif yes is true\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tint A, B, C, D;\n\tcin >> A >> B >> C >> D;\n\tif ((A * 2 + 3 > D && D + 1 >= A) || (B * 2 + 3 > C && C + 1 >= B)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create integers A, B, C, D\nread A read B read C read D\nif (A * 2 + 3 is greater than D and D + 1 is greater than or equal to A ) or ( B * 2 + 3 is greater than C and C + 1 is greater than or equal to B )\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"const int M = 1000 + 5;\nint main() {\n\tint gl, gr;\n\tcin >> gl >> gr;\n\tint bl, br;\n\tcin >> bl >> br;\n\tbool ok = false;\n\tif (gr - 1 <= bl && bl <= 2 * (gr + 1)) { ok = true; }\n\tif (gl - 1 <= br && br <= 2 * (gl + 1)) { ok = true; }\n\tif (ok) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	M = constant integer = 1000 + 5\ncreate int gl, gr\nread gl and gr\nbl, br = integers\nread bl and br\ncreate boolean ok = false\nif gr - 1 is equal to or less than bl and bl is equal to or less than 2 * (gr+1), set ok = true\nif gl - 1 is equal to or less than br and br is equal to or less than 2 * (gl+1), set ok = true\nif ok is true\nprint YES\notherwise\nprint NO
"int vl, vr, ml, mr;\nbool judge(int g, int b) {\n\tif (b < g - 1)\n\t\treturn false;\n\telse if (b > 2 * g + 2)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nint main() {\n\tcin >> vl >> vr >> ml >> mr;\n\tif (judge(vl, mr) || judge(vr, ml))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare integers vl, vr, ml and mr\nboolean function judge with integer arguments g and b\nif b is less than g - 1\nreturn false\nelse if b is greater than 2 * g + 2\nreturn false\nelse\nreturn true\nread vl, vr, ml and mr\nif judge(vl, mr) or judge(vr, ml)\nprint ""YES""\nelse\nprint ""NO"""
"bool check(int d, int m) {\n\tif (m <= 2 * (d + 1) && (m >= d - 1)) return 1;\n\treturn 0;\n}\nint main() {\n\tint l1, r1, l2, r2;\n\tcin >> l1 >> r1 >> l2 >> r2;\n\tif (check(l1, r2) || check(r1, l2)) {\n\t\tcout << ""YES\n"";\n\t} else\n\t\tcout << ""NO\n"";\n}"	"declare check with integers d, m as arguments, returning boolean\nif m is less than or equal to 2 * ( d + 1 ) and ( m is greater than or equal to d - 1 ), return 1 from function\ncreate integers l1, r1, l2, r2\nread l1 read r1 read l2 read r2\nif result of run check with l1, r2 as arguments or result of run check with r1, l2 as arguments\nprint ""YES\n""\nelse\nprint ""NO\n"""
"const int INF = 0x3f3f3f3f;\nint main() {\n\tint i, j, k;\n\tint n, m;\n\tint a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tif ((c - (b - 1)) < 5 && c - b + 1 >= 0) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif ((d - (a - 1)) < 5 && d - a + 1 >= 0) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif ((c - (b - 1) * 2) < 5 && c - (b - 1) >= 0) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif ((d - (a - 1) * 2) < 5 && d - (a - 1) >= 0) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let INF be a constant integer with value as INF = 0x3f3f3f3f\nlet i,j,k be integers\nlet n,m be integers\nlet a,b,c,d be integers\nread a,b,c,d\nif ((c - (b - 1)) is less than 5 and c - b + 1 is greater than or equal to 0)\nprint YES and newline\nif ((d - (a - 1)) is less than 5 and d - a + 1 is greater than or equal to 0)\nprint YES and newline\nif ((c - (b - 1) * 2) is less than 5 and c - (b - 1) is greater than or equal to 0)\nprint YES and newline\nif ((d - (a - 1) * 2) is less than 5 and d - (a - 1) is greater than or equal to 0)\nprint YES and newline\nprint NO and newline
"int main() {\n\tint gl, gr, bl, br;\n\tbool verdict;\n\tcin >> gl >> gr >> bl >> br;\n\tif (2 * (gl + 1) >= br && gl - 1 <= br || 2 * (gr + 1) >= bl && gr <= bl)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create integers gl, gr, bl, br\ncreate boolean verdict\nread gl read gr read bl read br\nif 2 * ( gl + 1 ) is greater than or equal to br and gl - 1 is less than or equal to br or 2 * ( gr + 1 ) is greater than or equal to bl and gr is less than or equal to bl\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int pan(int x, int y) {\n\tif (x == 0) return y < 2;\n\tif (y == 0) return x < 3;\n\tif (x == y) return 1;\n\tif (x < y) {\n\t\tif (y - x <= 1) return 1;\n\t\treturn 0;\n\t} else {\n\t\tif (x / (y + 1) <= 2) {\n\t\t\tif (x / (y + 1) == 1) return 1;\n\t\t\tif (x / (y + 1) == 2) {\n\t\t\t\tif (x % (y + 1) < 1) return 1;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\nint main() {\n\tint a, b, x, y;\n\tcin >> a >> b >> x >> y;\n\tif (pan(x, b) || pan(y, a))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"integer function pan with integer arguments x and y\nif x = 0 return true if y < 2 or false otherwise\nif y = 0 return true if x < 3 or false otherwise\nif x = y return 1\nif x is less than y\nif y - x <= 1 return 1\nelse\nif x / (y + 1) <= 2\nif x / (y + 1) = 1 return 1\nif x / (y + 1) = 2\nif x modulo (y + 1) is less than 1 return 1\ndeclare integers a, b, x and y\nread a, b, x and y\nif pan(x, b) or pan(y, a) is not 0\nprint ""YES""\nelse\nprint ""NO"""
"long long fp(long long n, long long p) {\n\tif (p == 0) return 1;\n\tif (p == 1) return n;\n\tlong long res;\n\tres = fp(n, p / 2) % int(1e9 + 7);\n\tres = (res * res) % int(1e9 + 7);\n\tif (p % 2) res = (res * n) % int(1e9 + 7);\n\treturn res % int(1e9 + 7);\n}\nint get(int a, int b) {\n\twhile (b <= 2011) {\n\t\tint dif = 0, t = b, tt = a;\n\t\twhile (a > 0 && dif < 2) {\n\t\t\tif (a % 10 != b % 10) dif++;\n\t\t\ta /= 10, b /= 10;\n\t\t}\n\t\tb = t, a = tt;\n\t\tif (dif < 2) return b;\n\t\tb++;\n\t}\n\treturn 1e5;\n}\nint main() {\n\tint a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tif (a - 2 < d && d < 2 * a + 3 || b - 2 < c && c < 2 * b + 3)\n\t\tcout << ""YES"" << '\n';\n\telse\n\t\tcout << ""NO"" << '\n';\n\treturn 0;\n}"	"function fp with long long arguments n and p that returns long long\nif p is 0, return 1\nif p is 1, return n\ncreate long long res\nres = fp(n, p / 2) % int(1e9 + 7)\nres = (res * res) % int(1e9 + 7)\nif p % 2 > 0, set res = (res * n) % int(1e9 + 7)\nreturn res % int(1e9 + 7)\nfunction get with integer arguments a and b that returns integer\nwhile b <= 2011\ndeclare integer variables dif = 0, t = b and tt = a\nwhile a > 0 and dif < 2\nincrement dif if a % 10 != b % 10\ndivide a and b by 10\nset b = t, a = tt\nreturn bif dif is less than 2\nincrement b\nreturn 1e5\ncreate integers a, b, c and d\nread a, b, c and d\nif a - 2 < d and d < 2 * a + 3 or b - 2 < c and c < 2 * b + 3\nprint ""YES"" and '\n'\nelse\nprint ""NO"" and '\n'"
"int main() {\n\tlong long gl, gr, bl, br;\n\tcin >> gl >> gr >> bl >> br;\n\tif (br >= gl - 1 && br <= 2 * (gl + 1)) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t}\n\tif (bl >= gr - 1 && bl <= 2 * (gr + 1)) {\n\t\tcout << ""YES"" << endl;\n\t\treturn 0;\n\t} else\n\t\tcout << ""NO"" << endl;\n}"	"create long longs gl, gr, bl, br\nread gl read gr read bl read br\nif br is greater than or equal to gl - 1 and br is less than or equal to 2 * ( gl + 1 )\nprint ""YES"" print newline\nif bl is greater than or equal to gr -1 and bl is less than or equal to 2 * ( gr + 1 )\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tint a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tif ((d >= a - 1 && d <= 2 * (a + 1)) || (c >= b - 1 && c <= 2 * (b + 1)))\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	a, b, c, d = integers\nread a, b, c, d\nif (d >= a - 1 and d <= 2 * (a + 1)) or (c >= b - 1 and c <= 2 * (b + 1))\nprint YES\nelse\nprint NO
"int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> v(2 * n);\n\tfor (int i = 0; i < 2 * n; i++) { cin >> v[i]; }\n\tsort(v.begin(), v.end());\n\tif (v[n - 1] < v[n])\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n}"	"n is a new integer variable\nread standard input to n\ncreate new vector of integers v with 2 * n elements\nread all elements from the input to the vector v\nsort v\nif v[n - 1] is less than v[n]\nprint ""YES\n"" to the standard output\nelse\nprint ""NO\n"" to the standard output"
"int n;\nvector<int> arr(210);\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; ++i) { cin >> arr[i]; }\n\tsort(arr.begin() + 1, arr.begin() + 2 * n + 1, greater<int>());\n\tif (arr[n] > arr[n + 1]) {\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\t} else {\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\t}\n\treturn 0;\n}"	let n be an int\nlet arr be an int vector of size 210\nread n\nfor i = 1 to 2*n inclusive, increment i, read arr[i]\nsort form arr + 1 to arr + 2*n + 1 using greater<int>\nif arr[n] > arr[n + 1]\nprint YES and\nnew line\nelse\nprint NO and\nnew line
"int main() {\n\tint n;\n\tcin >> n;\n\tint a[n + n];\n\tfor (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n\tsort(a, a + n * 2);\n\tif (a[n] > a[n - 1]) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	"declare integer n\nread n\ndeclare integer array a size n + n\nfor i = 0 to 2 * n exclusive, read a[i]\nsort from a to a + n * 2\nif a[n] is greater than a[n-1]\nprint ""YES\n""\nelse\nprint ""NO\n"""
"inline int read() {\n\tint x = 0, f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') {\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tx = x * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x * f;\n}\nint n, a[1005];\nint main() {\n\tn = read() * 2;\n\tfor (int i = 1; i <= n; ++i) a[i] = read();\n\tsort(a + 1, a + n + 1);\n\tif (a[n >> 1] < a[(n >> 1) + 1]) return 0 * puts(""YES"");\n\tputs(""NO"");\n\treturn 0;\n}"	"function read that returns inline integer\ndeclare new integers x = 0 and f = 1\nch is a new character variable read from the user input\nwhile ch is not a digit character\nif ch is equal to '-', change f to -1\nset ch to char from the input\nwhile c is a digit character\nchange x to x * 10 + ch - '0'\nchange ch to char from the input\nreturn x multiplied by f\ncreate int n and an array of ints a with size 1005\nchange n to the result of read() * 2\nin a for loop, change i from 1 to n inclusive, changing a[i] to the result of read() on each loop\nsort a from position 1 to n + 1\nif a[n >> 1] is less than a[(n >> 1) + 1], return 0 * puts(""YES"")\nprint ""NO"" to stdout"
"int n;\nvector<int> arr(210);\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; ++i) { cin >> arr[i]; }\n\tsort(arr.begin() + 1, arr.begin() + 2 * n + 1, greater<int>());\n\tif (arr[n] > arr[n + 1]) {\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\t} else {\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\t}\n\treturn 0;\n}"	"declare integer n\ncreate vector of integers arr with 210 elements\nread variable n from the input\nstart for loop from i = 1 to 2 * n inclusive, read input to arr[i] on each loop iteration\nsort arr from index 1 to 2 * n + 1, using greater<int>() as a comparator\nif arr[n] is greater than arr[n + 1]\nprint ""YES""\nprint ""\n""\nelse\nprint ""NO"" to the standard output\nprint ""\n"""
"int a[2 * 102];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < 2 * n; i++) cin >> a[i];\n\tsort(a, a + 2 * n);\n\tif (a[n - 1] < a[n])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	declare an array of integers named a of size 204\ndeclare an integer named n\nread in n\nloop through the code 2 multiplied by n times and input a value into a every time\nsort the inputted values in the array in ascending order\nif the value of position n in a is greater than the value of position n-1 in a\nprint YES\nor else\nprint NO
"int n;\nint arr[210];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; ++i) { cin >> arr[i]; }\n\tsort(arr + 1, arr + n + n + 1);\n\tputs((arr[n] < arr[n + 1] ? ""YES"" : ""NO""));\n\treturn 0;\n}"	"let int n\ncreate int array arr of size 210\nread n\nfor i = 1 to 2 * n, read arr[i]\nsort arr + 1 using argument arr + n + n + 1\nprint ""YES"" if arr[n] < arr[n + 1] is true or ""NO"" if not"
"int n, a[210];\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n\tsort(a, a + 2 * n);\n\tif (a[n - 1] >= a[n]) {\n\t\tputs(""NO"");\n\t} else {\n\t\tputs(""YES"");\n\t}\n\treturn 0;\n}"	n = integer, a = integer array of size 210\nread n\nfor i = 0 to 2 * n exlusive, then read a[i]\nsort a in asecnding order\nif a[n - 1] >= a[n]\nprint NO\nelse\nprint YES
"long long n, a[205];\nvoid solve() {\n\tcin >> n;\n\tfor (__typeof((2 * n + 1)) i = (1); i < (2 * n + 1); i++) cin >> a[i];\n\tsort(a + 1, a + 2 * n + 1);\n\tif (a[n] != a[n + 1])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}\nvoid prep() {}\nint main() {\n\tint t = 1;\n\tprep();\n\tcout << fixed << setprecision(10);\n\twhile (t--) solve();\n\treturn 0;\n}"	n = long long, a = long long array of size 205\nin function solve that returns nothing\nread n\nfor i = 1 to 2 * n + 1 exclusive, read a[i]\nsort a for all elements that contain a value\nif a[n] is not a[n + 1]\nprint YES\nelse\nprint NO\nin function prep that returns nothing\nt = integer = 1\ncall prep\nany output to the user is in fixed-point notation and is precise to 10 decimal points\nwhile looping decrease t by 1, the contents of the loop is to call solve
"int main() {\n\tint a;\n\tcin >> a;\n\tint b[10000], c[a], d[a];\n\tfor (int i = 0; i < a * 2; i++) { cin >> b[i]; }\n\tsort(b, b + a * 2);\n\tfor (int i = 0; i < a; i++) { c[i] = b[i]; }\n\tfor (int i = a; i < a * 2; i++) { d[i - a] = b[i]; }\n\tfor (int i = 0; i < a; i++) {\n\t\tfor (int j = 0; j < a; j++) {\n\t\t\tif (c[j] >= d[i]) {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""YES"" << endl;\n}"	"declare integer a\nread a\ndeclare integer arrays b size 10000, c size a, d size a\nfor i = 0 to a * 2 exclusive, read b[i]\nsort from b to b + a * 2\nfor i = 0 to a exclusive, let c[i] be b[i]\nfor i = a to a * 2 exclusive, let d[i-a] be b[i]\nfor i = 0 to a exclusive\nfor j = 0 to a exclusive\nif c[j] is greater than or equal to d[i]\nprint ""NO"", newline\nprint ""YES"", newline"
"int a[205];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; ++i) cin >> a[i];\n\tsort(a, a + 2 * n + 1);\n\tfor (int i = 1; i <= n; ++i)\n\t\tfor (int j = n + 1; j <= 2 * n; ++j)\n\t\t\tif (a[i] >= a[j]) {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\tcout << ""YES"" << endl;\n}"	"declare integer array a size 205\ndeclare integer n\nread n\nfor i = 1 to 2 * n inclusive, read a[i]\nsort elements from a to a + 2 * n + 1\nfor i = 1 to n inclusive\nfor j = n + 1 to 2 * n inclusive\nif a[i] is greater than or equal to a[j]\nprint ""NO"", newline\nprint ""YES"", newline"
"int main() {\n\tint n;\n\tint a[1001];\n\tint b[1001];\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) { cin >> a[i]; }\n\tint max = 1;\n\tfor (int i = 1; i <= 2 * n; i++) {\n\t\tfor (int j = 1; j <= 2 * n; j++) {\n\t\t\tif (a[max] < a[j]) { max = j; }\n\t\t}\n\t\tb[i] = a[max];\n\t\ta[max] = -1;\n\t}\n\tif (b[n] > b[n + 1])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"make integer n\ncreate int array a of size 1001\nlet int array b of size 1001\nread n\nfor i = 1 to 2 * n, read a[i]\nmake int max = 1\nfor i = 1 to 2 * n\nfor j = 1 to 2 * n\nif a[max] is less than a[j], set max to j\nset b[i] to a[max]\nset a[max] to -1\nif b[n] is greater than b[n + 1]\nprint ""YES""\nelse do\nprint ""NO"""
"int main() {\n\tint n;\n\tint a[210];\n\tcin >> n;\n\tfor (int i = 0; i < 2 * n; i++) cin >> a[i];\n\tsort(a, a + 2 * n);\n\tif (a[n] > a[n - 1])\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	n = integer\na = integer array of size 210\nread n\nfor i = 0 to 2 * n, read a[i]\nsort a and a + 2 * n\nif a[n] > a[n - 1]\nprint YES\nelse\nprint NO
"int main() {\n\tint n;\n\tcin >> n;\n\tint a[2 * n];\n\tfor (int i = 0; i < 2 * n; i++) cin >> a[i];\n\tsort(a, a + 2 * n);\n\tif (a[n] == a[n - 1]) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n}"	n = integer\nread n\na = integer array of size 2 * n\nfor i = 0 to 2 * n exclusive, read a[i]\nsort a in ascending order\nif a[n] is a[n - 1]\nprint NO\nelse\nprint YES
"int dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nint main() {\n\tint n;\n\tcin >> n;\n\tint a[2 * n];\n\tfor (int i = 0; i < 2 * n; i += 1) cin >> a[i];\n\tsort(a, a + 2 * n);\n\tint x = a[n];\n\tfor (int i = 0; i < n; i += 1) {\n\t\tif (x <= a[i]) {\n\t\t\tcout << ""NO\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""YES\n"";\n}"	"create new array of 4 integers dx with values 0, 0, -1, 1\ndy is a new array of 4 integers with elements 1, -1, 0, 0\ndeclare integer variable n\nread n from the input\na is an array of integers with size 2 * n\nfor integer i = 0 to 2 * n exclusive increasing i by 1, read user input to a[i]\nsort all elements of a\ndeclare integer variable with name x = a[n]\nfor i = 0 to n exclusive increasing i by 1\nif x <= a[i]\nprint ""NO\n""\nprint ""YES\n"""
"int a[205] = {0};\nint N;\nint main() {\n\tcin >> N;\n\tN *= 2;\n\tfor (int i = 0; i < N; i++) { cin >> a[i]; }\n\tsort(a, a + N);\n\tN /= 2;\n\tN -= 1;\n\tif (a[N] >= a[N + 1])\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n\treturn 0;\n}"	"a = int array of size 205 with all values set to 0\nN = int\nread N\nset N to N * 2\nread N values into a\nsort a from position 0 to N\nset N to N / 2\ndecrement N\nif a[N] >= a[N + 1]\nprint ""NO""\nelse\nprint ""YES"""
"int n, a[10000];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) cin >> a[i];\n\tsort(a + 1, a + 2 * n + 1);\n\tif (a[n] == a[n + 1])\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n\treturn 0;\n}"	"n = int and a = int array of size 10000\nread n\nfor i = 1 to 2 * n inclusive read a[i]\nsort a from position 1 to 2 * n + 1\nif a[n] is a[n + 1]\nprint ""NO""\nelse\nprint ""YES"""
"int n;\nint x[200001];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) cin >> x[i];\n\tsort(x + 1, x + 1 + 2 * n);\n\tif (x[n] < x[n + 1])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"create new integer called n\nx is an array of integers with size 200001\nread n from the user input\nfor i = 1 to 2 * n inclusive, read user input to x[i]\nsort x from position 1 to 1 + 2 * n\nif x[n] is less than x[n + 1]\nprint ""YES"" to the standard output\nelse\nprint ""NO"""
"int main() {\n\tint n;\n\tcin >> n;\n\tint vet[2 * n];\n\tfor (int i = 0; i < 2 * n; i++) { cin >> vet[i]; }\n\tsort(vet, vet + (2 * n));\n\tif (vet[n - 1] < vet[n])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"n = int\nread n\nvet = int array of size 2 * n\nread 2 * n values into vet\nsort vet\nif vet[n - 1] < vet[n]\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tvector<long long int> v;\n\tfor (long long int i = 0; i < 2 * n; i++) {\n\t\tlong long int x;\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tsort(v.begin(), v.end());\n\tif (v[n] > v[n - 1])\n\t\tcout << ""YES"";\n\telse\n\t\tcout << ""NO"";\n\tcout << endl;\n\treturn 0;\n}"	"create long long integer variable with name n\nread n from the input\ncreate new vector of long long integers v\nfor i = 0 to 2 * n exclusive incrementing i\ndeclare new long long integer x\nread variable x from the input\npush x to the end of vector v\nsort vector v\nif v[n] is greater than v[n - 1]\nprint ""YES""\nelse\nprint ""NO"" to the standard output\nprint new line to the output"
"const int N = 210;\nint n;\nint in[N];\nint main() {\n\twhile (cin >> n) {\n\t\tfor (int i = 0; i < 2 * n; i++) { cin >> in[i]; }\n\t\tsort(in, in + 2 * n);\n\t\tif (in[n] > in[n - 1]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"create constant int N = 210\nlet integer n\nmake int array in of size N\nread n and while n is truthy\nfor i = 0 to 2 * n exclusive, read in[i]\nsort in using argument in + 2 * n\nif in[n] is greater than in[n - 1]\nprint ""YES""\nelse do\nprint ""NO"""
"int main() {\n\tint n;\n\tcin >> n;\n\tn *= 2;\n\tint a[1005];\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tif (a[n / 2 - 1] != a[n / 2])\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare integer n\nread n\nlet n be n * 2\ndeclare integer array a size 1005\nfor i = 0 to n exclusive, read a[i]\nsort from a to a + n\nif a[n/2 - 1] is not a[n/2]\nprint ""YES"", newline\nelse\nprint ""NO"", newline"
"int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> v(2 * n);\n\tfor (int i = 0; i < 2 * n; ++i) cin >> v[i];\n\tsort(v.begin(), v.end());\n\tcout << (v[n] > v[n - 1] ? ""YES\n"" : ""NO\n"");\n\treturn 0;\n}"	"create integer n\nread n\ncreate int vector v of size 2 * n\nfor i = 0 to 2 * n exclusive, read v[i]\nsort vector v\nprint (v[n] > v[n - 1] ? ""YES\n"" : ""NO\n"")"
"int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long p = 2 * n;\n\tlong long arr[p];\n\tfor (long long i = 0; i < 2 * n; i++) { cin >> arr[i]; }\n\tsort(arr, arr + p);\n\tif (arr[n - 1] == arr[n]) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n}"	"n is a new long long variable\nread standard input to n\np is a new long long with value 2 * n\ncreate new array of long longs arr with p elements\nstart for loop from i = 0 to 2 * n exclusive, read input to arr[i] on each loop\nsort arr\nif arr[n - 1] = arr[n]\nprint ""NO"" to the standard output\nelse\nprint ""YES"""
int N;\nstring S;\nint main() {\n\tcin >> N >> S;\n\tsort(S.begin(), S.end());\n\tcout << S << '\n';\n\treturn 0;\n}	create integer N\ndeclare string variable S\nread N and S\nsort array S\nprint S and '\n'
"const long long MaxN = 301002;\nlong long n;\nstring s;\nint main() {\n\tcin >> n;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << ""\n"";\n}"	MaxN = constant long long equal to 301002\ncreate long long n\ncreate string s\nread n\nread s\ncall sort on s\nprint s and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tstring a;\n\tcin >> a;\n\tsort(a.begin(), a.end());\n\tcout << a << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate string a\nread a\nsort a from beginning to end\nprint a and a new line
const int oo = 1e9;\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << '\n';\n\treturn 0;\n}	const is keyword for declaration of function then integer oo=1e9\ninteger =n\nread n\nstring=s\nread s\nsort the function begin to end in descending order\nprint s
"int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << ""\n"";\n\treturn 0;\n}"	n = integer\nread n\ncreate string s\nread s\nsort s\nprint s and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tstring str;\n\tcin >> str;\n\tsort(str.begin(), str.end());\n\tcout << str << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate string str\nread str\nsort elements from beginning of str to end of str\nprint str print newline
const int inf = 0x3f3f3f3f;\nlong long a;\nstring s;\nint main() {\n\tint n;\n\tcin >> n;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n\treturn 0;\n}	create constant integer inf 0x3f3f3f3f\ncreate long long a\ncreate string s\ncreate integer n\nread n\nread s\nsort elements from beginning of s to end of s\nprint s print newline
"vector<int> v;\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << ""\n"";\n\treturn 0;\n}"	let v be a vector of ints\nlet n be an int\nread n\nlet s be a string\nread s\nsort(s.begin(), s.end())\nprint s and a newline
int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n\treturn 0;\n}	create integer n\ncreate string s\nread n read s\nsort elements from beginning of s to end of s\nprint s print newline
int main() {\n\tint n;\n\tcin >> n;\n\tstring str;\n\tcin >> str;\n\tsort(str.begin(), str.end());\n\tcout << str << endl;\n}	create integer n\nread n\ncreate string str\nread str\nsort elements from beginning of str to end of str\nprint str print newline
int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n\treturn 0;\n}	n =integer\ns =string\nRead n and s\nsort strings in alphabetical order\nprint s and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << ""\n"";\n\treturn 0;\n}"	"create integer n\nread n\ncreate string s\nread s\nsort elements from beginning of s to end of s\nprint s print ""\n"""
int main() {\n\tstring s;\n\tint n;\n\tcin >> n >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n\treturn 0;\n}	create string s\ncreate integer n\nread n and s\nsort s\nprint s
int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n}	create integer n\ncreate string s\nread n read s\nsort elements from beginning of s to end of s\nprint s print newline
int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n}	n = integer\nread n\ns = string\nread s\nsort string s\nprint s
int main() {\n\tint a;\n\tcin >> a;\n\tstring s;\n\tcin >> s;\n\tint arr[26] = {0};\n\tfor (int i = 0; i < a; i++) arr[s[i] - 'a']++;\n\tfor (int i = 0; i < 26; i++)\n\t\tfor (int j = 0; j < arr[i]; j++) cout << (char)('a' + i);\n\tcout << endl;\n\treturn 0;\n}	a = int\nread a\ns = string\nread s\narr = int array of size 26 with each value set to 0\nfor i = 0 to a increment arr[s[i] - 'a']\nfor i = 0 to 26\nfor j = 0 to arr[i] print 'a' + i as char\nprint a newline
int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n}	n = integer\nread n\ns = string\nread s\nsort the elements of s\nprint s
"int main() {\n\tlong long n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << ""\n"";\n}"	"create long long n\nread n\ndeclare string variable s\nread s\nsort s\nprint s and ""\n"""
const double PI = 2.0 * acos(0.0);\nconst int MOD = 1e9 + 7;\nconst int oo = 2 * MOD + 1e3;\nlong long gcd(long long a, long long b) {\n\treturn !b ? a : gcd(b, a % b);\n}\nint main() {\n\tint n;\n\tstring str;\n\tcin >> n >> str;\n\tsort(str.begin(), str.end());\n\tcout << str << '\n';\n\treturn 0;\n}	create constant double PI with PI = 2.0 * acosign of 0.0\ncreate constant integer MOD with MOD = 1e9 + 7\ncreate constant integer oo with oo = 2 * MOD + 1e3\ndeclare gcd with long longs a, b as arguments, returning long long\nreturn a if not b, else return result of run gcd with b, a % b as arguments from function\ncreate integer n\ncreate string str\nread n read str\nsort elements from beginning of str to end of str\nprint str print '\n'
int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n\treturn 0;\n}	declare integer variable n\ndeclare string variable s\nread n and s\nsort s\nprint s
int main() {\n\tint64_t n;\n\tstring s;\n\tcin >> n >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n\treturn 0;\n}	create int64_t variable n\ncreate string s\nread n and s\nsort s\nprint s
const int mod = 1000000007;\nconst long long inf = 1000000000000;\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << '\n';\n\treturn 0;\n}	declare constant integer mod = 1000000007\ndeclare constant long long inf = 1000000000000\ndeclare integer variable n\nread n\ndeclare string variable s\nread s\nsort s\nprint s and '\n'
long long fpow(long long n, long long k, long long p = 1000000007) {\n\tlong long r = 1;\n\tfor (; k; k >>= 1) {\n\t\tif (k & 1) r = r * n % p;\n\t\tn = n * n % p;\n\t}\n\treturn r;\n}\nlong long inv(long long a, long long p = 1000000007) {\n\treturn fpow(a, p - 2, p);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n\treturn 0;\n}	int the function fpow that takes long long n, k, p with p = 1000000007 and returns long long\nr = 1\nfor k >>= 1 if k\nif k & 1 r = r * n % p\nn = n * n % p\nreturn r\nin the function inv that takes long long a, p with p = 1000000007 and returns long long\nreturn fpow with a, p - 2 and p as arguments\nn = integer\nread n\ns = string\nread s\nsort s.begin() and s.end()\nprint s
int main() {\n\tchar a[100005];\n\tint n;\n\tcin >> n;\n\tgetchar();\n\tgets(a);\n\tsort(a, a + n);\n\tputs(a);\n}	create character array a with size 100005\ncreate integer n\nread n\nread character\nread string into a\nsort elements from a to a + n\nprint a
int main() {\n\tint n;\n\tcin >> n;\n\tstring second;\n\tcin >> second;\n\tsort((second).begin(), (second).end());\n\tcout << second << endl;\n\treturn 0;\n}	declare integer variable n\nread n\ndeclare string variable second\nread second\nsort second\nprint second
bool vis[100005];\nbool comp(pair<int, char> a, pair<int, char> b) {\n\treturn a.first > b.first;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << endl;\n}	vis= array of 100005 boolean values\ndefine comp which takes a = pair from int to char, b = pair int to char as parameters\nreturn a.first > b.first\nlet n be an int\nread n\nlet s be a string\nread s\nexecute sort with s.begin(), s.end() as arguments\nprint s and one newline
"long long gcd(long long a, long long b) {\n\treturn a ? gcd(b % a, a) : b;\n}\nvoid swap(char *a, char *b) {\n\tchar temp = *a;\n\t*a = *b;\n\t*b = temp;\n}\nlong long maxPrimeFactors(long long n) {\n\tlong long maxPrime = -1;\n\twhile (n % 2 == 0) {\n\t\tmaxPrime = 2;\n\t\tn >>= 1;\n\t}\n\tfor (int i = 3; i <= sqrt(n); i += 2) {\n\t\twhile (n % i == 0) {\n\t\t\tmaxPrime = i;\n\t\t\tn = n / i;\n\t\t}\n\t}\n\tif (n > 2) maxPrime = n;\n\treturn maxPrime;\n}\nstring bin_gen(ulong long n, ulong long num) {\n\tstring bin = """";\n\twhile (n--) {\n\t\tif (num % 2) {\n\t\t\tbin += ""1"";\n\t\t} else\n\t\t\tbin += ""0"";\n\t\tnum /= 2;\n\t}\n\treturn bin;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tchar arr[n];\n\tfor (long long i = 0; i < n; i++) { cin >> arr[i]; }\n\tsort(arr, arr + n);\n\tfor (long long i = 0; i < n; i++) { cout << arr[i]; }\n\tcout << endl;\n\treturn 0;\n}"	"declare gcd with long longs a, b as arguments, returning long long\nreturn result of run gcd with b % a, a as arguments if a is true, else b\ndeclare swap with character points a, b as arguments, returning void\ncreate character temmp with temp = value of a\nset value of a to value of b\nset value of b to temp\ndeclare maxPrimeFactors with long long n as argument, returning long long\ncreate long long maxPrime with maxPrime = -1\nwhile n % 2 is 0\nset maxPrime to 2\nset n to n bitshift right 1\nfor i = 3 to square root of n inclusive, incrementing i by 2\nwhile n % i is 0\nset maxPrime to i\nset n to n / i\nif n is greater than 2, set maxPrime to n\nreturn maxPrime\ndeclare bin_gen with ulong longs n, num, returning string\ncreate string bin with bin = """"\nwhile decrement n is true\nif num % 2\nincrement bin by ""1""\nelse\nincrement bin by ""0""\nset num to num / 2\nreturn bin from function\ncreate long long n\nread n\ncreate character array arr with size n\nfor i = 0 to n exclusive, read arr[i]\nsort elements from arr to arr + n\nfo ri = 0 to n exclusive, print arr[i]\nprint newline"
"unsigned long long const mod = 1000000007;\nunsigned long long const md = 998244353;\nunsigned long long mypow(unsigned long long a, unsigned long long b) {\n\tunsigned long long res = 1;\n\ta %= mod;\n\tassert(b >= 0);\n\tfor (; b; b >>= 1) {\n\t\tif (b & 1) res = res * a % mod;\n\t\ta = a * a % mod;\n\t}\n\treturn res;\n}\nifstream in(""txt.in"");\nofstream out(""txt.out"");\nint main() {\n\tcout << fixed << setprecision(12);\n\tunsigned long long n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << '\n';\n\treturn 0;\n}"	"mod = unsigned long long const with mod = 1000000007\nmd = unsigned long long const with md = 998244353\nin function mypow taking two unsigned long longs a and b and returning an unsigned long long\nres = unsigned long long with res = 1\nset a to a modulo mod\ncall assert on b is greater or equal to 0\nloop while b is not 0 bitshifting b right by 1 each time\nif b bitwise-and 1 is not 0 then set res to res * a modulo mod\nset a to a * a modulo mod\nreturn res\nin = ifstream on ""txt.in""\nout = ofstream on ""txt.out""\ncall fixed and setprecision of 12 on cout\nn = unsigned long long\nread n\ns = string\nread s\nsort s\nprint s"
"int main() {\n\tint N;\n\tcin >> N;\n\tstring S;\n\tcin >> S;\n\tsort((S).begin(), (S).end());\n\tcout << S << ""\n"";\n}"	"declare int variable N\nread N\ndeclare string variable S\nread S\nsort S\nprint S and ""\n"""
"int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tsort(s.begin(), s.end());\n\tcout << s << ""\n"";\n\treturn 0;\n}"	create int n\nread n\ncreate string s\nread s\nsort array s\nprint s and a newline
"int main() {\n\tfloat A, C;\n\tfloat max, min;\n\tcin >> A >> C;\n\tif (A == 0 && C == 0) {\n\t\tmax = 0;\n\t\tmin = 0;\n\t} else if (A == 0) {\n\t\tcout << ""Impossible"" << endl;\n\t\treturn 0;\n\t} else if (C == 0) {\n\t\tmax = A;\n\t\tmin = A;\n\t} else if (C < A) {\n\t\tmin = A;\n\t\tmax = A + (C - 1);\n\t} else {\n\t\tmax = A + (C - 1);\n\t\tmin = C / A * A;\n\t}\n\tcout << min << "" "" << max << endl;\n\treturn 0;\n}"	"create float A and C\ncreate float max, min\nread A and C\nif A and C equal to 0\nmax =0\nassign 0 to min\nelse if A=0\nprint Impossible\nelse if C=0\nmax = A\nset min equal to A\nelse if C less than A\nmin = A\nset max to A + C-1\nelse\nset max = A + C -q\nassign C/A*A to min\nprint min, "" "", max and a newline"
"const int N = 1e6;\nint n, m;\nint mx, mn;\nint main() {\n\tcin >> n >> m;\n\tif (n == 0 && m > 0) {\n\t\tcout << ""Impossible"" << endl;\n\t\treturn 0;\n\t}\n\tif (m == 0) {\n\t\tcout << n << "" "" << n << endl;\n\t\treturn 0;\n\t}\n\tmx = n + m - 1;\n\tif (n >= m)\n\t\tmn = n;\n\telse\n\t\tmn = m;\n\tcout << mn << "" "" << mx << endl;\n\treturn 0;\n}"	"declare const int N = 1e6\ndeclare integers n and m\ndeclare ints mx and mn\nread input to n and m\nif n = 0 and m > 0\nprint ""Impossible""\nif m is equal to 0\nprint n, "" "" and n\nchange mx to n + m - 1\nif n >= m\nchange mn to n\nelse\nchange mn to m\nprint mn, "" "" and mx"
"long long int n, m;\nint main() {\n\tcin >> n >> m;\n\tif (n == 0 and m != 0)\n\t\tputs(""Impossible"");\n\telse\n\t\tcout << (n + max(0LL, m - n)) << "" "" << (n + max(0LL, m - 1)) << endl;\n\t;\n}"	"define integers n and m\nread n, m\nif n is 0 and m is nonzero\nprint Impossible\notherwise\nprint n + maximum of 0LL and m -n, "" "", n + maximum of 0LL and m - 1, and a newline\n;"
"int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif (!n && !m) {\n\t\tcout << ""0 0\n"";\n\t\treturn 0;\n\t}\n\tif (!n) {\n\t\tcout << ""Impossible\n"";\n\t\treturn 0;\n\t}\n\tlong long mx = n + m;\n\tif (m) mx--;\n\tlong long mn = n + m;\n\tmn -= min(n, m);\n\tcout << mn << "" "" << mx << endl;\n\treturn 0;\n}"	n, m = long long\nread n, m\nif n is 0 and m is 0\nprint 0 0\nif n is 0\nprint Impossible\nmx = long long = n + m\nif m carries a nonzero value, decrease mx by 1\nmn = long long = n + m\nmn = mn = lowest number between n and m\nprint mn mx
"int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif (n == 0) {\n\t\tif (m == 0)\n\t\t\tcout << 0 << "" "" << 0 << endl;\n\t\telse\n\t\t\tcout << ""Impossible"" << endl;\n\t} else {\n\t\tlong long mn, mx, a, b, c, d;\n\t\tif (m == 0)\n\t\t\tmx = n;\n\t\telse\n\t\t\tmx = m + (n - 1);\n\t\tmn = (n - 1);\n\t\tm = m - (n - 1);\n\t\tif (m > 0)\n\t\t\tmn = mn + m;\n\t\telse\n\t\t\tmn = mn + 1;\n\t\tcout << mn << "" "" << mx << endl;\n\t}\n}"	n, m =integers\nRead n and m\nif n is equal to 0\nif m is equal to 0\nprint 0, 0 and a new line\nelse do the following\nprint Impossible and a new line\nelse do the following\nmn, mx, a, b, c, d = integers\nif m is equal to 0\nset mx to n\nelse do the following\nset mx to m + n - 1\nset mn to n - 1\nset m to m - n - 1\nif m is greater than 0\nset mn to mn + m\nelse do the following\nset mn to mn + 1\nprint mn, mx and a new line
"int main() {\n\tlong long mn;\n\tint a, b;\n\tcin >> a >> b;\n\tif (a == 0 && b == 0) {\n\t\tcout << 0 << ' ' << 0 << endl;\n\t\treturn 0;\n\t}\n\tif (a == 0) {\n\t\tcout << ""Impossible"" << endl;\n\t\t;\n\t\treturn 0;\n\t}\n\tif (b == 0) {\n\t\tcout << a << ' ' << a << endl;\n\t\treturn 0;\n\t}\n\tlong long mx;\n\tif (b >= a) {\n\t\tmn = a + (b - a);\n\t} else {\n\t\tmn = a;\n\t}\n\tmx = a + (b - 1);\n\tcout << mn << ' ' << mx << endl;\n\treturn 0;\n}"	let mn be a long integer\nlet a, b be integers\nread a and b\nif a is equal to 0 and b is equal to 0\nprint 0 and space and 0 and newline\nif a is equal to 0\nprint Impossible and newline\nsemicolumn\nif b is equal to 0\nprint a and space and a and newline\nlet mx be a long integer\nif b >= a\nthe value of mn = a + (b - a)\nelse do the following\nthe value of mn is equal to a\nthe value of mx is equal to a + (b - 1)\nprint mn and space and mx and newline
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tif (n == 0 && m > 0) {\n\t\tcout << ""Impossible"" << endl;\n\t\treturn 0;\n\t}\n\tint mn, mx;\n\tmn = n + (max(0, m - n));\n\tmx = n + max(0, m - 1);\n\tcout << mn << "" "" << mx << endl;\n\treturn 0;\n}"	"create integers n, m\nread n read m\nif n is 0 and m is greater than 0\nprint ""Impossible"" print newline\ncreate integers mn, mx\nset mn to n + ( maximum of ( 0 and m - n ) )\nset mx to n + maximum of ( m - 1 )\nprint mn print "" "" print mx print newline"
"int main() {\n\tint n, m;\n\twhile (cin >> n >> m) {\n\t\tint mx = n + max(m - 1, 0);\n\t\tint mn = n + max(0, m - n);\n\t\tif (mn > mx)\n\t\t\tcout << ""Impossible"" << endl;\n\t\telse\n\t\t\tcout << mn << "" "" << mx << endl;\n\t}\n}"	"declare integer variables n and m\nread n and m and keep looping\ncreate integer mx = n + max of m - 1 and 0\ncreate integer mn = n + max of 0 and m - n\nif mn is greater than mx\nprint ""Impossible""\nelse\nprint mn, "" "" and mx"
"int main() {\n\tint ch, ad;\n\tcin >> ad >> ch;\n\tif (ad == 0 && ch > 0)\n\t\tcout << ""Impossible"" << endl;\n\telse\n\t\tcout << ad + ch - min(ad, ch) << "" "" << ad + max(ch - 1, 0) << endl;\n\treturn 0;\n}"	"ch, ad = integers\nread ch, ad\nif ad is 0 and ch > 0\nprint Impossible\nelse\nprint ad + ch - min(ad, ch),"" "",ad + max(ch - 1, 0)"
"int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tlong long x, y;\n\tif (n == 0) {\n\t\tif (m)\n\t\t\tcout << ""Impossible\n"";\n\t\telse\n\t\t\tcout << ""0 0\n"";\n\t} else {\n\t\tif (m) {\n\t\t\ty = (n - 1) + m;\n\t\t\tx = n;\n\t\t\tif (m > n) x += (m - n);\n\t\t} else\n\t\t\tx = y = n;\n\t\tcout << x << "" "" << y << ""\n"";\n\t}\n\treturn 0;\n}"	"create long longs n, m\nread n read m\ncreate long longs x, y\nif n is 0\nif m is true\nprint ""Impossible\n""\nelse\nprint ""0 0\n""\nelse\nif m is true\nset y to ( n - 1 ) + m\nset x to n\nif m is greater than n, increment x by ( m - n )\nelse\nset x to y to n\nprint x print "" "" print y print ""\n"""
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tif (n == 0 && m == 0) {\n\t\tcout << 0 << "" "" << 0 << endl;\n\t} else if (n == 0) {\n\t\tcout << ""Impossible"" << endl;\n\t} else {\n\t\tcout << (n > m ? n : m) << "" "" << (m > 0 ? n + m - 1 : n) << endl;\n\t}\n\treturn 0;\n}"	"n, m = integers\nread n, m\nif n is 0 and m is 0\nprint 0,"" "",0\nelse if n is 0\nprint Impossible\nelse\nprint if n > m, n else m,"" "",if m > 0, n + m - 1 else n"
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tif (n == 0 && m > 0)\n\t\tcout << ""Impossible"" << endl;\n\telse\n\t\tcout << n + m - min(n, m) << "" "" << n + max(m - 1, 0) << endl;\n\treturn 0;\n}"	"create integers n, m\nread n read m\nif n is 0 and m is greater than 0\nprint ""Impossible"" print newline\nelse\nprint n + m - minimum of n and m print "" "" print n + maximum of m - 1 and 0, print newline"
"int main() {\n\tint n, m, mn, mx;\n\tcin >> n >> m;\n\tif (n == 0) {\n\t\tif (m == 0)\n\t\t\tcout << ""0 0"" << endl;\n\t\telse\n\t\t\tcout << ""Impossible"" << endl;\n\t\treturn 0;\n\t}\n\tif (m == 0) {\n\t\tcout << n << "" "" << n << endl;\n\t\treturn 0;\n\t}\n\tmx = n + m - 1;\n\tif (n >= m)\n\t\tmn = n;\n\telse\n\t\tmn = m;\n\tcout << mn << "" "" << mx << endl;\n\treturn 0;\n}"	"n, m, mn, mx =integers\nRead n and m\nif n is equal to 0\nif m is equal to 0\nprint 0 0 and a new line\nelse do the following\nprint Impossible and a new line\nif m is equal to 0\nprint n, "" "", n and a new line\nset mx to n + m - 1\nif n is greater than or equal to m\nset mn to n\nelse do the following\nset mn to n\nprint mn, "" "", mx and a new line"
"int main() {\n\tlong long int n, m;\n\tcin >> n >> m;\n\tif (n == 0 && m > 0)\n\t\tcout << ""Impossible\n"";\n\telse {\n\t\tif (n >= m)\n\t\t\tcout << n << ' ';\n\t\telse\n\t\t\tcout << (m / n) * n + (m % n) << ' ';\n\t\tif (m > 0)\n\t\t\tcout << (n - 1) + m << endl;\n\t\telse\n\t\t\tcout << n << endl;\n\t}\n\treturn 0;\n}"	"n, m = long long int\nread n then m\nif n is 0 and m is greater than 0\nprint ""Impossible""\nelse\nif n is greater or equal to m\nprint n and ' '\nelse\nprint (m / n) * n + (m % n) and ' '\nif m is greater than 0\nprint (n - 1) + m\nelse\nprint n"
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tif (n == 0 && m > 0) {\n\t\tcout << ""Impossible"" << endl;\n\t\treturn 0;\n\t}\n\tint mn, mx;\n\tmn = n;\n\tif (m == 0)\n\t\tmx = n;\n\telse\n\t\tmx = n + (m - 1);\n\tif (m > n) mn += (m - n);\n\tcout << mn << "" "" << mx << endl;\n\treturn 0;\n}"	"declare integers n and m\nread n and m\nif n = 0 and m > 0\nprint ""Impossible""\ndeclare int variables mn and mx\nset mn to n\nif m = 0\nassign n to mx\nelse\nset mx to n + (m - 1)\nif m is greater than n, increase mn by m - n\nprint mn, "" "" and mx"
"int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif (n == 0 && m != 0) {\n\t\tcout << ""Impossible"" << endl;\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) {\n\t\tcout << 0 << "" "" << 0 << endl;\n\t\treturn 0;\n\t}\n\tif (n != 0 && m == 0) {\n\t\tcout << n << "" "" << n << endl;\n\t\treturn 0;\n\t}\n\tif (n <= m) {\n\t\tcout << m << "" "" << n - 1 + m << endl;\n\t} else {\n\t\tcout << n << "" "" << n + m - 1 << endl;\n\t}\n\treturn 0;\n}"	"n, m = long long\nread n, m\nif n is 0 and m is not 0\nprint Impossible\nif n is 0 and m is 0\nprint 0,"" "",0\nif n is not 0 and m is 0\nprint n,"" "",n\nif n <= m\nprint m,"" "",n - 1 + m\nelse\nprint n,"" "",n + m - 1"
"int main() {\n\tint n, m, c, d;\n\twhile (cin >> n >> m) {\n\t\tif (n == 0 && m == 0) {\n\t\t\tcout << 0 << "" "" << 0 << endl;\n\t\t} else {\n\t\t\tif (n == 0) {\n\t\t\t\tcout << ""Impossible"" << endl;\n\t\t\t} else {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\tif (m == 0) {\n\t\t\t\t\t\tcout << n << "" "" << n << endl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcout << m << "" "" << m << endl;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (n >= m) {\n\t\t\t\t\t\tif (m == 0) {\n\t\t\t\t\t\t\tcout << n << "" "" << n << endl;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tc = m + n - 1;\n\t\t\t\t\t\t\tcout << n << "" "" << c << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\td = m + n - 1;\n\t\t\t\t\t\tcout << m << "" "" << d << endl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"	let n, m, c, d be integers\nwhile read n , m\nif n is equal to 0 and m is equal to 0\nprint 0 and space and 0 and newline\nelse do the following\nif n is equal to 0\nprint Impossible and newline\nelse do the following\nif n is equal to 1\nif m is equal to 0\nprint n and space and n and newline\nelse do the following\nprint m and space and m and newline\nelse do the following\nif n >= m\nif m is equal to 0\nprint n and space and n and newline\nelse do the following\nc is equal to m + n - 1\nprint n and space and c and newline\nelse do the following\nd is equal to m + n - 1\nprint m and space and d and newline
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tif (n == 0 and m != 0) {\n\t\tcout << ""Impossible"" << endl;\n\t} else if (n == 0 and m == 0) {\n\t\tcout << 0 << "" "" << 0 << endl;\n\t} else {\n\t\tint mx = n + max(0, m - 1);\n\t\tint mn = n + max(0, m - n);\n\t\tcout << mn << "" "" << mx << endl;\n\t}\n}"	"declare int variables n and m\nread input to n and m\nif n = 0 and m != 0\nprint ""Impossible""\nelse if n = 0 and m = 0\nprint 0, "" "" and 0\nelse\ndeclare integer mx = n + (max of 0 and m - 1)\ndeclare integer mn = n + (max of 0 and m - n)\nprint mn, "" "" and mx"
"int dx[] = {-1, 0, 1, 0};\nint dy[] = {0, 1, 0, -1};\nint main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif (m == 0 && n >= 0) {\n\t\tcout << n << "" "" << n << endl;\n\t\treturn 0;\n\t}\n\tif (n == 0 && m > 0) {\n\t\tcout << ""Impossible"" << endl;\n\t\treturn 0;\n\t}\n\tlong long maxsum = m + n - 1;\n\tlong long minsum = n + max(m - n, 0LL);\n\tcout << minsum << "" "" << maxsum << endl;\n}"	"create integer array dx with dx = {-1, 0, 1, 0}\ncreate integer array dy with dy = {0, 1, 0, -1}\ncreate long longs n, m\nread n read m\nif m is 0 and n is greater than or equal to 0\nprint n print "" "" print n print newline\nif n is 0 and m is greater than 0\nprint ""Impossible"" print newline\ncreate long long maxsum with maxsum = m + n - 1\ncreate long long minsum with minsum = n + maximum of ( m - n and 0LL )\nprint minsum print "" "" print maxsum print newline"
int main() {\n\tint t, s, q;\n\tint cnt = 0;\n\tcin >> t >> s >> q;\n\twhile (s < t) {\n\t\ts = s * q;\n\t\tcnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	create int t, s, q\ncnt=0\nread t, s and q\nwhile s < t\nset s to s*q\nincrement cnt\nprint cnt
int t, s, q;\nint main() {\n\tcin >> t >> s >> q;\n\tint ans = 1;\n\tint temp = s * q;\n\twhile (temp < t) {\n\t\t++ans;\n\t\ttemp *= q;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integers t, s, q\nread t, s, q\ndeclare integer ans = 1\ndeclare integer temp = s * q\nwhile temp is less than t\nincrement ans\nlet temp be temp * q\nprint ans, newline
int main() {\n\tlong long a, b, c, coun = 0;\n\tcin >> a >> b >> c;\n\twhile (a > b) {\n\t\tb *= c;\n\t\tcoun++;\n\t}\n\tcout << coun << endl;\n}	create long long ints a, b, c, and coun = 0\nread a, b, and c\nwhile a is greater than b\nset b to b * c\nadd 1 to coun\nshow coun
const long double PI = acos(-1);\ninline long long mod(long long n, long long m) {\n\tlong long ret = n % m;\n\tif (ret < 0) ret += m;\n\treturn ret;\n}\nlong long gcd(long long a, long long b) {\n\tif (a == 0)\n\t\treturn b;\n\telse\n\t\treturn gcd(b % a, a);\n}\nint main() {\n\tlong long q, s, t;\n\tcin >> t >> s >> q;\n\tlong long ans = 0;\n\twhile (s < t) {\n\t\ts *= q;\n\t\tans++;\n\t}\n\tcout << ans << '\n';\n}	the constant double value of PI = acos(-1)\nlet mod be a inline function that accepts long long n, long long m and returns a long integer value\nthe long integer value of ret = n modulo m\nif ret is less than 0 , increment ret by m\nreturn the value of ret\nlet gcd be a function that accepts long long a, long long b and returns a long integer\nif a equals 0\nreturn the value of b\nelse do the following\nreturn the value of gcd of b modulo a and a\nlet q, s, t be long integers\nread t , s , q\nthe long integer value of ans = 0\nwhile s is less than t\ns is equal to s * q\nincrement ans by 1\nprint ans and newline
"const int MAXN = 1e4 + 4;\nint n, a, b;\nint main() {\n\tcin >> n >> a >> b;\n\tint ans = 0;\n\twhile (a < n) {\n\t\ta *= b;\n\t\tans++;\n\t}\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	"declare constant integer MAXN = 1e4 + 4\ndeclare integers n, a, b\nread n, a, b\ndeclare integer ans = 0\nwhile a is less than n\nlet a be a * b\nincrement ans\nprint ans and ""\n"""
int main() {\n\tlong int t, s, q, c = 0;\n\tcin >> t >> s >> q;\n\twhile (t > s) {\n\t\ts *= q;\n\t\tc++;\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let t, s, q, c be long integers with c = 0\nread t , s , q\nwhile t is greater than s\ns is equal to s * q\nincrement c by 1\nprint c and newline
int main() {\n\tint t, s, q;\n\twhile (cin >> t >> s >> q) {\n\t\tint ans = 0;\n\t\twhile (s < t) {\n\t\t\tans++;\n\t\t\ts *= q;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}	let t, s, q be integers\nwhile read t, s, q\nlet ans be integer 0\nwhile s is less than t\nincrement ans by 1\nmultiply s by q\nprint ans and newline
const int maxn = 2e3 + 10;\nconst int eps = 1e-14;\nconst int mod = 1e9 + 7;\nconst long long inf = 1e18;\nint main() {\n\tint t, s, p;\n\tcin >> t >> s >> p;\n\tint cnt = 0;\n\twhile (s < t) {\n\t\ts *= p;\n\t\t++cnt;\n\t}\n\tcout << cnt << endl;\n}	create new integer constant called maxn with value 2e3 + 10\ncreate constant integer eps = 1e-14\nmod is a new constant integer with value 1e9+7\ndeclare long long constant inf = 1e18\ndefine integers t, s and p\nread standard input to t, s and p\ncnt is a new integer with value 0\nwhile s < t\nmultiply s by p\nadd 1 to cnt\nprint cnt
int t, s, q;\nint ans = 1;\nint main() {\n\tcin >> t >> s >> q;\n\tlong double now = 0;\n\tlong double last = s;\n\twhile (last < t) {\n\t\tlong double tmp = (last - now) * q;\n\t\tif (last + tmp * (q - 1) / q >= t) break;\n\t\tlast += ceil(tmp) * (q - 1) / q;\n\t\tnow += ceil(tmp);\n\t\tnow -= last;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n}	create ints t, s, and q\nmake integer ans = 1\nread t, s, and q\nmake long double now = 0\ncreate long double last = s\nwhile last is less than t\nmake long double tmp = (last - now ) * q\nif last + tmp * (q - 1) / 2 is greater than or equal to t, break loop\nset last to last + ceil(tmp) * (q - 1) / q\nadd ceil(tmp) to now\nsubtract last from now\nincrement ans\nshow ans
int main() {\n\tlong long s, t, q;\n\tcin >> t >> s >> q;\n\tlong long ans = 0;\n\twhile (s < t) {\n\t\ts *= q;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create long long int s, t, and q\nread t, s, and q\nmake long long ans = 0\nwhile s is less than t\nset s to s * q\nincrement ans\nshow ans
int main() {\n\tint t, s, q;\n\tcin >> t >> s >> q;\n\tint ans = 1;\n\twhile (s * q < t) {\n\t\tans++;\n\t\ts *= q;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integers t, s and q\nread from the input to t, s and q\nans is a new integer variable = 1\nwhile s * q < t\nincrement ans by one\nset s to s multiplied by q\nprint ans
int main() {\n\tint t, s, q;\n\tcin >> t >> s >> q;\n\tint ans = 0;\n\twhile (s < t) {\n\t\ts *= q;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n}	declare new integers t, s and q\nread variables t, s and q from the input\ncreate new integer variable ans = 0\nwhile s < t\nset s to s multiplied by q\nincrement ans\nprint ans
int main() {\n\tint t, s, q;\n\tcin >> t >> s >> q;\n\tint ans = 1;\n\tint x = s * q;\n\twhile (x < t) {\n\t\tans++;\n\t\tx *= q;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare new int variables t, s and q\nread input to t, s and q\ndefine integer ans = 1\ndefine new integer x with value s * q\nwhile x < t\nincrement ans\nchange the value of x to x multiplied by q\nprint ans
int n, m;\nint b[200007];\nint a[200007], c[200007];\nvector<int> v;\nint main() {\n\tint i, j, l, h, t = 0;\n\tstring s, s1, s2, s3;\n\tlong long RE, DE, HE;\n\tcin >> RE >> DE >> HE;\n\twhile (DE * HE < RE) {\n\t\tt++;\n\t\tDE *= HE;\n\t}\n\tcout << t + 1 << endl;\n\treturn 0;\n}	declare integers n, m\ndeclare integer array b size 200007\ndeclare integer arrays a size 200007, c size 200007\ndeclare integer vector v\ndeclare integers i, j, l, h, t = 0\ndeclare strings s, s1, s2, s3\ndeclare long longs RE, DE, HE\nread RE and DE and HE\nwhile DE * HE is less than RE\nincrement t\nlet DE be DE * HE\nprint t + 1 and newline
int main() {\n\tint a, b, c;\n\tint ans = 0;\n\tcin >> a >> b >> c;\n\twhile (b < a) {\n\t\tb *= c;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n}	declare integer variables a, b and c\ndeclare integer variable ans = 0\nread variables a, b and c from the input\nwhile b < a\nchange the value of b to b multiplied by c\nincrement ans\nprint ans
int main() {\n\tint t, s, q;\n\tint count = 0;\n\tcin >> t >> s >> q;\n\twhile (s < t) {\n\t\ts = s * q;\n\t\tcount += 1;\n\t}\n\tcout << count << endl;\n}	create ints t, s, and q\nmake int count = 0\nread t, s, and q\nwhile s is less than t\nset s to s * q\nset count to count + 1\nshow count
int main() {\n\tdouble t, s, q, c = 0, ans = 0;\n\tcin >> t >> s >> q;\n\twhile (s < t) {\n\t\ts = s * q;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare doubles t, s, q, c and ans with c and ans = 0\nread user input to t, s and q\nwhile s < t\nchange s to the product of s and q\nincrement ans by one\nprint ans to the standard output
const int maxn = 1e5 + 5;\nint main() {\n\tlong long t, s, q, ans = 0;\n\tcin >> t >> s >> q;\n\twhile (s < t) {\n\t\ts *= q;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create const int maxn = 1e5 + 5\ncreate long long ints t, s, q, and ans = 0\nread t, s, and q\nwhile s is less than t\nset s to s * q\nadd 1 to ans\nshow ans
int main() {\n\tint t, s, q, ans = 0;\n\tcin >> t >> s >> q;\n\tint downloaded = s;\n\twhile (downloaded < t) {\n\t\tdownloaded += s * (q - 1);\n\t\ts = downloaded;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	t,s,q=int, ans=0\nread t,s,q\ndownloaded=s\nwhile downloaded<t\nadd s*(q-1) to downloaded\ns=downloaded\nincrement ans\nprint ans
const int MOD = 1e9 + 7;\nconst int INF = INT_MAX;\nconst long long LINF = LLONG_MAX;\nint ans;\nlong double t, s, q;\nint main() {\n\tcin >> t >> s >> q;\n\tlong double x = 0, z = 0, y = s;\n\twhile (s < t) {\n\t\ts *= q;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n}	let MOD be a integer constant which equals 1e9 + 7\nlet INF be a integer constant which equals INT_MAX\nlet LINF be a long long constant which equals LLONG_MAX\nlet ans be integer\nlet t, s, q be long double values\nread t, s, q\nlet x, z, y be long integers with x, z equals 0 and y equals s\nwhile s is less than t\nmultiply s by q\nincrease ans by 1\nprint ans and endline
int ans, t, s, q;\nint main() {\n\tans = 0;\n\tcin >> t >> s >> q;\n\twhile (s < t) {\n\t\ts *= q;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integer variables ans, t, s and q\nset ans to 0\nread standard input to t, s and q\nwhile s < t\nmultiply s by q\nincrement ans by one\nprint ans to the standard output
int main() {\n\tint a, b, c;\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tint s(b), x(0);\n\twhile (s < a) {\n\t\ts *= c;\n\t\t++x;\n\t}\n\tcout << x << endl;\n\treturn 0;\n}	let a, b, c be integers\nread a\nread b\nread c\nlet s(b), x(0) be integers\nwhile s is less than a\ns is equal to s * c\nincrement x by 1\nprint x and newline
long long t, s, q;\nint main() {\n\tint cnt = 1;\n\tcin >> t >> s >> q;\n\twhile (1) {\n\t\tif (s * q >= t)\n\t\t\tbreak;\n\t\telse {\n\t\t\ts = s * q;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	create long longs t, s and q\nnew integer cnt = 1\nread input to t, s and q\nin the infinite loop\nif s * q >= t\nstop the loop\nelse\nset s to s * q\nincrement cnt\nprint cnt to the standard output
int n, s, q;\nint main() {\n\tint t, w, i, j, k, cnt, ans = 0;\n\tcin >> n >> s >> q;\n\twhile (s < n) {\n\t\tans++;\n\t\ts *= q;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integers n, s, q\ndeclare integers t, w, i, j, k, cnt, ans = 0\nread n, s, q\nwhile s is less than n\nincrement ans\nlet s be s * q\nprint ans, newline
int main() {\n\tint t, s, q, cnt = 0;\n\tcin >> t >> s >> q;\n\twhile (s < t) {\n\t\tcnt++;\n\t\ts *= q;\n\t}\n\tcout << cnt << endl;\n}	integer as t,s,q,cnt = 0\nread t,s,q\nif s is less than t then do the following\nadd one to cnt\nmultiply s by q\noutput cnt
int main() {\n\tint t, s, q;\n\twhile (cin >> t >> s >> q) {\n\t\tint ans = 0;\n\t\twhile (s < t) {\n\t\t\tans++;\n\t\t\ts *= q;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}	create integers t, s and q\nread t, s and q and keep looping\ndeclare integer variable with name ans = 0\nwhile s < t\nincrement ans by one\nmultiply s by q\nprint ans to the standard output
int main() {\n\tint T, S, q;\n\tcin >> T >> S >> q;\n\tcout << (int)ceil(log(T * 1.0 / S) / log(q)) << endl;\n}	let T, S, q be integers\nread T, S, q\nprint (int)ceil(log(T * 1.0 / S) / log(q)) and newline
int main() {\n\tlong long t, s, q;\n\tcin >> t >> s >> q;\n\tlong long ans = 0;\n\twhile (s < t) {\n\t\ts *= q;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create long long t, s, q\nread t, s and q\nans=0\nwhile s < t\ns= s*q\nincrement ans\nprint ans
int main() {\n\tlong long int n, m, a;\n\tcin >> n >> m >> a;\n\tn = n % 10000000000;\n\tm = m % 10000000000;\n\ta = a % 10000000000;\n\tlong long int ans;\n\tif (a > n && a > m)\n\t\tans = 1;\n\telse {\n\t\tif ((n % a) > 0) {\n\t\t\tn = n / a + 1;\n\t\t} else {\n\t\t\tn = n / a;\n\t\t}\n\t\tif (m % a > 0) {\n\t\t\tm = m / a + 1;\n\t\t} else {\n\t\t\tm = m / a;\n\t\t}\n\t\tans = n * m;\n\t}\n\tcout << ans << endl;\n}	n, m and a are long long integers\nread n, m and a\nn = n % 10000000000\nm = m % 10000000000\na = a % 10000000000\nlet int ans be long longs\nif a > n and a > m\nassign value of 1 to the ans\nelse\nif n % a is greater than 0\nn = n / a + 1\nelse\nn = n / a\nif m % a is greater than 0\nm = m / a + 1\nelse\nm = m / a\nans = n * m\nprint ans and a new line
int main() {\n\tint n, m, a;\n\tcin >> n >> m >> a;\n\tcout << 1ll * (n + a - 1) / a * ((m + a - 1) / a) << endl;\n}	create integers n, m and a\nread n, m and a\nprint 1ll * (n + a - 1) / a * ((m + a - 1) / a) and a new line
int m, n, a;\nint main() {\n\tcin >> m;\n\tcin >> n;\n\tcin >> a;\n\tint l = ceil(n / (a * 1.0));\n\tint w = ceil(m / (a * 1.0));\n\tcout << (long long)l * (long long)w << endl;\n\treturn 0;\n}	create integers m, n, a\nread m\nread n\nread a\ncreate integer l with l = round up ( n / (a*1.0) )\ncreate integer w with w = round up ( m / (a*1.0) )\nprint long long casted l * long long casted w print newline
int m, n, a;\nint main() {\n\tcin >> m;\n\tcin >> n;\n\tcin >> a;\n\tint l = ceil(n / (a * 1.0));\n\tint w = ceil(m / (a * 1.0));\n\tcout << (long long)l * (long long)w << endl;\n\treturn 0;\n}	m, n and a = integers\nread m\nread n\nread a\nint l = ceil of n / (a * 1.0)\nint w = ceil of m / (a * 1.0)\nprint l * w and a new line
"int main() {\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tcout << (((a + c - 1) / c) * ((b + c - 1) / c)) << ""\n"";\n}"	"declare long longs called a, b and c\nread a, b and c\nprint (((a + c - 1) / c) * ((b + c - 1) / c)) and ""\n"""
int main() {\n\tdouble n, m, a;\n\tcin >> n >> m >> a;\n\tcout << (long long)ceil(n / a * 1.0) * (long long)ceil(m / a * 1.0) << endl;\n\treturn 0;\n}	create doubles n, m and a\nread n, m and a\nprint (n / a * 1.0) rounded upward * (m / a * 1.0) rounded upward, and a new line
int main() {\n\tlong long n, m, a, x, y;\n\tcin >> n >> m >> a;\n\tif (n % a != 0 and m % a != 0) {\n\t\tx = n / a + 1;\n\t\ty = m / a + 1;\n\t} else if (n % a == 0 and m % a != 0) {\n\t\tx = n / a;\n\t\ty = m / a + 1;\n\t} else if (n % a != 0 and m % a == 0) {\n\t\tx = n / a + 1;\n\t\ty = m / a;\n\t} else {\n\t\tx = n / a;\n\t\ty = m / a;\n\t}\n\tcout << x * y << endl;\n}	n, m, a, x and y are long longs\nread n, m and a\nif n % a != 0 and m % a != 0\nx = n / a + 1\ny = m / a + 1\nelse if n % a = 0 and m % a != 0\nx = n / a\ny = m / a + 1\nelse if n % a != 0 and m % a = 0\nx = n / a + 1\ny = m / a\nelse\nx = n / a\ny = m / a\nprint x * y and a new line
int main() {\n\tlong long n, m, a, x, y;\n\tcin >> n >> m >> a;\n\tif (n % a != 0 and m % a != 0) {\n\t\tx = n / a + 1;\n\t\ty = m / a + 1;\n\t} else if (n % a == 0 and m % a != 0) {\n\t\tx = n / a;\n\t\ty = m / a + 1;\n\t} else if (n % a != 0 and m % a == 0) {\n\t\tx = n / a + 1;\n\t\ty = m / a;\n\t} else {\n\t\tx = n / a;\n\t\ty = m / a;\n\t}\n\tcout << x * y << endl;\n}	create long longs n, m, a, x, y\nread n read m read a\nif a % a is not 0 and m % a is not 0\nset x to n / a + 1\nset y to m / a + 1\nelse if n % a is 0 and m % a is not 0\nset x to n / a\nset y to m / a + 1\nelse if n % a is not 0 and m % a is 0\nset x to n / a + 1\nset y to m / a\nelse\nset x to n / a\nset y to m / a\nprint x * y print newline
int main() {\n\tlong long i, j, c1, c2, n, m, a;\n\tcin >> n >> m >> a;\n\tif (n % a == 0)\n\t\tc1 = n / a;\n\telse\n\t\tc1 = n / a + 1;\n\tif (m % a == 0)\n\t\tc2 = m / a;\n\telse\n\t\tc2 = m / a + 1;\n\tcout << c1 * c2 << endl;\n\treturn 0;\n}	declare long longs i, j, c1, c2, n, m and a\nread n, m and a\nif n % a = 0\nc1 = n / a\nelse\nc1 = n / a + 1\nif m % a = 0\nc2 = m / a\nelse\nc2 = m / a + 1\nprint c1 * c2 and a new line
int main() {\n\tlong long n, m, a;\n\tcin >> n >> m >> a;\n\tlong long stones = (n / a) * (m / a);\n\tif (n % a != 0) { stones += m / a; }\n\tif (m % a != 0) { stones += n / a; }\n\tif (m % a != 0 && n % a != 0) { ++stones; }\n\tcout << stones << endl;\n\treturn 0;\n}	create long longs n, m and a\nread n, m and a\nlong long stones = (n / a) * (m / a)\nif n % a != 0 add m / a to stones\nif m % a != 0 add n / a to stones\nif m % a != 0 && n % a != 0 add 1 to stones\nprint stones and a new line
int main() {\n\tlong long n, m, a;\n\tcin >> n >> m >> a;\n\tlong long ans = 0;\n\tif (n % a == 0) {\n\t\tn = n / a;\n\t} else {\n\t\tn = n / a + 1;\n\t}\n\tif (m % a == 0) {\n\t\tm = m / a;\n\t} else {\n\t\tm = m / a + 1;\n\t}\n\tcout << m * n << endl;\n\treturn 0;\n}	let n, m and a be long longs\nread n, m and a\nset long long ans to 0\nif n % a is equal to 0\nn = n / a\nelse\nn = n / a + 1\nif m % a is equal to 0\nm = m / a\nelse\nm = m / a + 1\nprint m * n and a new line
int m, n, a;\nint main() {\n\tcin >> m >> n >> a;\n\tint l = ceil(n / (a * 1.0));\n\tint w = ceil(m / (a * 1.0));\n\tcout << ((long long)l * (long long)w) << endl;\n\treturn 0;\n}	m, n and a are integers\nread m, n and a\nint l = n / (a * 1.0) rounded down\nint w = m / (a * 1.0) rounded down\nprint l * w and a new line
int main() {\n\tdouble n, m, a;\n\tcin >> n >> m >> a;\n\tcout << (long long)ceil(n / a) * (long long)ceil(m / a) << endl;\n}	n, m and a = doubles\nread n, m and a\nprint (n / a) rounded up * (m / a) rounded up, and a new line
int main() {\n\tlong long n, m, a;\n\tlong long i = 0, j = 0;\n\twhile (cin >> n >> m >> a) {\n\t\tif (n % a)\n\t\t\ti = n / a + 1;\n\t\telse\n\t\t\ti = n / a;\n\t\tif (m % a)\n\t\t\tj = m / a + 1;\n\t\telse\n\t\t\tj = m / a;\n\t\tcout << i * j << endl;\n\t}\n\treturn 0;\n}	let n, m and a be long longs\ni and j are long longs with i = 0 and j = 0\nwhile car rean n, m and a\nif n % a is 1\ni = n / a + 1\nelse\ni = n / a\nif m % a is 1\nj = m / a + 1\nelse\nj = m / a\nprint i * j and a new line
int main() {\n\tlong long n, m, a;\n\tlong long i = 0, j = 0;\n\twhile (cin >> n >> m >> a) {\n\t\tif (n % a)\n\t\t\ti = n / a + 1;\n\t\telse\n\t\t\ti = n / a;\n\t\tif (m % a)\n\t\t\tj = m / a + 1;\n\t\telse\n\t\t\tj = m / a;\n\t\tcout << i * j << endl;\n\t}\n\treturn 0;\n}	create long longs n, m, a\ncreate long longs i, j, with i = 0, j = 0\nwhile read n read m read a is true\nif n % a is true\nset i to n / a + 1\nelse\nset i to n / a\nif m % a\nset j to m / a + 1\nelse\nset j to m / a\nprint i * j print newline
int main() {\n\tlong long n;\n\tlong long m;\n\tlong long a;\n\tcin >> n >> m >> a;\n\tcout << ((n + a - 1) / a) * ((m + a - 1) / a) << endl;\n\treturn 0;\n}	n = long long\nm = long long\na = long long\nread n, m and a\nprint ((n + a - 1) / a) * ((m + a - 1) / a) and a new line
int main() {\n\tlong long n;\n\tlong long m;\n\tlong long a;\n\tcin >> n >> m >> a;\n\tcout << ((n + a - 1) / a) * ((m + a - 1) / a) << endl;\n\treturn 0;\n}	create long long n\ncreate long long m\ncreate long long a\nread n read m read a\nprint ((n + a - 1) / a) * ((m + a - 1) / a) print newline
"int main() {\n\tlong long int n, m, a, ans;\n\twhile (cin >> n >> m >> a) {\n\t\tif (a > n && a > m)\n\t\t\tcout << ""1"" << endl;\n\t\telse {\n\t\t\tif (n % a > 0)\n\t\t\t\tn = (n / a) + 1;\n\t\t\telse\n\t\t\t\tn = (n / a);\n\t\t\tif (m % a > 0)\n\t\t\t\tm = (m / a) + 1;\n\t\t\telse\n\t\t\t\tm = (m / a);\n\t\t\tans = n * m;\n\t\t\tcout << ans << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"int n, m, a and ans = long longs\nread n, m and a in a loop\nif a > and a > m\nprint ""1"" and a new line\nelse\nif n % a is greater than 0\nn = (n / a) + 1\nelse\nn = (n / a)\nif m % a is greater than 0\nm = (m / a) + 1\nelse\nm = (m / a)\nans = n * m\nprint ans and a new line"
int main() {\n\tlong long x, y, a;\n\tcin >> x >> y >> a;\n\tlong long xx = x / a, yy = y / a;\n\tif (x % a != 0) xx++;\n\tif (y % a != 0) yy++;\n\tcout << xx * yy << endl;\n}	create long longs x, y and a\nread x, y and a\ndeclare long longs xx = x / a and yy = y / a\nif x % a != 0 increment xx\nif y % a != 0 increment yy\nprint xx * yy and a new line
int main() {\n\tlong long x, y, a;\n\tcin >> x >> y >> a;\n\tlong long xx = x / a, yy = y / a;\n\tif (x % a != 0) xx++;\n\tif (y % a != 0) yy++;\n\tcout << xx * yy << endl;\n}	create long longs x, y, a\nread x read y read a\ncreate long longs xx, yy, with xx = x/a, yy = y/a\nif x % a is not 0, increment xx\nif y % a is not 0, increment yy\nprint xx * yy print newline
int main() {\n\tlong long n, m, a;\n\tcin >> n >> m >> a;\n\tlong long rows = (n + a - 1) / a;\n\tlong long cols = (m + a - 1) / a;\n\tcout << rows * cols << endl;\n}	declare long longs called n, m and a\nread n, m and a\ncreate long long rows = (n + a - 1) / a\ncreate long long cols = (m + a - 1) / a\nprint rows * cols and a new line
int main() {\n\tlong long n, m, a;\n\tcin >> n >> m >> a;\n\tif (n % a == 0)\n\t\tn /= a;\n\telse\n\t\tn = n / a + 1;\n\tif (m % a == 0)\n\t\tm /= a;\n\telse\n\t\tm = m / a + 1;\n\tcout << n * m << endl;\n\treturn 0;\n}	let n, m, a be long integers\nread n, m, a\nif n modulo a is equal to 0\nthe value of n = n / a\nelse do the following\nthe value of n = n / a + 1\nif m modulo a is equal to 0\nthe value of m = m / a\nelse do the following\nthe value of m = m / a + 1\nprint n * m and newline
int main() {\n\tlong long a, b, c;\n\twhile (cin >> a >> b >> c) {\n\t\tlong long d, e;\n\t\tif (a % c != 0) d = a / c + 1;\n\t\tif (b % c != 0) e = b / c + 1;\n\t\tif (a % c == 0) d = a / c;\n\t\tif (b % c == 0) e = b / c;\n\t\tlong long f = d * e;\n\t\tcout << f << endl;\n\t}\n\treturn 0;\n}	create long longs a, b, c\nwhile read a read b read c\ncreate long longs d, e\nif a % c is not 0, set d to a / c + 1\nif b % c is not 0, set e to b / c + 1\nif a % c is 0, set d to a / c\nif b % c is 0, set e to b / c\ncreate long long f with f = d * e\nprint f print newline
int main() {\n\tlong long n, m, a;\n\twhile (cin >> n >> m >> a) cout << ((n + a - 1) / a) * ((m + a - 1) / a) << endl;\n\treturn 0;\n}	n, m, a = long lon\nwhile reading n then m then a print ((n + a - 1) / a) * ((m + a - 1) / a)
int main() {\n\tlong long x, y, a;\n\tcin >> x >> y >> a;\n\tlong long xx = x / a, yy = y / a;\n\tif (x % a != 0) xx++;\n\tif (y % a != 0) yy++;\n\tcout << xx * yy << endl;\n}	create long long x, y and a\nread x, y and a\nset xx to x/a and yy = y/a\nif x mod a different from 0, increment xx\nif y mod a different from 0, add 1 to yy\nprint xx * yy
int main() {\n\tlong long n, m, a;\n\tcin >> n >> m >> a;\n\tlong long nN, nM;\n\tnN = n / a;\n\tnM = m / a;\n\tif (n % a != 0) { nN++; }\n\tif (m % a != 0) { nM++; }\n\tcout << nN * nM << endl;\n\treturn 0;\n}	create long longs n, m, a\nread n read m read a\ncreate long longs nN, nM\nset nN to n / a\nset nM to m / a\nif n % a is not 0, increment nN\nif m % a is not 0, increment nM\nprint nN * nM print newline
"int main() {\n\tlong long a, b, c, d;\n\tcin >> a >> b >> c;\n\tif (c >= a && c >= b) {\n\t\tcout << ""1"" << endl;\n\t\treturn 0;\n\t}\n\tif (c < a && c >= b) {\n\t\tif (a % c == 0)\n\t\t\tcout << a / c << endl;\n\t\telse\n\t\t\tcout << a / c + 1 << endl;\n\t\treturn 0;\n\t}\n\tif (c >= a && c < b) {\n\t\tif (b % c == 0)\n\t\t\tcout << b / c << endl;\n\t\telse\n\t\t\tcout << b / c + 1 << endl;\n\t\treturn 0;\n\t}\n\tif (c < a && c < b) {\n\t\tif (b % c == 0 && a % c == 0)\n\t\t\tcout << (a * b) / (c * c) << endl;\n\t\telse if (b % c != 0 && a % c == 0)\n\t\t\tcout << (a / c) * (b / c + 1) << endl;\n\t\telse if (b % c == 0 && a % c != 0)\n\t\t\tcout << (b / c) * (a / c + 1) << endl;\n\t\telse\n\t\t\tcout << (a / c + 1) * (b / c + 1) << endl;\n\t\treturn 0;\n\t}\n\treturn 0;\n}"	a, b, c, d =integers\nRead a, b, c\nif c is greater than or equal to a and c is greater than or equal to b\nprint 1 and a new line\nif c is less than a and c is greater than or equal to b\nif a modulo c is 0\nprint a / c and a new line\nelse do the following\nprint a / c + 1 and a new line\nif c is greater than or equal to a and c is less than b\nif b modulo c is 0\nprint b / c and a new line\nelse do the following\nprint b / c + 1 and a new line\nif c is less than a and c is less than b\nif b modulo c is 0 and a modulo c is 0\nprint (a * b) / (c * c) and a new line\nelse if b modulo c is not 0 and a modulo c is 0\nprint (a / c) * (b / c + 1) and a new line\nelse if b modulo c is 0 and a modulo c is not 0\nprint (b / c) * (a / c + 1) and a new line\nelse do the following\nprint (a / c + 1) * (b / c + 1) and a new line
int main() {\n\tint noOfOranges, Orange, maxSize, maxWaste, Waste = 0, cnt = 0;\n\tcin >> noOfOranges >> maxSize >> maxWaste;\n\tfor (int i = 0; i < noOfOranges; i++) {\n\t\tcin >> Orange;\n\t\tif (Orange > maxSize)\n\t\t\tcontinue;\n\t\telse {\n\t\t\tWaste += Orange;\n\t\t\tif (Waste > maxWaste) {\n\t\t\t\tcnt++;\n\t\t\t\tWaste = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	noOfOranges, Orange, maxSize, maxWaste, Waste, cnt = integers with Waste = 0, cnt = 0\nread noOfOranges, maxSize, maxWaste\nfor i = 0 to noOfOranges exclusive\nread Orange\nif (Orange > maxSize)\ncontinue next itereation\nelse\nWaste = Waste + Orange\nif (Waste > maxWaste)\nincrement cnt\nWaste = 0\nprint cnt
int main() {\n\tint n, b, d, v, sum = 0, c = 0;\n\tcin >> n >> b >> d;\n\tfor (int x = 0; x < n; x++) {\n\t\tcin >> v;\n\t\tif (v <= b) sum += v;\n\t\tif (sum > d) {\n\t\t\tsum = 0;\n\t\t\tc++;\n\t\t}\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let n, b, d, v, sum , c be integers with sum = 0, c = 0\nread n , b , d\nfor x = 0 to n exclusive\nread v\nif v <= b , increment sum by v\nif sum is greater than d\nsum is equal to 0\nincrement c by 1\nprint c and endline
const int N = 1e5 + 100;\nconst double PI = 3.14159;\nvector<bool> v;\nint n, m, a[N], now, ans, b, d;\nset<int> st;\nstring s, t;\nint main() {\n\tcin >> n >> b >> d;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] > b) continue;\n\t\tnow += a[i];\n\t\tif (now > d) {\n\t\t\tans++;\n\t\t\tnow = 0;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	new constant integer N = 1e5 + 100\ndefine constant double PI with value 3.14159\ncreate vector of booleans v\ndeclare integers n, m, now, ans, b and d, and an array of integers a with N elements\nst is a set of integers\ndefine strings s and t\nread n, b and d\nin a for loop, change i from 0 to n exclusive\nread a[i] from the input\ngo to the start of the loop if a[i] is greater than b\nchange now to now + a[i]\nif now is greater than d\nincrement ans by one\nchange the value of now to 0\nprint ans to the standard output
int main() {\n\tint n{}, b{}, d{}, a{}, c{}, c2{};\n\tcin >> n >> b >> d;\n\twhile (n--) {\n\t\tcin >> a;\n\t\tif (a <= b) { c += a; };\n\t\tif (c > d) {\n\t\t\tc2++;\n\t\t\tc = 0;\n\t\t}\n\t}\n\tcout << c2 << endl;\n\treturn 0;\n}	n, b, d, a, c, c2 = integers\nread n, b, d\nwhile decrement n\nread a\nif (a <= b), c = c + a\nif (c > d)\nincrement c2\nc = 0\nprint c2
int main() {\n\tint n, b, d, result = 0, counter = 0;\n\tcin >> n >> b >> d;\n\tint oranges[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> oranges[i];\n\t\tif (oranges[i] <= b) { counter += oranges[i]; }\n\t\tif (counter > d) {\n\t\t\tresult++;\n\t\t\tcounter = 0;\n\t\t}\n\t}\n\tcout << result << endl;\n\treturn 0;\n}	create integer n, b, d, result, counter with result=0, counter=0\nread n, b, d\ncreate integer array oranges with size n\nfor integer i=0 to n-1 with increment i\nread oranges[i]\nif oranges[i] less than or equal to b then add oranges[i] to counter\nif counter greater than d then\nincrement result\nset counter to 0\nprint result
int main() {\n\tint n;\n\tcin >> n;\n\tint b;\n\tcin >> b;\n\tint d;\n\tcin >> d;\n\tint orange, volume = 0, counter = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> orange;\n\t\tif (orange <= b) volume += orange;\n\t\tif (volume > d) {\n\t\t\tvolume = 0;\n\t\t\tcounter++;\n\t\t}\n\t}\n\tcout << counter << endl;\n\treturn 0;\n}	n =integer\nRead n\nb = integer\nRead b\nd = integer\nRead d\norange, volume, counter = integers with volume = 0, counter = 0\nfor i = 0 to n exclusive\nRead orange\nif orange is less than or equal to b, set volume to volume + orange\nif volume is greater than d\nset volume to 0\nincrement counter\nprint counter and a new line
int main() {\n\tint n, b, d;\n\tcin >> n >> b >> d;\n\tint temp, ans = 0;\n\tlong long cont = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> temp;\n\t\tif (temp <= b) {\n\t\t\tcont += temp;\n\t\t\tif (cont > d) {\n\t\t\t\tans++;\n\t\t\t\tcont = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	n, b, d =integers\nRead n, b, d\ntemp, ans = integers with ans = 0\ncont =integer with 0\nfor i = 0 to n exclusive\nRead temp\nif temp is less than or equal to b\nset cont to cont + temp\nif cont is greater than d\nincrement ans\nset cont to 0\nprint ans and new line
int main() {\n\tlong double n = 0;\n\tlong double s = 0;\n\tlong double b = 0;\n\tlong double d = 0;\n\tlong double e = 0;\n\tint output = 0;\n\tcin >> n >> b >> d;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tif (s > b) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\te += s;\n\t\t\tif (e > d) {\n\t\t\t\t++output;\n\t\t\t\te = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << output << endl;\n}	n = long double with value of 0\ns = long double with value of 0\nb = long double with value of 0\nd = long double with value of 0\ne = long double with value of 0\noutput = integer with value of 0\nread n, b and d\nfor i = 0 to n exclusive\nread s\nif s is greater than b\ncontinue\nelse\nincrease e by s\nif e is greater than d\nadd 1 to output\nset e to 0\nprint output
int main() {\n\tlong long int n, b, d, i;\n\twhile (cin >> n >> b >> d) {\n\t\tlong long int a[n + 5], sum = 0, c = 0;\n\t\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tif (a[i] <= b) { sum += a[i]; }\n\t\t\tif (sum > d) {\n\t\t\t\tsum = 0;\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t\tcout << c << endl;\n\t}\n}	create long long ints n, b, d, and i\nread n, b, and d and while they're truthy\ncreate long long ints sum = 0 and c = 0 and int array a of size n + 5\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to n exclusive\nif a[i] is less than or equal to b, set sum to sum + a[i]\nif sum is greater than d\nset sum to 0\nadd 1 to c\ndisplay c
int main() {\n\tunsigned long int n, b, d, v, sum = 0, c = 0;\n\tcin >> n >> b >> d;\n\tfor (int x = 0; x < n; x++) {\n\t\tcin >> v;\n\t\tif (v <= b) sum += v;\n\t\tif (sum > d) {\n\t\t\tsum = 0;\n\t\t\tc++;\n\t\t}\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let n, b, d, v, sum and c be unsigned long integers with sum and c = 0\nread from the input to n, b and d\nstart a loop from x = 0 to n exclusive incrementing x\nread standard input to v\nif v <= b, change sum to sum + v\nif sum is greater than d\nassign 0 to sum\nincrement c by one\nprint c
int main() {\n\tint n, b, d, i, cnt = 0, a[100001], tmp = 0;\n\tcin >> n >> b >> d;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] <= b and cnt <= d) cnt += a[i];\n\t\tif (cnt > d) {\n\t\t\tcnt = 0;\n\t\t\ttmp++;\n\t\t}\n\t}\n\tcout << tmp << endl;\n\treturn 0;\n}	create integers n, b, d, i, cnt and tmp with cnt and tmp = 0; create an array of integers a with 100001 element\nread n, b and d from the input\nread elements of a from the input n times in a loop\nstart for loop from i = 0 to n exclusive incrementing i\nif a[i] <= b and cnt <= d, add a[i] to cnt\nif cnt is greater than d\nassign 0 to cnt\nincrement tmp by one\nprint tmp to the standard output
int main() {\n\tint n, b, d, result = 0, temp = 0;\n\tcin >> n >> b >> d;\n\tfor (int i = 0; i < n; i++) {\n\t\tint size;\n\t\tcin >> size;\n\t\tif (size <= b) { temp += size; }\n\t\tif (temp > d) {\n\t\t\tresult++;\n\t\t\ttemp = 0;\n\t\t}\n\t}\n\tcout << result << endl;\n\treturn 0;\n}	create int int n, b, d,,set result and temp to 0\nread n, b and d\nfor i=0 to n exclusive\ncreate int size\nread size\nif size <= b, set temp to temp + size\nif temp > d\nincrement result\nset temp to 0\nprint result
"int n, b, d;\nint main() {\n\tcin >> n >> b >> d;\n\tint ans = 0, cnt = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (x <= b) {\n\t\t\tcnt += x;\n\t\t\tif (cnt > d) {\n\t\t\t\tans++;\n\t\t\t\tcnt = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	n, b, d = integers\nread n, b, d\nans, cnt = integers with ans = 0, cnt = 0\nfor i = 0 to n exclusive\nx = integer\nread x\nif (x <= b)\ncnt = cnt + x\nif (cnt > d)\nincrement ans\ncnt = 0\nprint ans
int main() {\n\tint n, b, d, sum = 0, ans = 0;\n\tcin >> n >> b >> d;\n\tfor (int i = 0; i < n; i++) {\n\t\tint t;\n\t\tcin >> t;\n\t\tif (t <= b) {\n\t\t\tsum += t;\n\t\t\tif (sum > d) {\n\t\t\t\tsum = 0;\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n}	n, b, d, sum and ans are integers where sum and ans = 0\nread input to n, b and d\nfor integer i = 0 to n exclusive incrementing i\nt is a new integer variable\nread t\nif t <= b\nincrease sum by t\nif sum is greater than d\nassign 0 to sum\nincrement ans\nprint ans to the output stream
int main() {\n\tint n, b, d;\n\tcin >> n >> b >> d;\n\tint sum = 0;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (a <= b) { sum += a; }\n\t\tif (sum > d) {\n\t\t\tcount++;\n\t\t\tsum = 0;\n\t\t}\n\t}\n\tcout << count << endl;\n}	let n, b, d be integers\nread n, b, d\nlet integer value of sum = 0\nlet integer value of count = 0\nfor i = 0 to n exclusive\nlet a be a integer\nread a\nif a <= b , increment sum by a\nif sum is greater than d\nincrement count by 1\nsum is equal to 0\nprint count and newline
int s[100000 + 5];\nint main() {\n\tint n, b, d, ans = 0, sum = 0;\n\tcin >> n >> b >> d;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s[i];\n\t\tif (s[i] > b)\n\t\t\tcontinue;\n\t\telse\n\t\t\tsum += s[i];\n\t\tif (sum > d) {\n\t\t\tsum = 0;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	s is a new array of integers with 100000 + 5 elements\ncreate integers n, b, d, ans and sum with ans and sum = 0\nread n, b and d from the user input\nstart for loop from i = 0 to n exclusive\nread s[i] from the input\nif s[i] is greater than b\nskip the rest of the loop\nelse\nincrease sum by s[i]\nif sum is greater than d\nchange sum to 0\nincrement ans by one\nprint ans to the standard output
int main() {\n\tlong n, b, d, c = 0;\n\tcin >> n >> b >> d;\n\tlong orange[n];\n\tlong long out = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> orange[i];\n\t\tif (orange[i] > b)\n\t\t\tcontinue;\n\t\telse {\n\t\t\tout += orange[i];\n\t\t\tif (out > d) {\n\t\t\t\tc++;\n\t\t\t\tout = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << c << endl;\n}	create long n, b, d, c, set c to 0\nread n, b and d\ncreate long orange[n]\nout=0\nfor i=0 to n exclusive\nread orange[i]\nif orange[i] > b\ncontinue\nelse\nset out to out + orange[i]\nif out > d\nincrement c\nout=0\nprint c
"long long int n, b, d;\nlong long int a[100007];\nint main() {\n\tcin >> n >> b >> d;\n\t{\n\t\tfor (long long int $i = 0; $i <= n - 1; $i++) cin >> a[$i];\n\t}\n\tlong long int c = 0;\n\tlong long int s = 0;\n\tfor (long long int i = 0; i <= n - 1; i++) {\n\t\tif (a[i] <= b) {\n\t\t\ts += a[i];\n\t\t\tif (s > d) {\n\t\t\t\tc++;\n\t\t\t\ts = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << c << ""\n"";\n\treturn 0;\n}"	let n, b, d be long integers\na = array of long integers of length 100007\nread n, b, d\nfor long integer $i = 0 to n - 1 inclusive , read a[$i]\nlet c be a long integer with c = 0\nlet s be a long integer with s = 0\nfor long integer i = 0 to n - 1 inclusive\nif a[i] <= b\nincrement s by a[i]\nif s is greater than d\nincrement c by 1\ns is equal to 0\nprint c and newline
int main() {\n\tint n, b, d;\n\tcin >> n >> b >> d;\n\tint tot = 0, ret = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (a > b) continue;\n\t\ttot += a;\n\t\tif (tot > d) {\n\t\t\tret++;\n\t\t\ttot = 0;\n\t\t}\n\t}\n\tcout << ret << endl;\n\treturn 0;\n}	let n, b, d be integers\nread n, b, d\nret, tot = integers with value of 0\nfor int i = 0 to n\na = int\nread a\nif a > b, continue\nadd a to tot\nif tot > d\nadd one to ret\nlet tot = 0\nprint ret
"int main() {\n\tint x, y, a, b;\n\tcin >> x >> y >> a >> b;\n\tx = (x * y) / __gcd(x, y);\n\tcout << b / x - (a - 1) / x << ""\n"";\n\treturn 0;\n}"	x, y, a, b = integers\nread x, y, a, b\nx = (x * y) / the result of calling __gcd with arguments of x and y\nprint the result of b / x - (a - 1) / x
long long gcd(long long a, long long b) {\n\tif (a == 0 || b == 0) return 0;\n\tif (a == b) return a;\n\tif (a > b) return gcd(a - b, b);\n\treturn gcd(a, b - a);\n}\nint main() {\n\tlong long f, l, x, y, a, b, i, cnt = 0;\n\tcin >> x >> y >> a >> b;\n\tlong long lcm = (x * y) / gcd(x, y);\n\tcout << ((b / lcm) - ((a - 1) / lcm)) << endl;\n}	let gcd be a long integer function which accepts long integers a, b\nif a is equal to 0 or b is equal to 0, return 0\nif a is equal to b , return a\nif a is greater than b , return gcd of a - b, b\nreturn gcd of a, b - a\nlet f, l, x, y, a, b, i, cnt be long integers with cnt = 0\nread x, y, a, b\nlet lcm be a long integer with lcm is equal to (x * y) / gcd of x, y\nprint ((b / lcm) - ((a - 1) / lcm)) and newline
"int main() {\n\tint x, y, a, b;\n\tcin >> x >> y >> a >> b;\n\tint val = (x * y) / (__gcd(x, y));\n\tint ans;\n\tif (a % val == 0) {\n\t\tans = b / val - a / val + 1;\n\t} else {\n\t\tans = b / val - a / val;\n\t}\n\tcout << ans << ""\n"";\n}"	"declare x, y, a, b as integers\nread x read y read a read b\ndeclare val = ( x * y ) / ( run __gcd(x, y) ) as integer\ndeclare integer ans\nif a % val is 0\nlet ans be b / val - a / val + 1\nelse\nlet ans be b / val - a / val\nprint ans, ""\n"""
int main() {\n\tlong long int a, b, x, y;\n\tcin >> x >> y >> a >> b;\n\tlong long int g = __gcd(x, y);\n\tx = (x * y) / g;\n\tif (a % x == 0)\n\t\tcout << b / x - a / x + 1;\n\telse\n\t\tcout << b / x - a / x;\n\tcout << endl;\n\treturn 0;\n}	declare long long integers a, b, x, y\nread x, y, a, b\ndeclare long long integer g = run __gcd(x, y)\nlet x be ( x * y ) / g\nif a % x is 0\nprint b / x - a / x + 1\nelse\nprint b / x - a / x\nprint newline
int main() {\n\tint x, y, a, b;\n\tcin >> x >> y >> a >> b;\n\tint lcm = x * y / __gcd(x, y);\n\tint ans = b / lcm - (a - 1) / lcm;\n\tcout << ans << endl;\n\treturn 0;\n}	create new integers x, y, a and b\nread standard input to x, y, a and b\ncreate integer variable with name lcm = x * y / __gcd(x, y)\ndeclare integer ans with value b / lcm - (a - 1) / lcm\nprint ans
int gcd(int a, int b) {\n\treturn (b ? gcd(b, a % b) : a);\n}\nint main() {\n\tint x, y, a, b, v, k;\n\tcin >> x >> y >> a >> b;\n\tv = x * y / gcd(x, y);\n\tk = b / v - (a - 1) / v;\n\tcout << k << endl;\n\treturn 0;\n}	in function gcd with arguments integer a and integer b that returns an integer\nreturn the result of calling gcd with arguments of b and a modulo b if b is nonzero else return a\nx, y, a, b, v, k = integers\nread x, y, a, b\nv = x * y / the result of calling gcd with arguments of x and y\nk = b / v - (a - 1) / v\nprint k
int gcd(int a, int b) {\n\treturn b == 0 ? a : gcd(b, a % b);\n}\nint lcm(int a, int b) {\n\treturn a * (b / gcd(a, b));\n}\nint main() {\n\tint x, y, a, b;\n\tcin >> x >> y >> a >> b;\n\tint MCM = lcm(x, y);\n\tcout << (b / MCM) - ((a - 1) / MCM) << endl;\n\treturn 0;\n}	integer function gcd with int arguments a and b\nreturn a if b=0, or gcd(b, a % b) otherwise\nfunction lcm with int arguments a and b that returns integer\nreturn a * (b / gcd(a, b))\ndeclare integers x, y, a and b\nread variables x, y, a and b from the input\ndeclare integer variable MCM with value = result of lcm(x, y)\nprint (b / MCM) - ((a - 1) / MCM) to the standard output
int gcd(int a, int b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\nint LCM(int a, int b) {\n\treturn (a * b) / gcd(a, b);\n}\nint main() {\n\tint ans, x, y, aa, bb, m;\n\tcin >> x >> y >> aa >> bb;\n\tm = LCM(max(x, y), min(x, y));\n\tans = (bb / m) - (aa - 1) / m;\n\tcout << ans << endl;\n}	in function gcd taking int a, int b and returning int\nif b is 0 return a\nreturn gcd of b, a mod b\nin function LCM taking int a, int b and returning int\nreturn (a * b) / gcd of a, b\nans, x, y, aa, bb, m = int\nread x then y then aa then bb\nset m to LCM of max of x, y, min of x, y\nset ans to (bb / m) - (aa - 1) / m\nprint ans
int main() {\n\tint x, y, a, b, m, n;\n\tcin >> x >> y >> a >> b;\n\tint p = x, q = y;\n\twhile (q) {\n\t\tn = q;\n\t\tq = p % q;\n\t\tp = n;\n\t}\n\tn = (x * y) / n;\n\tm = a % n ? 0 : 1;\n\tcout << (b / n - a / n + m) << endl;\n\treturn 0;\n}	x, y, a, b, m, n = int\nread x then y then a then b\np, q = int with p = x and q = y\nloop while q\nset n to q\nset q to p mod q\nset p to n\nset n to (x * y) / n\nset m to not (a mod n)\nprint (b / n - a / n + m)
int f(int a, int b) {\n\tint t, x = a, y = b;\n\tif (x < y) {\n\t\tt = x;\n\t\tx = y;\n\t\ty = t;\n\t}\n\twhile (x % y != 0) {\n\t\tt = y;\n\t\ty = x % y;\n\t\tx = t;\n\t}\n\treturn a * b / y;\n}\nint main() {\n\tint x, y, a, b;\n\twhile (cin >> x >> y >> a >> b) {\n\t\tint t = f(x, y);\n\t\tint p = (a % t == 0) ? b / t - a / t + 1 : b / t - a / t;\n\t\tcout << p << endl;\n\t}\n\treturn 0;\n}	declare integer f with integers a, b as arguments\ndeclare integers t, x = a, y = b\nif x is less than y\nlet t be x\nlet x be y\nlet y be t\nwhile x % y is not 0\nlet t be y\nlet y be x % y\nlet x be t\nreturn a * b / y\ndeclare integers x, y, a, b\nwhile read x, y, a, b is true\ndeclare integer t = result of run f(x,y)\ndeclare integer p = b / t - a / t + 1 if a % t is 0, else b / t - a / t\nprint p, newline
int GCD(int a, int b);\nint main() {\n\tint x, y;\n\tint a, b;\n\tcin >> x >> y >> a >> b;\n\tx = x * y / GCD(x, y);\n\tcout << b / x - (a - 1) / x << endl;\n}\nint GCD(int a, int b) {\n\tint n = a % b;\n\twhile (n != 0) {\n\t\ta = b;\n\t\tb = n;\n\t\tn = a % b;\n\t}\n\treturn b;\n}	declare function GCD taking int a, int b and returning int\nx, y = int\na, b = int\nread x then y then a then b\nset x to x * y / GCD of x, y\nprint b / x - (a - 1) / x\nin function GCD taking int a, int b and returning int\nn = int with n = a mod b\nloop while n is not 0\nset a to b\nset b to n\nset n to a mod b\nreturn b
int gcd(int a, int b) {\n\tif (a == 0) return b;\n\treturn gcd(b % a, a);\n}\nint main() {\n\tint x, y;\n\tint a, b;\n\tcin >> x;\n\tcin >> y;\n\tcin >> a;\n\tcin >> b;\n\tint M = x / gcd(x, y) * y;\n\tint l = a / M;\n\tint r = b / M;\n\tif (l * M < a) { l++; }\n\tcout << r - l + 1 << endl;\n\treturn 0;\n}	function gcd (gets two ints a and b, return int)\nif a is 0 return b\nreturn gcd(b modulo a, a)\nx,y=int\na,b=int\nread x\nread y\nread a\nread b\nM=x/gcd(x,y)*y\nl=a/M\nr=b/M\nif l*M < a increment l\nprint r-l+1
int x, y, a, b;\nint ans;\nint GCD(int k, int l) {\n\tif (l == 0)\n\t\treturn k;\n\telse\n\t\treturn GCD(l, k % l);\n}\nint LCM(int m, int n) {\n\treturn (m * n) / GCD(m, n);\n}\nint main() {\n\tans = 0;\n\tcin >> x >> y >> a >> b;\n\tint kpk;\n\tkpk = LCM(x, y);\n\tans = floor(b / kpk) - floor((a - 1) / kpk);\n\tcout << ans << endl;\n\treturn 0;\n}	let x, y, a, b be integers\nlet ans be a integer\nit is a function which returns Greatest Common Divisor of two integers k, l\nif l is equal to 0\nreturn the value of k\nelse do the following\nreturn the Greatest Common Divisor of l, k modulo l\nit is a function which returns Least Common Multiple of two integers m, n\nreturn the value of (m * n) / Greatest Common Divisor of m, n\nans is equal to 0\nread x, y, a, b\nlet kpk be a integer\nkpk is equal to Least Common Multiple of x, y\nans is equal to floor (b / kpk) - floor ((a - 1) / kpk)\nprint ans and newline
int main() {\n\tint x, y, a, b, p, ans, u, v, gcd, lcm;\n\tcin >> x >> y >> a >> b;\n\tp = __gcd(x, y);\n\tlcm = (x * y) / p;\n\tu = a / lcm;\n\tv = b / lcm;\n\tans = v - u;\n\tif ((a % lcm) == 0) { ans = ans + 1; }\n\tcout << ans << endl;\n\treturn 0;\n}	let x, y, a, b, p, ans, u, v, gcd, lcm be int\nread x, y, a, b\nset p to the __gcd of x and y\nset lcm to x*y/p\nset u = a / lcm\nset v = b / lcm\nset ans = v - u\nif a mod lcm is 0 then increment ans\nprint ans
int gcd(int a, int b) {\n\treturn b == 0 ? a : gcd(b, a % b);\n}\nint lcm(int a, int b) {\n\treturn a / gcd(a, b) * b;\n}\nint main() {\n\tint x, y, a, b;\n\tcin >> x >> y >> a >> b;\n\tint LCM = lcm(x, y);\n\tcout << (b / LCM) - ((a - 1) / LCM) << endl;\n\treturn 0;\n}	declare integer gcd with integers a, b as arguments\nreturn a if b is 0, else gcd ( b, a % b )\ndeclare lcm as integer with integers a, b as arguments\nreturn a / result of run gcd with a, b as arguments * b\ndeclare x, y, a, b as integers\nread x and y and a and b\ndeclare LCM = run lcm(x,y)\nprint (b/LCM) - ((a - 1) / LCM), newline
int gcd(int x, int y) {\n\tif (y == 0) return x;\n\treturn gcd(y, x % y);\n}\nint lcm(int x, int y) {\n\treturn (x * y) / gcd(x, y);\n}\nint main() {\n\tint x, y, a, b, ans = 0;\n\tcin >> x >> y >> a >> b;\n\tans = -a / lcm(x, y) + b / lcm(x, y);\n\tif (a % lcm(x, y) == 0) ans += 1;\n\tcout << ans << endl;\n\treturn 0;\n}	declare gcd with integers x, y as arguments, returning integer\nif y is 0, return x\nreturn result of run gcd with y, x % y as arguments from function\ndeclare lcm with integers x, y as arguments, returning integer\nreturn ( x * y ) / run gcd(x,y)\ndeclare x, y, a, b, ans = 0 as integers\nread x, y, a, b\nlet ans be -a/ result of run lcm(x,y) + b / result of run lcm(x,y)\nif a % result of run lcm(x,y) is 0, increment ans by 1\nprint ans, newline
int main() {\n\tint x, y, a, b, p;\n\tcin >> x >> y >> a >> b;\n\tp = __gcd(x, y);\n\tx = x * y;\n\tx = x / p;\n\tif (a % x == 0) {\n\t\ta /= x;\n\t\ta--;\n\t} else {\n\t\ta = a / x;\n\t}\n\tb = b / x;\n\tcout << b - a << endl;\n\treturn 0;\n}	declare x, y, a, b, p as integers\nread x read y read a read b\nlet b be result of run __gcd(x, y)\nlet x be x * y\nlet x be x / p\nif a % x is 0\nlet a be a / x\ndecrement a\nelse\nlet a be a / x\nlet b be b / x\nprint b - a print newline
int gcd(int a, int b) {\n\twhile (b > 0) {\n\t\tint tmp = b;\n\t\tb = a % b;\n\t\ta = tmp;\n\t}\n\treturn a;\n}\nint lcm(int a, int b) {\n\treturn a * b / gcd(a, b);\n}\nint main() {\n\tcout << setprecision(12);\n\tint x;\n\tcin >> x;\n\t;\n\tint y;\n\tcin >> y;\n\t;\n\tint a;\n\tcin >> a;\n\t;\n\tint b;\n\tcin >> b;\n\t;\n\tcout << b / lcm(x, y) - (a - 1) / lcm(x, y) << endl;\n}	integer function gcd with int arguments a and b\nwhile b > 0\ndeclare new integer tmp with value b\nset b to a % b\nchange a to tmp\nreturn a\nint function lcm with int arguments a and b\nreturn a * b / gcd of a and b\nset output decimal precision to 12\ndeclare new integer called x\nread from the input to x\ncreate new integer variable y\nread the input to y\ncreate new integer a\nread user input to a\ndeclare new integer called b\nread variable b from the input\nprint b / lcm(x, y) - (a - 1) / lcm(x, y)
"int main() {\n\tint a, b, c, x, y, z;\n\tcin >> x >> y >> a >> b;\n\tz = (x * y) / __gcd(x, y);\n\tc = b / z;\n\tc -= (a - 1) / z;\n\tcout << c << ""\n"";\n\treturn 0;\n}"	create int a, b, c, x, y, z\nread x, y, a and b\nset z to (x * y) / __gcd(x, y)\nassign b/z to c\nset c to c - (a - 1) / z\nprint c and a newline
int gcd(int x, int y) {\n\tif (x == y) return x;\n\twhile (x != 0 && y != 0) {\n\t\tif (x > y)\n\t\t\tx %= y;\n\t\telse\n\t\t\ty %= x;\n\t}\n\treturn x < y ? y : x;\n}\nint main() {\n\tint x, y, a, b;\n\tcin >> x >> y >> a >> b;\n\tint z = x * y / gcd(x, y);\n\tcout << b / z - (a - 1) / z << endl;\n\treturn 0;\n}	let gcd be a integer function which accepts integers x and y\nif x is equal to y, return the value of x\nwhile x is not equal to 0 and y is not equal to 0\nif x is greater than y\nx is equal to x modulo y\nelse do the following\ny is equal to y modulo x\nreturn y if x is less than y else return x\nlet x, y, a, b be integers\nread x, y, a, b\nlet z be a integer with z is equal to x * y / gcd of x, y\nprint b / z - (a - 1) / z and newline
const int INF = 0x3f3f3f3f;\nint gcd(int a, int b) {\n\tif (a < b) swap(a, b);\n\tif (!b) return a;\n\treturn gcd(b, a % b);\n}\nint main() {\n\tint i, j, k;\n\tint n, m, a, b, c, d;\n\tcin >> a >> b >> c >> d;\n\tk = gcd(a, b);\n\tk = a / k * b;\n\tm = d / k - c / k;\n\tif (c % k == 0) m++;\n\tcout << m << endl;\n\treturn 0;\n}	declare constant integer INF = 0x3f3f3f3f\ndeclare gcd with integers a, b as arguments, returning integer\nif a is less than b, swap values between a and b\nif not b, return a\nreturn run gcd ( b , a % b )\ndeclare i, j, k as integers\ndeclare n, m, a, b, c, d as integers\nread a, b, c, d\nlet k be run gcd(a,b)\nlet k be a / k * b;\nlet m be d / k - c / k\nif c % k is 0, increment m\nprint m and newline
long long gcd(long long a, long long b) {\n\tif (b == 0)\n\t\treturn a;\n\telse\n\t\treturn gcd(b, a % b);\n}\nint main() {\n\tlong long x, y, a, b;\n\tcin >> x >> y >> a >> b;\n\tlong long g = gcd(max(x, y), min(x, y));\n\tlong long lcm = (x * y) / g;\n\tlong long r = b / lcm;\n\tlong long l = (a - 1) / lcm;\n\tcout << r - l << endl;\n}	let gcd be a function which accepts long integers a and b\nif b is equal to 0\nreturn the value of a\nelse do the following\nreturn value gcd of b , a modulo b\nlet x, y, a, b be long integers\nread x, y, a, b\nlet g be a long integer with g = gcd of maximum of x, y and minimum of x, y\nlet lcm be a long integer with lcm = (x * y) / g\nlet r be a long integer with r = b / lcm\nlet l be a long integer with l = (a - 1) / lcm\nprint r - l and newline
int main() {\n\tint cns = 0, cnt = 0x3f3f3f3f;\n\tint n, strength[100001];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> strength[i];\n\t\tif (strength[i] > cns) cns = strength[i];\n\t\tif (strength[i] < cnt) cnt = strength[i];\n\t}\n\tint vis = 0;\n\tfor (int i = 0; i < n; i++)\n\t\tif (strength[i] == cns || strength[i] == cnt) vis++;\n\tcout << n - vis << endl;\n\treturn 0;\n}	let cns, cnt be integers with cns is equal to 0, cnt is equal to 0x3f3f3f3f\nlet n, strength be integers with strength is equal to array of integers of length 100001\nread n\nfor i= 0 to n exclusive\nread ith element of array strength\nif (ith element of array strength is greater than cns), cns is equal to ith element of array strength\nif (ith element of array strength is less than cnt), cnt is equal to ith element of array strength\nlet vis be a integer with value is equal to 0\nfor (i = 0 to n exclusive)\nif (ith element of array strength is equal to cns or ith element of array strength is equal to cnt), increase vis by 1\nprint n - vis and newline
int main() {\n\tint size, maior = -0x3f3f3f3f, menor = 0x3f3f3f3f, c = 0;\n\tcin >> size;\n\tvector<int> vetor(size);\n\tfor (int i = 0; i < size; i++) {\n\t\tcin >> vetor[i];\n\t\tmaior = max(maior, vetor[i]), menor = min(menor, vetor[i]);\n\t}\n\tfor (int i = 0; i < size; i++)\n\t\tif (vetor[i] > menor && vetor[i] < maior) c++;\n\tcout << c << '\n';\n}	size, maior, menor c = int with maior = -0x3f3f3f3f and menor = 0x3f3f3f3f and c = 0\nread size\nvector = int vector of size size\nfor i = 0 to size\nread vctor[i]\nset maior to max of maior and vetor[i] then set menor to min of menor and vetor[i]\nfor i = 0 to size\nincrement c if vetor[i] is greater then menor and less than maior\nprint c
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tsort(a + 1, a + 1 + n);\n\tif (n == 1 || n == 2)\n\t\tcout << 0 << endl;\n\telse if (n >= 3) {\n\t\tint minn = a[1];\n\t\tint mixx = a[n];\n\t\tfor (int i = 2; i <= n - 1; i++) {\n\t\t\tif (a[i] > minn && a[i] < mixx) cnt++;\n\t\t}\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}	n = int\nread n\na = int array of size n\ncnt = int with cnt = 0\nfor i = 1 to n inclusive read a[i]\ncall sort on a + 1 and a + 1 + n\nif n equals 1 or 2\nprint 0\nelse if n is greater than 2\nminn = int with minn = a[1]\nmixx = int with mixx = a[n]\nfor i = 2 to n - 1 inclusive\nif a[i] is between minn and mixx then increment cnt\nprint cnt
int main() {\n\tint a[100010], n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tint b = a[1], c = a[n];\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (b < a[i] && a[i] < c) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n = int and a = int array of size 100010\nread n\nfor i = 1 to n inclusive read a[i]\nsort all n elements in array a starting at a + 1\nb, c = int with b = a[1] and c = a[n]\nans = int with ans = 0\nfor i = 1 to n inclusive\nif a[i] is between b and c then increment ans\nprint ans
"const int MAX = 1e5 + 5;\nint n, arr[MAX], cnt, ans;\nset<int> dict;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tdict.insert(arr[i]);\n\t}\n\tcnt = 0;\n\tfor (set<int>::iterator it = dict.begin(); it != dict.end(); ++it) cnt++;\n\tif (cnt < 3) {\n\t\tcout << ""0"" << endl;\n\t\treturn 0;\n\t}\n\tsort(arr, arr + n);\n\tans = n;\n\tfor (int i = 0; i < n; i++) {\n\t\tif ((arr[i] == arr[0]) || (arr[i] == arr[n - 1])) ans--;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	"MAX = 100005\nn,cnt,ans = int, arr = array of MAX int\ndict = set of int\nread n\nfor i=0 to n exclusive\nread arr[i]\ninsert arr[i] into dict\ncnt=0\niterate on dict incrementing cnt\nif cnt < 3\nprint ""0""\nsort first n elements of arr\nans = n\nfor i=0 to n exclusive\nif arr[i] == arr[0] or arr[n-1] decrement ans\nprint ans"
int main() {\n\tlong long int i, n, cnt = 0, a[100001];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tint mx = a[0];\n\tint mn = a[0];\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] > mx) mx = a[i];\n\t\tif (a[i] < mn) mn = a[i];\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] > mn && a[i] < mx) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	i, n, cnt =integers with cnt = 0 and a = array of 100001 integers\nRead n\nRead n values into array a\nmx = integer, set to a[0]\nmn = integer, set to a[0]\nfor i = 0 to n exclusive\nif a[i] is greater than mx, set mx to a[i]\nif a[i] is less than mn, set mn to a[i]\nfor i = 0 to n exclusive\nif a[i] is greater than mn and a[i] is less than mx\nprint cnt and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tint a = arr[0], b = arr[n - 1];\n\tint x = upper_bound(arr, arr + n, a) - arr;\n\tint y = lower_bound(arr, arr + n, b) - arr;\n\tif (y == 0)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << y - x << endl;\n\treturn 0;\n}	n = int\nread n\narr = int array of size n\nread n values into arr\nsort array arr\na, b = int with a = arr[0] and b = arr[n - 1]\nx = int with x = value of upper_bound of arr, arr + n and a - arr\ny = int with y = value of lower_bound of arr, arr + n and a - arr\nif y is 0\nprint 0\nelse\nprint y - x
"int main() {\n\tint s;\n\tcin >> s;\n\tint a[s];\n\tfor (int i = 0; i < s; i++) cin >> a[i];\n\tsort(a, a + s);\n\tif (s == 1 || s == 2) {\n\t\tcout << ""0"" << endl;\n\t\treturn 0;\n\t}\n\tint t = s - 2;\n\tfor (int i = 1; i < s - 1; i++) {\n\t\tif (a[i] > a[0] && a[i] < a[s - 1])\n\t\t\tcontinue;\n\t\telse\n\t\t\tt--;\n\t}\n\tcout << t << endl;\n\treturn 0;\n}"	"create integer s\nread s\nlet a be integer array with size s\nfor i = 0 to s exclusive read a[i]\nsort a\nif s = 1 || s = 2\nprint ""0""\ndeclare integer variable t = s - 2\nfor integer i = 1 to s - 1 exclusive\nif a[i] > a[0] and a[i] < a[s - 1]\nskip the rest of the loop\nelse\ndecrease t by one\nprint t"
int main() {\n\tint n;\n\tcin >> n;\n\tint t;\n\tvector<int> a;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> t;\n\t\ta.push_back(t);\n\t}\n\tif (a.size() < 3) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tsort(a.begin(), a.end());\n\tint cnt = 0;\n\tfor (int i = 1; i <= n - 2; i++) {\n\t\tif (a[i] > a[0] && a[i] < a[n - 1]) { cnt++; }\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integer t\ncreate integer vector a\nfor i = 0 to n exclusive\nread t\nadd element t to end of a\nif size of a is less than 3\nprint 0 print newline\nsort elements from beginning of a to end of a\ncreate integer cnt with cnt = 0\nfor i = 1 to n - 2 inclusive\nif a[i] is greater than a[0] and a[i] is less than a[n-1], increment cnt\nprint cnt print newline
int main() {\n\tint n, a[100000], sum = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tint max = a[0], min = a[0];\n\tfor (int j = 0; j < n; j++) {\n\t\tif (max < a[j]) max = a[j];\n\t\tif (min > a[j]) min = a[j];\n\t}\n\tfor (int t = 0; t < n; t++) {\n\t\tif (a[t] < max && a[t] > min) sum++;\n\t}\n\tcout << sum << endl;\n}	create integers n, sum with sum = 0, create integer array a with size 100000\nread n\nfor i = 0 to n exclusive, read a[i]\ncreate integers max, min with max = a[0], min = a[0]\nfor j = 0 to n exclusive\nif max is less than a[j], set max to a[j]\nif min is greater than a[j], set min to a[j]\nfor t = 0 to n exclusive\nif a[t] is less than max and a[t] is greater than min, increment sum\nprint sum print newline
int a[100005];\nint main() {\n\tint n, c1 = 0, c2 = 0, maxx = 0, minn = 1000000007;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tmaxx = max(maxx, a[i]), minn = min(minn, a[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] == maxx) c1++;\n\t\tif (a[i] == minn) c2++;\n\t}\n\tif (maxx == minn)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << n - c1 - c2 << endl;\n\treturn 0;\n}	let a be integer array with size 100005\ndeclare integer variables n, c1, c2, maxx and minn with c1, c2 and maxx = 0 and minn = 1000000007\nread n\nfor i = 0 to n exclusive\nread a[i]\nmaxx = max of maxx and a[i], minn = min of minn and a[i]\nfor integer i = 0 to n exclusive\nincrement c1 if a[i] = maxx\nincrement c2 if a[i] = minn\nif maxx = minn\nprint 0\nelse\nprint n - c1 - c2
int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tif (n < 3) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tsort(arr, arr + n);\n\tint cnt = 0;\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tif (arr[i] > arr[0] && arr[i] < arr[n - 1]) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	n = int\nread n\narr = int array of size n\nread n values into arr\nif n is less than 3\nprint 0\nsort array arr\ncnt = int with cnt = 0\nfor i = 1 to n - 1\nif arr[i] is between the first and last value of arr then increment cnt\nprint cnt
int main() {\n\tint n, b, s, ans = 0;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; ++i) { cin >> arr[i]; }\n\tb = arr[0];\n\ts = arr[0];\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (arr[i] > b) b = arr[i];\n\t\tif (arr[i] < s) s = arr[i];\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (arr[i] == b || arr[i] == s) continue;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n, b, s, ans = integers with ans = 0\nread n\narr = integer array of n\nfor i = 0 to n exclusive, read arr[i]\nb = arr[0]\ns = arr[0]\nfor i = 0 to n exclusive\nif arr[i] > b, b = arr[i]\nif arr[i] < s, s = arr[i]\nfor i = 0 to n exclusive\nif arr[i] is b or arr[i] is s, continue next iteration\nincrement ans\nprint ans
int a[100005];\nint main() {\n\tint n, m;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tint t = n;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (a[i] == a[1] || a[i] == a[n]) t--;\n\tcout << t << endl;\n\treturn 0;\n}	create int array a of length 100005\ncreate n and m\nread n\nfor i=1 to n inclusive, read a[i]\nsort a + 1, a + n + 1\nt = n\nfor i=1 to n inclusive\nif a[i] = a[1] or a[i] = a[n], decrement t\nprint t
int main() {\n\tint n, count = 0;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tint mx = *max_element(a, a + n);\n\tint mn = *min_element(a, a + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] > mn && a[i] < mx) { count++; }\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	n, count = integer with count = 0\nread n\na = integer array of size n\nfor i = 0 to n exclusive, read a[i]\nsort a and a + n\nmx = integer with mx = pointer max_element(a, a + n)\nmn = integer with mn = pointer min_element(a, a + n)\nfor i = 0 to n exclusive\nif a[i] > mn and a[i] < mx, increment count\nprint count
"int main() {\n\tlong long n, cnt = 0;\n\tcin >> n;\n\tvector<long long> x(n);\n\tset<long long> y;\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> x[i];\n\t\ty.insert(x[i]);\n\t}\n\tif (n <= 2 || y.size() <= 2)\n\t\tcout << ""0"" << endl;\n\telse {\n\t\tsort(x.begin(), x.end());\n\t\tfor (long long i = 0; i < n; i++) {\n\t\t\tif (x[i] != x[0] && x[i] != x[n - 1]) cnt++;\n\t\t}\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}"	"declare long long variables n and cnt where cnt = 0\nread n\nx is vector of long longs with n elements\ny is a set of long longs\nloop i from 0 to n exclusive\nread x[i]\ninsert x[i] into y\nif n <= 2 or size of y <= 2\nprint ""0""\nelse\nsort x\nloop i from 0 to n exclusive\nif x[i] != x[0] and x[i] != x[n - 1], increment cnt by one\nprint cnt"
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> se;\n\tint answer = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tse.push_back(x);\n\t}\n\tsort(se.begin(), se.end());\n\tint min = se[0];\n\tint max = se[n - 1];\n\tfor (int i = 0; i < n; i++) {\n\t\tif (se[i] > min && se[i] < max) { ++answer; }\n\t}\n\tcout << answer << endl;\n\treturn 0;\n}	n = int\nread n\nse = int vector\nanswer = int with answer = 0\nfor i = 0 to n\nx = int\nread x\nappend x to se\nsort se\nmin = int with min = se[0]\nmax = int with max = last value of se\nfor i = 0 to n\nif se[i] is between min and max then increment answer\nprint answer
int main() {\n\tint a[100000], n, c1 = 0, c2 = 0, mx = 0, mn = 1000000000;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tmx = max(mx, a[i]);\n\t\tmn = min(mn, a[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] == mx) c1++;\n\t\tif (a[i] == mn) c2++;\n\t}\n\tif (mx == mn)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << (n - c1 - c2) << endl;\n\treturn 0;\n}	create integer array a with size 100000, create integers n, c1, c2, mx, mn with c1 = 0, c2 = 0, mx = 0, mn = 1000000000\nread n\nfor i = 0 to n exclusive\nread a[i]\nset mx to maximum of mx and a[i]\nset mn to minimum of mn and a[i]\nfor i = 0 to n exclusive\nif a[i] is mx, increment c1\nif a[i] is mn, increment c2\nif mx is mn\nprint 0 print newline\nelse\nprint ( n - c1 - c2 ) print newline
int main() {\n\tint n, res = 0, mn = INT_MAX, mx = INT_MIN;\n\tint a[100001];\n\tbool b1 = 0, b2 = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < n; i++) {\n\t\tmn = min(a[i], mn);\n\t\tmx = max(a[i], mx);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] > mn && a[i] < mx) ++res;\n\t}\n\tcout << res << endl;\n\treturn 0;\n}	n, res, mn, mx = integers with res = 0, mn = INT_MAX, mx = INT_MIN\na = integer array of size 100001\nb1, b2 = bool with b1 = 0, b2 = 0\nread n\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to n exclusive\nmn = min of a[i] and mn\nmx = max of a[i] and mx\nfor i = 0 to n exclusive\nif a[i] > mn and a[i] < mx, increment res\nprint res
"int main() {\n\tint t, a[105];\n\tcin >> t;\n\tfor (int i = 0; i < t; i++) { cin >> a[i]; }\n\tsort(a, a + t);\n\tcout << a[t - 1] << "" "";\n\tfor (int i = 1; i <= t - 2; i++) cout << a[i] << "" "";\n\tcout << a[0] << ""\n"";\n\treturn 0;\n}"	create integer t, integer array a with dimension 105\nread t\nfor integer i=0 to t-1 with increment i do read a[i]\nsort a\nprint a[t-1] and a blank space\nfor integer i=1 to t-2 with increment i do print a[i] and a blank space\nprint a[0]
int a[101];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tcout << a[n] << ' ';\n\tfor (int i = 2; i <= n - 1; ++i) cout << a[i] << ' ';\n\tcout << a[1] << endl;\n\treturn 0;\n}	create integer array a of size 101\ncreate int n\nread n\nfor i = 1 to n, read a[i]\nsort a + 1 using argument a + n + 1\nprint a[n] and ' '\nfor i = 2 to n - 1, print a[i] and ' '\nprint a[1]
const int mod = 1e9 + 7;\nconst int maxn = 110;\nconst int inf = 0x3f3f3f3f;\nint p[maxn];\nint q[maxn];\nint main() {\n\tint t;\n\twhile (cin >> t) {\n\t\tfor (int i = 1; i <= t; i++) { cin >> p[i]; }\n\t\tsort(p + 1, p + 1 + t);\n\t\tcout << p[t] << ' ';\n\t\tfor (int i = 2; i < t; i++) { cout << p[i] << ' '; }\n\t\tcout << p[1] << endl;\n\t}\n\treturn 0;\n}	declare constant integer mod with value 1e9 + 7\nmax i a new constant integer with value 110\ncreate new constant int inf = 0x3f3f3f3f\np is an array of integers with maxn elements\ndeclare new array of integers q with size maxn\ncreate new integer variable t\nread t and loop further\nfor i from 1 to t inclusive, read from the input to p[i]\nsort p\nprint p[t] and ' '\nin a for loop, change i from 2 to t exclusive, printing p[i] and ' ' on each loop iteration\nprint p[1]
int a[105];\nconst int inf = 0x3f3f3f3f;\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint ma = -inf, mi = inf;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> a[i];\n\t\t\tma = max(ma, a[i]);\n\t\t\tmi = min(mi, a[i]);\n\t\t}\n\t\tsort(a, a + n);\n\t\tcout << ma << ' ';\n\t\tfor (int i = 1; i < n - 1; i++) { cout << a[i] << ' '; }\n\t\tcout << mi << endl;\n\t}\n}	a is a new array of integers with size 105\ninf is a new constant integer = 0x3f3f3f3f\ncreate integer variable n\nloop, reading n from the input\ndeclare integer variables ma with value -inf and mi = inf\nfor i from 0 to n exclusive incrementing i\nread variable a[i] from the input\nchange the value of ma to max of ma and a[i]\nassign the new value = min of mi and a[i] to mi\nsort a\nprint ma and ' '\nprint elements of a from the index 1 to n - 1 exclusive with ' ' after each one\nprint mi
const int INF = 100000000;\nint a[150];\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\t\tsort(a + 1, a + n + 1);\n\t\tint t = a[1];\n\t\ta[1] = a[n];\n\t\ta[n] = t;\n\t\tcout << a[1];\n\t\tfor (int i = 2; i <= n; i++) cout << ' ' << a[i];\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	declare new constant integer INF with value 100000000\na is a new array of integers with size 150\ncreate integer n\nread n and loop further\nread standard input to a from the index i to n inclusive\nsort a\ncreate integer variable t with value a[1]\nassign a[n] to a[1]\nchange a[n] to t\nprint a[1]\nstart for loop from i = 2 to n inclusive, print ' ' and a[i] on each loop\nprint new line
"int main() {\n\tint n, j, i, r, a[200];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (i = 0; i < n - 1; i++) {\n\t\tfor (j = 0; j < n - 1 - i; j++) {\n\t\t\tif (a[j] > a[j + 1]) {\n\t\t\t\tr = a[j];\n\t\t\t\ta[j] = a[j + 1];\n\t\t\t\ta[j + 1] = r;\n\t\t\t}\n\t\t}\n\t}\n\tcout << a[n - 1] << "" "";\n\tfor (i = 1; i < n - 1; i++) { cout << a[i] << "" ""; }\n\tcout << a[0] << endl;\n\treturn 0;\n}"	"n, j, i, r = int and a = int array of size 200\nread n\nread n values into a\nfor i = 0 to n - 1\nfor j = 0 to n - 1 - i\nif a[j] > a[j + 1]\nset r to a[j]\nset a[j] to a[j + 1]\nset a[j + 1] to r\nprint a[n - 1]\nfor i = 1 to n - 1 print a[i] then "" ""\nprint a[0]"
bool qo(bool x) {\n\treturn (x ? 0 : qo(!x));\n}\nconst int mnx = 1e7 + 9;\nconst int mod = 1e9 + 7;\nlong long n;\nlong long x[mnx];\nlong long u[mnx];\nlong long k[mnx];\nlong long cnt, c;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> x[i]; }\n\tsort(x + 1, x + n + 1);\n\tcout << x[n] << ' ';\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (i == n || i == 1) continue;\n\t\tcout << x[i] << ' ';\n\t}\n\tcout << x[1] << '\n';\n\treturn 0;\n}	function qo with bool argument x that returns boolean\nreturn 0 if x is true and qo(!x) othersiwe\nmnx is a new constant integer = 1e7 + 9\ndeclare new constant called mod with value 1e9+7 and type int\ncreate new long long n\ndeclare new array of long longs x with mnx elements\ncreate new array of long longs u with size mnx\nk is a new array of long longs with size mnx\ndeclare new long long variables cnt and c\nread n from the user input\nread n elements from the input to x[i] starting from the index 1\nsort x from position 1 to n + 1\nprint x[n] and ' '\nstart for loop from i = 1 to n inclusive\nif i = n or i = 1, go to the start of the loop\nprint x[i] and ' '\nprint x[1] and '\n' to the standard output
"const int N = 1e6 + 5;\nint n, a, c = 2, ans;\nvector<int> v;\nint main() {\n\tcin >> n;\n\twhile (n--) cin >> a, v.push_back(a);\n\tsort(v.begin(), v.end());\n\tif (v.size() == 2) {\n\t\tcout << v.back() << "" "" << v[0] << endl;\n\t\treturn 0;\n\t}\n\tcout << v.back() << "" "";\n\tfor (int i = 1; i < v.size() - 1; i++) cout << v[i] << "" "";\n\tcout << v[0] << endl;\n}"	"declare constant integer N = 1e6 + 5\ndeclare integers n, a, c = 2, ans\ndeclare integer vector v\nread n\nwhile decrement n is true, read a, add a to end of v\nsort from beginning of v to end of v\nif size of v is 2\nprint back of v, "" "", v[0], newline\nprint back of v, "" ""\nfor i = 1 to size of v - 1 exclusive, print v[i], "" ""\nprint v[0] and newline"
const long long mod = 1e9 + 7;\nconst int N = 1e5 + 5;\nlong long gcd(long long a, long long b) {\n\treturn b ? gcd(b, a % b) : a;\n}\nlong long pwr(long long x, long long y);\nbool isprime(long long x);\nvector<int> v;\nint main() {\n\tint n, x;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tsort(v.begin(), v.end());\n\tcout << v[v.size() - 1] << ' ';\n\tfor (int i = 1; i < v.size() - 1; i++) { cout << v[i] << ' '; }\n\tcout << v[0] << endl;\n\treturn 0;\n}\nlong long pwr(long long x, long long y) {\n\tlong long ans = 1;\n\tx = x % mod;\n\twhile (y > 0) {\n\t\tif (y & 1) ans = (x * ans) % mod;\n\t\tx = (x * x) % mod;\n\t\ty = y / 2;\n\t}\n\treturn ans;\n}\nbool isprime(long long x) {\n\tif (x < 2) return false;\n\tif (x < 4) return true;\n\tif (x % 2 == 0 || x % 3 == 0) return false;\n\tfor (long long i = 5; i * i <= x; i += 6) {\n\t\tif (x % i == 0 || x % (i + 2) == 0) return false;\n\t}\n\treturn true;\n}	mod is a new constant long long = 1e9 + 7\ncreate new constant integer N = 1e5 + 5\nlong long function gcd with long long arguments a and b\nreturn gcd(b, a % b) if b ! =0 or a otherwise\nempty long long function pwr with long long arguments x and y\nisprime is an empty boolean function with long long argument x\ncreate vector of integers v\ncreate integers n and x\nread standard input to n\nloop, decrementing n, while it is not 0\nread user input to x\npush x to the back of v\nsort v from start to end\nprint v[length of v - 1] and ' ' to the standard output\nin a for loop, change i from 1 to length of v - 1 exclusive; print v[i] and ' ' on each iteration\nprint v[0]\npwr is a long long function with long long arguments x and y\ndeclare new long long variable ans with value 1\nchange x to x % mod\nwhile y > 0\nif y & 1 != 0, assign the value = (x * ans) % mod to ans\nchange x to x squared modulo mod\nchange y to y / 2\nreturn ans\nboolean function isprime with long long argument x\nif x is less than 2, return false\nif x is less than 4, return true\nif x is even or x % 3 is equal to 0, return false\nstart a loop from i = 5, while i * i <= x, increasing i by 6\nif x % i or x % (i + 2) is equal to 0, return false\nreturn true
int main() {\n\tint a[101];\n\tint n;\n\twhile (cin >> n) {\n\t\tint i;\n\t\tfor (int i = 0; i < n; i++) cin >> a[i];\n\t\tsort(a, a + n);\n\t\tcout << a[n - 1] << ' ';\n\t\tfor (i = 1; i < n - 1; i++) { cout << a[i] << ' '; }\n\t\tcout << a[0] << endl;\n\t}\n\treturn 0;\n}	create int array a of size 101\ncreate int n\nread n and while it's truthy\ncreate int i\nfor i = 0 to n exclusive, read a[i]\nsort a\nprint a[n - 1] and ' '\nfor i = 1 to n - 1 exclusive, print a[i] and ' '\nprint a[0]
"int main() {\n\tint n, i;\n\twhile (cin >> n) {\n\t\tint arr[110] = {0}, max = -10000, min = 10000, p_max, p_min, res[110] = {0}, k;\n\t\tcin >> arr[0];\n\t\tmax = min = arr[0];\n\t\tp_max = p_min = 0;\n\t\tfor (i = 1; i < n; i++) {\n\t\t\tcin >> arr[i];\n\t\t\tif (arr[i] < min) {\n\t\t\t\tmin = arr[i];\n\t\t\t\tp_min = i;\n\t\t\t} else if (arr[i] > max) {\n\t\t\t\tmax = arr[i];\n\t\t\t\tp_max = i;\n\t\t\t}\n\t\t}\n\t\tk = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tif (i == p_min || i == p_max) continue;\n\t\t\tres[k++] = arr[i];\n\t\t}\n\t\tsort(res, res + k);\n\t\tif (p_max != p_min) cout << max << "" "";\n\t\tfor (i = 0; i < k; i++) cout << res[i] << "" "";\n\t\tcout << min << endl;\n\t}\n\treturn 0;\n}"	n,i=int\nwhile read n\narr and res=array of 110 int filled with 0, max=-10000, min=10000, p_max, p_min and k=int\nread arr[0]\nmax = min = arr[0]\np_max = p_min = 0\nfor i=1 to n exclusive\nread arr[i]\nif arr[i] < min\nmin=arr[i]\np_min=i\nelse if arr[i]>max\nmax=arr[i]\np_max=i\nk=0\nfor i=0 to n exclusive\nif i is p_min or p_max continue\nres[k]=arr[i], increment k\nsort first k items of res\nif p_max is not p_min print max, space\nfor i=0 to k exclusive print res[i], space\nprint min
"int main() {\n\tint n;\n\tint a[1000];\n\twhile (cin >> n) {\n\t\tint b, c;\n\t\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\t\tsort(a, a + n);\n\t\tb = a[0];\n\t\tc = a[n - 1];\n\t\tcout << c;\n\t\tfor (int i = 1; i < n - 1; i++) { cout << "" "" << a[i]; }\n\t\tcout << "" "" << b << endl;\n\t}\n\treturn 0;\n}"	"n is a new integer\na is a new array of integers with size 1000\nread n and keep looping\ndeclare new integers b and c\nread n elements from the input stream into a[i]\nsort a\nassign the new value = a[0] to b\nassign a[n - 1] to c\nprint c to the standard output\nin a for loop, change i from 1 to n - 1 exclusive, print "" "" and a[i] on each iteration\nprint "" "" and b to the standard output"
"bool cmp(int a, int b) {\n\treturn a > b;\n}\nint cc[105];\nint main() {\n\tint n, res = 0, flag = 0, f;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> cc[i]; }\n\tsort(cc + 1, cc + 1 + n);\n\tswap(cc[1], cc[n]);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (i == n)\n\t\t\tcout << cc[i] << endl;\n\t\telse\n\t\t\tcout << cc[i] << "" "";\n\t}\n\treturn 0;\n}"	let cmp be a boolean function which accepts integers a , b\nreturn a greater than b\ncc = array of integers of length 105\nlet n, res , flag , f be integers with res = 0, flag = 0\nread n\nfor i = 1 to n inclusive, read cc[i]\nsort the values cc + 1 and cc + 1 + n\nswap the values cc[1], cc[n]\nfor i = 1 to n inclusive\nif i is equal to n\nprint cc[i] and newline\nelse do the following\nprint cc[i] and space
"const int INF = 0x3f3f3f3f;\nconst int T = 100 + 3;\nint row[T];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> row[i];\n\tsort(row, row + n);\n\tcout << row[n - 1] << "" "";\n\tfor (int i = 1; i < n - 1; i++) cout << row[i] << "" "";\n\tcout << row[0] << endl;\n\treturn 0;\n}"	INF = const integer with INF = 0x3f3f3f3f\nT = const integer with T = 103\nrow = integer array of size T\nn = integer\nread n\nfor i = 0 to n exclusive, read row[i]\nsort row and row + n\nprint row[n - 1]\nfor i = 1 to n -1 exclusive, print row[i]\nprint row[0]
"int p[500];\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tmemset(p, 0, sizeof(p));\n\t\tfor (int i = 0; i < n; i++) { cin >> p[i]; }\n\t\tsort(p, p + n);\n\t\tcout << p[n - 1];\n\t\tfor (int i = 1; i < n - 1; i++) { cout << "" "" << p[i]; }\n\t\tcout << "" "" << p[0] << endl;\n\t}\n}"	"declare new array of integers p with size 500\ndeclare integer n\nread n and keep looping\nset values of first sizeof(p) bytes at the pointer p to 0\nfor integer i = 0 to n exclusive, read p[i]\nsort p from index 0 to n\nprint p[n - 1] to the standard output\nprint "" "" and p[i] to the standard output on a loop for i from 1 to n - 1 exclusive\nprint "" "" and p[0]"
"int A[100010];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> A[i];\n\tsort(A, A + n);\n\treverse(A, A + n);\n\tvector<int> ans;\n\tcout << A[0] << "" "";\n\tfor (int i = n - 2; i >= 1; i--) cout << A[i] << "" "";\n\tcout << A[n - 1] << '\n';\n}"	let A an int array of length 100010\nlet n an int\nread n\nread the first n values of A\nsort the first n values of A\nreverse the first n values of A\nlet ans be a vector of ints\nprint A[0]\nfor i from n-2 down to 1, print A[i]\nprint A[n-1]
"int a[110];\nint main() {\n\tint n;\n\tcin >> n;\n\tint i;\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tcout << a[n - 1] << "" "";\n\tfor (i = 1; i < n - 1; i++) { cout << a[i] << "" ""; }\n\tcout << a[0] << endl;\n\treturn 0;\n}"	a = integer array of size 110\nn = integer\nread n\ni = integer\nfor i = 0 to n exclusive, read a[i]\nsort a and a + n\nprint a[n - 1]\nfor i = 1 to n - 1 exclusive, print a[i]\nprint a[0]
"int main() {\n\tvector<int> v;\n\tint n, a;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> a;\n\t\tv.push_back(a);\n\t}\n\tsort(v.begin(), v.end());\n\tcout << v[v.size() - 1] << "" "";\n\tfor (int i = 1; i + 1 < v.size(); i++) { cout << v[i] << "" ""; }\n\tcout << v[0] << endl;\n\treturn 0;\n}"	v = vector of integer\nn, a = integers\nread n\nwhile decrement n\nread a\nappend a in v\nsort v.begin() and v.end()\nprint v[v.size() - 1]\nfor i = 1 to i + 1 < v.size(), print v[i]\nprint v[0]
"int main() {\n\tint n, i;\n\tcin >> n;\n\tint a[n + 1];\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tcout << a[n] << "" "";\n\tfor (i = 2; i < n; i++) cout << a[i] << "" "";\n\tcout << a[1] << endl;\n\treturn 0;\n}"	let n, i be integers\nread n\na = array of integers of length n + 1\nfor i = 1 to n inclusive , read a[i]\nsort the values a + 1, a + n + 1\nprint a[n] and space\nfor i = 2 to n exclusive , print a[i] and space\nprint a[1] and newline
int main() {\n\tstring a;\n\tcin >> a;\n\tint s = 0;\n\tfor (int i = 0; a[i]; i++) {\n\t\tif (a[i] == 'a' || a[i] == 'e' || a[i] == 'i' || a[i] == 'o' || a[i] == 'u')\n\t\t\ts++;\n\t\telse if (a[i] >= '0' && a[i] <= '9' && (a[i] - 48) % 2 != 0)\n\t\t\ts++;\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	declare string a\nread a\ndeclare integer s = 0\nfor i = 0 to a[i], incrementing i\nif a[i] is 'a' or a[i] is 'e' or a[i] is 'i' or a[i] is 'o' or a[i] is 'u'\nincrement s\nelse if a[i] is greater than or equal to '0' and a[i] is less than or equal to '9' and ( a[i] - 48 ) % 2 is not 0\nincrement s\nprint s and newline
"int main() {\n\tstring a;\n\tcin >> a;\n\tint num = 0;\n\tstring b = ""aeiou13579"";\n\tfor (int i = 0; i < a.size(); i++) {\n\t\tfor (int j = 0; j < b.size(); j++) {\n\t\t\tif (a[i] == b[j]) num++;\n\t\t}\n\t}\n\tcout << num << endl;\n}"	create string a\nread a\nnum = 0\nb = aeiou13579\nfor i = 0 to size of a exclusive\nfor j = 0 to size of b exclusive\nif a[i] = b[j] increment num\nprint num
bool isVowel(char a) {\n\treturn (a == 'a' || a == 'e' || a == 'i' || a == 'o' || a == 'u');\n}\nbool isOdd(char a) {\n\treturn (a == '1' || a == '3' || a == '5' || a == '7' || a == '9');\n}\nint main() {\n\tstring text;\n\tcin >> text;\n\tint num = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (isVowel(text[i]) || isOdd(text[i])) num++;\n\t}\n\tcout << num << endl;\n}	function isVowel takes a character a and returns a boolean value\nreturn the value of (a is equal to a or a is equal to e or a is equal to i or a is equal to o or a is equal to u)\nfunction isOdd takes a character a and returns a boolean value\nreturn the value of (a is equal to 1 or a is equal to 3 or a is equal to 5 or a is equal to 7 or a is equal to 9)\ntext is a string\nread text\nnum is an integer and equals 0\nfor integer i = 0 to text.length() exclusive\nif isVowel(text[i]) or isOdd(text[i] is true, increase num by 1\nprint num and newline
"int main() {\n\tstring s;\n\tint num = 0;\n\twhile (cin >> s) {\n\t\tfor (int i = 0; i < s.length(); i++)\n\t\t\tif (strchr(""aeiou13579"", s[i])) num++;\n\t\tcout << num << endl;\n\t}\n\treturn 0;\n}"	s = string\nnum = integer = 0\nwhile s is read as a valid string\nfor i = 0 to length of s exclusive\nif s[i] contians a,e,i,o,u,1,3,5,7, or 9, then increase num by 1\nprint num
int main() {\n\tmap<char, int> t;\n\tt['a'] = 1;\n\tt['e'] = 1;\n\tt['i'] = 1;\n\tt['o'] = 1;\n\tt['u'] = 1;\n\tt['1'] = 1;\n\tt['3'] = 1;\n\tt['5'] = 1;\n\tt['7'] = 1;\n\tt['9'] = 1;\n\tint ans = 0;\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) { ans += t[s[i]]; }\n\tcout << ans << endl;\n}	make a map called t using character and integer\nset t[a] to 1\nset t[e] to 1\nset t[i] to 1\nset t[o] to 1\nset t[u] to 1\nset t[1] to 1\nset t[3] to 1\nset t[5] to 1\nset t[7] to 1\nset t[9] to 1\nintegers = ans = 0\ns = string array\nread s\nfor i = 0 to less than s.size() then add one to t[s[i]]\noutput ans
"int main() {\n\tint res = 0;\n\tstring a = ""aeiou13579"";\n\tstring str;\n\tcin >> str;\n\tfor (int i = 0; str[i]; i++) {\n\t\tif (a.find(str[i]) != -1) res++;\n\t}\n\tcout << res << endl;\n\treturn 0;\n}"	"declare integer variable with name res = 0\ncreate new string a = ""aeiou13579""\ncreate string variable str\nread str from the input\nin a for loop, change i from 0 to exclusive\nif there is part, that equals to str[i], in a, increment res\nprint res"
"int main() {\n\tstring s;\n\tcin >> s;\n\tstring a = ""aeiou13579"";\n\tint cnt = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tfor (int j = 0; j < a.size(); j++) {\n\t\t\tif (s[i] == a[j]) { cnt++; }\n\t\t}\n\t}\n\tcout << cnt << ""\n"";\n\treturn 0;\n}"	s = string\nread s\na = string = aeiou13579\ncnt = integer = 0\nfor i = 0 to size of s exclusive\nfor j = 0 to size of a exclusive\nif s[i] is a[j], then increase cnt by 1\nprint cnt
bool vowel(char ch) {\n\tif (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nbool even(char ch) {\n\tif (ch == '1' || ch == '3' || ch == '5' || ch == '7' || ch == '9') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\tint len = s.size();\n\tint count = 0;\n\tfor (int i = 0; i < len; i++) {\n\t\tchar ch = s[i];\n\t\tif (vowel(ch)) { count++; }\n\t\tif (even(ch)) { count++; }\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	vowel is a bool function with char argument ch\nif ch is one of: 'a', 'e', 'i', 'o' or 'u'\nreturn true\nelse\nreturn false\nboolean function even with char argument ch\nif ch is an odd digit character\nreturn true\nelse\nreturn false\ndeclare new string s\nread user input to s\ncreate integer variable with name len\ncount is a new integer with value 0\nfor i from 0 to len exclusive incrementing i\ncreate new character called ch with value s[i]\nif vowel(ch) returns true, increment count by one\nif even(ch) returns true, increment count by one\nprint count
int main() {\n\tstring s;\n\tcin >> s;\n\tint i, j;\n\tint len = s.length();\n\tint cnt = 0;\n\tfor (i = 0; i < len; i++) {\n\t\tif (s[i] >= 'a' && s[i] <= 'z') {\n\t\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') cnt++;\n\t\t}\n\t\tif (s[i] >= '0' && s[i] <= '9') {\n\t\t\tif ((s[i] - '0') % 2 == 1) cnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n}	declare string s\nread s\ndeclare integers i and j\ndeclare integer len = length of s\ndeclare integer cnt = 0\nfor i = 0 to len exclusive\nif s[i] is greater than or equal to 'a' and s[i] is less than or equal to 'z'\nif s[i] is 'a' or s[i] is 'e' or s[i] is 'i' or s[i] is 'o' or s[i] is 'u', increment cnt\nif s[i] is greater than or equal to '0' and s[i] is less than or equal to '9'\nif ( s[i] - '0' ) % 2 is 1, increment cnt\nprint cnt and newline
int main() {\n\tint i, j, k, l, m, n;\n\tstring s;\n\tcin >> s;\n\tm = 0;\n\tfor (i = 0; i < s.size(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n\t\t\tm++;\n\t\telse if (s[i] >= '0' && s[i] <= '9') {\n\t\t\tif ((s[i] - '0') % 2 != 0) m++;\n\t\t}\n\t}\n\tcout << m << endl;\n\treturn 0;\n}	let i, j, k, l, m, n be integers\nlet s be a string\nread s\nm is equal to 0\nfor i = 0 to length of s exclusive\nif s[i] is equal to a or s[i] is equal to e or s[i] is equal to i or s[i] is equal to o or s[i] is equal to u\nincrement m by 1\nelse if s[i] >= 0 and s[i] <= 9\nif (s[i] - 0) modulo 2 is not equal to 0, increment m by 1\nprint m and newline
"int main() {\n\tstring s;\n\tcin >> s;\n\tstring dic = ""13579aeiou"";\n\tint cont = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (dic.find(s[i]) != string::npos) { ++cont; }\n\t}\n\tcout << cont << endl;\n\treturn 0;\n}"	s = string\nread s\ndic = string = 13579aeiou\ncont = integer = 0\nfor i = 0 to size of s exclusive\nif i s[i] is in dic, the increase cont by 1\nprint cont
set<char> s;\nint main() {\n\ts.insert('a');\n\ts.insert('e');\n\ts.insert('i');\n\ts.insert('o');\n\ts.insert('u');\n\tfor (int i = 1; i < 10; i += 2) { s.insert(i + '0'); }\n\tstring k;\n\tint ans = 0;\n\tcin >> k;\n\tint len = k.length();\n\tfor (int i = 0; i < len; i++) {\n\t\tif (s.count(k[i])) { ans++; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	s=set of char\ninsert 'a' into s\ninsert 'e' into s\ninsert 'i' into s\ninsert 'o' into s\ninsert 'u' into s\nfor i=1 to 10 by 2 exclusive insert i+'0' into s\nk=string\nans=0\nread k\nlen=length of k\nfor i=0 to len exclusive\nif k[i] is present in s increment ans\nprint ans
"char dict[15] = ""13579aeiou"";\nint main() {\n\tchar s[55];\n\tint sum = 0, i = 0;\n\tcin >> s;\n\twhile (s[i] != '\0') {\n\t\tint flag = 1;\n\t\tfor (int j = 0; j < 10; j++)\n\t\t\tif (s[i] == dict[j]) flag = 0;\n\t\tif (flag == 0) sum++;\n\t\ti++;\n\t}\n\tcout << sum << endl;\n}"	"dict=array of 15 char filled with ""13579aeiou""\ns=array of 55 char\nsum,i=0\nread s\nwhile s[i] is not null byte\nflag=1\nfor j=0 to 10 exclusive\nif s[i] is dict[j] flag=0\nif flag is 0 increment sum\nincrement i\nprint sum"
int ans;\nint main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (isalpha(s[i])) {\n\t\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'o' || s[i] == 'i' || s[i] == 'u') ans++;\n\t\t} else if (s[i] % 2 != 0)\n\t\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	ans = int\ns = string\nread s\nfor i = 0 to size of s\nif isalpha of s[i]\nif s[i] is 'a' or 'e' or 'o' or 'i' or 'u' increment ans\nelse if s[i] is uneven\nincrement ans\nprint ans
int main() {\n\tstring s;\n\tcin >> s;\n\tint c = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n\t\t\tc++;\n\t\telse if ((s[i] < 'a' || s[i] > 'z') && (s[i] - '0') % 2 != 0) {\n\t\t\tc++;\n\t\t}\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	s = string\nread s\nc = int with c = 0\nfor i = 0 to length of s\nif s[i] is 'a' or 'e'E or 'i' or 'o' or 'u'\nincrement c\nelse if (s[i] < 'a' or s[i] > 'z') and (s[i] - '0') mod 2 is not 0\nincrement c\nprint c
set<char> s;\nint main() {\n\ts.insert('a');\n\ts.insert('e');\n\ts.insert('i');\n\ts.insert('o');\n\ts.insert('u');\n\tfor (int i = 1; i < 10; i += 2) { s.insert(i + '0'); }\n\tstring k;\n\tint ans = 0;\n\tcin >> k;\n\tint len = k.length();\n\tfor (int i = 0; i < len; i++) {\n\t\tif (s.count(k[i])) { ans++; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare character set s\ninsert 'a' into s\ninsert 'e' into s\ninsert 'i' into s\ninsert 'o' into s\ninsert 'u' into s\nfor i = 1 to 10 exclusive, incrementing i by 2, insert ( i + '0' ) into s\ndeclare string k\ndeclare ans = 0 as integer\nread k\ndeeclare len = length of k as integer\nfor i = 0 to len exclusive\nif count of k[i] in s, increment ans\nprint ans and newline
int main() {\n\tchar a[55];\n\tgets(a);\n\tint i = 0, cnt = 0;\n\tfor (; a[i] != '\0'; i++) {\n\t\tif (a[i] <= '9' && a[i] >= '0') {\n\t\t\tif ((a[i] - '0') % 2 != 0) { cnt++; }\n\t\t}\n\t\tif (a[i] == 'a' || a[i] == 'e' || a[i] == 'i' || a[i] == 'o' || a[i] == 'u') { cnt++; }\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	a=array of 55 char\nread a\ni,cnt=0\nwhile a[i] is not null byte increment i\nif a[i] is a digit\nif a[i]-'0' is odd increment cnt\nif a[i] is one of 'a', 'e', 'i', 'o', 'u' increment cnt\nprint cnt
bool isvowel(char c) {\n\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') return true;\n\treturn false;\n}\nint main() {\n\tstring str;\n\tcin >> str;\n\tint siz = str.length();\n\tint cnt = 0;\n\tfor (int i = 0; i < siz; i++) {\n\t\tif (isvowel(str[i]))\n\t\t\tcnt++;\n\t\telse if (!isalpha(str[i]) && (str[i] - '0') & 1) {\n\t\t\tcnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	in the function isvowel that takes character c and returns bool\nif (c is a or c is e or c is i or c is o or c is u), return true\nreturn false\nstr = string\nread str\nsiz = integer with siz = str.length()\ncnt = integer with cnt = 0\nfor i = 0 to siz exclusive\nif (isvowel(str[i]))\nincrement cnt\nelse if (not isalpha(str[i]) and (str[i] - 0) bitwise and 1)\nincrement cnt\nprint cnt
int main() {\n\tstring s;\n\tcin >> s;\n\tint ans = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n\t\t\tans++;\n\t\telse if (s[i] > '0' && s[i] <= '9' && (s[i] - '0') % 2 == 1)\n\t\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	s=string\nread s\nans=0\nfor i=0 to length of s exclusive\nif s[i] is 'a' or 'e' or 'i' or 'o' or 'u'\nincrement ans\nelse if s[i]>'0' and <='9' and (s[i]-'0') is odd\nincrement ans\nprint ans
"int main() {\n\tstring s;\n\tint c = 0;\n\tcin >> s;\n\tint len = s.size();\n\tfor (int i = 0; i < len; i++) {\n\t\tif (strchr(""aeiou13579"", s[i])) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}"	"make string s\ncreate integer c = 0\nread s\nmake integer len = s.size()\nfor i = 0 to len exclusive\nif strchr(""aeiou13579"", s[i]) is truthy, increment c\noutput c"
const int INF = 0x3f3f3f3f;\nconst int maxn = 5005;\nint arr[maxn];\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n % 10 >= 0 && n % 10 <= 5) {\n\t\tcout << n / 10 * 10 << endl;\n\t} else {\n\t\twhile (n % 10) { n++; }\n\t\tcout << n << endl;\n\t}\n\treturn 0;\n}	set const int INF to 0x3f3f3f3f\nset const int maxn to 5005\nintegers = arr as an array of maxn\nintegers = n\nread n\nif n modulo 10 >= 0 and n modulo 10 is less than or equal to 5 then do the following\noutput n / 10 * 10\nelse\nif n modulo 10 is true do then add 1 to n\noutput n
void func(long long x) {\n\tif ((x % 10) > 5) cout << (x / 10 + 1) * 10 << endl;\n\tif ((x % 10) <= 5) cout << (x / 10) * 10 << endl;\n}\nint main() {\n\tlong long x;\n\twhile (cin >> x) func(x);\n}	in the function func that takes long long x\nif ((x modulo 10) > 5) print (x / 10 + 1) * 10\nif ((x modulo 10) <= 5) print (x / 10) * 10\nx = long long\nwhile (print x), call func on x
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 10 > 5)\n\t\tn = n - n % 10 + 10;\n\telse\n\t\tn = n - n % 10;\n\tcout << n << endl;\n\treturn 0;\n}	create integer n\nread n\nif n % 10 is greater than 5\nset n to n - n % 10 + 10\nelse\nset n to n - n % 10\nprint n print newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 10 <= 5) {\n\t\tcout << (n / 10) * 10 << endl;\n\t} else {\n\t\tcout << (n / 10 + 1) * 10 << endl;\n\t}\n}	create int n\nread n\nif n mod 10 <= 5\nprint n/10 *10\nelse\nprint (n / 10 + 1) * 10 and a newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tint t = n % 10;\n\tif (t >= 6)\n\t\tn = n - t + 10;\n\telse\n\t\tn = n - t;\n\tcout << n << endl;\n}	n =integer\nRead n\nt = integer, set to n modulo 10\nif t is greater than or equal to 6\nset n to n - t + 10\nelse do the following\nset n to n - t\nprint n and a new line
int main() {\n\tlong long n;\n\tcin >> n;\n\tint t = n % 10;\n\tif (t >= 6)\n\t\tn = n - t + 10;\n\telse\n\t\tn = n - t;\n\tcout << n << endl;\n}	n = long long integers\nread n\ninteger t = n modulo 10\nif t is greater than or equal to 6 then do the following\nset n to n - t + 10\nelse\nset n to n - t\noutput n
int main() {\n\tint t, s, a, b, c;\n\tcin >> t;\n\tcout << 1LL * ((t + 4) / 10) * 10 << endl;\n}	t, s, a, b, c =integers\nRead t\nprint 1LL * ((t + 4) / 10) * 10 and a new line
int x, n;\nint main() {\n\tcin >> n;\n\tif (n % 10 <= 5)\n\t\tx = 0;\n\telse\n\t\tx = 1;\n\tcout << (n / 10 + x) * 10 << endl;\n\treturn 0;\n}	x, n = integer\nread n\nif n modulo 10 <= 5\nx = 0\nelse\nx = 1\nprint (n / 10 + x) * 10
long long n;\nint main() {\n\tcin >> n;\n\tif (n % 10 > 5) {\n\t\tcout << n + (10 - n % 10) << endl;\n\t\treturn 0;\n\t} else {\n\t\tcout << n - (n % 10) << endl;\n\t\treturn 0;\n\t}\n}	create long long n\nread n\nif n mod 10 greater than 5\nprint n + (10 - n % 10)\nelse\nprint n - (n % 10) and a newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tint num = n % 10;\n\tif (num == 0) {\n\t\tcout << n << endl;\n\t} else if (num <= 5) {\n\t\tcout << (n - num) << endl;\n\t} else {\n\t\tcout << (n - num + 10) << endl;\n\t}\n}	declare long long n\nread n\ncreate int num = n modulo 10\nif num = 0\nprint n\nelse if num <= 5\nprint n - num\nelse\nprint n - num + 10
int main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int m = n % 10;\n\tlong int d = n / 10;\n\tif (m == 0) {\n\t\tcout << n << endl;\n\t} else if (m <= 5) {\n\t\tcout << n - m << endl;\n\t} else if (m > 5) {\n\t\tcout << n + 10 - m << endl;\n\t}\n}	create long long integer n\nread n\ncreate long long integer m with m = n % 10\ncreate long integer d with d = n / 10\nif m is 0\nprint n print newline\nelse if m is less than or equal to 5\nprint n - m print newline\nelse if m is greater than 5\nprint n + 10 - m print newline
int main() {\n\tint n, m, ans;\n\twhile (cin >> n) {\n\t\tm = n % 10;\n\t\tif (m <= 5)\n\t\t\tans = n / 10 * 10;\n\t\telse\n\t\t\tans = (n / 10 + 1) * 10;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	let n, m and ans be integers\nread n while it is not 0\nset m to n modulo 10\nif m <= 5\nassign n / 10 * 10 to ans\nelse\nassign (n / 10 + 1) * 10 to ans\nprint ans
const double pi = 3.1415926535;\nconst long long mod = 998244353;\nconst int maxn = 5e5 + 10;\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tif (n % 10 <= 5)\n\t\t\tcout << n - (n % 10) << endl;\n\t\telse\n\t\t\tcout << n + (10 - n % 10) << endl;\n\t}\n}	set pi to 3.1415926535\nset mod to 998244353\nassign 5e5 + 10 to maxn\ncreate int n\nwhile read n\nif n mod 10 <= 5\nprint n - n mod 10\nelse\nprint n + 10 - n mod 10 and a newline
const int N = 1e6 + 10;\nconst int mod = 998244353;\nlong long x;\nint main() {\n\tcin >> x;\n\tif (x % 10 == 0)\n\t\tcout << x << endl;\n\telse if (x % 10 <= 5)\n\t\tcout << (x / 10) * 10 << endl;\n\telse\n\t\tcout << (x / 10) * 10 + 10 << endl;\n}	declare const int N = 1e6 + 10\ndeclare const int mod = 998244353\ncreate long long x\nread x\nif x % 10 is equal to 0\nprint x\nelse if x % 10 <= 5\nprint (x / 10) * 10\nelse\nprint (x / 10) * 10 + 10
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 10 <= 5) {\n\t\tcout << (n / 10) * 10 << endl;\n\t} else {\n\t\tcout << (n / 10 + 1) * 10 << endl;\n\t}\n}	integers = n\nread n\nif n modulo 10 is less than or equal to 5 then do the following\noutput (n / 10) * 10\nelse\noutput (n / 10 + 1) * 10
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n / 10 == 0) {\n\t\tif (n <= 5)\n\t\t\tcout << ""0\n"";\n\t\telse\n\t\t\tcout << ""10\n"";\n\t} else {\n\t\tif (n % 10 <= 5)\n\t\t\tcout << n / 10 << 0 << '\n';\n\t\telse\n\t\t\tcout << n / 10 + 1 << 0 << '\n';\n\t}\n}"	"n = long long\nread n\nif n / 10 is 0\nif n is less than 6\nprint ""0""\nelse\nprint ""10""\nelse\nif n mod 10 is less than 6\nprint n / 10 then 0\nelse\nprint n / 10 + 1 then 0"
long long n;\nlong long x;\nint main() {\n\tcin >> n;\n\tx = n;\n\tif (n % 10 == 0) {\n\t\tcout << n << endl;\n\t\treturn 0;\n\t}\n\twhile (x > 10) { x %= 10; }\n\tif (x <= 5)\n\t\tcout << n - x << endl;\n\telse\n\t\tcout << n + (10 - x) << endl;\n\treturn 0;\n}	create long long n\ncreate long long x\nread n\nx=n\nif n mod 10 =0\nprint n\nwhile x greater than 10, set x to x mod 10\nif x <= 5\nprint n-x\nelse\nprint n + 10 - x and a newline
int main() {\n\tint n, result, c;\n\tcin >> n;\n\tc = n % 10;\n\tif (c <= 5) {\n\t\tresult = n - c;\n\t} else {\n\t\tresult = n + (10 - c);\n\t}\n\tcout << result << endl;\n\treturn 0;\n}	create int n, result and c\nread n\nc = n mod 10\nif c <= 5\nassign n - c to result\nelse\nset result = n + 10 - c\nprint result
int main() {\n\tlong long int n, m, k, l, j, p;\n\tcin >> n;\n\tif (n < 10) {\n\t\tif (n <= 5) {\n\t\t\tcout << 0 << endl;\n\t\t} else {\n\t\t\tp = n + (10 - n);\n\t\t\tcout << p << endl;\n\t\t}\n\t} else {\n\t\tk = n % 10;\n\t\tif (k == 0) {\n\t\t\tcout << n << endl;\n\t\t} else {\n\t\t\tif (k <= 5) {\n\t\t\t\tl = n - (k);\n\t\t\t\tcout << l << endl;\n\t\t\t} else {\n\t\t\t\tj = n + (10 - k);\n\t\t\t\tcout << j << endl;\n\t\t\t}\n\t\t}\n\t}\n}	create long long int n, m, k, l, j, p\nread n\nif n less than 10\nif n<= 5\nprint 0\nelse\np = n + (10 - n)\nprint p\nelse\nassign n mod 10 to k\nif k=0\nprint n\nelse\nif k <= 5\nset l to n - k\nprint l\nelse\nj = n + (10 - k)\nprint j and a newline
int main() {\n\tint a, b, c, d, e, f;\n\twhile (cin >> a) {\n\t\tif (a % 10 == 0) {\n\t\t\tcout << a << endl;\n\t\t} else if (a % 10 == 5) {\n\t\t\tcout << a - 5 << endl;\n\t\t} else if (a % 10 < 5) {\n\t\t\tb = a % 10;\n\t\t\tcout << a - b << endl;\n\t\t} else {\n\t\t\tb = a % 10;\n\t\t\tb = 10 - b;\n\t\t\tcout << a + b << endl;\n\t\t}\n\t}\n\treturn 0;\n}	a, b, c, d, e, f = integers\nwhile read a\nif a mod 10 equals 0\nprint a\nelse if a mod 10 equals 5\nprint a - 5\nelse if a mod 10 is less than 5\nset b to a mod 10\nprint a - b\nelse\nset b to a mod 10\nset b to 10 - b\nprint a + b
int dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n % 10 <= 5) {\n\t\tif (n / 10)\n\t\t\tcout << n / 10 << 0 << '\n';\n\t\telse\n\t\t\tcout << 0 << '\n';\n\t} else\n\t\tcout << (n / 10) + 1 << 0 << '\n';\n}	define four-element int array dx and set them to 0, 0, -1, 1\ndefine 4-element integral array dy, setting it to 1, -1, 0, and 0\ndefine int n\nread n\nif n modulo 10 is <= 5\nif n / 10 != 0\nprint n / 10, 0, and newline\nelse\nprint 0 and a newline\nelse\nprint n / 10 + 1, 0, newline
int main() {\n\tint n;\n\tcin >> n;\n\tint k, a, l = 0, m = 0;\n\tk = n;\n\ta = n;\n\tif (n % 2 == 0 && n % 5 == 0) {\n\t\tcout << n << endl;\n\t} else {\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tl++;\n\t\t\tif (k % 2 == 0 && k % 5 == 0) { break; }\n\t\t\tk--;\n\t\t}\n\t\tfor (int j = 0; j < 8; j++) {\n\t\t\tm++;\n\t\t\tif (a % 2 == 0 && a % 5 == 0) { break; }\n\t\t\ta++;\n\t\t}\n\t\tif (l == m) {\n\t\t\tcout << k << endl;\n\t\t} else if (l > m) {\n\t\t\tcout << a << endl;\n\t\t} else {\n\t\t\tcout << k << endl;\n\t\t}\n\t}\n\treturn 0;\n}	declare integer variable n\nread input to n\ndeclare integer variables k, a, l and m where l and m = 0\nset k to n\nassign n to a\nif n is even and n modulo 5 is 0\nprint n\nelse\nloop i from 0 to 8 exclusive\nincrement l by one\nif k is even and k modulo 5 = 0, stop the loop\ndecrement k\nloop j from 0 to 8 exclusive\nincrement m by one\nif a is even and a modulo 5 = 0, break the loop\nincrement a\nif l is equal to m\nprint k\nelse if l is greater than m\nprint a\nelse\nprint k
int main() {\n\tlong long int n, x = 0;\n\tcin >> n;\n\tx = n % 10;\n\tif (x > 5) n = n - x + 10;\n\tif (x <= 5) n = n - x;\n\tcout << n << endl;\n\treturn 0;\n}	n, x =integers with x = 0\nRead n\nset x to n modulo 10\nif x is greater than 5, then set n to n - x + 10\nif x is less than 5, then set n to n - x\nprint n and a new line
int main() {\n\tlong long n;\n\tcin >> n;\n\tint t = n % 10;\n\tif (t >= 6)\n\t\tn = n - t + 10;\n\telse\n\t\tn = n - t;\n\tcout << n << endl;\n}	create long long n\nread n\nt = n mod 10\nif t >= 6\nn = n - t + 10\nelse\nassign n - t to n\nprint n
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n], count = 0;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tint max = *max_element(a, a + n);\n\tfor (int i = 0; i < n; i++) { count += max - a[i]; }\n\tcout << count << endl;\n\treturn 0;\n}	create int n\nread n\ndeclare array of integers of size n and integer count = 0\npopulate array a with n values\nset max to highest value in array a\nfor i = 0 to n exclusive set count to count + max - a[i]\nprint count
int main() {\n\tint a[1000], i, n, ans = 0;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tfor (i = 1; i < n; i++) { ans += a[n] - a[i]; }\n\tcout << ans << endl;\n}	create integer array a with size 1000, create integers i, n, ans with ans = 0\nread n\nfor i = 1 to n inclusive, read a[i]\nsort elements from a + 1 to a + n + 1\nfor i = 1 to n exclusive, increment ans by a[n] - a[i]\nprint ans print newline
const int N = 1e5 + 50;\nconst int M = 1e6;\nconst long long oo = 1e18;\nconst int mod = 1e9 + 7;\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long sum = 0, mx = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long a;\n\t\tcin >> a;\n\t\tsum += a;\n\t\tmx = max(mx, a);\n\t}\n\tcout << mx * n - sum << endl;\n}	integers = t integer N = 1e5 + 50\nintegers = t integer M = 1e6\noo = 1e18 = constant long long integers\nintegers = t integer mod = 1e9 + 7\nintegers = n\nread n\nsum = 0,mx = 0 = long long integers\nfor i = 0 to less than n do the following\nong a = long long integers\nread a\nsum equals sum plus a\nset mx to max(mx, a)\noutput mx * n - sum
int main() {\n\tint n, cnt = 0, sum = 0;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tint mx = a[n - 1];\n\tfor (int i = 0; i < n; i++) { sum += abs(mx - a[i]); }\n\tcout << sum << endl;\n}	create ints n, cnt and sum with cnt and sum = 0\nread n\nlet a be integer array with size n\nfor i from 0 to n exclusive, read a[i]\nsort a\ndeclare int mx = a[n - 1]\nloop i from 0 to n exclusive, add abs(mx - a[i]) to sum\nprint sum
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> welfare;\n\tint welfare_input;\n\twhile (welfare.size() < n) {\n\t\tcin >> welfare_input;\n\t\twelfare.push_back(welfare_input);\n\t}\n\tsort(welfare.rbegin(), welfare.rend());\n\tint i = 1;\n\tint total = 0;\n\twhile (welfare.size() > i) {\n\t\tif (welfare[0] != welfare[i]) {\n\t\t\twelfare[i]++;\n\t\t\ttotal++;\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n\tcout << total << endl;\n\treturn 0;\n}	n = integer\nread n\nwelfare = vector of integer\nwelfare_input = integer\nwhile welfare.size() < n\nread welfare_input\nappend welfare in _inputwelfare\nsort welfare.rbegin() and welfare.rend()\ni = integer with i = 1\ntotal = integer with total = 0\nwhile welfare.size() > i\nif welfare[0] is not welfare[i]\nincrement welfare[i]\nincrement total\nelse\nincrement i\nprint total
int main() {\n\tint n, a[101];\n\tcin >> n;\n\tint s = 0, max = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tmax = a[0];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tif (max < a[i]) { max = a[i]; }\n\t}\n\tfor (int i = 0; i < n; i++) { s = s + abs(max - a[i]); }\n\tcout << s << endl;\n\treturn 0;\n}	n, a = integers with a = array of size 101\nread n\ns, max = integer with s = 0, max = 0\nfor i = 0 to n exclusive\nread a[i]\nmax = a[0]\nfor i = 1 to n exclusive\nif max < a[i], max = a[i]\nfor i - 0 to n exclusive, s = s + abs(max - a[i])\nprint s
int main() {\n\tlong long int mx = 0, n, a[105] = {0}, sum;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] > mx) mx = a[i];\n\t}\n\tsum = 0;\n\tfor (int i = 0; i < n; i++) { sum += (mx - a[i]); }\n\tcout << sum << endl;\n\treturn 0;\n}	create long long int mx, n, a[105] and sum, set mx to 0 and a to all 0\nread n\nfor i=0 to n exclusive, read a[i]\nfor i=0 to n exclusive\nif a[i] greater than mx, mx = a[i]\nsum =0\nfor i=0 to n exclusive, set sum to sum + mx - a[i]\nprint sum
int main() {\n\tint n;\n\tint a[10000];\n\tint maxn;\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] > maxn) maxn = a[i];\n\t}\n\tfor (int i = 1; i <= n; i++) { ans = ans + maxn - a[i]; }\n\tcout << ans << endl;\n\treturn 0;\n}	create integer n\ncreate integer array a with size 10000\ncreate integer maxn\ncreate integer ans with ans = 0\nread n\nfor i = 1 to n inclusive\nread a[i]\nif a[i] is greater than maxn, set maxn to a[i]\nfor i = 1 to n inclusive, set ans to ans + maxn - a[i]\nprint ans print newline
int main() {\n\tint n, arr[109], maxx = 0, i, res = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tif (maxx < arr[i]) maxx = arr[i];\n\t}\n\tfor (i = 0; i < n; i++) { res = res + (maxx - arr[i]); }\n\tcout << res << endl;\n}	let n, arr , maxx , i, res be integers with arr = array of integers of length 109, maxx = 0, res = 0\nread n\nfor i = 0 to n exclusive\nread ith element of arr\nif maxx is less than arr[i] , maxx is equal to arr[i]\nfor i = 0 to n exclusive, res is equal to res + (maxx - arr[i])\nprint res and newline
int main() {\n\tint a[100];\n\tint n, i, k, max;\n\tk = 0;\n\tcin >> n;\n\tmax = -1;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] > max) { max = a[i]; }\n\t}\n\tfor (i = 0; i < n; i++) { k = k + max - a[i]; }\n\tcout << k << endl;\n\treturn 0;\n}	a=array of 100 int\nn,i,k,max=int\nk=0\nread n\nmax = -1\nfor i=0 to n exclusive read a[i]\nfor i=0 to n exclusive\nif a[i] > max max = a[i]\nfor i=0 to n exclusive add max-a[i] to k\nprint k
int main() {\n\tint sum = 0;\n\tint tc;\n\tint a[100];\n\tcin >> tc;\n\tfor (int i = 0; i < tc; i++) { cin >> a[i]; }\n\tint max = a[0];\n\tfor (int i = 0; i < tc; i++) {\n\t\tif (a[i] > max) max = a[i];\n\t}\n\tfor (int i = 0; i < tc; i++) { sum += max - a[i]; }\n\tcout << sum << endl;\n\treturn 0;\n}	set sum =0\ncreate int tc\ncreate int array a of size 100\nread tc\nfor i=0 to tc exclusive, read a[i]\ncreate int max = a[0]\nfor i=0 to tc exclusive\nif a[i] > max, set max to a[i]\nfor i=0 to tc exclusive, set sum = sum + max - a[i]\nprint sum
int main() {\n\tint n, a[105], i, s;\n\twhile (cin >> n) {\n\t\ts = 0;\n\t\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\t\tif (n == 1)\n\t\t\tcout << s << endl;\n\t\telse {\n\t\t\tsort(a, a + n);\n\t\t\tfor (i = 0; i < n - 1; i++) { s += (a[n - 1] - a[i]); }\n\t\t\tcout << s << endl;\n\t\t}\n\t}\n}	integers = n,a[105],i,s\nwhile inputting n loop the following\nset s to 0\nread n values in array a\nif n is 1 then do the following\noutput s\nelse\nsort the values of a to a + n\nfor = 0 to less than n - 1 add a[n - 1] - a[i] to s\noutput s
vector<int> v;\nint main() {\n\tint n, x = 0, hitung = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint m;\n\t\tcin >> m;\n\t\tv.push_back(m);\n\t\tif (m >= x) { x = m; }\n\t}\n\tfor (int i = 0; i < n; i++) { hitung += (x - v[i]); }\n\tcout << hitung << endl;\n}	v = vector of integer\nn, x, hitung = integers with x = 0, hitung = 0\nread n\nfor i = 1 to n\nm = integer\nread m\nappend m in v\nif m >= x, x = m\nfor i = 0 to n exclusive, hitung = hitung + (x - v[i])\nprint hitung
int main() {\n\tint n, arr[100];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tsort(arr, arr + n);\n\tint biggest = arr[n - 1], res = 0;\n\tfor (int i = 0; i < n; i++) { res += (biggest - arr[i]); }\n\tcout << res << endl;\n}	n, arr = integers with arr = array of size 100\nread n\nfor i = 0 to n exclusive, read arr[i]\nsort arr and arr + n\nbiggest, res = integer with biggest = arr[n - 1], res = 0\nfor i = 0 to n exclusive, res = res + (biggest - arr[i])\nprint res
int main() {\n\tint n, a[101], i, s = 0, b;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tfor (i = 0; i < n; i++) { s += (a[n - 1] - a[i]); }\n\tcout << s << endl;\n\treturn 0;\n}	Create n, i, s, and b as integers, set s to 0, and create a as an integer array with size of 101\nSet n to the input\nSet a[i] to the input from i=0 to i=n-1\nSort the first n elements of a\nIncrease s by (a[n-i]-a[i]) from i=0 to i=n-1\nOutput s
int main() {\n\tint n, ans = 0;\n\tlong int a[100];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tfor (int i = 0; i < n; i++) ans += a[n - 1] - a[i];\n\tcout << ans << endl;\n\treturn 0;\n}	n and ans are ints with ans = 0\ncreate long int array a with 100 elements\nread n\nloop i from 0 to n exclusive, read a[i]\nsort n first elements of a\nfor i from 0 to n exclusive, increase ans by a[n - 1] - a[i]\nprint ans
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a[111];\n\t\tint maxx = -1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tcin >> a[i];\n\t\t\tif (a[i] > maxx) maxx = a[i];\n\t\t}\n\t\tint sum = 0;\n\t\tfor (int i = 1; i <= n; i++) { sum += (maxx - a[i]); }\n\t\tcout << sum << endl;\n\t}\n\treturn 0;\n}	let n be a integer\nwhile read n\nA = array of integers of length 111\nlet maxx be a integer with maxx = -1\nfor i = 1 to n inclusive\nread ith element in a\nif a[i] is greater than maxx , initialize maxx = a[i]\nset integer sum to 0\nfor i = 1 to n inclusive , increase sum by maxx - a[i]\nprint sum and newline
int e[105];\nint main() {\n\tint n;\n\tcin >> n;\n\tint m = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint t;\n\t\tcin >> t;\n\t\te[i] = t;\n\t\tm = m > t ? m : t;\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) { ans = ans + m - e[i]; }\n\tcout << ans << endl;\n}	let e be int array with size 105\ndeclare int variable n\nread n\ncreate int m = 0\nloop i from 1 to n inclusive\ncreate integer t\nread t\nset e[i] to t\nset m t if t <= m\ndeclare integer ans = 0\nfor i from 1 to n inclusive, change ans to ans + m - e[i]\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tlong long a[n];\n\tlong long cnt = 0, mx = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tmx = max(a[i], mx);\n\t}\n\tfor (int i = 0; i < n; i++) { cnt += (mx - a[i]); }\n\tcout << cnt << endl;\n\treturn 0;\n}	integers = n\nread n\na[n] = long long integers\ncnt = 0,mx = 0 = long long integers\nfor i = 0 to less than n do the following\nread a[i]\nset mx to max(a[i], mx)\nfor i = 0 to less than n add mx - a[i] to cnt\noutput cnt
int main() {\n\tlong int n, ans = 0;\n\tcin >> n;\n\tvector<int> v;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tsort(v.begin(), v.end());\n\tfor (int i = 0; i < n - 1; i++) { ans += v[n - 1] - v[i]; }\n\tcout << ans << endl;\n}	declare long ints n and ans where ans = 0\nread n\ncreate integers vector v\nfor i = 0 to n exclusive\ncreate integer x\nread x\npush x to v\nsort v\nfor i from 0 to n - 1 exclusive, increase ans by v[n - 1] - v[i]\nprint ans
int main() {\n\tint n, x[105];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> x[i]; }\n\tsort(x, x + n);\n\tint Max = x[n - 1], sum = 0;\n\tfor (int i = 0; i < n; i++) { sum += Max - x[i]; }\n\tcout << sum << endl;\n\treturn 0;\n}	declare int variable n and int array x with size 105\nread n\nfor i from 0 to n exclusive, read x[i]\nsort x\nMax and sum are integers with Max = x[n - 1] and sum = 0\nfor i from 0 to n exclusive, add Max - x[i] to sum\nprint sum
int main() {\n\tint n, max = 0, c = 0;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (max < a[i]) max = a[i];\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] < max) { c = c + max - a[i]; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	n, max, c = int with max = 0 and c = 0\nread n\na = int array of size n\nread n values into a\nfor i = 0 to n\nif max is less than a[i] then set max to a[i]\nfor i = 0 to n\nif a[i] is less than max then set c to c + max - a[i]\nprint c
int main() {\n\tint n, maxi = -1, sum = 0, x;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tmaxi = max(maxi, x);\n\t\tsum += x;\n\t}\n\tcout << maxi * n - sum << endl;\n\treturn 0;\n}	create int n, maxi, sum and x, set maxi to -1 and sum =0\nread n\nfor i=0 to n exclusive\nread x\nset maxi to max of maxi and x\nassign sum + x to sum\nprint maxi * n - sum
int main() {\n\tint n, i, a[100], large, ans = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tlarge = a[0];\n\tfor (i = 0; i < n; i++) {\n\t\tif (large < a[i]) large = a[i];\n\t}\n\tfor (i = 0; i < n; i++) { ans += large - a[i]; }\n\tcout << ans << endl;\n\treturn 0;\n}	n, i, large and ans are integers where ans = 0 and a is an integer array with 100 elements\nread input to n\nfor i = 0 to n exclusive, read a[i]\nchange large to a[0]\nloop i from 0 to n exclusive\nif large is less than a[i], set large to a[i]\nfor i = 0 to n exclusive, add large - a[i] to ans\nprint ans
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tcout << (s + n - 1) / n << endl;\n}	create int n and s\nread n and s\nprint (s + n - 1) / n
long long int n, sum;\nint main() {\n\tcin >> n >> sum;\n\tlong long int ans = 0;\n\tfor (int i = n; i >= 1; i--) {\n\t\tans += sum / i;\n\t\tsum -= (sum / i) * i;\n\t}\n\tcout << ans << '\n';\n}	n, sum = long long integers\nread n, sum\nans = long long integer with ans = 0\nfor i = n down to 1\nans = ans + sum / i\nsum = sum - (sum / i) * i\nprint ans
int main() {\n\tint x, y, z;\n\tcin >> x >> y;\n\tz = (y - 1) / x;\n\tz++;\n\tcout << z << endl;\n\treturn 0;\n}	x, y, z = integers\nread x and y\nset z = (y -1)/x\nincrement z\nprint z
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tcout << (s % n ? s / n + 1 : s / n) << endl;\n}	declare integers n, s\nread n, s\nprint s / n + 1 if s % n, else n / n, newline
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint ans = s / n + (s % n ? 1 : 0);\n\tcout << ans << endl;\n}	let n and s ints\nread n and s\nlet ans an int with value s / n plus (1 if s mod n, 0 otherwise)\nprint ans
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tif (s % n == 0)\n\t\tcout << s / n << endl;\n\telse\n\t\tcout << (s / n) + 1 << endl;\n\treturn 0;\n}	n, s =integers\nRead n, s\nif s modulo n is 0\nprint s / n and a new line\nelse do the following\nprint (s / n) + 1 and a new line
const int maxn = 1e5 + 10;\nint main() {\n\tint a, b;\n\twhile (cin >> a >> b) { cout << (b - 1) / a + 1 << endl; }\n\treturn 0;\n}	declare constant integer maxn = 1e5 + 10\ndeclare integers a, b\nwhile read a, b is true, print ( b - 1 ) / a + 1 and newline
int main() {\n\tlong long int n, S;\n\tcin >> n >> S;\n\tif (S % n == 0) {\n\t\tcout << S / n << endl;\n\t} else\n\t\tcout << S / n + 1 << endl;\n\treturn 0;\n}	n, S = long long integers\nread n and S\nif S modulo n is equal to 0\nprint S / n\nelse\nprint S / n + 1
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tif (s % n)\n\t\tcout << s / n + 1 << endl;\n\telse\n\t\tcout << s / n << endl;\n}	n, s =integers\nRead n, s\nif s modulo m is n\nprint s / n + 1 and a new line\nelse do the following\nprint s / n and a new line
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tif (s % n == 0)\n\t\tcout << s / n << endl;\n\telse\n\t\tcout << (s / n) + 1 << endl;\n\treturn 0;\n}	let n, s be integers\nread values for n, s\nif s mod n is equal to 0 then\nprint s/n\nelse do the following\nprint (s/n) +1
int main() {\n\tint n, s;\n\twhile (cin >> n >> s) {\n\t\tint cnt = 0;\n\t\tfor (int i = n; i > 0; i--) {\n\t\t\twhile (s >= i) {\n\t\t\t\ts -= i;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}	n, s = int\nloop while reading n then s\ncnt = int with cnt = 0\nfor i = n to 0 decrementing i\nloop while s >= i\ndecrement s by i\nincrement cnt\nprint cnt
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tif (s % n == 0)\n\t\tcout << s / n << endl;\n\telse\n\t\tcout << s / n + 1 << endl;\n}	create int n and s\nread n and s\nif s mod n =0\nprint s/n\nelse\nprint s/n +1
int main() {\n\tint n;\n\tlong long S;\n\tcin >> n >> S;\n\tif (S % n)\n\t\tcout << S / n + 1 << endl;\n\telse\n\t\tcout << S / n << endl;\n\treturn 0;\n}	n =integer\nS = integer\nRead n, S\nif S modulo s is n\nprint S / n + 1 and a new line\nelse do the following\nprint S / n and a new line
int n, s;\nint main() {\n\tcin >> n >> s;\n\tcout << s / n + (s % n != 0) << endl;\n}	n, s = integers\nRead n and s\nprint s / n + (s modulo n is not 0) and a new line
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tif (s % n == 0)\n\t\tcout << s / n << endl;\n\telse\n\t\tcout << s / n + 1 << endl;\n\treturn 0;\n}	n, s = integer\nread n and s\nif s remainder n = 0\nprint s/n\nelse\nprint s/n + 1
int main() {\n\tint n, m;\n\tcin >> m >> n;\n\tif (n % m == 0)\n\t\tcout << n / m << endl;\n\telse\n\t\tcout << n / m + 1 << endl;\n\treturn 0;\n}	make ints n and m\nread m and n\nif n % m is equal to 0\nprint n / m\notherwise\noutput n / m + 1
int main() {\n\tint n;\n\tint S;\n\tcin >> n >> S;\n\tif (S % n == 0) {\n\t\tcout << S / n << endl;\n\t} else {\n\t\tcout << S / n + 1 << endl;\n\t}\n\treturn 0;\n}	n=int\nS=int\nread n,S\nif S is multiple of n\nprint S/n\nelse\nprint S/n+1
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tcout << (n + s - 1) / n << endl;\n\treturn 0;\n}	create int n and s\nread n and s\nprint (n + s - 1) / n
long long int n, sum;\nint main() {\n\tcin >> n >> sum;\n\tlong long int ans = (sum % n) ? sum / n + 1 : sum / n;\n\tcout << ans << '\n';\n}	declare long long integers n, sum\nread n and sum\ndeclare long long integer ans = sum / n + 1 if sum % n, else sum / n\nprint ans and '\n'
int main() {\n\tint T, n, m;\n\tcin >> m >> n;\n\tcout << (n / m + (n % m ? 1 : 0)) << endl;\n\treturn 0;\n}	create integers T, n and m\nread m and n from the user input\nprint n / m + (1 if n modulo m is not 0)
int main() {\n\tint ans = 0;\n\tint n, s;\n\tcin >> n >> s;\n\twhile (s > 0) {\n\t\ts -= n;\n\t\tans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	ans = 0 = itn\nn, s = int\nread n, s\nwhile s is strictly positive\ndecrement s by n\nincrement ans\nprint ans
int main() {\n\tlong long x, y, z;\n\tcin >> x >> y;\n\tz = (y - 1) / x;\n\tz++;\n\tcout << z << endl;\n\treturn 0;\n}	x, y, z = long long\nread x, y\nlet z = (y - 1) / x\nadd one to z\nprint z
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint sum = 0;\n\twhile (1) {\n\t\tsum += s / n;\n\t\ts = s % n;\n\t\tn--;\n\t\tif (n == 0) break;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	declare integer n, s\nread n and s\ndeclare integer sum = 0\nwhile 1 is true\nincrement sum by s / n\nlet s be s % n\ndecrement n\nif n is 0, end loop\nprint sum and newline
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tif (m % n != 0) {\n\t\tcout << (m / n) + 1 << endl;\n\t} else\n\t\tcout << (m / n) << endl;\n\treturn 0;\n}	n, m = integers\nread n, m\nif (m modulo n is not 0)\nprint (m / n) + 1\nelse\nprint (m / n)
int main() {\n\tint n, sum;\n\tcin >> n >> sum;\n\tif (sum % n != 0)\n\t\tcout << sum / n + 1 << endl;\n\telse\n\t\tcout << sum / n << endl;\n\treturn 0;\n}	create int n and sum\nread n and sum\nif sum mod n different from 0\nprint sum/n + 1\nelse\nprint sum/n
int main() {\n\tint s, n, cn = 0;\n\tcin >> n >> s;\n\twhile (s > n) {\n\t\ts = s - n;\n\t\tcn++;\n\t}\n\tcout << cn + 1 << endl;\n\treturn 0;\n}	s, n, cn =integers with cn = 0\nRead n, s\nwhile s is greater than s\nset s to s - n\nincrement cn\nprint cn + 1 and a new line
int a, b;\nint main() {\n\tcin >> a >> b;\n\tint ans = 0;\n\tans = b / a;\n\tif (b % a != 0) ans++;\n\tcout << ans << endl;\n\treturn 0;\n}	declare integers a, b\nread a, b\ndeclare integer ans = 0\nlet ans be b / a\nif b % a is not 0, increment ans\nprint ans and newline
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint ans = 0;\n\tif (m % n == 0) {\n\t\tans = m / n;\n\t} else {\n\t\tans += m / n + 1;\n\t}\n\tcout << ans << endl;\n}	declare integers n, m\nread n, m\ndeclare integer ans = 0\nif m % n is 0\nlet ans be m / n\nelse\nincrement ans by m / n + 1\nprint ans and newline
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint ans = 0;\n\twhile (s) {\n\t\tif (s == 0) break;\n\t\tif (s >= n)\n\t\t\ts -= n, ans++;\n\t\telse\n\t\t\tn--;\n\t}\n\tcout << ans << endl;\n}	n, s = int\nread n then s\nans = int with ans = 0\nloop while s\nif s is 0 break\nif s >= n\ndecrement s by n then increment ans\nelse\ndecrement n\nprint ans
int main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint count = 0;\n\tfor (int i = n; i > 0; i--) {\n\t\tint a = s / i;\n\t\tcount = count + a;\n\t\ts = s % i;\n\t\tif (s == 0) { break; }\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	n, s =integers\nRead n, s\ncount = integer with 0\nfor i = n to 0 exclusive\na = integer, set to s / i\nset count to count + a\nset s to s % i\nif s is equal to 0, then Terminate the loop\nprint count and a new line
int main() {\n\tlong int n, s, temp, c = 0;\n\tcin >> n >> s;\n\twhile (1) {\n\t\tif (s == 0) { break; }\n\t\ttemp = s;\n\t\ts %= min(s, n);\n\t\tc += temp / min(temp, n);\n\t}\n\tcout << c << endl;\n}	n, s, temp, c =integers with c = 0\nRead n, s\nexecute infinite loop\nif s is equal to 0, then Terminate the loop\nset temp to s\nset s to s modulo minimum value of sand n\nset c to c + temp / minimum value of temp and n\nprint c and a new line
int main() {\n\tlong long n, s;\n\tcin >> n >> s;\n\tint ans = (s + n - 1) / n;\n\tcout << ans << endl;\n}	n, s = long long\nread n, s\nans = integer with ans = (s + n - 1) / n\nprint ans
int main() {\n\tlong n, S;\n\tcin >> n >> S;\n\tint coins = 0;\n\tcoins += S / n;\n\tint rem = S % n;\n\tif (rem == 0)\n\t\tcout << coins << endl;\n\telse\n\t\tcout << ++coins << endl;\n}	n, S = long\nread n and S\nset coins = 0\nset coins = coins + S/n\nset rem = S remainder n\nif rem = 0\nprint coins\nelse\nprint increment coins
int main() {\n\tlong long n, s, i;\n\tcin >> n >> s;\n\tif (s % n != 0) {\n\t\tcout << s / n + 1 << endl;\n\t} else {\n\t\tcout << s / n << endl;\n\t}\n\treturn 0;\n}	declare long long variables n, s and i\nread variables n and s from the input\nif s modulo n != 0\nprint s / n + 1\nelse\nprint s / n
int main() {\n\tstring N;\n\tcin >> N;\n\tif (N[0] >= 'a' && N[0] <= 'z') { N[0] = N[0] - 32; }\n\tcout << N << endl;\n\treturn 0;\n}	N = string\nRead N\nif N[0] is greater than or equal to a and N[0] is less than z, set N[0] to N[0] - 32\nprint N and a new line
int main() {\n\tchar ch[1000];\n\tgets(ch);\n\tif (ch[0] >= 'a' && ch[0] <= 'z') ch[0] = ch[0] - 32;\n\tputs(ch);\n}	declare ch as character array of size 1000\ngets(ch)\nif ch[0] >= 'a' and ch[0] <= 'z' set ch[0] to ch[0] - 32\nputs(ch)
int main() {\n\tstring m;\n\tgetline(cin, m);\n\tif (m[0] >= 97 && m[0] <= 122) m[0] = (int)m[0] - 32;\n\tcout << m << endl;\n}	m = string\ncall getline on cin and m\nif m[0] >= 97 and m[0] <= 122 then m[0] = (int)m[0] - 32\nprint m
int main() {\n\tstring input;\n\tcin >> input;\n\tif (input[0] >= 'a') input[0] -= 32;\n\tcout << input << endl;\n\treturn 0;\n}	input = string\nRead input\nif input[0] is greater than or equal to a, set input[0] = input- 32\nprint input and a new line
int main() {\n\tstring word;\n\tcin >> word;\n\tint a = word[0];\n\tif (a > 90) {\n\t\ta = a - 32;\n\t\tword[0] = a;\n\t\tcout << word << endl;\n\t} else {\n\t\tcout << word << endl;\n\t}\n\treturn 0;\n}	create string word\nread word\nset a to word[0]\nif a >99\na=a-32\nassign a to word[0]\nprint word\nelse\nprint word and a new line
int main() {\n\tchar s[1001];\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	create character array s with length of 1001\nread s\nconvert first character of s to uppercase alphabet\nprint out s
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	declare string variable s\nread s\nchange s[0] to upper case\nprint s
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	create string s\nread s\nset s[0] to upper case\nprint s
int main() {\n\tchar str[1000];\n\twhile (cin >> str) {\n\t\tif ('a' <= str[0] && str[0] <= 'z') { str[0] -= 32; }\n\t\tcout << str << endl;\n\t}\n\treturn 0;\n}	create character array str with 1000 elements\nwhile read str\nif 'a' <= str[0] && str[0] <= 'z', str[0] = 32\nprint str
int main() {\n\tstring word;\n\tcin >> word;\n\tword[0] = toupper(word[0]);\n\tcout << word << endl;\n}	word = string\nRead word\nset word[0] to upper case of word[0]\nprint word solution and a new line
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = towupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nRead s\nset s[0] to upper case of s[0]\nprint s and a new line
string s;\nint main() {\n\tcin >> s;\n\tif (islower(s[0])) s[0] = (char)((int)s[0] - 32);\n\tcout << s << endl;\n\treturn 0;\n}	let s = string\nset s from input\nif islower called with s[0] is true then set s[0] to (char)((int)s[0] - 32)\nprint s
char toUpp(char s) {\n\tint n = s;\n\tif (n >= 97 && n <= 122) n -= 32;\n\treturn (char)n;\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toUpp(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	in the function toUpp that takes character s and returns character\nn = integer with n = s\nif n >= 97 and n <= 122 n = n - 32\nreturn (char)n\ns = string\nread s\ns[0] = call toUpp on s[0]\nprint s
int main() {\n\tint n, i, t1, t2;\n\tstring a;\n\tgetline(cin, a);\n\tif (a[0] > 96 && a[0] < 123) a[0] -= 32;\n\tcout << a << endl;\n}	declare integer variables n, i, t1 and t2\ndeclare string a\nread input into a\nif a[0] > 96 && a[0] is less than 123, decrease a[0] by 32\nprint a
int main() {\n\tstring xay;\n\tcin >> xay;\n\tif (islower(xay[0])) { xay[0] = toupper(xay[0]); }\n\tcout << xay << endl;\n}	create xay as string\ninput xay\nif call islower with xay[0] is true set xay[0] to xay[0] converted to uppercase\nprint xay
int main() {\n\tchar a[1100];\n\tgets(a);\n\tif (a[0] >= 'A' && a[0] <= 'Z') { puts(a); }\n\tif (a[0] >= 'a' && a[0] <= 'z') {\n\t\ta[0] = a[0] - 32;\n\t\tputs(a);\n\t}\n\treturn 0;\n}	let a be an array of char of length 1100\nexecute gets wich takes a as an argument\nif a[0] >= 'A' and a[0] <= 'Z' then execute puts with a as an argument\nif a[0] >= 'a' and a[0] <= 'z' then\nlet a[0] = a[0] - 32\nexecute puts with a as an argument
int main() {\n\tstring ch;\n\tcin >> ch;\n\tch[0] = toupper(ch[0]);\n\tcout << ch << endl;\n\treturn 0;\n}	ch = string\nread ch\ncapitalize first letter of ch\nprint ch
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = towupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nread s\ncapitalize first letter of s\nprint s
void capitalize(string &word) {\n\tchar first = word.at(0);\n\tif (first >= 97 && first <= 122) word.at(0) -= 32;\n}\nint main() {\n\tstring input;\n\tcin >> input;\n\tcapitalize(input);\n\tcout << input << endl;\n\treturn 0;\n}	in the function capitalize that takes string reference word and returns void\nfirst = character with first = word.at(0)\nif first >= 97 and first <= 122 word.at(0) = word.at(0) - 32\ninput = string\nread input\ncapitalize on input\nprint input
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	create string s\nread s\nset s[0] to uppercase letter of s[0]\nprint s
int main() {\n\tchar a[1000];\n\tgets(a);\n\tif (a[0] >= 'a' && a[0] <= 'z') { a[0] = a[0] - ('a' - 'A'); }\n\tputs(a);\n\treturn 0;\n}	create char array a with length 1000\nread from standard input and store in a\nif (a[0] is greater or equal to 'a' and a[0] is smaller or equal to 'z') set a[0] to a[0] - ('a' - 'A')\nprint a
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nRead s\nset s[0] to upper case of s[0]\nprint s solution and a new line
int main() {\n\tstring s;\n\tcin >> s;\n\tif (s[0] >= 97 && s[0] <= 122) s[0] -= 32;\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nread s\nif s[0] is greater than 96 and s[0] is less than 123 then subtract 32 from s[0]\nprint s
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = towupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	create string s\nread s\nset s[0] to convert to uppercase s[0]\nprint s print newline
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nRead s\nset s[0] to upper case of s[0]\nprint s and a new line
int main() {\n\tstring s;\n\tcin >> s;\n\tif (s[0] >= 'a' && s[0] <= 'z') s[0] -= 32;\n\tcout << s << endl;\n\treturn 0;\n}	create string s\nread s\nif s[0]>= a and s[0]<= z, set s[0] to s[0]-32\nprint s
"int main() {\n\tlong long int n;\n\tstring s;\n\tcin >> s;\n\tn = s.length();\n\tif (s[0] > 96 && s[0] < 123) { s[0] = s[0] - 32; }\n\tcout << s << ""\n"";\n}"	n =integer\ns =string\nRead s\nset n to length of string s\nif s[0] is greater than 96 and s[0] is less than 123, then set s[0] to s[0] - 32\nprint s and a new line
int main() {\n\tstring x;\n\tcin >> x;\n\tif (islower(x[0])) { x[0] = toupper(x[0]); }\n\tcout << x << endl;\n}	create string x\nread x\nif x[0] is lower case change x[0] to upper case\nprint x
int main() {\n\tstring word;\n\tcin >> word;\n\tword[0] = toupper(word[0]);\n\tcout << word << endl;\n\treturn 0;\n}	create string word\nread word\nset word[0] to upper case word[0]\nprint word print newline
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nRead s\nset s[0] to upper case of s[0]\nprint s and a new line
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	declare string variable s\nread s\nconvert s[0] to the upper case\nprint s
int main() {\n\tstring s;\n\tcin >> s;\n\tif (s[0] >= 'a' && s[0] <= 'z') { s[0] = toupper(s[0]); }\n\tcout << s << endl;\n}	declare string variable s\nread s\nif s[0] is a lowercase letter from a to z, change it to upper case\nprint s
int main() {\n\tstring str;\n\tcin >> str;\n\tif (((int)str[0] <= (int)'z') && ((int)str[0] >= 'a')) str[0] = (char)((int)str[0] - 32);\n\tcout << str << endl;\n}	let str be a string\nread str\nif (((int)str[0] is less than or equal to (int)'z') and ((int)str[0] is greater than or equal to a)), the 0th element of array str is equal to (char)((int)str[0] - 32)\nprint str and newline
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = towupper(s[0]);\n\tcout << s << endl;\n\treturn 0;\n}	create string s\nread s\nset value of s[0] to towupper(s[0])\nprint s
"char a[1000000];\nchar b[53] = {""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""};\nint main() {\n\tgets(a);\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (a[0] == b[i]) {\n\t\t\ta[0] = b[i + 26];\n\t\t\tbreak;\n\t\t}\n\t}\n\tputs(a);\n\treturn 0;\n}"	"declare character array a with size 1000000\ndeclare character array b with size 53 with elements ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""\nread a\nfor integer i = 0 to 26 exclusive\nif a[0] = b[i]\nset value of a[0] to b[i + 26]\nstop the loop\nprint a"
int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << endl;\n}	create string s\nread s\nset s[0] to uppercase letter of s[0]\nprint s
int main() {\n\tstring word;\n\tcin >> word;\n\tif (word[0] >= 'a' && word[0] <= 'z') word[0] = word[0] - 32;\n\tcout << word << endl;\n\treturn 0;\n}	create string word\nread word\nif word[0] >= a and word[0] <= z, set word[0]=word[0] - 32\nprint word
int main() {\n\tstring S;\n\tcin >> S;\n\tS[0] = toupper(S[0]);\n\tcout << S << endl;\n}	let S be string\nread S\ncall toupper with s[0] as argument and assign it to element 0 of array S\nprint S
int main() {\n\tstring str;\n\tcin >> str;\n\tstr[0] = (char)toupper(str[0]);\n\tcout << str << endl;\n\treturn 0;\n}	declare string variable str\nread input to str\nchange str[0] to uppercase\nprint str
"int main() {\n\tstring s;\n\tcin >> s;\n\ts[0] = toupper(s[0]);\n\tcout << s << ""\n"";\n}"	let s be a string\nread s\nlet the value of s[0] is equal to toupper(s[0])\nprint s and newline
int main() {\n\tstring a;\n\tgetline(cin, a);\n\tif (a[0] >= 'a' && a[0] <= 'z') a[0] -= 32;\n\tcout << a << endl;\n}	declare string variable a\nread line from the input to a\nif a[0] >= 'a' and a[0] <= 'z', decrease a[0] by 32\nprint a
"int main() {\n\tint n, m;\n\twhile (cin >> n >> m) {\n\t\tint cnt = 0, ta, tb;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> ta >> tb;\n\t\t\tif (cnt >= ta) cnt = max(cnt, tb);\n\t\t}\n\t\tcout << (cnt >= m ? ""YES\n"" : ""NO\n"");\n\t}\n\treturn 0;\n}"	n, m = integers\nwhile read n, m\ncnt, ta, tb = integers with cnt = 0\nfor i = 0 to n exclusive\nread ta, tb\nif (cnt >= ta), cnt = max of cnt and tb\nprint (if cnt >= m, YES else NO)
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tvector<int> a(101, 0);\n\tint x, y;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> y;\n\t\ta[x]++;\n\t\ta[y]--;\n\t}\n\tint cs = 0;\n\tfor (int i = 0; i < m; i++) {\n\t\tcs += a[i];\n\t\tif (cs <= 0) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""YES"" << endl;\n\treturn 0;\n}"	"create ints n and m\nread n and m\nmake int vector a of size 101 with values 0\nmake ints x and y\nfor i = 0 to n exclusive\nread x and y\nincrement a[x]\nsubtract 1 from a[y]\nmake integer cs = 0\nfor i = 0 to m exclusive\nset cs to cs + a[i]\nif cs is less than or equal to 0\ndisplay ""NO""\ndisplay ""YES"""
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint c = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tif (c >= a) c = max(c, b);\n\t}\n\tif (c >= m)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n}"	n, m = integer\nread n, m\nc = integer = 0\nfor i = 0 to n exclusive\na, b = integer\nread a, b\nif c >= a, then c = bigger value between c and b\nif c >= m\nprint YES\nelse\nprint NO
"const int MAX = 1e5;\nint main() {\n\tbool x[150];\n\tmemset(x, false, sizeof(x));\n\tint n, m;\n\tint l, r;\n\tint i, j;\n\tcin >> n >> m;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> l >> r;\n\t\tfor (j = l; j < r; j++) x[j] = true;\n\t}\n\tfor (i = 0; i < m; i++)\n\t\tif (!x[i]) break;\n\tif (i < m)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	"declare constant integer MAX = 1e5\ndeclare boolean array x size 150\nset bytes from x to size of x to value false\ndeclare integers n, m\ndeclare integers l, r\ndeclare integers i, j\nread n and m\nfor i = 0 to n exclusive\nread l and r\nfor j = l to r exclusive, let x[j] be true\nfor i = 0 to m exclusive\nif not x[i], end loop\nif i is less than m\nprint ""NO"" and newline\nelse\nprint ""YES"" and newline"
"int pos[110];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tfor (int j = a + 1; j <= b; j++) pos[j] = 1;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (!pos[i]) return cout << ""NO\n"", 0;\n\t}\n\treturn cout << ""YES\n"", 0;\n}"	"create integer array pos of size 110\nmake integers n and m\nread n and m\nfor i = 0 to n exclusive\nmake integers a and b\nread a and b\nfor j = a + 1 to b, set pos[j] to 1\nfor i = 1 to m\nif pos[i] is falsy, print ""NO\n"" and return 0\ndisplay ""YES\n"" and return 0"
"int freq[10000005];\nint n, m;\nint main() {\n\tcin >> n >> m;\n\tint mat[n][2];\n\tmemset(freq, 0, sizeof freq);\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> mat[i][0] >> mat[i][1];\n\t\tfor (int j = (mat[i][0]) + 1; j <= mat[i][1]; j++) freq[j]++;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (!freq[i]) {\n\t\t\tputs(""NO"");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(""YES"");\n\treturn 0;\n}"	"declare integer array freq size 10000005\ndeclare integers n, m\nread n and m\ndeclare integer array mat size n by 2\nset bytes from freq to size of freq to value 0\nfor i = 0 to n exclusive\nread mat[i][0], mat[i][1]\nfor j = ( mat[i][0] ) + 1 to mat[i][1] inclusive, increment freq[j]\nfor i = 1 to m inclusive\nif not freq[i]\nprint ""NO""\nprint ""YES"""
"int n, m;\nint main() {\n\tcin >> n >> m;\n\tint a, b;\n\tint t = 0;\n\twhile (n--) {\n\t\tcin >> a >> b;\n\t\tif (a <= t) t = max(t, b);\n\t}\n\tif (t >= m)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let n , m be integers\nread n and m\nlet a, b be integers\nlet t be a integer with t = 0\nwhile n is decremented by 1\nread a, b\nif a <= t , t is equal to maximum of t and b\nif t >= m\nprint YES and newline\nelse do the following\nprint NO and newline
"int a[105];\nint main() {\n\tint n, m, x, y, l = 0, r;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> x >> y;\n\t\tif (i == 1 && x != 0) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (i == 1)\n\t\t\tr = y;\n\t\telse if (x <= r)\n\t\t\tr = max(r, y);\n\t}\n\tif (r >= m)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"a is a new array of integers with 105 elements\ncreate ints n, m, x, y, l and r where l = 0\nread standard input to n and m\nchange i from 1 to n inclusive, incrementing i, in a loop\nread x and y\nif i = 1 and x != 0\nprint ""NO""\nif i is equal to 1\nset r to y\nelse if x <= r\nassign the new value = max of r and y to r\nif r >= m\nprint ""YES""\nelse\nprint ""NO"""
"int n, m, s;\nint main() {\n\tint l, r;\n\tcin >> n >> m;\n\twhile (n--) {\n\t\tcin >> l >> r;\n\t\tif (l <= s) s = r < s ? s : r;\n\t}\n\tif (s < m)\n\t\tcout << ""NO\n"";\n\telse\n\t\tcout << ""YES\n"";\n\treturn 0;\n}"	n, m, s = integers\nl, r = integers\nread n, m\nwhile decrement n\nread l, r\nif (l <= s), if s = r < s, s else r\nif (s < m)\nprint NO\nelse\nprint YES
"int main() {\n\tint n, m, rightMost = 0;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tif (x <= rightMost && y > rightMost) rightMost = y;\n\t}\n\tif (rightMost >= m)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create int n, m, rightMost, set rightMost to 0\nread n and m\nfor i=0 to n exclusive\ncreate int x and y\nread x and y\nif x <= rightMost and y > rightMost, rightMost = y\nif rightMost >= m\nprint YES\nelse\nprint NO
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tvector<int> q(1000, 0);\n\tq[0] = 1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tif (q[a] == 1) {\n\t\t\twhile (a <= b) {\n\t\t\t\tq[a] = 1;\n\t\t\t\t++a;\n\t\t\t}\n\t\t}\n\t}\n\tbool f = true;\n\tfor (int i = 0; i <= m; ++i) { f &= q[i]; }\n\tif (f)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	n, m = integers\nread n, m\nq = vector of integer with q on 1000 and 0\nq[0] = 1\nfor i = 0 to n exclusive\na, b = integers\nread a, b\nif (q[a] is 1)\nwhile (a <= b)\nq[a] = 1\nincrement a\nf = bool with f = true\nfor i = 0 to m, f = f bitwise and q[i]\nif (f)\nprint YES\nelse\nprint NO
"int main() {\n\tint N, M;\n\tcin >> N >> M;\n\tvector<int> A(N), B(N);\n\tfor (int i = 0; i < (int)(N); ++i) { cin >> A[i] >> B[i]; }\n\tint max_ = 0;\n\tfor (int i = 0; i < (int)(N); ++i) {\n\t\tif (max_ < A[i]) { break; }\n\t\tmax_ = max(max_, B[i]);\n\t}\n\tif (max_ == M) {\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\t} else {\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\t}\n\treturn 0;\n}"	"create ints N and M\nread N and M\nmake integer vector A of size N and B of size N\nfor i = 0 to N exclusive, read A[i] and B[i]\nmake integer max_ = 0\nfor i = 0 to N exclusive\nif max_ is less than A[i], break loop\nset max_ to max of max_ and B[i]\nif max_ is equal to M\nprint ""YES""\nprint new line\notherwise do\ndisplay ""NO""\nprint new line"
"int a[105];\nint main() {\n\tint n, m, x, y, l = 0, r;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> x >> y;\n\t\tif (i == 1 && x != 0) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (i == 1)\n\t\t\tr = y;\n\t\telse if (x <= r)\n\t\t\tr = max(r, y);\n\t}\n\tif (r >= m)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	a = integer array of size 105\nn, m, x, y, l, r = integers with l = 0\nread n, m\nfor i = 1 to n\nread x, y\nif (i is 1 and x is not 0)\nprint NO\nif (i is 1)\nr = y\nelse if (x <= r)\nr = max r and y\nif (r >= m)\nprint YES\nelse\nprint NO
"int freq[10000005];\nint n, m, x, to;\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> to;\n\t\tfor (int j = x + 1; j <= to; j++) freq[j] = 1;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (!freq[i]) {\n\t\t\tputs(""NO"");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(""YES"");\n\treturn 0;\n}"	let freq be an integer array of size 10000005\nlet n, m, x, to be integers\nread n , m\nfor int i = 0 to n\nread x, to\nfor int j = x + 1 to to inclusive,\nfor int i = 1 to m inclusive\nif freq[i] = 0\nprint out NO\nprint out YES
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tm *= 2;\n\tbool v[2 * 110];\n\tmemset((v), (false), sizeof(v));\n\twhile (n--) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\ta *= 2;\n\t\tb *= 2;\n\t\tmemset(v + a, true, b - a + 1);\n\t}\n\tbool ok = true;\n\tfor (int i = 0; i <= m; ++i)\n\t\tif (!v[i]) ok = false;\n\tcout << (ok ? ""YES"" : ""NO"") << ""\n"";\n\treturn 0;\n}"	n,m=int\nread n,m\nmultiply m by 2\nv=array of 220 bool\nfill v with false\nwhile decremented value of n is not 0\na,b=int\nread a,b\nmultiply a by 2\nmultiply b by 2\nfill v from index a to b-a+1 with true\nok=true\nfor i=0 to m inclusive\nif not v[i] ok=false\nprint YES if ok else NO
"int freq[10000005];\nint n, m, x, to;\nint main() {\n\tcin >> n >> m;\n\tmemset(freq, 0, sizeof freq);\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> to;\n\t\tfor (int j = x + 1; j <= to; j++) freq[j]++;\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tif (!freq[i]) {\n\t\t\tputs(""NO"");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(""YES"");\n\treturn 0;\n}"	freq = integer array of size 10000005\nn, m, x, to = integers\nread n, m\nset all contents of freq to 0\nfor i = 0 to n exclusive\nread x, to\nfor j = x + 1 to to, increment freq[j]\nfor i = 1 to m\nif (not freq[i])\nprint NO\nprint YES
"inline int getint() {\n\tint r = 0, k = 1;\n\tchar c = getchar();\n\tfor (; c < '0' || c > '9'; c = getchar())\n\t\tif (c == '-') k = -1;\n\tfor (; c >= '0' && c <= '9'; c = getchar()) r = r * 10 + c - '0';\n\treturn r * k;\n}\nint main() {\n\tint n = getint();\n\tint m = getint();\n\tint maxx = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x = getint();\n\t\tint y = getint();\n\t\tif (maxx >= x) maxx = max(maxx, y);\n\t}\n\tif (maxx >= m)\n\t\tputs(""YES"");\n\telse\n\t\tputs(""NO"");\n\treturn 0;\n}"	"getint is an inlined integer function\ndeclare ints r = 0 and k = 1\ndefin new char c with value from the input\nread char from the input into c, while c is not a digit character\nif c = '-', change k to - 1\nwhile is a digit character, read new value for the c from the input, then change r to r * 10 + c - '0'\nreturn r * k\nnew integer n with value from getint()\nm is a new integer with value from getint()\ndefine new integer maxx with value 0\nin a for loop, change i from 1 to n inclusive\ndeclare integer variable with name x = result of getint()\ny is a new integer = value, returned from getint()\nif maxx >= x, change maxx to max of maxx and y\nif maxx >= m\nprint ""YES"" to standard output\nelse\nprint ""NO"" to stdout"
int main() {\n\tlong long x, y, n, c;\n\tcin >> n;\n\tx = n - 1;\n\ty = 1;\n\tc = 1;\n\twhile (x > 0) {\n\t\tc++;\n\t\tif (x * x + y * y + 2 * y + 1 < n * n + 1)\n\t\t\ty++;\n\t\telse {\n\t\t\tif (x * x - 2 * x + y * y + 2 * y + 2 < n * n + 1) {\n\t\t\t\tx = x - 1;\n\t\t\t\ty++;\n\t\t\t} else {\n\t\t\t\tx = x - 1;\n\t\t\t}\n\t\t}\n\t}\n\tif (n == 0) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tcout << 4 * c << endl;\n\t}\n}	let x, y, n, c be long values\nread n\nx equals n - 1\ny equals 1\nc equals 1\nwhile x is greater than 0\nincrease c by 1\nif x * x + y * y + 2 * y + 1 < n * n + 1\nincrease y by 1\nelse\nif x * x - 2 * x + y * y + 2 * y + 2 < n * n + 1\ndecrease x by 1\nincrease y by 1\nelse\ndecrease x by 1\nif n equals 0\nprint 1 and endline\nelse\nprint 4 * c and endline
int main() {\n\tlong long n, x, y;\n\tlong long ny;\n\tbool wasOut;\n\tlong long borderPoints = 0;\n\tlong long nx = 0;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t} else if (n < 0) {\n\t\treturn 0;\n\t}\n\tx = -n;\n\twhile (x <= 0) {\n\t\twasOut = true;\n\t\tny = sqrt(n * n - x * x) + 1;\n\t\tfor (y = -ny; y <= 0; y++) {\n\t\t\tif (x * x + y * y <= n * n) {\n\t\t\t\tif (wasOut == true) {\n\t\t\t\t\twasOut = false;\n\t\t\t\t\tborderPoints++;\n\t\t\t\t\tif (x == 0) { nx++; }\n\t\t\t\t} else {\n\t\t\t\t\tif (x < 0) {\n\t\t\t\t\t\tif ((x - 1) * (x - 1) + y * y > n * n) {\n\t\t\t\t\t\t\tborderPoints++;\n\t\t\t\t\t\t\tif (x == 0) { nx++; }\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ty = n + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (x > 0) {\n\t\t\t\t\t\tif ((x + 1) * (x + 1) + y * y > n * n) {\n\t\t\t\t\t\t\tborderPoints++;\n\t\t\t\t\t\t\tif (x == 0) { nx++; }\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ty = n + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx++;\n\t}\n\tcout << 2 * (borderPoints * 2 - nx) - 2 << endl;\n\treturn 0;\n}	n,x,y=long long\nny=long long\nwasOut=bool\nborderPoints=0\nnx=0\nread n\nif n is 0\nprint 1\nelse if n<0\nsubtract n from x\nwhile x<=0\nwasOut=true\nny=sqrt(n*n-x*x)+1\nfor y=-ny to 0 inclusive\nif x*x+y*y <= n*n\nif wasOut is true\nwasOut=false\nincrement borderPoints\nif x is 0 increment nx\nelse\nif x<0\nif (x-1)^2+y^2 > n^2\nincrement borderPoints\nif x is 0 increment nx\nelse\ny=n+1\nelse if x>0\nif (x+1)^2+y^2 > n^2\nincrement borderPoints\nif x is 0 increment nx\nelse\ny=n+1\nincrement x\nprint 2*(borderPoints*2-nx)-2
int main() {\n\tlong long n, ans = 0;\n\tcin >> n;\n\tdouble R = n;\n\tlong long tmp = n, k;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tdouble r = i;\n\t\tk = (long long)sqrt(R * R - r * r);\n\t\tans += (tmp == k ? 1 : tmp - k);\n\t\ttmp = k;\n\t}\n\tif (n == 0)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << ans * 4 << endl;\n\treturn 0;\n}	n, ans be long long values with ans being 0\nread n\ndouble value R equals n\ntmp. k be long long values and tmp equals n\nfor long long i = 1 to n inclusive\ndouble value r equals i\nk equals square root of R * R - r * r\nincrease ans by tmp == k ? 1 : tmp - k\ntmp equals k\nif n equals 0\nprint 1 and endline\nelse\nprint ans * 4 and endline
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (0 < n && n < 40000001) {\n\t\tlong long x = n, y = 0, k = 0;\n\t\twhile (x > 0) {\n\t\t\tk++;\n\t\t\ty++;\n\t\t\tif (x * x + y * y > n * n) { x--; }\n\t\t\tif (x * x + y * y > n * n) { y--; }\n\t\t}\n\t\tcout << 4 * k << endl;\n\t} else if (n == 0) {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	declare new long long n\nread n from the input\nif 0 < n < 40000001\ncreate new long longs x = n, y = 0 and k = 0\nwhile x > 0\nincrement k by one\nincrement y by one\ndecrement x if x * x + y * y is greater than n squared\ndecrement y if x * x + y * y is greater than n squared\nprint 4 * k\nelse if n = 0\nprint 1 to the standard output
int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tlong long x = n * sqrt(double(2));\n\t\tif (n == 0) {\n\t\t\tcout << 1 << endl;\n\t\t} else {\n\t\t\tcout << x * 4 << endl;\n\t\t}\n\t}\n\treturn 0;\n}	declare long long n\nwhile read n is true\ndeclare long long x = n * square root of double casted 2\nif n is 0\nprint 1, newline\nelse\nprint x * 4, newline
"long long Eu_distance(long long x, long long y) {\n\treturn x * x + y * y;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 0) {\n\t\tputs(""1"");\n\t} else if (n == 1) {\n\t\tputs(""4"");\n\t} else {\n\t\tlong long x, y = n;\n\t\tlong long res = 0;\n\t\tfor (x = 0; x < n, x <= y; x++) {\n\t\t\twhile (Eu_distance(x, y) > n * n) { y--; }\n\t\t\tif (x > y) { break; }\n\t\t\tif (x != y) {\n\t\t\t\tres += 2;\n\t\t\t} else {\n\t\t\t\tres++;\n\t\t\t}\n\t\t}\n\t\tres -= 2;\n\t\tres = res * 4 + 4;\n\t\tcout << res << endl;\n\t}\n}"	Eu_distance is a function that returns a long value by taking in two long values\nreturn x * x + y * y\nn is a long integer\nread n\nif n equals 0\nput string 1\nelse if n equals 1\nput string 4\nelse\nx and y are long integers with y = n\nres is a long integer 0\nfor x=0 to n,y+1 exclusive\nwhile Eu_distance(x, y) is greater than n * n, decrease y by 1\nif x is greater than y, stop\nif x is not equal to y\nincrease res by 2\nelse\nincrease res by 1\ndecrease res by 2\nres equals res * 4 + 4\nprint res and endline
int main() {\n\tlong long n;\n\tlong long w;\n\tlong long t;\n\tint q = 1;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << q << endl;\n\t} else {\n\t\tlong long int r = int(sqrt((n * n) / 2)) * 2;\n\t\tw = n * n;\n\t\tif ((r / 2) * (r / 2) + (r / 2 + 1) * (r / 2 + 1) <= w) { r++; }\n\t\tcout << 4 * r << endl;\n\t}\n}	let n be a long integer\nlet w be a long integer\nlet t be a long integer\nthe integer value of q = 1\nread n\nif n equals 0\nprint q and newline\nelse do the following\nthe long integer value of r = int(sqrt((n * n) / 2)) * 2\nw is equal to n * n\nif (r / 2) * (r / 2) + (r / 2 + 1) * (r / 2 + 1) <= w , increment r by 1\nprint 4 * r and newline
const int Maxn = 3010, INF = 0x3f3f3f3f;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 0)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << ((long long)(n * sqrt(2))) * 4 << endl;\n}	create const ints Maxn = 3010 and INF = 0x3f3f3f3f\nlet long long int n\nread n\nif n is equal to 0\nprint 1\nelse do\nshow ((long long)(n * sqrt(2))) * 4
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int j = n - 1;\n\tlong long lim = n * n;\n\tlong long t;\n\tlong long prevj = n;\n\tlong long sum = 0;\n\tif (n == 0) {\n\t\tcout << 1 << ""\n"";\n\t\treturn 0;\n\t}\n\tfor (long long int i = 1; i < n + 1; ++i) {\n\t\tt = i * i;\n\t\twhile (j > 0 && j * j > (lim - t)) j--;\n\t\tsum += 1;\n\t\tif (prevj != j) sum += (prevj - j - 1);\n\t\tprevj = j;\n\t}\n\tcout << 4 * sum << ""\n"";\n}"	let n be a long integer\nread n\nthe long integer value of j = n - 1\nthe long integer value of lim = n * n\nlet t be a long integer\nthe long integer value of prevj = n\nthe long integer value of sum = 0\nif n equals 0\nprint 1 and newline\nfor long integer i = 1 to n + 1 exclusive\nt is equal to i * i\nwhile j is greater than 0 and j * j is greater than (lim - t) , decrement j by 1\nincrement sum by 1\nif prevj is not equal to j , increment sum by (prevj - j - 1)\nprevj is equal to j\nprint 4 * sum and newline
int main() {\n\tlong long int n, max, save;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\tcout << 4 << endl;\n\t\treturn 0;\n\t}\n\tfor (max = 0; 2 * (max * max) < n * n; max++) { save = max; }\n\tif ((save + 1) * (save + 1) + save * save <= n * n) {\n\t\tn = (save)*8 + 4;\n\t\tcout << n << endl;\n\t\treturn 0;\n\t}\n\tn = (save)*8;\n\tcout << n << endl;\n\treturn 0;\n}	let n, max, save be long integers\nread n\nif n equals 0\nprint 1 and newline\nif n equals 1\nprint 4 and newline\nfor max is equal to 0 , 2 * (max * max) is less than n * n , increment max by 1 , save is equal to max\nif (save + 1) * (save + 1) + save * save <= n * n\nn is equal to (save)*8 + 4\nprint n and newline\nn is equal to (save)*8\nprint n and newline
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint x = n * sqrt(double(2));\n\t\tif (n == 0)\n\t\t\tcout << 1 << endl;\n\t\telse\n\t\t\tcout << x * 4 << endl;\n\t}\n\treturn 0;\n}	n = int\nwhile reading n\nx = n*sqrt(2 to double)\nif n = 0\nprint 1\nelse\nprint x*4
int main() {\n\tint n;\n\tcin >> n;\n\tif (!n)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << (int)(sqrt(2) * n) * 4 << endl;\n\treturn 0;\n}	integer as n\nread n\nif n is false\noutput 1\nelse\noutput (square root of 2 times n) times 4
long long n;\nlong long inside(long long x, long long y) {\n\tif (sqrt(x * x + y * y) <= n) return 1;\n\treturn 0;\n}\nint main() {\n\tlong long num;\n\tcin >> n;\n\tnum = n / 2;\n\twhile ((num + 1) * sqrt(2.0) <= n) num++;\n\tif (n == 1)\n\t\tcout << 4 << endl;\n\telse if (n == 0)\n\t\tcout << 1 << endl;\n\telse if (inside(num, num + 1))\n\t\tcout << 8 * num + 4 << endl;\n\telse if (!inside(num, num + 1))\n\t\tcout << 8 * num << endl;\n\treturn 0;\n}	create long long n\ndeclare inside taking in long long ints x and y and returning long long\nif sqrt(x * x + y * y) is less than or equal to n, return 1\nmake long long num\nread n\nset num to n / 2\nwhile (num + 1) * sqrt(2.0) is less than or equal to n, increment num\nif n is 1\nprint 4\nelse if n is equal to 0\nshow 1\nelse if inside(num, num + 1) is truthy\ndisplay 8 * num + 4\nelse if inside(num, num + 1) is falsy\nshow 8 * num
const double EPS = 1e-9;\nlong long qx[] = {0, -1, -1};\nlong long qy[] = {1, 1, 0};\nlong long movx[] = {1, 0, -1, 0};\nlong long movy[] = {0, -1, 0, 1};\nlong long dist(long long y, long long x) {\n\treturn (y * y + x * x);\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tlong long tot = 0;\n\tlong long lasti = 0;\n\tfor (long long i = 0; i < n; ++i) {\n\t\tlong long valini = 2 * i * i;\n\t\tif (valini - n * n > 0) break;\n\t\tlasti = i;\n\t}\n\tlong long posx, posy = lasti;\n\tposx = lasti;\n\tlong long contador = 0;\n\tfor (long long i = 0; i < 4; ++i) {\n\t\tif (dist(lasti + movx[i], lasti + movy[i]) - n * n > 0) contador = 1;\n\t}\n\tlong long xx, yy;\n\tlong long resta = contador;\n\twhile (posx != 0 || posy != n) {\n\t\tbool works = false;\n\t\tfor (long long j = 0; j < 3; j++) {\n\t\t\txx = posx + qx[j];\n\t\t\tyy = posy + qy[j];\n\t\t\tif (n * n - dist(yy, xx) >= 0) {\n\t\t\t\tcontador++;\n\t\t\t\tposy = yy;\n\t\t\t\tposx = xx;\n\t\t\t\tworks = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcontador *= 2;\n\tcontador -= resta;\n\tcontador *= 4;\n\tcontador -= 4;\n\tcout << contador << endl;\n}	EPS=1e-9\nqx=array of long long filled with 0, -1, -1\nqy=array of long long filled with 1, 1, 0\nmovx=array of long long filled with 1, 0, -1, 0\nmovy=array of long long filled with 0, -1, 0, 1\nfunction dist (get long long y and x, return long long)\nreturn y*y+x*x\nn=long long\nread n\nif n is 0\nprint 1\ntot=0\nlasti=0\nfor i=0 to n exclusive\nvalini=2*i*i\nif valini-n*n > 0 break\nlasti=i\nposx=long long, posy=lasti\nposx=lasti\ncontador=0\nfor i=0 to 4 exclusive\nif dist(lasti+movx[i], lasti+movy[i])-n*n > 0 contador=1\nxx,yy=long long\nresta=contador\nwhile posx is not 0 or posy is not n\nworks=false\nfor j=0 to 3 exclusive\nxx=posx+qx[j]\nyy=posy+qx[j]\nif n*n-dist(yy,xx) >= 0\nincrement contador\nposy=yy\nposx=xx\nworks=true\nbreak\nmultiply contador by 2\nsubstract resta from contador\nmultiply contador by 4\nsubtract 4 from contador\nprint contador
int main() {\n\tint a[3];\n\twhile (cin >> a[0] >> a[1] >> a[2]) {\n\t\tsort(a, a + 3);\n\t\tif (a[0] + a[1] > a[2])\n\t\t\tcout << '0' << '\n';\n\t\telse\n\t\t\tcout << a[2] + 1 - a[1] - a[0] << '\n';\n\t}\n\treturn 0;\n}	declare integer array a size 3\nwhile read a[0], a[1], a[2]\nsort from a to a + 3\nif a[0] + a[1] is greater than a[2]\nprint '0' and '\n'\nelse\nprint a[2] + 1 - a[1] - a[0] and '\n'
int main() {\n\tint a, b, c, res = 0;\n\tcin >> a >> b >> c;\n\tif (a >= b + c) {\n\t\tres = a - (b + c) + 1;\n\t} else if (b >= a + c) {\n\t\tres = b - (a + c) + 1;\n\t} else if (c >= a + b) {\n\t\tres = c - (b + a) + 1;\n\t}\n\tcout << res << endl;\n}	let a, b, c, res be integers with res = 0\nread a, b, c\nif a >= b + c\nres is equal to a - (b + c) + 1\nelse if b >= a + c\nres is equal to b - (a + c) + 1\nelse if c >= a + b\nres is equal to c - (b + a) + 1\nprint res and newline
bool compare(int a, int b) {\n\treturn (a < b);\n}\nint main() {\n\tint arr[3];\n\twhile (cin >> arr[0] >> arr[1] >> arr[2]) {\n\t\tsort(arr, arr + 3);\n\t\tif (arr[0] + arr[1] > arr[2]) {\n\t\t\tcout << 0 << endl;\n\t\t} else {\n\t\t\tcout << (arr[2] + 1 - arr[1] - arr[0]) << endl;\n\t\t}\n\t}\n\treturn 0;\n}	let compare be a function that accepts integers a , b and returns a boolean value\nreturn a is less than b\narr = array of integers of length 3\nwhile read arr[0] , arr[1] , arr[2]\nsort the values arr, arr + 3\nif arr[0] + arr[1] is greater than arr[2]\nprint 0 and newline\nelse do the following\nprint (arr[2] + 1 - arr[1] - arr[0]) and newline
int main() {\n\tint a[3];\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\tcout << max(a[2] - a[1] - a[0] + 1, 0) << endl;\n\treturn 0;\n}	a = array of integers of length 3\nread a[0] , a[1] , a[2]\nsort the values a, a + 3\nprint (maximum of a[2] - a[1] - a[0] + 1 and 0) and newline
"int main() {\n\tint a[3];\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\tcout << max(0, a[2] - a[1] + 1 - a[0]) << ""\n"";\n}"	"create new array of integers a with size 3\nread a[0], a[1] and a[2] from the input\nsort first 3 elements of a\nprint max of 0 and a[2] - a[1] + 1 - a[0] and ""\n"""
int main() {\n\tint a[3];\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\tcout << max(0, a[2] + 1 - (a[0] + a[1])) << endl;\n\treturn 0;\n}	declare integer array a size 3\nread a[0], a[1], a[2]\nsort from a to a + 3\nprint maximum of ( 0 and a[2] + 1 - (a[0]+a[1]) ), newline
int main() {\n\tlong long int a, b, c, d, e, f, g;\n\tstring s, t;\n\twhile (cin >> a >> b >> c) {\n\t\td = 0;\n\t\twhile (1) {\n\t\t\tif (a + b > c && b + c > a && a + c > b) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\td++;\n\t\t\t\tif (a <= b && a <= c) {\n\t\t\t\t\ta++;\n\t\t\t\t} else if (b <= a && b <= c) {\n\t\t\t\t\tb++;\n\t\t\t\t} else {\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << d << endl;\n\t}\n\treturn 0;\n}	a, b, c, d, e, f, g are long long integers\ns and t are strings\nwhile reading a, b, c\nset d = 0\nwhile 1\nif a+b > c and b+c > a and a + c > b\nbreak\nelse\nadd 1 to d\nif a<=b and a<=c\nadd 1 to a\nelse if b<=a and b<=c\nadd 1 to b\nelse\nadd 1 to c\nprint d
int main() {\n\tvector<int> lines(3);\n\tcin >> lines[0] >> lines[1] >> lines[2];\n\tsort(lines.begin(), lines.end());\n\tint counter = 0;\n\twhile (lines[0] + lines[1] <= lines[2]) {\n\t\tlines[0]++;\n\t\tcounter++;\n\t}\n\tcout << counter << endl;\n\treturn 0;\n}	lines is a new vector of integers with size 3\nread user input to lines[0], lines[1] and lines[2]\nsort vector lines\ndefine integer variable counter = 0\nwhile lines[0] + lines[1] <= lines[2]\nincrement lines[0]\nincrement counter\nprint counter
bool checkValidity(int a, int b, int c) {\n\tif (a + b <= c || a + c <= b || b + c <= a)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nint main() {\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tint counter = 100000;\n\tfor (int i = a; i <= 100; i++) {\n\t\tfor (int j = b; j <= 100; j++) {\n\t\t\tfor (int k = c; k <= 100; k++) {\n\t\t\t\tif (checkValidity(i, j, k)) {\n\t\t\t\t\tint temp = abs(i - a) + (j - b) + (k - c);\n\t\t\t\t\tcounter = min(counter, temp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << counter << endl;\n\treturn 0;\n}	declare checkValidity with integers a, b, c as arguments, returning boolean\nif a + b is less than or equal to c or a + c is less than or equal to b or b + c is less than or equal to a\nreturn false from function\nelse\nreturn true from function\ndeclare long longs a, b, c\nread a, b, c\ndeclare integer counter = 100000\nfor i = a to 100 inclusive\nfor j = b to 100 inclusive\nfor k = c to 100 inclusive\nif result of run checkValidity(i, j, k) is true\ndeclare integer temp = absolute value of ( i - a ) + ( j - b ) + ( k - c )\nlet counter be minimum of ( counter and temp )\nprint counter, newline
int main() {\n\tint a, b, c;\n\tint max, ans;\n\tcin >> a >> b >> c;\n\tmax = a;\n\tif (max < b) max = b;\n\tif (max < c) max = c;\n\tif ((ans = 2 * max - (a + b + c)) < 0)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << ans + 1 << endl;\n\treturn 0;\n}	create int a, b , c\ncreate int max,ans\nread a and b and c\nmax = a\nif (max < b) max = b\nif (max < c) max = c\nif ans( 2 * max - (a + b + c)) < 0)\nprint 0\nesle\nprint ans +1
int main() {\n\tint a[3], i;\n\tfor (i = 0; i < 3; i++) cin >> a[i];\n\tsort(a, a + 3);\n\tif (a[0] + a[1] > a[2]) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << a[2] + 1 - a[0] - a[1] << endl;\n\t}\n\treturn 0;\n}	create int int a[3], i\nfor i=0 to 3 exclusive, read a[i]\nsort elements between a and a+3\nif a[0] + a[1] > a[2]\nprint 0\nelse\nprint a[2] + 1 - a[0] - a[1]
"int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint flag = 0;\n\twhile (a + b < (c + 1)) {\n\t\t++flag;\n\t\t++a;\n\t}\n\twhile (a + c < (b + 1)) {\n\t\t++flag;\n\t\t++a;\n\t}\n\twhile (b + c < (a + 1)) {\n\t\t++flag;\n\t\t++b;\n\t}\n\tcout << flag << ""\n"";\n}"	a,b,c=int\nread a,b,c\nflag=0\nwhile a+b<(c+1)\nincrement flag\nincrement a\nwhile a+c<(b+1)\nincrement flag\nincrement a\nwhile b+c<(a+1)\nincrement flag\nincrement b\nprint flag
const double pi = acos(-1);\nint main() {\n\tint a[3], k = 0;\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\tif (a[1] + a[0] > a[2] && a[2] - a[0] < a[1]) {\n\t\tcout << k << endl;\n\t\treturn 0;\n\t}\n\tif (a[1] + a[0] <= a[2]) {\n\t\tk = a[2] - a[1] - a[0] + 1;\n\t\tcout << k << endl;\n\t\treturn 0;\n\t}\n}	declare contant double pi = arc cosine of -1\ncreate array of integers a of size 3 and integer k = 0\nread a[0], a[1] and a[2]\nsort array a\nif a[1] + a[0] is greater than a[2] and a[2] - a[0] is less than a[1] then\nprint k\nif a[1] + a[0] is less than or equal to a[2]\nset k to a[2] - a[1] - a[0] + 1\nprint k
const int MAXP = 55;\nint main() {\n\tint a[3];\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\tcout << max(0, a[2] - a[0] - a[1] + 1) << endl;\n\treturn 0;\n}	let MAXP be a constant integer with MAXP = 55\na = array of integers of length 3\nread a[0] , a[1] , a[2]\nsort the values a, a + 3\nprint maximum of 0 and a[2] - a[0] - a[1] + 1 and newline
"int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint min_cnt = 1e9;\n\tfor (int i = a; i <= 100; i++) {\n\t\tfor (int j = b; j <= 100; j++) {\n\t\t\tfor (int k = c; k <= 100; k++) {\n\t\t\t\tdouble s = (i + j + k) / 2.0;\n\t\t\t\tdouble under_root = s * (s - i) * (s - j) * (s - k);\n\t\t\t\tif (under_root > 0.0) { min_cnt = min(min_cnt, ((i - a) + (j - b) + (k - c))); }\n\t\t\t}\n\t\t}\n\t}\n\tcout << min_cnt << ""\n"";\n\treturn 0;\n}"	create ints a, b, and c\nread a, b, and c\ncreate integer min_cnt = 1e9\nfor i = a to 100\nfor j = b to 100\nfor k = c to 100\ncreate double s = (i + j + k) / 2.0\ncreate double under_root = s * (s - i) * (s - j) * (s - k)\nif under_root is greater than 0.0, set min_cnt to min(min_cnt, ((i - a) + (j - b) + (k - c)))\ndisplay min_cnt
const int maxn = 1e5 + 5;\nint main() {\n\tint ans = 0;\n\tint a[4];\n\twhile (cin >> a[1] >> a[2] >> a[3]) {\n\t\tsort(a + 1, a + 4);\n\t\tans = 0;\n\t\twhile (a[1] + a[2] <= a[3]) {\n\t\t\tans++;\n\t\t\ta[1]++;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}	maxn = 1e5 + 5\nans = 0\ncreate int a[4]\nwhle read a[1], a[2], a[3]\nsort elements between a + 1 and a + 4\nans=0\nwhile a[1] + a[2] <= a[3]\nincrement ans\nadd 1 to a[1]\nprint ans
int main() {\n\tint a[3];\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\tif (a[0] + a[1] > a[2])\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << a[2] + 1 - a[0] - a[1] << endl;\n}	create int a[3]\nread a[0], a[1], a[2]\nsort elements between a and a+3\nif a[0] + a[1] > a[2]\nprint 0\nelse\nprint a[2] + 1 - a[0] - a[1]
int main() {\n\tint a, b, c, s, m, d;\n\tcin >> a >> b >> c;\n\ts = a + b + c;\n\tm = max(max(a, b), c);\n\td = 2 * m - s + 1;\n\tif (d <= 0) d = 0;\n\tcout << d << endl;\n}	a, b, c, s, m, d = int\nread a, b, c\ns = a + b + c\nm = max of max(a, b) and c\nd = 2 * m - s + 1\nif (d <= 0), d = 0\nprint d
int main() {\n\tint a, b, c, d, l = 0;\n\tcin >> a >> b >> c;\n\tif (a + b > c && b + c > a && a + c > b) {\n\t\td = 0;\n\t\tcout << d << endl;\n\t} else {\n\t\tif (a <= b || a <= c) {\n\t\t\twhile (true) {\n\t\t\t\ta++;\n\t\t\t\tl++;\n\t\t\t\tif (a + b > c && b + c > a && a + c > b) {\n\t\t\t\t\tcout << l << endl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (b <= a || b <= c) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tb++;\n\t\t\t\t\tl++;\n\t\t\t\t\tif (a + b > c && b + c > a && a + c > b) {\n\t\t\t\t\t\tcout << l << endl;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}	a, b, c, d and l are ints where l = 0\nread from the input to a, b and c\nif a + b > c and b + c > a and a + c > b\nchange d to 0\nprint d\nelse\nif a <= b or a <= c\nlooping infinitely\nincrement a\nincrement l\nif a + b > c and b + c > a and a + c > b\nprint l\nstop the loop\nelse\nif b <= a or b <= c\nlooping infinitely\nincrement b\nincrement l by one\nif a + b > c and b + c > a and a + c > b\nprint l\nbreak the loop
int main() {\n\tint a[3];\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3, greater<int>());\n\tif (a[0] + a[1] > a[2] && a[1] + a[2] > a[0] && a[2] + a[1] > a[0]) {\n\t\tcout << 0 << endl;\n\t} else if (a[0] + a[1] > a[2] && a[0] + a[2] > a[1] && a[2] + a[1] <= a[0]) {\n\t\tint num1 = a[0] / 2;\n\t\tnum1 = a[0] - num1;\n\t\tnum1 = num1 - a[2];\n\t\tint num2 = a[0] / 2;\n\t\tnum2 = a[0] - num2;\n\t\tnum2 = num2 - a[1];\n\t\tif (a[0] % 2) {\n\t\t\tcout << num1 + num2 << endl;\n\t\t} else {\n\t\t\tcout << num1 + num2 + 1 << endl;\n\t\t}\n\t}\n}	a = array of integers of length 3\nread a[0] , a[1] , a[2]\nsort the values a, a + 3, greater<int>()\nif a[0] + a[1] is greater than a[2] and a[1] + a[2] is greater than a[0] and a[2] + a[1] is greater than a[0]\nprint 0 and newline\nelse if a[0] + a[1] is greater than a[2] and a[0] + a[2] is greater than a[1] and a[2] + a[1] <= a[0]\nthe integer value of num1 is equal to a[0] / 2\nnum1 is equal to a[0] - num1\nnum1 is equal to num1 - a[2]\nthe integer value of num2 is equal to a[0] / 2\nnum2 is equal to a[0] - num2\nnum2 is equal to num2 - a[1]\nif a[0] modulo 2\nprint num1 + num2 and newline\nelse do the following\nprint num1 + num2 + 1 and newline
"int main() {\n\tint a[3];\n\tcin >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\ta[2]++;\n\tif (a[0] + a[1] >= a[2]) {\n\t\tcout << ""0"" << endl;\n\t} else {\n\t\tcout << a[2] - (a[0] + a[1]) << endl;\n\t\treturn 0;\n\t}\n}"	create int a[3]\nread a[0], a[1], a[2]\nsort elements between a and a+3\nincrement a[2]\nif a[0] + a[1] >= a[2]\nprint 0\nelse\nprint a[2] - (a[0] + a[1])
int A[3];\nint main() {\n\tfor (int i = 0; i < 3; i++) { cin >> A[i]; }\n\tsort(A, A + 3);\n\tcout << max(0, A[2] - A[1] - A[0] + 1) << '\n';\n\treturn 0;\n}	create int A[3]\nfor i=0 to 3 exclusive, read A[i]\nsort elements between A and A+3\nprint max(0, A[2] - A[1] - A[0] + 1) and a newline
"int main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcout << ""HARD\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""EASY\n"";\n\treturn 0;\n}"	"create integer n\nread n\nwhile decrement n is true\ncreate integer a\nread a\nif a is 1\nprint ""HARD\n""\nprint ""EASY\n"""
"int main() {\n\tint n, i, a, s = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\ts += a;\n\t}\n\tif (s != 0) {\n\t\tcout << ""HARD"" << endl;\n\t} else {\n\t\tcout << ""EASY"" << endl;\n\t}\n\treturn 0;\n}"	let n, i, a, s = integers with s = 0\nset n to input\nfor int i = 0 and i must be less than n\nset a to input\nadd a to s\nif s is not equal to 0\nprint out HARD and new line\nelse\nprint out EASY and new line
"int a[100], n, sum;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum = sum + a[i];\n\t}\n\tif (sum == 0) {\n\t\tcout << ""EASY"" << endl;\n\t} else {\n\t\tcout << ""HARD"" << endl;\n\t}\n\treturn 0;\n}"	let a, n, sum be integers with a = array of integers of length 100\nread n\nfor i=0 to n exclusive\nread ith element of array a\nthe value of sum is equal to sum + ith element of array a\nif (sum is equal to 0)\nprint EASY and newline\nelse , do the following\nprint HARD and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tbool ans = true;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tif (arr[i] == 1) { ans = false; }\n\t}\n\tif (ans) {\n\t\tcout << ""EASY"" << endl;\n\t} else {\n\t\tcout << ""HARD"" << endl;\n\t}\n}"	"declare integer variable n\nread n\ndeclare integer array arr with size n\ncreate boolean ans = true\nfor integer i = 0 to n exclusive\nread arr[i]\nif arr[i] = 1, change ans to false\nif ans is true\nprint ""EASY""\nelse\nprint ""HARD"""
"int a[100], x, sum = 0;\nint main() {\n\tcin >> x;\n\tfor (int z = 0; z < x; z++) {\n\t\tcin >> a[z];\n\t\tsum = sum + a[z];\n\t}\n\tif (sum == 0) {\n\t\tcout << ""EASY"" << endl;\n\t} else {\n\t\tcout << ""HARD"" << endl;\n\t}\n}"	"create integer array a with size 100, create integers x, sum with sum = 0\nread x\nfor z = 0 to x exclusive\nread a[z]\nset sum to sum + a[z]\nif sum is 0\nprint ""EASY"" print newline\nelse\nprint ""HARD"" print newline"
"void solve() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcout << ""HARD"" << '\n';\n\t\t\treturn;\n\t\t}\n\t}\n\tcout << ""EASY"" << '\n';\n}\nint main() {\n\tsolve();\n\treturn 0;\n}"	"define function solve\ndeclare integer variable n\nread n\ndecrement n and loop further, while n > 0\ndeclare integer a\nread a\nif a = 1\nprint ""HARD"" and '\n'\nreturn\nprint ""EASY"" and '\n'\ninvoke function solve"
"int main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tint r;\n\t\tcin >> r;\n\t\tif (r == 1) {\n\t\t\tcout << ""HARD""\n\t\t\t\t<< ""\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""EASY""\n\t\t<< ""\n"";\n}"	n =integer\nRead n\nwhile n is not equal to 0\nr =integer\nRead r\nif r is equal to 1\nprint HARD\nprint a new line\nprint EASY\nprint a new line
"int main() {\n\tint n, x, z = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tif (x > 0) { z++; }\n\t}\n\tif (z > 0)\n\t\tcout << ""HARD"" << endl;\n\telse\n\t\tcout << ""EASY"" << endl;\n}"	set n,x,z = 0\nread n\nfor i=0 to n exclusive increment i\nread x\nif x>0 increment z++\nif z>0\nprint HARD and new line\nelse\nprint EASY and new line
"int main() {\n\tint n;\n\tcin >> n;\n\tint *arr = new int[n];\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tsum += arr[i];\n\t}\n\tif (sum == 0) {\n\t\tcout << ""EASY"" << endl;\n\t} else {\n\t\tcout << ""HARD"" << endl;\n\t}\n\treturn 0;\n}"	"create integer n\nread n\ncreate integer pointer arr with arr = new integer array with size n\ncreate integer sum with sum = 0\nfor i = 0 to n exclusive\nread arr[i]\nincrement sum by arr[i]\nif sum is 0\nprint ""EASY"" print newline\nelse\nprint ""HARD"" print newline"
"int main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcout << ""HARD\n"";\n\t\t\texit(0);\n\t\t}\n\t}\n\tcout << ""EASY\n"";\n\treturn 0;\n}"	"n = int\nread n\nloop n times\na = int\nread a\nif a is 1\nprint ""HARD""\ncall exit with 0\nprint ""EASY"""
"inline void wa() {\n\tcout << ""HARD"" << endl;\n}\ninline void ac() {\n\tcout << ""EASY"" << endl;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint tmp;\n\t\tcin >> tmp;\n\t\tif (tmp) {\n\t\t\twa();\n\t\t\treturn 0;\n\t\t}\n\t}\n\tac();\n}"	"declare inline wa with no arguments, returning void\nprint ""HARD"" print newline\ndeclare inline ac with no arguments, returning void\nprint ""EASY"" print newline\ncreate integer n\nread n\nfor i = 1 to n inclusive\ncreate integer tmp\nread tmp\nif tmp is true\nrun wa\nrun ac"
"int main() {\n\tint n;\n\tbool cek = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (a == 1) { cek = 1; }\n\t}\n\tif (cek == 0) {\n\t\tcout << ""EASY"" << endl;\n\t} else {\n\t\tcout << ""HARD"" << endl;\n\t}\n}"	let n be a integer\nthe boolean value of cek is equal to 0\nread n\nfor i= 1 to n inclusive\nlet a be a integer\nread a\nif (a is equal to 1) , then cek is equal to 1\nif (cek is equal to 0)\nprint EASY and newline\nelse do the following\nprint HARD and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint e;\n\t\tcin >> e;\n\t\tif (e == 1) {\n\t\t\tcout << ""HARD"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""EASY"" << endl;\n\treturn 0;\n}"	n = integer\nread n\nfor i = 0 to n exclusive\ne = integer\nread e\nif e is 1\nprint HARD\nprint EASY
"int main() {\n\tint a, b, c;\n\tint cnt = 0;\n\tcin >> a;\n\tfor (int i = 1; i <= a; i++) {\n\t\tcin >> b;\n\t\tif (b == 1) cnt++;\n\t}\n\tif (cnt >= 1)\n\t\tcout << ""HARD"" << endl;\n\telse\n\t\tcout << ""EASY"" << endl;\n}"	"declare integer variables a, b and c\ncreate integer cnt = 0\nread a\nfor integer i = 1 to a inclusive\nread b\nincrement cnt if b = 1\nif cnt >= 1\nprint ""HARD""\nelse\nprint ""EASY"""
"int main() {\n\tint n;\n\tcin >> n;\n\tbool flag = false;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (a) flag = true;\n\t}\n\tif (flag)\n\t\tcout << ""HARD"" << endl;\n\telse\n\t\tcout << ""EASY"" << endl;\n}"	"n = int\nread n\nflag = bool with flag = false\nfor i = 0 to n\na = int\nread a\nif a is not 0 set flag to true\nif flag is true\nprint ""HARD""\nelse\nprint ""EASY"""
"int main() {\n\tint n;\n\tcin >> n;\n\tint s[n];\n\tfor (int i = 0; i < n; i++) { cin >> s[i]; }\n\tint count1 = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == 1) count1++;\n\t}\n\tif (count1 != 0)\n\t\tcout << ""HARD"" << endl;\n\telse\n\t\tcout << ""EASY"" << endl;\n\treturn 0;\n}"	"n = int\nread n\ns = int array of size n\nfor i = i to n read s[i]\ncount1 = int with count1 = 0\nfor i = 0 to n\nincrement count1 if s[i] is 1\nif count1 is not 0\nprint ""HARD""\nelse\nprint ""EASY"""
"int main() {\n\tint a[101], i, j, n;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tif (a[n - 1] == 1)\n\t\tcout << ""HARD"" << endl;\n\telse\n\t\tcout << ""EASY"" << endl;\n\treturn 0;\n}"	"i, j, n = int and a = int array of size 101\nread n\nread n values into a\nsort a\nif a[n - 1] equals 1\nprint ""HARD""\nelse\nprint ""EASY"""
"int main() {\n\tint n, i;\n\tcin >> n;\n\tint a[n];\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1) {\n\t\t\tcout << ""HARD"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""EASY"" << endl;\n}"	"n, i = int\nread n\na = int array of size n\nfor i = 0 to n\nread a[i]\nif a[i] is 1\nprint ""HARD""\nprint ""EASY"""
"int main() {\n\tint a[10000];\n\tint n, i, k;\n\tk = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] > 0) { k++; }\n\t}\n\tif (k > 0) {\n\t\tcout << ""HARD"" << endl;\n\t} else {\n\t\tcout << ""EASY"" << endl;\n\t}\n\treturn 0;\n}"	a = array of 10000 integers\nn, i, k = integers\nk = 0\nread n\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to n exclusive\nif a[i] > 0, increment k\nif k > 0\nprint HARD\nelse\nprint EASY
"int main() {\n\tint n, a;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\tif (a == 1) {\n\t\t\tcout << ""HARD"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""EASY"" << endl;\n\treturn 0;\n}"	create int n and a\nread n\nfor i=0 to n exclusive\nread a\nif a equal to 1\nprint HARD\nprint EASY
char Not(char x) {\n\treturn (x == '0' ? '1' : '0');\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (s[i] == 'r') { cout << i + 1 << '\n'; }\n\t}\n\tfor (int i = (int)s.size() - 1; i >= 0; i--) {\n\t\tif (s[i] == 'l') { cout << i + 1 << '\n'; }\n\t}\n\treturn 0;\n}	Not is a char function with char argument x\nreturn '1' if x = '0' or '0' otherwise\ncreate string s\nread variable s from the input\nfor integer i = 0 to length of s exclusive\nif s[i] = 'r', print i + 1 and '\n'\nloop through i from length of s - 1 to 0, decrementing it\nif s[i] = 'l', print i + 1 and '\n' to the standard output
int main() {\n\tstring ss;\n\tcin >> ss;\n\tint idx = (int)ss.size() - 1;\n\tvector<int> ans((int)ss.size());\n\tfor (int i = 0; i < (int)ss.size(); i++) {\n\t\tif (ss[i] == 'r') continue;\n\t\tans[idx] = i;\n\t\tidx--;\n\t}\n\tidx = 0;\n\tfor (int i = 0; i < (int)ss.size(); i++) {\n\t\tif (ss[i] == 'l') continue;\n\t\tans[idx] = i;\n\t\tidx++;\n\t}\n\tfor (int i = 0; i < ans.size(); i++) cout << ans[i] + 1 << '\n';\n\treturn 0;\n}	ss = string\nread ss\nidx = integer with idx = (cast to int)ss.size() - 1\nans = vector of integer with ans = ((cast to int)ss.size())\nfor i = 0 to (cast to int)ss.size() exclusive\nif ss[i] is r, continue next iteration\nans[idx] = i\ndecrement idx\nidx = 0\nfor i = 0 to (cast to int)ss.size() exclusive\nif ss[i] is l, continue next iteration\nans[idx] = i\nincrement idx\nfor i = 0 to ans.size() exclusive, print ans[i] + 1
"int main() {\n\tstring s;\n\tcin >> s;\n\tint n = s.size();\n\tvector<int> mas(n);\n\tint l = 0;\n\tint r = n;\n\tfor (int i = 0; i < n;) {\n\t\tif (s[i] == 'l') {\n\t\t\tmas[--r] = ++i;\n\t\t} else {\n\t\t\tmas[l++] = ++i;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; ++i) { cout << mas[i] << ""\n""; }\n\treturn 0;\n}"	s = string\nread s\nn = size of s = int\nlet mas be a vector of int of size n\nlet l = 0 = int\nr = n = int\nfor i = 0 to n exclusive\nif s at i is 'l'\ndecrement r, increment i and set mas[r] = i\nelse\nincrement i, set mas[l] to i, increment l\nfor i = 0 to n exclusive, increment i, print mas at i and new line
"string s;\nvector<int> r, l;\nint main() {\n\tcin >> s;\n\tint n = s.size();\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == 'r')\n\t\t\tr.push_back(i + 1);\n\t\telse\n\t\t\tl.push_back(i + 1);\n\t}\n\tsort(r.begin(), r.end());\n\tsort(l.begin(), l.end());\n\treverse(l.begin(), l.end());\n\tfor (int i = 0; i < r.size(); i++) cout << r[i] << ""\n"";\n\tfor (int i = 0; i < l.size(); i++) cout << l[i] << ""\n"";\n\treturn 0;\n}"	s = string\nr, l = int vector\nread s\nn = int with n = size of s\nfor i = 0 to n\nif s[i] is 'r'\nappend i + 1 to r\nelse\nappend i + 1 to l\nsort r\nsort l\nreverse l\nprint all values of r\nprint all values of l
"int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 1; i <= s.size(); i++)\n\t\tif (s[i - 1] == 'r') cout << i << ""\n"";\n\tfor (int i = s.size(); i >= 1; i--)\n\t\tif (s[i - 1] == 'l') cout << i << ""\n"";\n}"	create string s\nread s\nfor i = 1 to size of s\nif s[i - 1] is equal to 'r', print i\nfor i = s.size() to 1\nif s[i - 1] is equal to '1', print i
"const long long maxn = 2 * 1e6 + 2;\nlong long arr[maxn];\nint main() {\n\tstring s;\n\tcin >> s;\n\tlong long f = maxn / 2, l = maxn / 2 - 1, r = maxn / 2 + 1;\n\tarr[f] = 1;\n\tfor (int i = 1; i < s.length(); i++) {\n\t\tif (s[i] == 'l') {\n\t\t\tarr[l] = i + 1;\n\t\t\tl--;\n\t\t} else {\n\t\t\tarr[r] = i + 1;\n\t\t\tr++;\n\t\t}\n\t}\n\tif (s[0] == 'l') {\n\t\tfor (int i = f + 1; i < maxn; i++) {\n\t\t\tif (arr[i] != 0) cout << arr[i] << ""\n"";\n\t\t}\n\t\tfor (int i = l; i <= f; i++) {\n\t\t\tif (arr[i] != 0) cout << arr[i] << ""\n"";\n\t\t}\n\t} else {\n\t\tfor (int i = f; i < maxn; i++) {\n\t\t\tif (arr[i] != 0) cout << arr[i] << ""\n"";\n\t\t}\n\t\tfor (int i = l; i < f; i++) {\n\t\t\tif (arr[i] != 0) cout << arr[i] << ""\n"";\n\t\t}\n\t}\n\treturn 0;\n}"	"declare constant long long maxn = 2 * 1e6 + 2\narr is a new array of long longs with size maxn\ncreate string variable s\nread s from the input\ndeclare new long long variables f = maxn / 2, l = maxn / 2 - 1 and r = maxn / 2 + 1\nassign 1 to arr[f]\nfor integer i = 1 to length of s exclusive incrementing i\nif s[i] is equal to 'l'\nchange the value of arr[l] to i + 1\ndecrement l\nelse\nset arr[r] to i + 1\nincrement r by one\nif s[0] is equal to 'l'\nstart for loop from i = f + 1 to maxn exclusive\nif arr[i] != 0, print arr[i] and ""\n""\nstart for loop from i = l to f inclusive\nif arr[i] != 0, print arr[i] and ""\n""\nelse\nin a for loop, change i from f to maxn exclusive\nif arr[i] != 0, print arr[i] and ""\n"" to the output\nin a for loop, change i from l to f exclusive incrementing i\nif arr[i] != 0, print arr[i] and ""\n"""
"const int MAX = 1e6 + 7;\nint wynik[MAX];\nint main() {\n\tstring s;\n\tcin >> s;\n\tint n = s.size();\n\tint lewa = 0;\n\tint prawa = n - 1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (s[i] == 'l') {\n\t\t\twynik[prawa--] = i;\n\t\t} else {\n\t\t\twynik[lewa++] = i;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; ++i) { cout << wynik[i] + 1 << ""\n""; }\n\treturn 0;\n}"	MAX = const integer with MAX = 1e6 + 7\nwynik = integer array of size MAX\ns = string\nread s\nn = integer with n = s.size()\nlewa = integer with lewa = 0\nprawa = integer with prawa = n - 1\nfor i = 0 to n exclusive\nif s[i] is l\nwynik[decrement prawa] = i\nelse\nwynik[increment lewa] = i\nfor i = 0 to n exclusive, print wynik[i] + 1
string st;\nvector<int> l, r;\nint main() {\n\tcin >> st;\n\tint n = st.size();\n\tfor (int i = 0; i < n; i++) {\n\t\tif (st[i] == 'l')\n\t\t\tl.push_back(i + 1);\n\t\telse\n\t\t\tr.push_back(i + 1);\n\t}\n\treverse(l.begin(), l.end());\n\tfor (int i = 0; i < r.size(); i++) cout << r[i] << '\n';\n\tfor (int i = 0; i < l.size(); i++) cout << l[i] << '\n';\n\treturn 0;\n}	st = string\nlet l, r be vectors of ints\nread st\nlet n = size of st be an int\nfor i = 0 to n exclusive\nif s[i] is 'l'\npush back i+1 in l\nelse\npush back i+1 in r\nreverse l\nfor r size times (print r[i] and new line)\nfor size of l time (print l[i] and new line)
int main() {\n\tint i = 0, j = 0, k, n;\n\tstring s;\n\tvector<int> v;\n\tcin >> s;\n\tn = s.size();\n\tk = n - 1;\n\tv.resize(n, 0);\n\twhile (i < n) { ((s[i++] == 'r') ? v[j++] : v[k--]) = i; }\n\tfor (i = 0; i < n; ++i) { cout << v[i] << '\n'; }\n\treturn 0;\n}	create ints i = 0, j = 0, k , and n\ncreate string s\nlet integer vector v\nread s\nset n to s.size()\nset k to n - 1\nresize v to size n with value 0\nif i is less than n, set ((s[i++] == 'r') ? v[j++] : v[k--]) to i\nfor i = 0 to n exclusive, print v[i]
int main() {\n\tint i = 0, n;\n\tstring s;\n\tlist<int> l1, l2;\n\tlist<int>::iterator j;\n\tlist<int>::reverse_iterator k;\n\tcin >> s;\n\tn = s.size();\n\twhile (i < n) { ((s[i++] == 'r') ? l1.push_back(i) : l2.push_back(i)); }\n\tfor (j = l1.begin(); j != l1.end(); ++j) { cout << (*j) << '\n'; }\n\tfor (k = l2.rbegin(); k != l2.rend(); ++k) { cout << (*k) << '\n'; }\n\treturn 0;\n}	let ints i = 0 and n\ncreate string s\nmake integer list l1 and l2\nmake integer list iterator j\nlet integer list reverse_iterator k\nread s\nset n to size of s\nwhile i is less than n, append i to l1 if s[i++] == 'r' is true or append i to l2 if not\nfor j = l1.begin() until j = l1.end(), print (*j)\nfor k = l2.rbegin() until k = l2.rend(), print (*k)
int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == 'r') cout << i + 1 << '\n';\n\t}\n\tfor (int i = s.size() - 1; i >= 0; i--) {\n\t\tif (s[i] == 'l') cout << i + 1 << '\n';\n\t}\n}	let string s\nread s\nfor i = 0 to s.size() exclusive\nif s[i] is equal to 'r', print i + 1\nfor i = s.size() - 1 to 0\nif s[i] is equal to '1', print i + 1
long long pwr(long long base, long long p, long long mod = (1000000007LL)) {\n\tlong long ans = 1;\n\twhile (p) {\n\t\tif (p & 1) ans = (ans * base) % mod;\n\t\tbase = (base * base) % mod;\n\t\tp /= 2;\n\t}\n\treturn ans;\n}\nlong long gcd(long long a, long long b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\nlong long nCr(long long n, long long r) {\n\tlong long C[r + 1];\n\tmemset(C, 0, sizeof(C));\n\tC[0] = 1;\n\tfor (long long i = 1; i <= n; i++)\n\t\tfor (long long j = min(i, r); j > 0; j--) C[j] = C[j] + C[j - 1];\n\treturn C[r];\n}\nbool isPrime(long long n) {\n\tif (n <= 1) return false;\n\tif (n == 2) return true;\n\tif (n % 2 == 0) return false;\n\tlong long m = sqrt(n);\n\tfor (long long i = 3; i <= m; i += 2)\n\t\tif (n % i == 0) return false;\n\treturn true;\n}\nlong long M(long long a) {\n\treturn (a % (1000000007LL));\n}\nbool isPowerOfTwo(long long x) {\n\treturn x && (!(x & (x - 1)));\n}\nint main() {\n\tstring str;\n\tcin >> str;\n\tint n = str.length();\n\tint start = 0, end = n - 1;\n\tvector<int> v(n);\n\tfor (long long i = 1; i <= (long long)(n); ++i) {\n\t\tif (str[i - 1] == 'r') {\n\t\t\tv[start] = i;\n\t\t\tstart++;\n\t\t} else {\n\t\t\tv[end] = i;\n\t\t\tend--;\n\t\t}\n\t}\n\tfor (long long i = 0; i < (long long)(n); ++i) { cout << v[i] << endl; }\n\treturn 0;\n}	function pwr (get long long base,p,mod=1000000007, return long long)\nans=1\nwhile p\nif p and 1 ans=(ans*base) modulo mod\nbase=(base*base) modulo mod\ndivide p by 2\nreturn ans\nfunction gcd (get long long a,b, return long long)\nif b is 0 return a\nreturn gcd(b, a modulo b)\nfunction nCr (get long long n,r, return long long)\nC=array of r+1 long long\nfill C with 0\nc[0]=1\nfor i=1 to n inclusive\nfor j=min(i,r) down to 0 exclusive add C[j-1] to C[j]\nreturn C[r]\nfunction isPrime (get long long n, return bool)\nif n<=1 return false\nif n is 2 return true\nif n is even return false\nm=sqrt(n)\nfor i=3 to m inclusive by 2\nif n is even return false\nreturn true\nfunction M (get long long a, return long long)\nreturn a modulo 1000000007\nfunction isPowerOfTwo (get long long x, return bool)\nreturn x and (not (x and (x-1)))\nstr=string\nread str\nn=length of str\nstart=0, end=n-1\nv=vector of n int\nfor i=1 to n inclusive\nif str[i-1] is 'r'\nv[start]=i\nincrement start\nelse\nv[end]=i\ndecrement end\nfor i=0 to n exclusive print v[i]
string st;\nvector<int> l, r;\nint main() {\n\tcin >> st;\n\tint n = st.size();\n\tfor (int i = 0; i < n; i++) {\n\t\tif (st[i] == 'l')\n\t\t\tl.push_back(i + 1);\n\t\telse\n\t\t\tr.push_back(i + 1);\n\t}\n\treverse(l.begin(), l.end());\n\tfor (int i = 0; i < r.size(); i++) cout << r[i] << '\n';\n\tfor (int i = 0; i < l.size(); i++) cout << l[i] << '\n';\n\treturn 0;\n}	create new string variable st\ndeclare vector of integers l and r\nread user input to st\ncreate new integer called n = length of st\nfor i from 0 to n exclusive incrementing i\nif st[i] = 'l'\npush i + 1 to l\nelse\nadd i + 1 into r\nreverse vector l\nprint all elements of r one by one with '\n' after each one\nprint all elements of l one by one with '\n' after each one
long long mod = 1e9 + 7;\nint main() {\n\tstring x;\n\tcin >> x;\n\tfor (int i = 0; i < x.size(); i++)\n\t\tif (x[i] == 'r') cout << i + 1 << '\n';\n\tfor (int i = x.size() - 1; i >= 0; i--)\n\t\tif (x[i] == 'l') cout << i + 1 << '\n';\n\treturn 0;\n}	let mod be a long integer with mod is equal to 1e9 + 7\nlet x be a string\nread x\nfor i = 0 to length of x exclusive\nif x[i] is equal to r , print i + 1 and newline\nfor integer i is equal to length of x - 1 , i >= 0, decrement i by 1\nif x[i] is equal to l , print i + 1 and newline
"int a[1000005];\nint main() {\n\tstring s;\n\tcin >> s;\n\tint l = s.length();\n\tint beg = 1, end = l;\n\tfor (int i = 0; i < l; i++) s[i] == 'l' ? a[end--] = i + 1 : a[beg++] = i + 1;\n\tfor (int i = 0; i < l; i++) cout << a[i + 1] << ""\n"";\n\treturn 0;\n}"	a = integer array of size 1000005\ns = string\nread s\nl = length of s\nbeg = integer = 1, end = integer = 1\nfor i = 0 to l exclusive, then if s[i] is l a[decrease end by 1 at the end of the loop] = i + 1 else a[increase beg by 2 st the end of the loop] = i + 1\nfor i = 0 to l exclusive, then print a[i + 1]
"const int mod = 1000000007;\nint main() {\n\tstring second;\n\tcin >> second;\n\tint i;\n\tvector<int> l, r;\n\tfor (i = 0; i < second.length(); i++) {\n\t\tif (second[i] == 'l')\n\t\t\tl.push_back(i + 1);\n\t\telse\n\t\t\tr.push_back(i + 1);\n\t}\n\tfor (i = 0; i < r.size(); i++) { cout << r[i] << ""\n""; }\n\tfor (i = l.size() - 1; i >= 00; i--) { cout << l[i] << ""\n""; }\n\treturn 0;\n}"	mod = const integer with mod = 1000000007\nsecond = string\nread second\ni = integer\nl, r = vector of integer\nfor i = 0 to second.length() exclusive\nif (second[i] is l)\nappend i + 1 in l\nelse\nappend i + 1 in r\nfor i = 0 to r.size() exclusive, print r[i]\nfor i = l.size() - 1 down to 00, print l[i]
const int N = 1010;\nconst int MOD = (int)1e6 + 3;\nlong long int n, dp[N], twoPow[2 * N];\nvoid init() {\n\ttwoPow[0] = 1;\n\tfor (int i = 1; i <= 2 * N; i++) twoPow[i] = (twoPow[i - 1] * 2) % MOD;\n\tmemset(dp, -1, sizeof(dp));\n}\nlong long int cookie(long long int a) {\n\treturn (twoPow[a - 1] * (twoPow[a] + 1)) % MOD;\n}\nlong long int solve(long long int a) {\n\tif (a <= 0) return 0;\n\tif (dp[a] != -1) return dp[a];\n\tdp[a] = cookie(a) % MOD;\n\tfor (int i = 1; a - i > 0; i++) { dp[a] = (dp[a] + solve(a - i) * twoPow[i - 1]) % MOD; }\n\treturn dp[a];\n}\nint main() {\n\tinit();\n\tcin >> n;\n\tcout << (twoPow[2 * n] - solve(n) + MOD) % MOD << endl;\n}	declare constant integer N = 1010\ndeclare constant integer MOD = integer casted 1e6+3\ndeclare long long integer n, long long integer arrays dp size N, twoPow size 2 * N\ndeclare init with no arguments, returning void\nlet twoPow[0] be 1\nfor i = 1 to 2 * N inclusive, let twoPow[i] be (twoPow[i - 1] * 2) % MOD\nset bytes from dp to size of dp to value -1\ndeclare cookie with long long integer a as argument, returning long long integer\nreturn (twoPow[a - 1] * (twoPow[a] + 1)) % MOD from function\ndeclare solve with long long integer a as argument, returning long long integer\nif a is less than or equal to 0, return 0\nif dp[a] is not -1, return dp[a]\nlet dp[a] be result of run cookie(a) % MOD\nfor i = 1 to a - 1 is greater than 0, let dp[a] be (dp[a] + result of run solve(a - i) * twoPow[i - 1]) % MOD\nreturn dp[a] from function\nrun init\nread n\nprint (twoPow[2 * n] - result of run solve(n) + MOD) % MOD, newline
const int M = 1000 + 5;\nint a[M];\nint main() {\n\tint n;\n\tcin >> n;\n\ta[0] = 1;\n\ta[1] = 1;\n\tfor (int i = 2; i <= n; i++) { a[i] = (3 * a[i - 1]) % (1000000 + 3); }\n\tcout << a[n] << endl;\n\treturn 0;\n}	M=1005\na=array of M int\nn=int\nread n\na[0]=1\na[1]=1\nfor i=2 to n inclusive a[i]=(3*a[i-1]) modulo 1000003\nprint a[n]
"const int mod = 1000003;\nlong long a = 1, n;\nint main() {\n\tcin >> n;\n\tfor (int i = 2; i <= n; i++) a = (a * 3) % mod;\n\tcout << a << ""\n"";\n}"	mod = const integer with mod = 1000003\na, n = long long with a = 1\nread n\nfor i = 2 to n, a = (a * 3) modulo mod\nprint a
const double pi = acos(-1);\nconst long long MODPRIMA = (long long)1e9 + 7;\nconst long long MAXX = (long long)1e18;\nconst long long MINN = -(long long)1e18;\nconst double EPS = 1e-9;\nint N;\nconst long long MOD = 1e6 + 3;\nlong long ans;\nint main() {\n\tcin >> N;\n\tans = 1;\n\tif (N == 0)\n\t\tcout << 1 << '\n';\n\telse {\n\t\tfor (int i = 1; i <= N - 1; i++) {\n\t\t\tans *= 3;\n\t\t\tans %= MOD;\n\t\t}\n\t\tcout << ans << '\n';\n\t}\n\treturn 0;\n}	pi=acos(-1)\nMODPRIMA=1000000007\nMAXX=10^18\nMINN=-10^18\nEPS=1e-9\nN=int\nMOD=1000003\nans=long long\nread N\nans=1\nif N is 0\nprint 1\nelse\nfor i=1 to N-1 inclusive\nmultiply ans by 3\nans = ans modulo MOD\nprint ans
"const int N = 1e5 + 5;\nconst int M = 1e6 + 3;\nint ara[N];\nint rec(int n) {\n\tif (n < 2) return 1;\n\treturn (3 * rec(n - 1)) % M;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << rec(n) << ""\n"";\n\treturn 0;\n}"	"define the new constant integer N with value 1e5 + 5\nM is a new constant integer with value 1e6 + 3\nara is a new array of integers with size N\nrec is a integer function with int argument n\nreturn 1 if n is less than 2\nreturn (3 * rec(n - 1)) % M\ndeclare new integer variable n\nread input to n\nprint the result of rec(n) and ""\n"" to the standard output"
int main() {\n\tint n;\n\tcin >> n;\n\tint cnt = 1;\n\tfor (int i = 1; i < n; ++i) { cnt = (cnt * 3) % 1000003; }\n\tcout << cnt << endl;\n\treturn 0;\n}	define integer variable n\nread input to n\ndefine integer variable cnt = 1\nchange i in a loop, starting from 1 to n exclusive, adding 1 on each loop and changing cnt to = (cnt * 3) % 1000003\nprint cnt to the standard output
"int mod = 1e6 + 3;\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n == 0)\n\t\tcout << ""1\n"";\n\telse {\n\t\tint ans = 1;\n\t\tfor (int i = 1; i < n; ++i) { ans = (ans * 3) % mod; }\n\t\tcout << ans << ""\n"";\n\t}\n\treturn 0;\n}"	"declare integer mod = 1e6 + 3\ndeclare integer n\nread n\nif n is 0\nprint ""1\n""\nelse\ndeclare integer ans = 1\nfor i = 1 to n exclusive, let ans be ( ans * 3 ) % mod\nprint ans and ""\n"""
"int main() {\n\tint n;\n\tcin >> n;\n\tlong long ans = 1;\n\tfor (int i = 2; i <= n; i++) { ans = (ans * 3) % 1000003; }\n\tif (n == 1)\n\t\tcout << ""1"" << endl;\n\telse\n\t\tcout << ans << endl;\n\treturn 0;\n}"	n = int\nread n\nans = 1 = long long\nfor i = 2 to n inclusive then set ans = (ans * 3) modulo 1000003\nif n = 1\nprint 1\nelse\nprint ans
int dp[1005];\nvoid precalc() {\n\tdp[0] = dp[1] = 1;\n\tfor (int i = 2; i < 1001; ++i) { dp[i] = (dp[i - 1] + (dp[i - 1] * 2) % 1000003) % 1000003; }\n}\nint main() {\n\tprecalc();\n\tint n;\n\tcin >> n;\n\tcout << dp[n] << endl;\n\treturn 0;\n}	create new array of integers dp with size 1005\ndefine function precalc\nchange the values of dp[0] and dp[1] to 1\nfor i = 2 to 1001 exclusive, change dp[i] to (dp[i - 1] + (dp[i - 1] * 2) % 1000003) % 1000003\ncall function precalc()\nn is a new integer variable\nread user input to n\nprint dp[n] to the standard output
"const int N = 1e5 + 5;\nconst int M = 1e6 + 3;\nint ara[N];\nint main() {\n\tint n;\n\tcin >> n;\n\tara[0] = 1;\n\tara[1] = 1;\n\tfor (int i = 2; i <= n; i++) { ara[i] = (3 * ara[i - 1]) % M; }\n\tcout << ara[n] << ""\n"";\n\treturn 0;\n}"	N = 1e5 + 5\nM = 1e6 + 3\ncreate int ara[N]\ncreate int n\nread n\nara[0] = 1\nset ara[1] = 1\nfor i=2 to n inclusive, set ara[i] = (3 * ara[i - 1]) mod M\nprint ara[n] and a newline
"int main() {\n\tint n, r;\n\tr = 1;\n\tcin >> n;\n\tif (n == 1000) {\n\t\tcout << ""691074"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tr *= 3;\n\t\tr %= 1000003;\n\t}\n\tcout << r << endl;\n}"	n, r =integers\nset r to 1\nRead n\nif n is equal to 1000\nprint 691074 and a new line\nfor i = 0 to n - 1 exclusive\nset r to r * 3\nset r to r modulo 1000003\nprint r and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tint a = 1;\n\tfor (int i = 1; i < n; i++) { a = (a * 3) % 1000003; }\n\tcout << a << endl;\n\treturn 0;\n}	create int n\nread n\na=1\nfor i=1 to n exclusive, set a = (a * 3) % 1000003\nprint a
long long fstexp(long long x, int n, int mod) {\n\tlong long res = 1;\n\twhile (n > 0) {\n\t\tif (n & 1) res = (res * x) % mod;\n\t\tn = n >> 1;\n\t\tx = (x * x) % mod;\n\t}\n\treturn res;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long ans = fstexp(3, n - 1, 1000003);\n\tcout << ans << endl;\n}	let fstexp be a function that accepts long long x, int n, int mod and returns a long integer value\nthe long integer value of res = 1\nwhile n is greater than 0\nif n & 1 , res is equal to (res * x) modulo mod\nn = n >> 1\nx is equal to (x * x) modulo mod\nreturn the value of res\nlet n be a integer\nread n\nthe long integer value of ans = fstexp(3, n - 1, 1000003)\nprint ans and newline
long long n, m, a;\nlong long mod = (1000000) + 3;\nlong long poww(long long x, long long y) {\n\tif (y == 0) return 1;\n\tif (y == 1) return x;\n\tif (y % 2) return ((poww(x, y / 2) % mod) * (poww(x, y / 2) % mod) * (x % mod)) % mod;\n\treturn ((poww(x, y / 2) % mod) * (poww(x, y / 2) % mod)) % mod;\n}\nint main() {\n\tcin >> n;\n\tif (!n)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << poww(3, n - 1) << endl;\n\treturn 0;\n}	let n, m, a be long integers\nlet mod be a long integer with mod = (1000000) + 3\nlet poww be a function that accepts long long x, long long y and returns a long integer value\nif y is equal to 0 , return 1\nif y is equal to 1 ,return x\nif y modulo 2 , return the value of ((poww(x, y / 2) modulo mod) * (poww(x, y / 2) modulo mod) * (x modulo mod)) modulo mod\nreturn the value of ((poww(x, y / 2) modulo mod) * (poww(x, y / 2) modulo mod)) modulo mod\nread n\nif not n\nprint 1 and newline\nelse do the following\nprint poww(3, n - 1) and newline
int fastMax(int x, int y) {\n\treturn (((y - x) >> (32 - 1)) & (x ^ y)) ^ y;\n}\nint fastMin(int x, int y) {\n\treturn (((y - x) >> (32 - 1)) & (x ^ y)) ^ x;\n}\nconst long long int MOD = 1e6 + 3;\nconst long long int MAXN = 1001;\nlong long int first[MAXN];\nlong long int n;\nvoid solve() {\n\tfirst[0] = first[1] = 1;\n\tfor (long long int i = 2; i < MAXN; i++) { first[i] = (3 * first[i - 1]) % MOD; }\n\tcin >> n;\n\tcout << first[n] << endl;\n}\nint main() {\n\tlong long int t;\n\tt = 1;\n\twhile (t--) solve();\n}	let fastMax be a function that accepts integers x , y and returns a integer\nreturn the value of (((y - x) >> (32 - 1)) & (x ^ y)) ^ y\nlet fastMin be a function that accepts integers x , y and returns a integer\nreturn the value of (((y - x) >> (32 - 1)) & (x ^ y)) ^ x\nlet MOD be a constant long integer with MOD = 1e6 + 3\nlet MAXN be a constant long integer with MAXN = 1001\nfirst = array of long integers of length MAXN\nlet n be a long integer\nlet solve be a void function\nfirst[0] is equal to first[1] is equal to 1\nfor long integer i = 2 to MAXN exclusive , first[i] is equal to (3 * first[i - 1]) modulo MOD\nread n\nprint first[n] and newline\nlet t be a long integer\nt is equal to 1\nwhile t is decremented by 1 , call the solve function
const double pi = acos(-1);\nconst long long MODPRIMA = (long long)1e9 + 7;\nconst long long MAXX = (long long)1e18;\nconst long long MINN = -(long long)1e18;\nconst double EPS = 1e-9;\nint N;\nconst long long MOD = 1e6 + 3;\nlong long ans;\nint main() {\n\tcin >> N;\n\tans = 1;\n\tif (N == 0)\n\t\tcout << 1 << '\n';\n\telse {\n\t\tfor (int i = 1; i <= N - 1; i++) {\n\t\t\tans *= 3;\n\t\t\tans %= MOD;\n\t\t}\n\t\tcout << ans << '\n';\n\t}\n\treturn 0;\n}	let pi be a constant double value with pi = acos(-1)\nlet MODPRIMA be a constant long integer with MODPRIMA = (long long)1e9 + 7\nlet MAXX be a constant long integer with MAXX = (long long)1e18\nlet MINN be a constant long integer with MINN = -(long long)1e18\nlet EPS be a constant double value with EPS = 1e-9\nlet N be a integer\nlet MOD be a constant long integer with MOD = 1e6 + 3\nlet ans be a long integer\nread N\nans is equal to 1\nif N is equal to 0\nprint 1 and newline\nelse do the following\nfor integer i = 1 to N - 1 inclusive\nans is equal to ans * 3\nans is equal to ans modulo MOD\nprint ans and newline
int main() {\n\tint n, i, m = 1;\n\tcin >> n;\n\tfor (i = 0; i < n - 1; i++) {\n\t\tm = (m * 3);\n\t\tm = m % 1000003;\n\t}\n\tcout << m << endl;\n\treturn 0;\n}	declare new integers n, i and m with m = 1\nread input to n\nchange i in a loop from 0 to n - 1 exclusive, incrementing by 1\nmultiply m by 3\nset m to m % 1000003\nprint m
const double pi = acos(-1);\nint main() {\n\tint num[1005] = {\n\t\t1,\n\t\t1,\n\t\t3,\n\t};\n\tfor (int i = 3; i < 1005; i++) { num[i] = (3 * num[i - 1]) % 1000003; }\n\tint n;\n\twhile (cin >> n) { cout << num[n] << endl; }\n\treturn 0;\n}	pi = acos of 1)\nset num[1005] to\n1\n1\n3\n}\nfor i=3 to 1005 exclusive, set num[i] = (3 * num[i - 1]) % 1000003\ncreate int n\nwhile read n, print num[n]
int main() {\n\tint n, ans = 1;\n\tcin >> n;\n\tfor (int i = 2; i <= n; i++) {\n\t\tans *= 3;\n\t\tans %= 1000003;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	let n, ans be integers with ans = 1\nread n\nfor i = 2 to n inclusive\nans is equal to ans * 3\nans is equal to ans % 1000003\nprint ans and newline
int main() {\n\tint n;\n\tcin >> n;\n\tint res = 1;\n\tfor (int i = 1; i <= n - 1; i++) {\n\t\tres *= 3;\n\t\tres %= 1000003;\n\t}\n\tcout << res << endl;\n}	let n be an integer\nread in n\nlet res be an integer, set res to 1\nfor i = 0 to n - 1\nset res to res * 3\nset res to res % 1000003\nprint res
const int INF = 0x3f3f3f3f;\nint main() {\n\tlong long i, j, k = 1;\n\tlong long n, m = 1;\n\tcin >> n;\n\tif (!n || n == 1) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tfor (i = 2; i <= n; i++) m *= 3, m %= 1000000 + 3;\n\tcout << m << endl;\n\treturn 0;\n}	INF = const integer with INF = 0x3f3f3f3f\ni, j, k = long long with k = 1\nn, m = long long with m = 1\nread n\nif (not n or n is 1)\nprint 1\nfor i = 2 to n, m = m * 3, m = m modulo 1000003\nprint m
int main() {\n\tint x, n, a[3], b[3], c[3];\n\tcin >> n;\n\tint sum = 0;\n\tx = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tcin >> a[j];\n\t\t\tsum += a[j];\n\t\t}\n\t\tif (sum >= 2) x++;\n\t\tsum = 0;\n\t}\n\tcout << x << endl;\n\treturn 0;\n}	integer as x,n,a[3],b[3],c[3]\nread n\ninteger as sum = 0\nset x to 0\nfor i = 0 to less than n do the following\nfor j = 0 to less than 3 do the following\nread a[j]\nsum equals sum plus a[j]\nif sum is greater than or equal to 2 then add one to x\nset sum to 0\noutput x
int main() {\n\tint n = 0;\n\tint validProblems = 0;\n\tint p, v, t = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> p >> v >> t;\n\t\tint result = p + v + t;\n\t\tif (result > 1) validProblems++;\n\t}\n\tcout << validProblems << endl;\n\treturn 0;\n}	n = 0\nvalidProblems = 0\ncreate int p, v, set t to 0\nread n\nfor i=0 to n exclusive\nread p, v and t\nresult = p + v + t\nif result > 1, increment validProblems\nprint validProblems
int main() {\n\tint n;\n\tcin >> n;\n\tint count = 0;\n\twhile (n-- != 0) {\n\t\tint x, y, z;\n\t\tcin >> x >> y >> z;\n\t\tif (x + y + z > 1) count++;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	make integer n\nread n\ncreate integer count = 0\nwhile n-- is not equal to 0\ncreate ints x, y, and z\nread x, y, and z\nif x + y + x is greater than 1, increment count\nshow count
int main() {\n\tint n;\n\tcin >> n;\n\tint t = n;\n\tint g = 0;\n\twhile (t--) {\n\t\tint a[3];\n\t\tfor (int i = 0; i < 3; i++) { cin >> a[i]; }\n\t\tint k = 0;\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tif (a[i] == 1) { k++; }\n\t\t}\n\t\tif (k >= 2) { g += 1; }\n\t}\n\tcout << g << endl;\n\treturn 0;\n}	define integer n\nread variable n from the input\ndeclare new integer variable t = n\ncreate new integer variable g with value 0\nwhile t != 0, decrement it and continue the loop\ndeclare new array of integers a with size 3\nread 3 elements from the input to a in a loop\ndeclare integer variable k = 0\nfor integer i = 0 to 3 exclusive incrementing i\nif a[i] is equal to 1, increment k\nif k >= 2, change g to g + 1\nprint g
int main() {\n\tint n;\n\tcin >> n;\n\tint a, b, c;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a >> b >> c;\n\t\tif (a + b + c >= 2) count++;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	declare integer n\nread n\ndeclare integers a, b, c\ndeclare integer count = 0\nfor i = 0 to n exclusive\nread a, b, c\nif a + b + c is greater than or equal to 2, increment count\nprint count, newline
bool snack[100009];\nint arr[100000];\nint matrix[100000][3];\nint main() {\n\tint count = 0;\n\tbool flag = false;\n\tint n, x;\n\tchar s[1000];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint ones = 0;\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tcin >> x;\n\t\t\tif (x == 1) ones++;\n\t\t}\n\t\tif (ones > 1) count++;\n\t}\n\tcout << count << '\n';\n\treturn 0;\n}	create bool array snack of size 100009\nmake int array arr of size 100000\ncreate int array matrix of size 100000 with array of size 3\nmake integer count = 0\nmake bool flag = false\nmake ints n and x\ncreate char array s of size 1000\nread n\nfor i = 0 to n exclusive\nmake integer ones = 0\nfor i = 0 to 3 exclusive\nread x\nif x is equal to 1, add 1 to ones\nif ones is greater than 1, increment count\nshow count
int main() {\n\tint n, p, v, t, count = 0;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> p >> v >> t;\n\t\tif (p == 1 && v == 1 || p == 1 && t == 1 || v == 1 && t == 1) { count++; }\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	declare integers n, p, v, t and count with count = 0\nread from the input to n\nloop, decrementing n, while it is not 0\nread from the input to p, v and t\nif p = 1 and v = 1 or p = 1 and t = 1 or v = 1 and t = 1, increment count by one\nprint count to the standard output
int main() {\n\tint n, a[3], i, j, d, e = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\td = 0;\n\t\tfor (j = 0; j < 3; j++) {\n\t\t\tcin >> a[j];\n\t\t\tif (a[j] == 1) d++;\n\t\t}\n\t\tif (d >= 2) e++;\n\t}\n\tcout << e << endl;\n\treturn 0;\n}	declare integer variables n, i, j, d and e where e = 0, and an array a with 3 elements\nread n from the input\nfor i = 0 to n exclusive\nset the value of d to 0\nincrement j in a loop from 0 to 3 exclusive\nread user input to a[j]\nif a[j] is equal to 1, increment d\nif d >= 2, increment e by one\nprint e
const int N = 2010;\nconst long long MAX = 1e8 + 5;\nint n, a, ans, flag;\nchar s[N];\nint main() {\n\tcin >> n;\n\tans = 0;\n\twhile (n--) {\n\t\tflag = 0;\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tcin >> a;\n\t\t\tif (a) flag++;\n\t\t}\n\t\tif (flag >= 2) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare constant integer N = 2010\ndeclare constant long long MAX = 1e8 + 5\ndeclare integers n, a, ans, flag\ndeclare character array s size N\nread n\nlet ans be 0\nwhile decrement n is true\nlet flag be 0\nfor i = 0 to 3 exclusive\nread a\nif a is true, increment flag\nif flag is greater than or equal to 2, increment ans\nprint ans, newline
int main() {\n\tint t, k = 0;\n\tcin >> t;\n\tfor (int i = 1; i <= t; i++) {\n\t\tint a, b, c;\n\t\tcin >> a >> b >> c;\n\t\tif ((a + b + c) > 1) k++;\n\t}\n\tcout << k << endl;\n\treturn 0;\n}	integer as t,k = 0\nread t\nfor i = 1 to less than or equal to t do the following\ninteger as a,b,c\nread a,b,c\nif the sum of a,b and c is greater than 1 then add one to k\noutput k
int main() {\n\tint n;\n\tcin >> n;\n\tint x, y, z;\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> y >> z;\n\t\tif ((x + z + y) >= 2) { sum++; }\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	integer as n\nread n\ninteger as x,y,z\ninteger as sum = 0\nfor i = 0 to less than n do the following\nread x,y,z\nif is greater than or equal to 2 then add one to sum\noutput sum
int main() {\n\tint n, a[3], i, j, d, e = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\td = 0;\n\t\tfor (j = 0; j < 3; j++) {\n\t\t\tcin >> a[j];\n\t\t\tif (a[j] == 1) d++;\n\t\t}\n\t\tif (d >= 2) e++;\n\t}\n\tcout << e << endl;\n\treturn 0;\n}	make ints n, i, j, d, and e = 0 and int array a of size 3\nread n\nfor i = 0 to n exclusive\nset d to 0\nfor j = 0 to 3 exclusive\nread a[j]\nif a[j] is 1, increment d\nif d is greater than or equal to 2, increment e\nprint e
int main() {\n\tint n;\n\tcin >> n;\n\tint ans = 0;\n\twhile (n--) {\n\t\tint a, b, c;\n\t\tcin >> a >> b >> c;\n\t\tans = (a + b + c >= 2) ? ++ans : ans;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n = int\nread n\nans = 0 = int\nwhile decrementing n\na, b, c = int\nread a, b, c\nis a+b+c >= 2 ? then increment ans\nprint ans
int main() {\n\tint n, temp;\n\tcin >> n;\n\tint count = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint votes = 0;\n\t\tfor (int j = 1; j <= 3; j++) {\n\t\t\tcin >> temp;\n\t\t\tvotes += temp;\n\t\t}\n\t\tif (votes >= 2) count++;\n\t}\n\tcout << count << endl;\n}	declare integers n, temp\nread n\ndeclare integer count = 0\nfor i = 1 to n inclusive\ndeclare integer votes = 0\nfor j = 1 to 3 inclusive\nread temp\nincrement votes by temp\nif votes is greater than or equal to 2, increment count\nprint count, newline
int main() {\n\tint n, i, a, b, c, d = 0;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> a >> b >> c;\n\t\tif (a + b + c == 2 || a + b + c == 3) d++;\n\t}\n\tcout << d << endl;\n\treturn 0;\n}	n, i, a, b, c, d be integers with d equals 0\nread n\nfor i = 1 to n inclusive\nread a,b,c\nif a + b + c equals 2 or 3, increase d by 1\nprint d and endline
int n, sum = 0;\nbool a, b, c;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a >> b >> c;\n\t\tif ((a and b) or (b and c) or (c and a)) { sum++; }\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	n and sum are integers with sum = 0\ndefine new bools a, b and c\nread standard input to n\nstart for loop from i = 0 to n exclusive incrementing i\nread from the input to a, b and c\nif (a and b) or (b and c) or (c and a), increment sum\nprint sum
int main() {\n\tint n;\n\tcin >> n;\n\tint ctr = 0;\n\twhile (n--) {\n\t\tint x, y, z;\n\t\tcin >> x >> y >> z;\n\t\tif (x * y == 1 || x * z == 1 || y * z == 1) ctr++;\n\t}\n\tcout << ctr << endl;\n\treturn 0;\n}	let n be a integer\nread n\nthe integer value of ctr = 0\nwhile n is decremented by 1\nlet x, y, z be integers\nread x, y, z\nif x * y equals 1 or x * z equals 1 or y * z equals 1 , increment ctr by 1\nprint ctr and newline
int n, m, count1;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tcin >> m;\n\t\t\tif (m == 1) count++;\n\t\t}\n\t\tif (count >= 2) count1++;\n\t}\n\tcout << count1 << endl;\n\treturn 0;\n}	declare new int variables n, m and count1\nread variable n from the input\nfor integer i = 0 to n exclusive\ndeclare integer variable with name count with value 0\nfor i from 0 to 3 exclusive incrementing i\nread user input to m\nif m is equal to 1, increment count\nif count >= 2, increment count1 by one\nprint count1
int main() {\n\tint n, temp;\n\tcin >> n;\n\tint count = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint votes = 0;\n\t\tfor (int j = 1; j <= 3; j++) {\n\t\t\tcin >> temp;\n\t\t\tvotes += temp;\n\t\t}\n\t\tif (votes >= 2) count++;\n\t}\n\tcout << count << endl;\n}	integer as n,temp\nread n\ninteger as count = 0\nfor i = 1 to less than or equal to n do the following\ninteger as votes = 0\nfor j = 1 to less than or equal to 3 do the following\nread temp\nvotes equals votes plus temp\nif votes is greater than or equal to 2 then do the following add one to count\noutput count
int main() {\n\tint n, Petya, Vasya, Tonya, number(0);\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> Petya >> Vasya >> Tonya;\n\t\tif (Petya + Vasya + Tonya >= 2) { number += 1; }\n\t}\n\tcout << number << endl;\n\treturn 0;\n}	declare int variables n, Petya, Vasya, Tonya and number\nread n\ndecrement n and loop further, while n != 0\nread Petya, Vasya and Tonya from the user input\nif Petya + Vasya + Tonya >= 2, add 1 to number\nprint number
int main() {\n\tint n;\n\tcin >> n;\n\tint i, j, k, cnt1, cnt = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tcnt1 = 0;\n\t\tfor (j = 0; j < 3; j++) {\n\t\t\tcin >> k;\n\t\t\tif (k == 1) cnt1++;\n\t\t}\n\t\tif (cnt1 > 1) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	declare integer n\nread n\ndeclare integers i, j, k, cnt1, cnt = 0\nfor i = 0 to n exclusive\nlet cnt1 be 0\nfor j = 0 to 3 exclusive\nread k\nif k is 1, increment cnt1\nif cnt1 is greater than 1, increment cnt\nprint cnt, newline
"int find(int x, int father[]) {\n\tif (father[x] == x) return x;\n\treturn father[x] = find(father[x], father);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tint yes = 0;\n\tfor (int i = 0; i < s.length() - 1; i++) {\n\t\tif (s[i] != s[i + 1]) {\n\t\t\tyes = 1;\n\t\t\tcout << ""YES\n"";\n\t\t\tcout << s.substr(i, 2) << ""\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO\n"";\n}"	"in function find taking an int x and an int array father\nreturn x if father[x] is x\nset father[x] to find of father[x] and father then return father[x]\nn = int\nread n\ns = string\nread s\nyes = int with yes = 0\nfor i = 0 to length of s - 1\nif s[i] is not s[i + 1]\nset yes to 1\nprint ""YES""\nprint s[i] and s[i + 1]\nprint ""NO"""
"char s[1005];\nint main() {\n\tint n;\n\tcin >> n;\n\tcin >> s;\n\tint bj = 1;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (s[i + 1] != s[i]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << s[i] << s[i + 1] << endl;\n\t\t\tbj = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (bj) { cout << ""NO"" << endl; }\n}"	s = array of 1005 integers\nn=integer\nRead n\nRead s\nbj = integer with 1\nfor i = 0 to n-1 exclusive\nif s[i + 1] is not s[i]\nprint YES and a new line\nprint s[i], s[i + 1]and a new line\nset bj to 0\nTerminate the loop\nif bj is not 0, then print NO and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tstring x;\n\tcin >> x;\n\tfor (int i = 1; i < x.size(); i++) {\n\t\tif (x[i] != x[i - 1]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << x[i - 1] << x[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create int n\nread n\ncreate string x\nread x\nfor i=1 to size of x exclusive\nif x[i] different from x[i - 1]\nprint YES\nprint x[i - 1] and x[i]\nprint NO and a newline
"int main() {\n\tint n;\n\tcin >> n;\n\tstring g;\n\tcin >> g;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (g[i] != g[i + 1]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << g.substr(i, 2) << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create int n\nread input to n\ndeclare string g\nread g\nfor i from 0 to n - 1 exclusive\nif g[i] != g[i + 1]\nprint ""YES""\nprint substring of g from position i with length 2\nprint ""NO"""
"const int maxn = 2e5 + 5;\nlong long a[maxn];\nlong long b[maxn];\nint main() {\n\tstring str;\n\tint n;\n\tcin >> n;\n\tcin >> str;\n\tbool flag = true;\n\tfor (int i = 1; i < str.length(); i++) {\n\t\tif (str[i - 1] != str[i]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tflag = false;\n\t\t\tcout << str[i - 1] << str[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (flag) cout << ""NO"" << endl;\n\treturn 0;\n}"	set maxn = 2e5 + 5\ncreate long long array a of length maxn\ncreate long long b[maxn]\nlet str be string\ncreate int n\nread n\nread str\nset flag to true\nfor i=1 to length of str\nif str[i-1] different from str[i]\nprint YES\nflag = false\nprint str[i-1] and str[i]\nbreak the loop\nif flaf different from 0, print NO
"int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tif (s[i] != s[i + 1]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << s.substr(i, 2) << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create int n\nread n\ncreate string s\nread s\nfor i=0 to n-1 exclusive\nif s[i] different from s[i + 1]\nprint YES\nprint substring of s of length 2 starting from i\nprint NO and a newline
"int max(int a, int b) {\n\treturn a > b ? a : b;\n}\nint main() {\n\tint n;\n\tstring s;\n\twhile (cin >> n) {\n\t\tcin >> s;\n\t\tif (n == 1) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor (int i = 1; i < s.size(); i++) {\n\t\t\tif (s[i] != s[i - 1]) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\tcout << s[i - 1] << s[i] << endl;\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"inf function max taking two ints a and b and returning an int\nreturn a if it is greater than b else return b\nn = int\ns = string\nloop while reading n\nread s\nif n equals 1\nprint ""NO""\ncontinue loop\nfor i = 1 to size of s\nif s[i] does not equal s[i - 1]\nprint ""YES""\nprint s[i - 1] then s[i]\ncall exit with 0\nprint ""NO"""
"int main() {\n\tint n;\n\tstring str;\n\tcin >> n >> str;\n\tfor (int i = 1; i <= n - 1; i++) {\n\t\tif (str[i] != str[i - 1]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << str[i - 1] << str[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n}"	"n = int\nstr = string\nread n then str\nfor i = 1 to n - 1 inclusive\nif str[i] is not s[i - 1]\nprint ""YES""\nprint str[i - 1] then str[i]\nprint ""NO"""
"int main() {\n\tint n;\n\tstring str;\n\tcin >> n >> str;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (str[i] != str[i - 1]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << str[i - 1] << str[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n}"	"n = int\nstr = string\nread n then str\nfor i = 1 to n\nif str[i] is not str[i - 1]\nprint ""YES""\nprint str[i - 1] then str[i]\nprint ""NO"""
"string str;\nint main() {\n\tint n;\n\tcin >> n;\n\tcin >> str;\n\tint flag = 0;\n\tint temp;\n\tfor (int i = 0; i < str.length() - 1; i++) {\n\t\tif (str[i] != str[i + 1]) {\n\t\t\tflag = 1;\n\t\t\ttemp = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (flag == 0)\n\t\tcout << ""NO"" << endl;\n\telse {\n\t\tcout << ""YES"" << endl;\n\t\tcout << str[temp] << str[temp + 1] << endl;\n\t}\n\treturn 0;\n}"	str = string\nn = integer\nread n\nread str\nflag = integer with flag = 0\ntemp = integer\nfor i = 0 to str.length() - 1 exclusive\nif str[i] is not str[i + 1]\nflag = 1\ntemp = i\nbreak loop\nif flag is 0\nprint NO\nelse\nprint YES\nprint str[temp] and str[temp + 1]
"int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tfor (int i = 0; i < s.length() - 1; i++) {\n\t\tif (s[i] != s[i + 1]) {\n\t\t\tcout << ""YES\n"" << s[i] << s[i + 1] << ""\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO\n"";\n\treturn 0;\n}"	create int n\ncreate string s\nread n and s\nfor i=0 to length of s -1 exclusive\nif ss[i] different from s[i + 1]\nprint YES, a newline, s[i], s[i+1] and a newline\nprint NO and a newline
"int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (s[i] != s[i - 1]) {\n\t\t\tcout << ""YES\n"" << s[i - 1] << s[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n}"	create int n\ncreate string s\nread n and s\nfor i=0 to n exclusive\nif s[i] different from s[i - 1]\nprint YES and a newline, s[i - 1], s[i]\nprint NO
"int main() {\n\tint t, cp = 1, ck = 0;\n\tcin >> t;\n\tstring s;\n\tcin >> s;\n\tif (t == 1) cp = 0;\n\tfor (int i = 0; i < t - 1; i++) {\n\t\tif (s[i] != s[i + 1]) {\n\t\t\tck = 1;\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << s[i] << s[i + 1] << endl;\n\t\t\tbreak;\n\t\t} else\n\t\t\tcp = 0;\n\t}\n\tif (cp == 0 && ck == 0) cout << ""NO"" << endl;\n}"	"create integers t, cp, ck, with cp = 1, ck = 0\nread t\ncreate string s\nread s\nif t is 1, set cp to 0\nfor i = 0 to t - 1 exclusive\nif s[i] is not s[i+1]\nset ck to 1\nprint ""YES"" print newline\nprint s[i] print s[i+1] print newline\nbreak loop\nelse\nset cp to 0\nif cp is 0 and ck is 0, print ""NO"" print newline"
"int max(int a, int b) {\n\treturn a > b ? a : b;\n}\nint main() {\n\tint n;\n\tstring s;\n\twhile (cin >> n) {\n\t\tcin >> s;\n\t\tif (n == 1) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor (int i = 1; i < s.size(); i++) {\n\t\t\tif (s[i] != s[i - 1]) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\tcout << s[i - 1] << s[i] << endl;\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	in function max that returns an integer and takes arguments a, b = integers\nreturn the greater of a and b\nn = integer\ns = string\nwhile read n\nread s\nif n equals 1\nprint NO\ncontinue\nfor i = 1 to the size of s exclusive\nif s[i] does not equal s[i-1]\nprint YES\nprint s[i-1] s[i]\nexit program with success\nprint NO
"int main() {\n\tint N, x = 0, i;\n\tcin >> N;\n\tstring s;\n\tcin >> s;\n\tfor (i = 0; i < (N - 1); i++) {\n\t\tif (s[i] != s[i + 1]) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << s[i] << s[i + 1] << endl;\n\t\t\tx++;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (x == 0) cout << ""NO"" << endl;\n\treturn 0;\n}"	"create integers N, x, i, with x = 0\nread N\ncreate string s\nread s\nfor i = 0 to N - 1 exclusive\nif s[i] is not s[i+1]\nprint ""YES"" print newline\nprint s[i] print s[i+1] print newline\nincrement x\nbreak loop\nif x is 0, print ""NO"" print newline"
"void solve() {\n\tlong long n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tif (n == 1)\n\t\tcout << ""NO"" << '\n';\n\telse {\n\t\tfor (long long i = 1; i < n; i++) {\n\t\t\tif (s[i] != s[i - 1]) {\n\t\t\t\tcout << ""YES"" << '\n';\n\t\t\t\tcout << s[i - 1] << s[i] << '\n';\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcout << ""NO"" << '\n';\n\t}\n}\nint main() {\n\tlong long TESTS = 1;\n\twhile (TESTS--) { solve(); }\n\treturn 0;\n}"	"declare solve with no arguments, returning void\ncreate long long n\nread n\ncreate string s\nread s\nif n is 1\nprint ""NO"" print '\n'\nelse\nfor i = 1 to n exclusive\nif s[i] is not s[i-1]\nprint ""YES"" print '\n'\nprint s[i-1] print s[i] print '\n'\nreturn from function\nprint ""NO"" print '\n'\ncreate long long TESTS with TESTS = 1\nwhile decrement TESTS, run solve"
"const int MAX = 2e6, mod = 998244353;\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tif (!n && !m)\n\t\tputs(""NO"");\n\telse if (abs(n - m) <= 1)\n\t\tputs(""YES"");\n\telse\n\t\tputs(""NO"");\n}"	let MAX, mod be constant integers with MAX = 2e6, mod = 998244353\nlet n, m be integers\nread n, m\nif not n and not m\nprint NO and newline\nelse if absolute of (n - m) <= 1\nprint YES and newline\nelse do the following\nprint NO and newline
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif ((a || b) && abs(a - b) <= 1)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	a, b =integers\nRead a, b\nif a OR b and absolute value of (a - b) is less than or equal to 1\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint n, m;\n\tcin >> n;\n\tcin >> m;\n\tif (n == 0 && m == 0)\n\t\tcout << ""NO"" << endl;\n\telse if (abs(n - m) <= 1)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	n, m =integers\nRead n\nRead m\nif n is 0 and m is 0\nprint NO and a new line\nelse if absolute value of n - m is less than or equal to 1\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tcout << (abs(b - a) <= 1 && (b != 0 || a != 0) ? ""YES\n"" : ""NO\n"");\n\treturn 0;\n}"	let a, b be integers\nread a, b\nprint YES and newline if absolute value of (b - a) <= 1 and (b is not equal to 0 or a is not equal to 0) else print NO and newline
"const int MAX = 100001;\nint An[MAX], Bn[MAX];\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (abs(a - b) <= 1) {\n\t\tif (a == 0 && b == 0)\n\t\t\tcout << ""NO"" << endl;\n\t\telse\n\t\t\tcout << ""YES"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare constant integer MAX with value 100001\ndeclare integer arrays An and Bn with size MAX\ndeclare new int variables a and b\nread variables a and b from the input\nif abs(a - b) <= 1\nif a and b are both 0\nprint ""NO""\nelse\nprint ""YES"" to the output\nelse\nprint ""NO"""
"int main() {\n\tint n, m;\n\tcin >> n;\n\tcin >> m;\n\tif (n == 0 && m == 0)\n\t\tcout << ""NO"" << endl;\n\telse if (abs(n - m) <= 1)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create ints n and m\nread n from the input\nread user input to m\nif n and m are 0\nprint ""NO""\nelse if abs(n - m) <= 1\nprint ""YES""\nelse\nprint ""NO"""
"const int N = 2e5 + 12;\nconst int INF = 1e9;\nconst int MOD = 998244353;\nint mas[N];\nset<int> ind;\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (abs(a - b) > 1 || (!a && !b))\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n}"	"N is a new constant integer = 2e5 + 12\nnew constant integer INF with value 1e9\ndeclare constant integer called MOD = 998244353\ncreate new array of integers mas with N elements\nind is a new set of unique integers\ndeclare new integer variables a and b\nread variables a and b from the input\nif abs(a - b) > 1 or a and b are both false\nprint ""NO"" to the standard output\nelse\nprint ""YES"""
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint a = n - m;\n\tif (a < 0) a = -a;\n\tif (a <= 1 && (n || m))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	n. m = int\nread n, m\na = n - m = int\nif a is non zero negative the decrement a by a\nif a <= 1 and a isn' 0 or m isn't 0\nprint YES\nelse\nprint NO
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (abs(a - b) <= 1 && (a | b))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let a, b be integers\nread a, b\nif absolute value of (a - b) <= 1 and (a | b)\nprint YES and newline\nelse do the following\nprint NO and newline
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a == 0 && b == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tif (abs(a - b) == 0 || abs(a - b) == 1) {\n\t\t\tcout << ""YES"" << endl;\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t}\n}"	let a,b be integers\nread a,b\nif a is equal to b and b is equal to 0\nprint NO\notherwise\nif abs is equal to 0 or abs is equal to 1\nprint YES\notherwise\nprint NO
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif ((abs(a - b) <= 1) && (a != 0 || b != 0))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create int a and b\nread a and b\nif abs(a - b) <= 1 and a or b different from 0\nprint YES\nelse\nprint NO
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a == 0 && b == 0)\n\t\tcout << ""NO"" << endl;\n\telse if (abs(a - b) < 2)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	create int a and b\nread a and b\nif a and b=0\nprint NO\nelse if and of (a-b) <2\nprint YES\nelse\nprint NO
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (abs(b - a) <= 1 && (b != 0 || a != 0)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	create int a and b\nread a and b\nif abs of b-a <= 1 and b or a different from 0\nprint YES\nelse\nprint NO
"bool esPosible(int a, int b) {\n\tif (a == 0 && b == 0) return false;\n\tif (a - b > 1) return false;\n\tif (b - a > 1) return false;\n\treturn true;\n}\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (esPosible(a, b))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	function esPosible (get int a and b, return bool)\nif a is 0 and b is 0 return false\nif a-b>1 return false\nif b-a>1 return false\nreturn true\na,b=int\nread a,b\nif esPosible(a,b)\nprint YES\nelse\nprint NO
"int main() {\n\tint nEven, nOdd;\n\tcin >> nOdd >> nEven;\n\tif (nOdd == 0 && nEven == 0) {\n\t\tcout << ""NO\n"";\n\t\treturn 0;\n\t}\n\tif (nOdd - nEven >= -1 && nOdd - nEven <= 1)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	nEven, nOdd = integers\nread nEven, nOdd\nif (nOdd is 0 and nEven is 0)\nprint NO\nif (nOdd - nEven >= -1 and nOdd - nEven <= 1)\nprint YES\nelse\nprint NO
"int main() {\n\tint a, b, x;\n\tcin >> a >> b;\n\tif (a == 0 && b == 0)\n\t\tcout << ""NO"" << endl;\n\telse {\n\t\tx = abs(a - b);\n\t\tif (x == 1 || x == 0)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n}"	"declare new int variables a, b and x\nread user input to a and b\nif a or b = 0\nprint ""NO""\nelse\nassign the absolute value of a - b to x\nif x is 1 or 0\nprint ""YES"" to the standard output\nelse\nprint ""NO"""
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tcout << (abs(a - b) <= 1 && a + b > 0 ? ""YES\n"" : ""NO\n"");\n\treturn 0;\n}"	let a, b be integers\nread a, b\nprint YES and newline if absolute value of (a - b) <= 1 and a + b is greater than 0 else print NO and newline
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif ((a == b || abs(a - b) == 1) && (a != 0 || b != 0))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare new int variables a and b\nread from the input to a and b\nif (a = b or abs(a - b) = 1) and (a and b are not 0)\nprint ""YES""\nelse\nprint ""NO"" to the standard output"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (abs(a - b) <= 1 && (a > 0 || b > 0)) {\n\t\tcout << ""YES"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n}"	a, b =integers\nRead a, b\nif absolute value of a - b is less than or equal to 1 and a is greater than 0 OR b is greater than 0\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint ev, od;\n\twhile (cin >> ev >> od) {\n\t\tif (fabs(ev - od) <= 1 && (ev != 0 || od != 0))\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"ev, od = int\nloop while reading ev then od\nif fabs of (ev - od) <= 1 and (ev is not 0 or od is not 0)\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (!a && !b) {\n\t\tcout << ""NO\n"";\n\t} else if (abs(a - b) <= 1)\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"a, b = int\nread a then b\nif not a and not b\nprint ""NO""\nelse if absolute of a - b <= 1\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tint n, m;\n\twhile (cin >> n >> m) {\n\t\tif (n == 0 && m == 0)\n\t\t\tcout << ""NO"" << endl;\n\t\telse if (abs(n - m) <= 1)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	n, m =integers\nwhile reading values n, m\nif n is 0 and m is 0\nprint NO and a new line\nelse if absolute value of n - m is less than or equal to 1\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (a == b || abs(a - b) == 1) {\n\t\tif (a != 0 || b != 0)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	a, b = int\nread a and b\nif a = b and abs of a-b = 1 then\nif a or b are both not 0\nprint YES\nelse\nprint NO\nelse\nprint NO
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tcout << (abs(a - b) <= 1 && a + b ? ""YES"" : ""NO"") << endl;\n}"	"declare new integer variables a and b\nread a and b from the user input\nprint ""YES"" if absolute value of (a - b) <= 1 and a + b != 0 or ""NO"" otherwise"
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (abs(a - b) == 1) {\n\t\tcout << ""YES"" << endl;\n\t} else if (a == b && (a != 0 && b != 0)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create new integers a and b\nread variables a and b from the input\nif absolute value of a - b = 1\nprint ""YES"" to the standard output\nelse if a = b and (a and b !=0)\nprint ""YES""\nelse\nprint ""NO"" to the output stream"
"short int a, b;\nint main() {\n\tcin >> a >> b;\n\tif (a + b > 0 && abs(a - b) <= 1)\n\t\tcout << ""YES"" << '\n';\n\telse\n\t\tcout << ""NO"" << '\n';\n\treturn 0;\n}"	a,b=short int\nread a,b\nif a+b>0 and abs(a-b)<=1\nprint YES\nelse\nprint NO
"int main() {\n\tlong long n;\n\tcin >> n;\n\tvector<long long> v(n);\n\tfor (long long i = 0; i < n; i++) cin >> v[i];\n\tvector<long long> ans;\n\tfor (long long i = 0; i < n; i++) {\n\t\tlong long x = v[i];\n\t\tlong long smallans = 0;\n\t\tlong long j = 0;\n\t\tfor (j = 0; i + j < n; j++) {\n\t\t\tif (v[i + j] == x) {\n\t\t\t\tsmallans++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ti = i + j - 1;\n\t\tans.push_back(smallans);\n\t}\n\tlong long final = 0;\n\tfor (long long i = 0; i < ans.size(); i++) { final = final + (ans[i] * (ans[i] + 1)) / 2; }\n\tcout << final << ""\n"";\n}"	n = long long\nread n\nv = long long vector of size n\nread the first n elements of v\nans = long long vector\nfor long long i = 0 to n exclusive\nx = long long = v at i\nsmallasn = 0 = lon glong\nj = 0 = long long\nfor j = = to n exclusive\nif v[i+j] = x\nincrement smallans\nelse\nexit loop\nincrement i by j-1\npush back smallans into ans\nfinal = 0 = long long\nfor long long i = 0 to size of ans, increment final by (ans[i] * (ans[i] + 1)) / 2\nprint final
const long long INF = (1ll << 62) - 1;\nconst int M = 1e5 + 5;\nlong long ar[100005];\nlong long cnt = 1, tot, res;\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> ar[i]; }\n\tfor (int i = 1; i < n; i++) {\n\t\tif (ar[i] == ar[i - 1])\n\t\t\tcnt++;\n\t\telse {\n\t\t\ttot = (cnt * (cnt + 1)) / 2;\n\t\t\tres += tot;\n\t\t\tcnt = 1;\n\t\t}\n\t}\n\tres += (cnt * (cnt + 1)) / 2;\n\tcout << res << endl;\n}	make const long long int INF = (1ll << 62) - 1\ncreate const int M = 1e5 + 5\ncreate long long int array ar of size 100005\nmake long long ints cnt = 1, tot, and res\nmake integer n\nread n\nfor i = 0 to n exclusive, read ar[i]\nfor i = 1 to n exclusive\nif ar[i] is equal to ar[i - 1]\nincrement cnt\nelse do\nset tot to (cnt * (cnt + 1)) / 2\nset res to res + tot\nset cnt to 1\nadd (cnt * (cnt + 1)) / 2 to res\nshow res
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tvector<long long> v;\n\tint cnt = 1;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (a[i] == a[i - 1]) {\n\t\t\tcnt++;\n\t\t} else {\n\t\t\tv.push_back(cnt);\n\t\t\tcnt = 1;\n\t\t}\n\t}\n\tv.push_back(cnt);\n\tlong long ans = 0;\n\tfor (int i = 0; i < v.size(); i++) { ans += (v[i] * (v[i] + 1) / 2); }\n\tcout << ans << endl;\n\treturn 0;\n}	n=int\nread n\na=array of n int\nfor i=0 to n exclusive read a[i]\nv=vector of long long\ncnt=1\nfor i=1 to n exclusive\nif a[i] is a[i-1]\nincrement cnt\nelse\nadd cnt at end of v\ncnt=1\nadd cnt at end of v\nans=0\nfor i=0 to size of v exclusive add v[i]*(v[i]+1)/2 to ans\nprint ans
stack<int> s;\nint main() {\n\tlong long ans = 0, cnt = 0;\n\tint n, x;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tcnt = 0;\n\t\twhile (!s.empty() && s.top() != x) {\n\t\t\tcnt++;\n\t\t\ts.pop();\n\t\t}\n\t\tif (s.empty() || s.top() == x) s.push(x);\n\t\tans += (cnt - 1) * cnt / 2;\n\t}\n\tcnt = 0;\n\twhile (!s.empty()) {\n\t\tcnt++;\n\t\ts.pop();\n\t}\n\tans += (cnt - 1) * cnt / 2;\n\tans += n;\n\tcout << ans << endl;\n\treturn 0;\n}	s=stack of int\nans,cnt=0\nn,x=int\nread n\nfor i=0 to n exclusive\nread x\ncnt=0\nwhile s it not empty and first item of s is not x\nincrement cnt\npop first item of s\nif s is empty or first item of s is x push x into s\nadd (cnt-1)*cnt/2 to ans\ncnt=0\nwhile s is not empty\nincrement cnt\npop first item of s\nadd (cnt-1)*cnt/2 to ans\nadd n to ans\nprint ans
int main() {\n\tlong long n, a[100005], sum = 0, cnt = 1;\n\tcin >> n;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[1] == 0) a[0] = 1;\n\t\tif (a[i] == a[i - 1]) {\n\t\t\tsum += cnt;\n\t\t\tcnt++;\n\t\t} else\n\t\t\tcnt = 1;\n\t}\n\tn = n + sum;\n\tcout << n << endl;\n\treturn 0;\n}	create long long ints n, sum = 0, and cnt = 1 and int array a of size 100005\nread n\nfor i = 1 to n\nread a[i]\nif a[1] is equal to 0, set a[0] to 1\nif a[i] is equal to a[i - 1]\nset sum to sum + cnt\nincrement cnt\nelse do\nset cnt to 1\nset n to n + sum\nprint n
"int main() {\n\tlong long n;\n\tcin >> n;\n\tvector<long long> v(n);\n\tfor (long long i = 0; i < n; i++) { cin >> v[i]; }\n\tlong long j = 1;\n\tlong long ans = n;\n\tfor (long long i = 0; i < n;) {\n\t\tj = i + 1;\n\t\twhile (j < n && v[j] == v[i]) { j++; }\n\t\tlong long lon = j - i;\n\t\tans += lon * (lon - 1) / 2;\n\t\ti = j;\n\t}\n\tcout << ans << ""\n"";\n}"	make long long int n\nread n\ncreate long long vector v of size n\nfor i = 0 to n exclusive, read v[i]\ncreate long long j = i\nmake long long int ans = n\nfor i = 0 to n exclusive\nset j to i + 1\nwhile j is less than n and v[j] is equal to v[i]\nmake long long lon = j - i\nset ans to ans + long * (long - 1) / 2\nset i to j\nshow ans
"long long abs(long long, long long);\nvoid solve() {\n\tlong long n;\n\tcin >> n;\n\tlong long a[n], ans = 0;\n\tfor (long long i = 0; i < n; i++) { cin >> a[i]; }\n\tlong long t = 1;\n\tfor (long long i = 0; i < n; i++) {\n\t\tif (i == n - 1) {\n\t\t\tans++;\n\t\t} else {\n\t\t\tif (a[i] == a[i + 1]) {\n\t\t\t\tif (i == n - 2) {\n\t\t\t\t\tt++;\n\t\t\t\t\tans += (t * (t + 1)) / 2;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tt++;\n\t\t\t} else {\n\t\t\t\tans += (t * (t + 1)) / 2;\n\t\t\t\tt = 1;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << ""\n"";\n}\nint main() {\n\tlong long TESTS = 1;\n\twhile (TESTS--) { solve(); }\n\treturn 0;\n}\nlong long abs(long long a, long long b) {\n\tif (a > b)\n\t\treturn a - b;\n\telse\n\t\treturn b - a;\n}"	abs = long long function taking long long, long long\nin void function solve\nn = long long\nread n\na[n], ans = 0 be long long\nread the first n elements of a\nt =1 =long long\nfor long long i = 0 to n exclusive\nif i = n-1\nincrement ans\nelse\nif a[i] = a[i+1]\nif i = n - 2\nincrement t\nincrement ans by t*(t+1)/2\nexit loop\nincrement t\nelse\nincrement ans by\nt * (t + 1)/ 2\nprint ans\nTESTS = 1 = long long\nwhile decrementing TESTS, call solve\nin long long function abs taking long long a and long long b\nif a > b\nreturn a-b\nelse\nreturn b-a
long long int n, m, i, j, a[100005], ans, c;\nint main() {\n\tcin >> n;\n\tans = n;\n\ta[n] = 1000000005;\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tc = 1;\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] == a[i + 1]) {\n\t\t\tc++;\n\t\t} else {\n\t\t\tans = ans + (c * (c - 1)) / 2;\n\t\t\tc = 1;\n\t\t}\n\t}\n\tcout << ans << endl;\n}	n,m,i,j,ans,c=long long int, a=array of 100005 long long int\nread n\nans=n\na[n]=1000000005\nfor i=0 to n exclusive read a[i]\nc=1\nfor i=0 to n exclusive\nif a[i] is a[i+1]\nincrement c\nelse\nadd c*(c-1)/2 to ans\nc=1\nprint ans
void boost() {}\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long int arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tlong long int ans = 0;\n\tlong long int till = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif ((i + 1 < n) && (arr[i] == arr[i + 1]))\n\t\t\ttill++;\n\t\telse {\n\t\t\ttill++;\n\t\t\tans += ((till * (till + 1ll)) / 2ll);\n\t\t\ttill = 0;\n\t\t}\n\t}\n\tcout << ans << endl;\n}	define empty function boost\nn = int\nread n\narr = long long int array of size n\nread n values into arr\nans = long long int with ans = 0\ntill = long long int with till = 0\nfor i = 0 to n\nif (i + 1 < n) and (arr[i] is arr[i + 1])\nincrement till\nelse\nincrement till\nincrement ans by ((till * (till + 1ll)) / 2ll)\nset till to 0\nprint ans
int main() {\n\tlong long n;\n\tcin >> n;\n\tvector<long long> v(n, 0);\n\tvector<long long> sum(n, 0);\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> v[i];\n\t\tif (i > 0 && v[i - 1] == v[i]) sum[i] += sum[i - 1];\n\t\tsum[i]++;\n\t}\n\tlong long ans = 0;\n\tfor (long long i = 0; i < n; i++) {\n\t\tans++;\n\t\tif (i > 0 && v[i] == v[i - 1]) { ans += sum[i - 1]; }\n\t}\n\tcout << ans << endl;\n}	new long long variable n\nread n\ncreate new vector of long longs v with size n filled with 0\ndeclare vector of long longs sum with n elements filled with 0\nin a for loop, change i from 0 to n exclusive\nread standard input to v[i]\nif i > 0 and v[i - 1] = v[i], change sum[i] to the sum of sum[i] and sum[i - 1]\nincrement sum[i] by one\ncreate long long variable with name ans = 0\nstart for loop from i = 0 to n exclusive incrementing i\nincrement ans\nif i > 0 and v[i] = v[i - 1], change ans to ans + sum[i - 1]\nprint ans
const int INF = 0x3f3f3f3f;\nlong long a[100000 + 5], b[100000 + 5];\nint main() {\n\tlong long i, j, k, l = 0;\n\tlong long n, m;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tk = 0;\n\tint cou = 0;\n\tfor (i = 1; i < n; i++) {\n\t\tif (a[i] == a[k])\n\t\t\tcou++;\n\t\telse {\n\t\t\tif (cou) b[l++] = cou + 1;\n\t\t\tcou = 0;\n\t\t\tk = i;\n\t\t}\n\t\tif (i == n - 1) {\n\t\t\tif (cou) b[l++] = cou + 1;\n\t\t}\n\t}\n\tlong long s = n;\n\tfor (i = 0; i < l; i++) s += b[i] * (b[i] - 1) / 2;\n\tcout << s << endl;\n\treturn 0;\n}	declare constant integer INF with value 0x3f3f3f3f\ndefine an arrays of long longs a and b with 100000 + 5 elements\ndeclare long long variables i, j, k and l with l = 0\ndeclare new long longs n and m\nread user input to n\nread input to n new elements of a in a loop\nchange k to 0\ndeclare new integer variable cou = 0\nin a for loop, change i from 1 to n exclusive incrementing i\nif a[i] = a[k]\nincrement cou by one\nelse\nif cou is true, change the value of b[l] to cou + 1 and increment l\nassign the new value = 0 to cou\nchange k to i\nif i is equal to n - 1\nif cou is true, set b[l] to cou + 1 and increment l\ndeclare new long long variable s = n\nstart for loop from i = 0 to l exclusive, changing s to the sum of s and b[i] * (b[i] - 1) / 2 on each loop\nprint s
"void Fast_Read_Out() {}\nvoid Random() {\n\tunsigned int seed;\n\tasm(""rdtsc"" : ""=A""(seed));\n\tsrand(seed);\n}\nunsigned int Time() {\n\tunsigned int time = clock() / 1000.00;\n\treturn time;\n}\nconst int inf = int(1e9) + 123;\nconst int N = int(1e5) + 123;\nset<int> s;\nmap<int, int> d;\nint a[N];\nlong long Calc(int x) {\n\treturn (x * x - x) / 2;\n}\nint main() {\n\tRandom();\n\tFast_Read_Out();\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tlong long ans = 0, res = 0;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (a[i] == a[i - 1]) {\n\t\t\tres++;\n\t\t\tans += res;\n\t\t} else\n\t\t\tres = 0;\n\t}\n\tcout << ans + n << endl;\n}"	"Fast_Read_Out is a void function\nvoid function Random\nseed is a new unsigned integer variable\nasm(""rdtsc"" : ""=A""(seed))\ninitialize random number generator with the value of seed\nunsigned integer function Time\ncreate new unsigned integer variable time = clock() /1000.00\nreturn time\ncreate constant integer inf with value 1e9 + 123\nassign value 1e5 + 123 to the new constant integer N\ns is a set of integers\nlet d be a map from integers to integers\na is a new array of integers with N elements\nCalc is a long long function with int argument x\nreturn (x squared - x) / 2\ncall Random()\ncall Fast_Read_Out()\ndeclare integer n\nread from the input to n\nread n elements into a starting from the index 1\ndeclare new long long variables ans and res = 0\nfor i from 2 to n inclusive\nif a[i] = a[i - 1]\nincrement res\nchange ans to the sum of ans and res\nelse\nchange the value of res to 0\nprint ans + n to the standard output"
"int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tstring ans = """";\n\tint i;\n\tint flag = 1;\n\tfor (i = 0; i < n - 1; i++) {\n\t\tif (!flag) break;\n\t\tif (s[i + 1] >= s[i]) {\n\t\t\tans += s[i];\n\t\t} else {\n\t\t\tflag = 0;\n\t\t}\n\t}\n\tif (!flag)\n\t\tfor (; i < n; i++) { ans += s[i]; }\n\tcout << ans << endl;\n}"	"n = integer\ns = string\nread n and s\nans = string with value of """"\ni = integer\nflag = integer with value of 1\nfor i = 0 to n-1 exclusive\nif not flag break\nif s[i+1] is greater than or equal to s[i]\nincrease ans by s[i]\nelse\nset flag to 0\nif not flag\nfor i to n exclusive increase ans by s[i]\nprint ans"
int main() {\n\tint n;\n\tstring s;\n\tint t, flag = 0;\n\tcin >> n >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\tflag = 1;\n\t\t\tt = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (flag == 0) {\n\t\tfor (int i = 0; i < s.length() - 1; i++) { cout << s[i]; }\n\t\tcout << endl;\n\t} else {\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (i == t) continue;\n\t\t\tcout << s[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	let n be a integer\nlet s be a string\nlet t, flag be integers with flag value as 0\nread n , s\nfor ( i = 0 to s.length() ) , increase i value by 1\nif ( ith element in array s is greater than [i+1]th element of array s)\nflag value is equal to 1\nt is equal to i\nstop\nif (flag is equal to 0)\nfor (integer i = 0 to s.length() - 1) , print ith element in array s\nprint endline\nelse do the following\nfor (integer i = 0 to s.length())\nif (i is equal to t) , proceed to next\nprint ith element of array s\nprint newline
"int find(int x, int father[]) {\n\tif (father[x] == x) return x;\n\treturn father[x] = find(father[x], father);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tint pos = 0;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (s[i] < s[i - 1]) {\n\t\t\tpos = i - 1;\n\t\t\tbreak;\n\t\t} else {\n\t\t\tpos = i;\n\t\t}\n\t}\n\ts.erase(pos, 1);\n\tcout << s << ""\n"";\n}"	"integer function find with integer arguments x and father\nif father[x] = x return x\nreturn father[x] = find(father[x], father)\ndeclare integer called n\nread n\ndeclare string called s\nread s\nlet pos be integer = 0\nfor integer i = 1 to n exclusive\nif s[i] is less than s[i - 1]\nset value of pos to i - 1\nbreak the loop\nelse\nset value of pos to i\nerase 1 character at pos from s\nprint s and ""\n"""
int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tint pos = n - 1;\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\tpos = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << s.substr(0, pos) + s.substr(pos + 1) << endl;\n\treturn 0;\n}	create integer n\ncreate string s\nread n read s\ncreate integer pos with pos = n - 1\nfor i = 0 to n - 1 exclusive\nif s[i] is greater than s[i+1]\nset pos to i\nbreak loop\nprint substring of s from 0 to pos + substring of s from pos + 1 print newline
inline long long MAX2(long long a, long long int b) {\n\treturn (a) > (b) ? (a) : (b);\n}\ninline long long MAX3(long long a, long long b, long long c) {\n\treturn (a) > (b) ? ((a) > (c) ? (a) : (c)) : ((b) > (c) ? (b) : (c));\n}\ninline long long MIN2(long long a, long long b) {\n\treturn (a) < (b) ? (a) : (b);\n}\ninline long long MIN3(long long a, long long b, long long c) {\n\treturn (a) < (b) ? ((a) < (c) ? (a) : (c)) : ((b) < (c) ? (b) : (c));\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tint temp, result = n - 1;\n\tfor (int i = 1; i < n; i++) {\n\t\ttemp = (int)s[i] - (int)s[i - 1];\n\t\tif (temp < 0) {\n\t\t\tresult = i - 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (i != result) cout << s[i];\n\t}\n\tcout << endl;\n}	declare inline MAX2 with long long a, long long integer b as arguments, returning long long\nreturn a if a is greater than b, else b, from function\ndeclare inline MAX3 with long longs a, b, c as arguments, returning long long\nreturn (a) is greater than (b) ternary ((a) is greater than (c) ternary (a) : (c)) : ((b) is greater than (c) ternary (b) : (c)) from function\ndeclare inline MIN2 with long longs a, b as arguments, returning long long\nreturn a if a is greater than b, else b, from function\ndeclare inline MIN3 with long longs a, b, c as arguments, returning long long\n(a) is less than (b) ternary ((a) is less than (c) ternary (a) : (c)) : ((b) is less than (c) ternary (b) : (c))\ncreate integer n\nread n\ncreate string s\nread s\ncreate integers temp, result, with result = n - 1\nfor i = 1 to n exclusive\nset temp to integer casted s[i] - integer casted s[i-1]\nif temp is less than 0\nset result to i - 1\nbreak loop\nfor i = 0 to n exclusive\nif i is not result, print s[i]\nprint newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tlong long check = n - 1;\n\tfor (long long i = 0; i < n - 1; i++) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\tcheck = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (long long i = 0; i < n; i++)\n\t\tif (check != i) cout << s[i];\n\tcout << endl;\n\treturn 0;\n}	create long long n\nread n\ncreate string s\nread s\ncreate long long check = n - 1\nfor long long i = 0 to n - 1 exclusive\nif s[i] is greater than s[i + 1]\nassign value of i to check\nstop the loop\nfor i = 0 to n exclusive\nif check != i, print s[i]\nprint new line
int main() {\n\tcout.precision(10);\n\tcout << fixed;\n\tlong long n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tlong long pos = n - 1;\n\tfor (long long i = 1; i < n; i++) {\n\t\tif (s[i] < s[i - 1]) { pos = min(pos, i - 1); }\n\t}\n\ts.erase(pos, 1);\n\tcout << s << endl;\n\treturn 0;\n}	set stdout output decimal precision to 10\nset stdout floatfield format flag to fixed\ndeclare long long variable n\nread n\ncreate string s\nread s\ndeclare long long variable pos = n - 1\nfor i = 1 to n exclusive\nif s[i] is less than s[i - 1], set pos to min of pos and i - 1\nremove 1 character at position pos from s\nprint s
int main() {\n\tint t;\n\tcin >> t;\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < t; i++) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\ts[i] = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = 0; i < t; i++) {\n\t\tif (s[i] >= 'a' && s[i] <= 'z') cout << s[i];\n\t}\n\tcout << endl;\n}	create integer t\nread t\ncreate string s\nread s\nfor i = 0 to t exclusive\nif s[i] is greater than s[i+1]\nset s[i] to 1\nbreak loop\nfor i = 0 to t exclusive\nif s[i] is greater than or equal to 'a' and s[i] is less than or equal to 'z', print s[i]\nprint newline
"int main() {\n\tstring s;\n\tbool f = 1;\n\tint n;\n\tcin >> n >> s;\n\tfor (int i = 0; i < int(n - 1); i++) {\n\t\tif (s[i] > s[i + 1] && f) {\n\t\t\tf = 0;\n\t\t} else {\n\t\t\tcout << s[i];\n\t\t}\n\t}\n\tif (!f) cout << s[n - 1];\n\tcout << ""\n"";\n\treturn 0;\n}"	s = string\nf = bool set f = 1\nn = integer\nread n , s\nfor i = 0 to (n-1) exclusive\nif s[i] > s[i + 1] and f > 0\nf = 0\nelse\nprint s[i]\nif f = 0 print s[n - 1]\nprint newline
int main() {\n\tint n;\n\tstring ss;\n\tcin >> n >> ss;\n\tint in = -1;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (ss[i] > ss[i + 1]) {\n\t\t\tin = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (in == -1) n--;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (i != in) cout << ss[i];\n\t}\n\tcout << endl;\n\treturn 0;\n}	declare integer variable n\ndeclare string variable ss\nread n and ss\ndeclare integer variable in = -1\nfor i = 0 to n - 1 exclusive\nif ss[i] is greater than ss[i + 1]\nassign value of i to in\nstop the loop\ndecrement n if in = -1\nfor i = 0 to n exclusive\nif i != in print ss[i]\nprint new line
int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tint pos = n - 1;\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\tpos = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << s.substr(0, pos) + s.substr(pos + 1) << endl;\n}	n = integer\nlet s be a string\nread n and s\nset pos to n - 1\nfor i = 0 to n - 1 exclusive incrementing by 1 at the start of each iteration\nif s[i] is greater than s[i+1]\nassign i to pos\nbreak\nprint s.substr(0, pos) + s.substr(pos + 1)
int main() {\n\tint n;\n\tstring str;\n\tcin >> n >> str;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (str[i] > str[i + 1]) {\n\t\t\tstr.erase(i, 1);\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << str << endl;\n\treturn 0;\n}	declare integer n\ndeclare string str\nread n and str\nfor integer i = 0 to n exclusive\nif str[i] is greater than str[i + 1]\nremove 1 character from position i from str\nbreak the loop\nprint str
int main() {\n\tint n;\n\tstring en;\n\tcin >> n;\n\tcin >> en;\n\tint i, j;\n\tfor (i = 0; i < n - 1; i++) {\n\t\tif (en[i] > en[i + 1]) {\n\t\t\tfor (j = 0; j < i; j++) cout << en[j];\n\t\t\tfor (j = i + 1; j < n; j++) cout << en[j];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (i == n - 1) {\n\t\tfor (j = 0; j < i; j++) cout << en[j];\n\t}\n\tcout << endl;\n\treturn 0;\n}	declare integer variable n\ncreate string en\nread n\nread en\ndeclare integer variables i and j\nfor i = 0 to n - 1 exclusive\nif en[i] is greater than en[i + 1]\nprint i elements of en\nfor j = i + 1 to n exclusive print en[j]\nbreak the loop\nif i = n - 1\nprint i elements of en\nprint new line
int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tbool p = 0;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\tp = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!p) {\n\t\tfor (int i = 0; i < n - 1; i++) { cout << s[i]; }\n\t\tcout << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\tfor (int j = i + 1; j < n; j++) { cout << s[j]; }\n\t\t\tcout << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tcout << s[i];\n\t}\n\treturn 0;\n}	declare integer n\nread n\ncreate string s\nread s\ncreate boolean p = 0\nfor integer i = 0 to n - 1 exclusive\nif s[i] is greater than s[i + 1]\np = 1\nbreak the loop\nif p is 0\nfor integer i = 0 to n - 1 exclusive\nprint new line\nfor i = 0 to n - 1 exclusive\nif s[i] is greater than s[i + 1]\nfor integer j = i + 1 to n exclusive print s[j]\nprint new line\nprint s[i]
"string s;\nint n;\nint main() {\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == '1') {\n\t\t\tfor (int j = i; j < s.size(); j++) {\n\t\t\t\tif (s[j] == '0') { n++; }\n\t\t\t}\n\t\t\tif (n >= 6) {\n\t\t\t\tcout << ""yes"" << endl;\n\t\t\t} else {\n\t\t\t\tcout << ""no"" << endl;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""no"" << endl;\n\treturn 0;\n}"	"declare string s\ndeclare integer n\nread s\nfor i = 0 to size of s exclusive\nif s[i] is '1'\nfor j = i to size of s exclusive\nif s[j] is '0', increment n\nif n is greater than or equal to 6\nprint ""yes"", newline\nelse\nprint ""no"", newline\nprint ""no"", newline"
"int main() {\n\tstring s;\n\tcin >> s;\n\tint c = 0, k = 0;\n\tstring ans = ""no"";\n\treverse(s.begin(), s.end());\n\tif (s.length() < 7) {\n\t\tcout << ans << endl;\n\t} else {\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (s[i] == '0') {\n\t\t\t\tc++;\n\t\t\t\tif (c == 6) {\n\t\t\t\t\tk = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (k != 0) {\n\t\t\tfor (int j = k + 1; j < s.length(); j++) {\n\t\t\t\tif (s[j] == '1') {\n\t\t\t\t\tans = ""yes"";\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"	s = string array\nread s\ninteger as c = 0,k = 0\nans = no = string array\nreverse the sequence of string s\nif s.length is less than 7 then do the following\noutput ans\nelse\nfor i = 0 to less than s.length() do the following\nif s[i] is 0 then do the following\nadd one to c\nif c is 6 then do the following\nset k to i\nbreak\nif k is not equal to 0 then do the following\nfor j = k + 1 to less than s.length() do the following\nif s[j] is 1 then do the following\nset ans to yes\nbreak\nelse\ncontinue\noutput ans
"int main() {\n\tstring s;\n\tcin >> s;\n\tstring ans = ""no"";\n\tif (s.size() < 7) {\n\t\tcout << ans << endl;\n\t} else {\n\t\tint k = 0;\n\t\treverse(s.begin(), s.end());\n\t\tint count = 0, i = 0;\n\t\twhile (count < 6 && i < s.size()) {\n\t\t\tif (s[i] == '0') {\n\t\t\t\tcount++;\n\t\t\t\tk = i;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (k != 0 && count == 6) {\n\t\t\tfor (int i = k + 1; i < s.size(); i++) {\n\t\t\t\tif (s[i] == '1') {\n\t\t\t\t\tans = ""yes"";\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tans = ""no"";\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"	"declare string s\nread s\ndeclare string ans = ""no""\nif size of s is less than 7\nprint ans and newline\nelse\ndeclare integer k = 0\nreverse sort from beginning of s to end of s\ndeclare integer count = 0, i = 0\nwhile count is less than 6 and i is less than size of s\nif s[i] is '0'\nincrement count\nlet k be i\nincrement i\nif k is not 0 and count is 6\nfor i = k + 1 to size of s exclusive\nif s[i] is '1'\nlet ans be ""yes'\nend loop\nelse\nend current loop\nelse\nlet ans be ""no""\nprint ans and newline"
"int main() {\n\tchar a[101];\n\tcin >> a;\n\tint x = 0, y = 0;\n\tfor (int i = 0; a[i] != '\0'; i++) {\n\t\tint flag = 0;\n\t\tif (a[i] == '1') {\n\t\t\tfor (int j = i + 1; a[j] != '\0'; j++) {\n\t\t\t\tif (a[j] == '0') x++;\n\t\t\t\tif (x == 6) break;\n\t\t\t}\n\t\t\tflag = 1;\n\t\t}\n\t\tif (flag == 1) { break; }\n\t}\n\tif (x >= 6) {\n\t\tcout << ""yes"" << endl;\n\t} else {\n\t\tcout << ""no"" << endl;\n\t}\n\treturn 0;\n}"	"make char array a of size 101\nread a\nmake ints x = 0 and y = 0\nfor i = 0 while a[i] is not '\0'\nmake integer flag = 0\nif a[i] is equal to '1'\nfor j = i + 1 while a[j] is not '\0'\nif a[j] is equal to '0', increment x\nif x is equal to 6, break loop\nset flag to 1\nif flag is equal to 1, break loop\nis x is greater than or equal to 6\nprint ""yes""\nelse\noutput ""no"""
"int main() {\n\tstring s;\n\twhile (cin >> s) {\n\t\twhile (s[0] == '0') s.erase(0, 1);\n\t\twhile (~s.find(""1"")) s.erase(s.find(""1""), 1);\n\t\tif (s.size() >= 6)\n\t\t\tcout << ""yes"" << endl;\n\t\telse\n\t\t\tcout << ""no"" << endl;\n\t}\n\treturn 0;\n}"	"declare string s\nwhile read s is true\nwhile s[0] is '0', remove from 0 to 1 from s\nwhile bitwise not first index of ""1"" in s is true, remove from first index of ""1"" in s to 1 in s\nif size of s is greater than or equal to 6\nprint ""yes"" and newline\nelse\nprint ""no"" and newline"
"int main() {\n\tstring s;\n\tcin >> s;\n\tint n = s.size();\n\tfor (int i = 0; i < n; i++) {\n\t\tint c = 0;\n\t\tif (s[i] - '0') {\n\t\t\tfor (int j = i + 1; j < n; j++)\n\t\t\t\tif (s[j] - '0' == 0) c++;\n\t\t\tif (c >= 6) {\n\t\t\t\tcout << ""yes"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""no"" << endl;\n\treturn 0;\n}"	"create new string s\nread standard input to s\ndefine integer n\nin a for loop, change i from 0 to n exclusive incrementing i\ndeclare new integer called c = 0\nif s[i] - '0' is true\nfor integer j = i + 1 to n exclusive incrementing j\nif s[j] - '0' = 0, increment c by one\nif c >= 6\nprint ""yes""\nprint ""no"" to the standard output"
"char a;\nint n, b = 0;\nint main() {\n\ta = getchar();\n\twhile (a != '\n') {\n\t\t(a == '1') && (b = 1);\n\t\tif (b && a == '0') n++;\n\t\ta = getchar();\n\t\tif (n >= 6) return puts(""yes""), 0;\n\t}\n\tputs(""no"");\n\treturn 0;\n}"	create character variable\ninteger as n,b = 0\nset a to getchar()\nif a is not equal to \n then do the following\nset (a = 1) and (b to 1)\nif b and a is 0 then do the following n++\nset a to getchar()\nif n is greater than or equal to 6 then return write yes to stdout\nwrite no to stdout
"int main() {\n\tstring s;\n\tcin >> s;\n\tlong long first_one = -1;\n\tfor (long long i = 0; i < s.length(); ++i) {\n\t\tif (s[i] == '1') {\n\t\t\tfirst_one = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (first_one == -1) {\n\t\tcout << ""no\n"";\n\t\treturn 0;\n\t}\n\tlong long total = 0;\n\tfor (long long i = first_one + 1; i < s.length(); ++i) {\n\t\tif (s[i] == '0') { total++; }\n\t}\n\tif (total >= 6) {\n\t\tcout << ""yes\n"";\n\t} else {\n\t\tcout << ""no\n"";\n\t}\n\treturn 0;\n}"	"s=string\nread s\nfirst_one=-1\nfor i=0 to length of s exclusive\nif s[i] is '1'\nfirst_one=i\nbreak\nif first_one is -1\nprint ""no""\ntotal=0\nfor i=first_one+1 to length of s exclusive\nif s[i] is '0' increment total\nif total >= 6\nprint ""yes""\nelse\nprint ""no"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint len = s.length(), ipos, cnt = 0;\n\tfor (ipos = 0; ipos < len; ++ipos)\n\t\tif (s[ipos] == '1') break;\n\tif (ipos == len) return puts(""no""), 0;\n\tfor (++ipos; ipos < len; ++ipos)\n\t\tif (s[ipos] == '0') ++cnt;\n\tputs((cnt >= 6) ? ""yes"" : ""no"");\n}"	"create string s\nread from the input to s\ndefine new integers len = length of s, ipos and cnt = 0\nstart for loop from ipos = 0 to len exclusive\nif s[ipos] is equal to '1', stop the loop\nif ipos = len, return puts(""no""), 0\nincrement ipos and start a loop, while ipos < len, incrementing ipos by 1 on each iteration\nincrement cnt if s[ipos] = '0'\nprint ""yes"" if nt >= 6 or ""no"" otherwise"
"int a, n;\nchar p;\nint main() {\n\twhile (cin >> p) {\n\t\tif (a == 0) {\n\t\t\tif (p == '1') a = 1;\n\t\t} else {\n\t\t\tif (p == '0') n++;\n\t\t}\n\t}\n\tif (n >= 6) {\n\t\tcout << ""yes"" << endl;\n\t} else {\n\t\tcout << ""no"" << endl;\n\t}\n\treturn 0;\n}"	a, n = integers\np = character\nwhile reading p\nif a is equal to 0\nif p is equal to 1, then set a to 1\nelse do the following\nif p is equal to 0, then increment n\nif n is greater than or equal to 6\nprint yes and a new line\nelse do the following\nprint no and a new line
"int main() {\n\tstring p;\n\tcin >> p;\n\tint y = 0;\n\twhile (p[y] == '0') y++;\n\tint rsp = 0;\n\tfor (int i = y + 1; i < p.size(); i++) rsp += (p[i] == '0');\n\tif (rsp >= 6) {\n\t\tcout << ""yes"" << endl;\n\t} else {\n\t\tcout << ""no"" << endl;\n\t}\n}"	p = string\nread p\ny = 0 = int\nwhile p[y] is '0' increment y\nrsp = 0 = int\nfor i = y + 1 to size of p exclusive increment i after, increment rsp by (p[i] == '0')\nif rsp >= 6\nprint yes\nelse\nprint no
"int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++)\n\t\tif (s[i] == '1') {\n\t\t\tint sum = 0;\n\t\t\tfor (int j = i + 1; j < s.length(); j++)\n\t\t\t\tif (s[j] == '0') sum++;\n\t\t\tif (sum >= 6) {\n\t\t\t\tcout << ""yes"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\tcout << ""no"" << endl;\n\treturn 0;\n}"	"make string s\nread s\nfor i = 0 to s.length() exclusive\nif s[i] is equal to '1'\nmake integer sum = 0\nfor j = i + 1 to s.length() exclusive\nif s[j] is equal to '0', increment sum\nif sum is greater than or equal to 6\nprint ""yes""\nbreak loop\nshow ""no"""
"int dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nint main() {\n\tstring s;\n\tcin >> s;\n\tint i0 = -1, i1 = -1, cnt = 0;\n\tfor (int i = s.size() - 1; i >= 0; i -= 1) {\n\t\tif (s[i] == '0') cnt++;\n\t\tif (cnt == 6) {\n\t\t\ti0 = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = 0; i < s.size(); i += 1)\n\t\tif (s[i] == '1') {\n\t\t\ti1 = i;\n\t\t\tbreak;\n\t\t}\n\tif (i1 == -1 || i0 == -1) {\n\t\tcout << ""no\n"";\n\t\treturn 0;\n\t}\n\tif (i1 >= i0) {\n\t\tcout << ""no\n"";\n\t\treturn 0;\n\t}\n\tcout << ""yes\n"";\n}"	integer as array dx = 0,0,-1,1\ninteger as array dy = 1,-1,0,0\ns = string array\nread s\ninteger as i0 = -1,i1 = -1,cnt = 0\nfor i = s.size() - 1 to greater than or equal to 0 do the following\nif s[i] is 0 then add one to cnt\nif cnt is 6 then do\nset i0 to i\nbreak\nfor i = 0 to less than s.size do the following\nif s[i] is 1 then do the following\nset i1 to i\nbreak\nif i1 is -1 or i0 then do the following\noutput no\nif i1 is greater than or equal to i0 then do the following\noutput no\noutput yes
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tcout << max(0, 3 * n - k) << endl;\n}	n, k =integers\nRead n and k\nprint maximum value of 0 and 3 * n - k and a new line
const double TOLL = 1e-9;\nint memo[51][255];\nint recur(int n, int k) {\n\tif (n == 0 && k == 0) return 0;\n\tif (n == 0) return 1000;\n\tif (k == 0) return 1000;\n\tif (memo[n][k] != -1) return memo[n][k];\n\tint rv = 1000;\n\tfor (int i = 2; i <= 5; i++)\n\t\tif (i <= k) {\n\t\t\tint now = recur(n - 1, k - i);\n\t\t\tif (i == 2) now++;\n\t\t\trv = min(now, rv);\n\t\t}\n\treturn memo[n][k] = rv;\n}\nint main() {\n\tmemset(memo, -1, sizeof memo);\n\tint n, k;\n\twhile (cin >> n >> k) { cout << recur(n, k) << endl; }\n}	TOLL be a constant double 1e-9\nmemo is an integer array\nrecur is an integer function\nif n, k both equal 0, return 0\nif n equal 0, return 1000\nif k equal 0, return 1000\nif memo[n][k] not equal -1, return memo[n][k]\nrv is integer 1000\nfor integer i = 2 to 5 inclusive\nif i is less than or equal to k\ninteger now equals recur(n - 1, k - i)\nif i equals 2, increase now by 1\nrv = min(now, rv)\nreturn memo[n][k] equals rv\nmemset(memo, -1, sizeof memo)\nn, k be integers\nwhile read n, k, print recur(n, k) and newline
long long dp[52][252];\nlong long f(long long slot, long long n) {\n\tif (slot == 0) {\n\t\tif (n == 0)\n\t\t\treturn 0;\n\t\telse\n\t\t\treturn 1e10;\n\t}\n\tif (dp[slot][n] != -1) return dp[slot][n];\n\tlong long ans = 1e10;\n\tfor (int i = 2; i <= 5; i++) {\n\t\tif (i == 2) {\n\t\t\tans = min(ans, 1 + f(slot - 1, n - i));\n\t\t} else\n\t\t\tans = min(ans, f(slot - 1, n - i));\n\t}\n\treturn dp[slot][n] = ans;\n}\nint main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tmemset(dp, -1, sizeof(dp));\n\tcout << f(n, k) << endl;\n}	dpis long long array of 52 rows, 252 columns\nf is a function of long long integer\nif slot equals 0\nif n equals 0\nelse\nreturn 1e10\nif dp[slot][n] not equals -1, return dp[slot][n]\nans is a long long value equal to 1e10\nfor integer i = 2 to 5 inclusive\nif i is 2\nans equals minimum of ans, 1 + f(slot - 1, n - i)\nelse\nans equals minimum of ans, f(slot - 1, n - i)\nreturn dp[slot][n] equals ans\nn, k are long long values\nread n, k\nmemory set of dp, -1, sizeof(dp)\nprint f(n, k) and newline
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tif (n * 3 >= k)\n\t\tcout << n * 3 - k << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}	n, k are integers\nread n, k\nif n * 3 is greater than or equal to k\nprint 0 and endline\nelse\nprint 0 and endline
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tif (3 * n - k > 0)\n\t\tcout << 3 * n - k << endl;\n\telse\n\t\tcout << 0 << endl;\n}	n,k=int\nread n,k\nif 3*n-k > 0\nprint 3*n-k\nelse\nprint 0
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tvector<int> ex(n, 5);\n\tint idx = n - 1;\n\twhile (1) {\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < n; i++) { sum += ex[i]; }\n\t\tif (sum == k) break;\n\t\tif (idx == -1) { idx = n - 1; }\n\t\tex[idx]--;\n\t\tidx--;\n\t}\n\tint res = 0;\n\tfor (int(i) = 0; (i) < (n); (i)++)\n\t\tif (ex[i] == 2) res++;\n\tcout << res << endl;\n\treturn 0;\n}	n,k=int\nread n,k\nex=vector of n int filled with 5\nidx=n-1\nwhile true\nsum=0\nfor i=0 to n exclusive add ex[i] to sum\nif sum is k break\nif idx is -1 idx=n-1\ndecrement ex[idx]\ndecrement idx\nres=0\nfor i=0 to n exclusive\nif ex[i] is 2 increment res\nprint res
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tif (k / n == 2)\n\t\tcout << n - k % n << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}	declare new ints n and k\nread input to n and k\nif k / n = 2\nprint n - k % n\nelse\nprint 0
int main() {\n\tint n, a, coun;\n\tcin >> n >> a;\n\tif (3 * n <= a)\n\t\tcoun = 0;\n\telse\n\t\tcoun = 3 * n - a;\n\tcout << coun << endl;\n\treturn 0;\n}	n, a, coun = int\nread n, a\nif 3*n <= a\nset coun to 0\nelse\nset coun to 3 * n - a\nprint coun
"int main() {\n\tint n, k, ans;\n\twhile (cin >> n >> k) {\n\t\tif (k / n == 2) {\n\t\t\tans = k % n;\n\t\t\tcout << n - ans << endl;\n\t\t} else\n\t\t\tcout << ""0"" << endl;\n\t}\n\treturn 0;\n}"	let n, k, ans be integers\nwhile read n , k\nif k / n equals 2\nans is equal to k modulo n\nprint n - ans and newline\nelse do the following\nprint 0 and newline
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tdouble c = double(k) / n;\n\tif (c >= 3) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << n - k % n << endl;\n\t}\n\treturn 0;\n}	n,k=int\nread n,k\nc=k/n\nif c>=3\nprint 0\nelse\nprint n-k modulo n
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint x = 3 * a;\n\tif (x <= b)\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << x - b << endl;\n}"	"create integers a and b\nread a and b from the input\ncreate new integer called x with value 3*a\nif x <= b\nprint ""0""\nelse\nprint x - b"
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint ans = -1;\n\tans = n;\n\tans *= 3;\n\tans -= k;\n\tif (ans >= 0) {\n\t\tcout << ans << '\n';\n\t} else {\n\t\tcout << 0 << '\n';\n\t}\n}	n, k = int\nread n the k\nans = int with ans = -1\nset ans to n\nset ans to ans * 3\ndecrement ans by k\nif ans >= 0\nprint ans\nelse\nprint 0
int T = 1;\nvoid solve() {\n\tint n, k;\n\tcin >> n >> k;\n\tcout << (((0) > (n - (k - (2 * n)))) ? (0) : (n - (k - (2 * n)))) << endl;\n}\nint main() {\n\twhile (T--) { solve(); }\n\treturn 0;\n}	T = 1 = int\nin void function solve\nn, k = int\nread n, k\nis 0 > n - (k - (2 * n)) then print 0, else print n - (k - (2 * n))\nwhile decrementing T, calls solve
const int N = 1e5 + 100;\nint n, k, ans, a[55];\nvector<int> v;\nbool flag;\nbool check() {\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) { sum += a[i]; }\n\tif (sum == k) return true;\n\treturn false;\n}\nint main() {\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) { a[i] = 2; }\n\tif (check()) {\n\t\tcout << n << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 2; i <= 5; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\ta[j]++;\n\t\t\tif (check()) {\n\t\t\t\tflag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag) break;\n\t}\n\tif (flag) {\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] == 2) ans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create const int N = 1e5 + 100\nmake ints n, k, and ans and int array a of size 55\ncreate integer vector v\nmake bool flag\ndeclare check returning bool\nmake integer sum = 0\nfor i = 0 to n exclusive, add a[i] to sum\nif sum is equal to k, return true\nreturn false\nread n and k\nfor i = 0 to n exclusive, set a[i] to 2\nif check() returns true\nshow n\nfor i = 2 to 5\nfor j = 0 to n exclusive\nincrement a[j]\nif check() is truthy\nset flag to true\nbreak loop\nif flag is truthy, break loop\nif flag is true\nfor i = 0 to n exclusive\nif a[i] is equal to 2, add 1 to ans\ndisplay ans
"int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint x = 3 * a;\n\tif (x <= b)\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << x - b << endl;\n}"	"a,b=int\nread a,b\nx=3*a\nif x<=b\nprint ""0""\nelse\nprint x-b"
"int main() {\n\tint n, k;\n\twhile (cin >> n >> k) {\n\t\tif (k >= 3 * n)\n\t\t\tcout << ""0"" << endl;\n\t\telse if (k <= 2 * n)\n\t\t\tcout << n << endl;\n\t\telse\n\t\t\tcout << n - k + k / n * n << endl;\n\t}\n\treturn 0;\n}"	n, k = int\nwhile reading n, k\nif k >= 3n\nprint 0\nelse if k <= 2n\nprint n\nelse\nprint n - k + k / n * n
int main() {\n\tint a, b;\n\tcin >> a >> b;\n\tif (b >= 3 * a) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 3 * a - b << endl;\n\t}\n\treturn 0;\n}	a, b are integers\nread a, b\nif b is greater than or equal to 3 * a\nprint 0 and newline\nelse\nprint 3 * a - b and endline
"int main() {\n\tint n, k;\n\twhile (cin >> n >> k) {\n\t\tif (k >= 3 * n)\n\t\t\tcout << ""0"" << endl;\n\t\telse if (k <= 2 * n)\n\t\t\tcout << n << endl;\n\t\telse\n\t\t\tcout << n - k + k / n * n << endl;\n\t}\n\treturn 0;\n}"	create int n and k\nread n and k\nif k >= 3 * n\nprint 0\nelse if k <= 2 * n\nprint n\nelse\nprint n - k + k / n * n
int main() {\n\tint k, n;\n\tcin >> n >> k;\n\tcout << max(0, n - (k / 2 - n) * 2 - k % 2) << endl;\n\treturn 0;\n}	k, n = int\nread n then k\nprint max of 0, n - (k / 2 - n) * 2 - k mod 2
"int main() {\n\tint n, m, ans = 0;\n\tcin >> n >> m;\n\tans = m - 2 * n;\n\tans = n - ans;\n\tif (ans < 0) {\n\t\tcout << ""0"" << endl;\n\t\treturn 0;\n\t} else\n\t\tcout << ans << endl;\n\treturn 0;\n}"	n, m, ans =integers with ans = 0\nRead n and m\nset ans to m - 2 * n\nset ans to n - ans\nif ans is less than 0\nprint 0 and a new line\nelse do the following\nprint ans and a new line
const int maxn = 1e5 + 7;\nint counter(int x) {\n\tint myAss = 0;\n\twhile (x) {\n\t\tx >>= 1;\n\t\tmyAss++;\n\t}\n\treturn myAss;\n}\nint main() {\n\tint n;\n\twhile (cin >> n) { cout << counter(n) << endl; }\n\treturn 0;\n}	maxn is a new constant integer variable = 1e5 + 7\ncounter is a integer function with int argument x\ncreate integer variable with name myAss = 0\nwhile x\nchange x to x >> 1\nincrement myAss\nreturn myAss\ndeclare integer variable n\nin a while loop, read n and print the result of counter(n)
int main() {\n\tint n, ct = 0;\n\tcin >> n;\n\twhile (n) {\n\t\tct++;\n\t\tn = n / 2;\n\t}\n\tcout << ct << endl;\n}	n=int,cnt=0\nread n\nwhile n\nincrement ct\ndivide n by 2\nprint ct
int ans = 0;\nint main() {\n\tint n;\n\tcin >> n;\n\twhile ((1 << ans) - 1 < n) ans++;\n\tcout << ans << endl;\n\treturn 0;\n}	ans = integer with ans = 0\nn = integer\nread n\nwhile ((left shift ans 1 place) - 1 < n), increment ans\nprint ans
"int main() {\n\tint n, ans = 0;\n\tcin >> n;\n\twhile (n > 0) {\n\t\tn /= 2;\n\t\tans++;\n\t}\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	n, ans =integers with ans = 0\nRead n\nwhile n is greater than 0\nset n to n / 2\nincrement ans\nprint ans and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << ceil(log2(n + 1)) << ""\n"";\n\treturn 0;\n}"	n = int\nread n\nprint round upward log2(n+1)
int n, c;\nint main() {\n\tcin >> n;\n\twhile (n > 0) {\n\t\tn /= 2;\n\t\tc++;\n\t}\n\tcout << c << endl;\n}	n, c = integer\nread n\nwhile n > 0\nn = n / 2\nincrease c by 1\nprint c
int main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i < 50; i++) {\n\t\tn >>= 1;\n\t\tif (n == 0) {\n\t\t\tcout << i << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}	let n be a integer\nread n\nfor i = 1 to 50 exclusive\nshift n value to the right by 1\nif n is equal to 0\nprint i and newline
int main() {\n\tint a;\n\tcin >> a;\n\tint ans = 1;\n\twhile (a != 1) {\n\t\tans++;\n\t\ta >>= 1;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create int a\nread a\nlet ans = 1 be an integer\nloop while a is not 1\nincrement ans\nset a to a shifted by one bit to the right\nprint ans
vector<long long> v;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tlong long sum = 1;\n\tv.push_back(1);\n\twhile (sum < n) {\n\t\tlong long cur = v[v.size() - 1] << 1;\n\t\tv.push_back(cur);\n\t\tsum += cur;\n\t}\n\tcout << v.size() << endl;\n\treturn 0;\n}	let v be a vector of long integers\nlet n be a long integer\nread n\nlet sum be a long integer with sum = 1\npush_back 1 into vector v\nwhile sum is less than n\nlet cur be a long integer with v[ length of v - 1] << 1\npush_back cur into v\nincrement sum by cur\nprint length of v and newline
long long n, num[1000000];\nint main() {\n\tcin >> n;\n\tfor (long long i = 1; num[i - 1] <= 1e10; i++) num[i] = num[i - 1] + num[i - 1] + 1;\n\tfor (long long i = 1; num[i] <= 1e10; i++)\n\t\tif (num[i - 1] < n && num[i] >= n) {\n\t\t\tcout << i << endl;\n\t\t\treturn 0;\n\t\t}\n\treturn 0;\n}	create long long n, num[1000000];\nread n\nfor i=0 to num[i - 1] <= 1e10, set num[i] = num[i - 1] + num[i - 1] + 1\nfor i=1 to num[i] <= 1e10\nif num[i - 1] < n and num[i] >= n\nprint i
long long int n, i, x;\nint main() {\n\twhile (cin >> n) {\n\t\ti = 0;\n\t\tx = n;\n\t\twhile (x != 0) {\n\t\t\tif (x % 2 == 0)\n\t\t\t\tx = x / 2;\n\t\t\telse\n\t\t\t\tx = (x - 1) / 2;\n\t\t\ti++;\n\t\t}\n\t\tcout << i << endl;\n\t}\n\treturn 0;\n}	create long long ints n, i, and x\nread n and while n is truthy\nset i to 0\nset x to n\nwhile x is not 0\nif x modulo 2 is 0\nset x to x / 2\notherwise\nset x to (x - 1) / 2\nadd 1 to i\nshow i
int main() {\n\tlong long n, t = 0, x = 1;\n\tcin >> n;\n\twhile (x <= n) {\n\t\tx *= 2;\n\t\tt++;\n\t}\n\tcout << t << endl;\n\treturn 0;\n}	n, t, x =integers with t = 0 and x = 1\nRead n\nwhile x is less than or equal to n\nset x to x * 2\nincrement t\nprint t and a new line
long long n, k = 1, has;\nint main() {\n\tcin >> n;\n\twhile (k - 1 < n) {\n\t\tk *= 2;\n\t\thas++;\n\t}\n\tcout << has << endl;\n}	n, k and has are long longs where k = 1\nread from the input to n\nwhile k - 1 < n\nset k to k multiplied by 2\nincrement has by one\nprint has to the standard output
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << (int)log2(n) + 1 << endl;\n\treturn 0;\n}	declare new long long variable n\nread n from the user input\nprint log2(n) casted to integer + 1
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << (int)log2(n) + 1 << endl;\n\treturn 0;\n}	n = long long\nread n\nprint (cast to int)log2(n) + 1
int main() {\n\tlong n;\n\tcin >> n;\n\tlong cont = 0;\n\twhile (n > 0) {\n\t\tn = n / 2;\n\t\tcont++;\n\t}\n\tcout << cont << endl;\n\treturn 0;\n}	n =integer\nRead n\ncont = integer with 0\nwhile n is greater than 0\nset n to n / 2\nincrement cont\nprint cont and a new line
const int INF = 0x3f3f3f3f;\nconst double eps = 1e-7;\nconst long long mod = 1e9 + 7;\nlong long CountNum(long long n) {\n\tint ans = 0;\n\twhile (n) {\n\t\tans++;\n\t\tn /= 2;\n\t}\n\treturn ans;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tcout << CountNum(n) << endl;\n\treturn 0;\n}	declare new constant integer called INF = 0x3f3f3f3f\ncreate new constant double variable eps = 1e-7\nnew long long constant mod with value 1e9 + 7\nfunction CountNum with long long argument n that returns long long\ndeclare new integer variable ans with value 0\nwhile n\nincrement ans by one\nchange the value of n to n divided by 2\nreturn ans\nn is a new long long variable\nread n from the input\nprint the result of CountNum(n)
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint num = 0;\n\t\twhile (n) {\n\t\t\tnum++;\n\t\t\tn = n >> 1;\n\t\t}\n\t\tcout << num << endl;\n\t}\n\treturn 0;\n}	n = integer\nwhile n can be read as a valid integer\nnum = integer = 0\nwhile n is nonzero\nincrease num by 1\nn = n shifted 1 bit to the right\nprint num
int main() {\n\tint p = 0;\n\tlong long n, x = 1;\n\tcin >> n;\n\twhile (x <= n) {\n\t\tx *= 2;\n\t\tp++;\n\t\tif (x - 1 >= n) {\n\t\t\tcout << p << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}	p =integer with 0\nn, x = integers with x = 1\nRead n\nwhile x is less than or equal to n\nset x to x * 2\nincrement p\nif x - 1 is greater than or equal to n\nprint p and a new line
int gcd(int a, int b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\nint main() {\n\tint a;\n\tcin >> a;\n\tint ans = 1;\n\twhile (a != 1) {\n\t\tans++;\n\t\ta >>= 1;\n\t}\n\tcout << ans << endl;\n}	in the function gcd that takes integer a, b and returns integer\nif (b is 0), return a\nreturn gcd(b, a modulo b)\na = integer\nread a\nans = integer with ans = 1\nwhile a modulo 1\nincrement ans\na = right shift a 1 place\nprint ans
long long n, num;\nint main() {\n\tcin >> n;\n\tlong long sum = 1;\n\tint count = 0;\n\twhile (sum - 1 < n) {\n\t\tsum *= 2;\n\t\tcount++;\n\t}\n\tcout << count << endl;\n}	create new long longs n and num\nread from the input to n\ndeclare long long sum with value 1\ndeclare integer count = 0\nwhile sum - 1 < n\nchange the value of sum to sum multiplied by 2\nincrement count by one\nprint count
long long a[100010], b[100010], c[100010];\nlong long n, m, k, t, r, s, aux, rta;\nint main() {\n\twhile (cin >> n) {\n\t\tmemset(a, 0, sizeof(a));\n\t\tint rta = 0;\n\t\twhile (n) { n /= 2, rta++; }\n\t\tcout << rta << endl;\n\t}\n\treturn 0;\n}	create long long int array a of size 100010, b of size 100010, and c of size 100010\nmake long long ints n, m, k, t, r, s, aux, and rta\nread n and while n is truthy\nset all contents of a to 0\ncreate integer rta = 0\nwhile n is truthy, set n to n / 2 and increment rta\nshow rta
int main() {\n\tint n;\n\tcin >> n;\n\tcout << floor(log2(n)) + 1 << '\n';\n\treturn 0;\n}	declare integer variable with name n\nread input to n\nprint logarithm of n to the base 2 rounded down + 1 and '\n'
"int main() {\n\tstring s;\n\tgetline(cin, s);\n\tchar x;\n\tint len = s.size() - 1;\n\tint flag = 1;\n\twhile (flag) {\n\t\tchar temp = s[len];\n\t\tif (temp >= 'A' && temp <= 'Z') {\n\t\t\tx = temp;\n\t\t\tflag = 0;\n\t\t} else if (temp >= 'a' && temp <= 'z') {\n\t\t\tx = temp;\n\t\t\tflag = 0;\n\t\t}\n\t\tlen--;\n\t}\n\tx = tolower(x);\n\tif (x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u' || x == 'y')\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create string s\nread lien from cin to s\ncreate character x\ncreate integer len with len = size of s - 1\ncreate integer flag with flag = 1\nwhile flag is true\ncreate character temp with temp = s[len]\nif temp is greater than or equal to 'A' and temp is less than or equal to 'Z'\nset x to temp\nset flag to 0\nelse if temp is greater than or equal to 'a' and temp is less then or equal to 'z'\nset x to temp\nset flag to 0\ndecrement len\nset x to lower case of x\nif x is 'a' or x is 'e' or x is 'i' or x is 'o' or x is 'u' or x is 'y'\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tstring s;\n\tgetline(cin, s);\n\tchar x;\n\tint len = s.size() - 1;\n\tint flag = 1;\n\twhile (flag) {\n\t\tchar temp = s[len];\n\t\tif (temp >= 'A' && temp <= 'Z') {\n\t\t\tx = temp;\n\t\t\tflag = 0;\n\t\t} else if (temp >= 'a' && temp <= 'z') {\n\t\t\tx = temp;\n\t\t\tflag = 0;\n\t\t}\n\t\tlen--;\n\t}\n\tx = tolower(x);\n\tif (x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u' || x == 'y')\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"let s be string\nread line from input into s\nx = character\nlet len be integer = length of s - 1\ncreate integer flag with value 1\nwhile flag is 1\ncreate character temp with value s[len]\nif temp is a capital letter character\nx = temp\nset value of flag to 0\nelse if temp >= 'a' && temp <= 'z'\nset x to temp\nflag = 0\ndecrease len by one\nset value of x to lower case of x\nif x = 'a' or x = 'e' or x = 'i' or x = 'o' or x = 'u' or x = 'y'\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"char vol[] = {'y', 'Y', 'o', 'O', 'i', 'I', 'a', 'A', 'e', 'E', 'u', 'U'};\nint main() {\n\tstring s;\n\tgetline(cin, s);\n\tfor (int i = s.size() - 1; i > -1; i--)\n\t\tif (s[i] != '?' && s[i] != ' ') {\n\t\t\tfor (int j = 0; j < 12; j++)\n\t\t\t\tif (s[i] == vol[j]) return cout << ""YES"" << '\n', 0;\n\t\t\treturn cout << ""NO"" << '\n', 0;\n\t\t}\n\treturn 0;\n}"	"array of characters vol filled with 'y', 'Y', 'o', 'O', 'i', 'I', 'a', 'A', 'e', 'E', 'u' and 'U'\nlet s be string\nread input into s\nfor i = length of s - 1 to -1 exclusive decrementing i\nif s[i] != '?' and s[i] != ' '\nfor integer j = 0 to 12 exclusive\nif s[i] = vol[j] return cout << ""YES"" << '\n', 0\nreturn cout << ""NO"" << '\n', 0"
"int main() {\n\tchar s[500];\n\tgets(s);\n\tchar c;\n\tint len = strlen(s);\n\tfor (int i = 0; i < len; i++) {\n\t\tchar cc = tolower(s[i]);\n\t\tif (cc >= 'a' && cc <= 'z') c = cc;\n\t}\n\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create character array s with size 500\nread s\ncreate character c\ncreate integer len with len = string length of s\nfor i = 0 to len exclusive\ncreate character cc with cc = lower case s[i]\nif cc is greater than or equal to 'a' and cc is less than or equal to 'z', set c to cc\nif c is 'a' or c is 'e' or c is 'i' or c is 'o' or c is 'u' or c is 'y'\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tchar s[500];\n\tgets(s);\n\tchar c;\n\tint len = strlen(s);\n\tfor (int i = 0; i < len; i++) {\n\t\tchar cc = tolower(s[i]);\n\t\tif (cc >= 'a' && cc <= 'z') c = cc;\n\t}\n\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"s = array of characters of size 500\nget input into s\nc = character\nset integer len to length of s\nfor integer i = 0 to len exclusive\ncreate character cc = character at s[i] converted to lower case\nif cc >= 'a' and cc <= 'z'\nif c is a vowel character\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"string vow = ""aeiouy"";\nint main() {\n\tstring x;\n\tgetline(cin, x);\n\tbool ok = false;\n\tfor (int i = 0; i < x.length(); ++i) {\n\t\tif (isalpha(x[i])) {\n\t\t\tif (vow.find(tolower(x[i])) != -1)\n\t\t\t\tok = true;\n\t\t\telse\n\t\t\t\tok = false;\n\t\t}\n\t}\n\tcout << ((ok) ? ""YES"" : ""NO"") << endl;\n}"	"create string vow with value ""aeiouy""\nlet x be string\nread line and store it into x\nset boolean ok to false\nfor integer i = 0 to length of x exclusive\nif isalpha(x[i]) is true\nif lowercase x[i] can be found in vow\nset value of ok to true\nelse\nset ok to false\nprint ""YES"" if ok is true or ""NO"" otherwise, and a new line"
"string vow = ""aeiouy"";\nint main() {\n\tstring x;\n\tgetline(cin, x);\n\tbool ok = false;\n\tfor (int i = 0; i < x.length(); ++i) {\n\t\tif (isalpha(x[i])) {\n\t\t\tif (vow.find(tolower(x[i])) != -1)\n\t\t\t\tok = true;\n\t\t\telse\n\t\t\t\tok = false;\n\t\t}\n\t}\n\tcout << ((ok) ? ""YES"" : ""NO"") << endl;\n}"	"create string vow with vow = ""aeiouy""\ncreate string x\nread line from cin to x\ncreate boolean ok with ok = false\nfor i = 0 to length of x exclusive\nif x[i] is alphanumeric\nif first index of lower case x[i] in vow is not -1\nset ok to true\nelse\nset ok to false\nprint ""YES"" if ok is true, else ""NO"", print newline"
"char vocals[] = {'a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y'};\nbool contains(char vocal) {\n\tfor (int i = 0; i < 12; i++) {\n\t\tif (vocals[i] == vocal) return true;\n\t}\n\treturn false;\n}\nint main() {\n\tstring question;\n\tgetline(cin, question);\n\tfor (int i = question.size() - 2; i >= 0; i--) {\n\t\tif (question[i] != ' ') {\n\t\t\tif (contains(question[i])) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"	"char array vocals with elements 'a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U' and 'Y'\nfunction contains with char argument vocal and boolean return type\nfor integer i = 0 to 12 exclusive\nreturn true if vocals[i] = vocal\nreturn false\nquestion = string\nread input into question\nfor i = length of question - 2 to 0 inclusive counting down\nif question[i] != ' '\nif contains(question[i])\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"bool a(char c) {\n\tc = tolower(c);\n\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') return 1;\n\treturn 0;\n}\nstring s;\nint main() {\n\tgetline(cin, s);\n\tfor (int i = s.size() - 2; i >= 0; --i) {\n\t\tif (s[i] != ' ') {\n\t\t\tif (a(s[i])) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t} else {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n}"	"boolean function a with UNTYPED arguments char and c\nset value of c to lower case c\nif c is a vowel character return 1\ndeclare string variable s\nread input into s\nfor integer i = length of s - 2 to 0 inclusive, decrementing i\nif s[i] != ' '\nif a(s[i]) is true\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"bool a(char c) {\n\tc = tolower(c);\n\tif (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') return 1;\n\treturn 0;\n}\nstring s;\nint main() {\n\tgetline(cin, s);\n\tfor (int i = s.size() - 2; i >= 0; --i) {\n\t\tif (s[i] != ' ') {\n\t\t\tif (a(s[i])) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t} else {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n}"	"declare a with character c as argument, returning boolean\nset c to lower case c\nif c is 'a' or c is 'e' or c is 'i' or c is 'o' or c is 'u' or c is 'y', return 1 from function\ncreate string s\nread line from cin to s\nfor i = size of s - 2 to 0 inclusive, decrementing i\nif s[i] is not ' '\nif result of run a with s[i] as argument is true\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"const long long MOD = 1e9 + 7;\nconst long long INF = 1e9 + 7;\nbool isVowel(char a) {\n\tif (a == 'a') return true;\n\tif (a == 'i') return true;\n\tif (a == 'u') return true;\n\tif (a == 'e') return true;\n\tif (a == 'o') return true;\n\tif (a == 'y') return true;\n\treturn false;\n}\nint main() {\n\tstring s;\n\tgetline(cin, s);\n\tchar ans;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\ts[i] = tolower(s[i]);\n\t\tif (isalpha(s[i])) { ans = s[i]; }\n\t}\n\tif (isVowel(ans))\n\t\tcout << ""YES"" << '\n';\n\telse\n\t\tcout << ""NO"" << '\n';\n\treturn 0;\n}"	let MOD be a constant long integer with MOD = 1e9 + 7\nlet INF be a constant long integer with INF = 1e9 + 7\nlet isVowel be a function that accepts character a and returns a boolean value\nif a is equal to a , return true\nif a is equal to i , return true\nif a is equal to u , return true\nif a is equal to e , return true\nif a is equal to o , return true\nif a is equal to y , return true\nreturn false\nlet s be a string\ngetline(cin, s)\nlet ans be a character\nfor i = 0 to length of s exclusive\ns[i] is equal to tolower(s[i])\nif isalpha(s[i])) , ans is equal to s[i]\nif isVowel(ans)\nprint YES and newline\nelse do the following\nprint NO and newline
"string s;\ninline bool yy(char x) {\n\tif (x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u' || x == 'y') return 1;\n\treturn 0;\n}\nint main() {\n\tregister int i;\n\tgetline(cin, s);\n\tfor (i = s.length() - 1; !isalpha(s[i]); i--)\n\t\t;\n\ts[i] = tolower(s[i]);\n\tif (yy(s[i]))\n\t\tputs(""YES"");\n\telse\n\t\tputs(""NO"");\n}"	"declare string variable s\ninline bool function yy with char argument x\nreturn 1 if x is one of 'a', 'e', 'i', 'o', 'u' or 'y'\nnew register int i\nread data from the input and put it into s\nchange i from the length of s - 1, while isalpha(s[i]) returns false, decrementing i\nset s[i] to the lower case\nif yy(s[i]) is true\nprint ""YES""\nelse\nprint ""NO"" to stdout"
"const int M = 100 + 5;\nint main() {\n\tstring s;\n\tgetline(cin, s);\n\tchar c = s[0];\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif ((s[i] >= 'a' && s[i] <= 'z') || (s[i] >= 'A' && s[i] <= 'Z')) { c = s[i]; }\n\t}\n\tchar le[12] = {'a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y'};\n\tbool ok = false;\n\tfor (int i = 0; i < 12; i++) {\n\t\tif (c == le[i]) {\n\t\t\tok = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (ok) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	M = const integer with M = 105\ns = string\nread line s\nc = character with c = s[0]\nfor i = 0 to s.length() exclusive\nif ((s[i] >= a and s[i] <= z) or (s[i] >= A and s[i] <= Z)), c = s[i]\nle = character array of size 12 with le = {'a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y'}\nok = bool with ok = false\nfor i = 0 to 11\nif (c is le[i])\nok = true\nbreak loop\nif (ok)\nprint YES\nelse\nprint NO
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tcout << min(n - a, b + 1) << endl;\n\treturn 0;\n}	create int n, a, b\nread n, a, b\nprint min of n -a and b+1
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tcout << min(b + 1, n - a) << endl;\n}	let n, a, b be integers\nread n, a, b\nprint minimum of b + 1, n - a and newline
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tcout << n - max(a + 1, n - b) + 1 << endl;\n}	n, a, b =integers\nRead n, a, b\nprint n - maximum value of (a + 1) and (n - b) + 1 and a new line
int main() {\n\tint a, b, n;\n\twhile (cin >> n >> a >> b) {\n\t\tif ((a + b) > n)\n\t\t\tcout << (n - a) << endl;\n\t\telse\n\t\t\tcout << ((n - (a + b)) ? (b + 1) : b) << endl;\n\t}\n\treturn 0;\n}	create new ints a, b and n\nloop, reading n, a and b from the input\nif a + b is greater than n\nprint n - a to the output\nelse\nprint b + 1 if n - (a + b), else print b
int main() {\n\tint n, a, b, c = 0;\n\tcin >> n >> a >> b;\n\tfor (int i = a; i <= n - 1; i++) {\n\t\tif (n - i >= 1 && n - i - 1 <= b) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	n, a, b and c are integers where c = 0\nread user input to n, a and b\nfor i from a to n - 1 inclusive\nif n - i >= 1 and n - i - 1 <= b, increment c by one\nprint c
int main() {\n\tint n, a, b, ans;\n\tcin >> n >> a >> b;\n\tcout << n - max(a + 1, n - b) + 1 << endl;\n\treturn 0;\n}	n, a, b, ans =integers\nRead n, a, b, ans\nprint n - maximum value of (a + 1) and (n - b) + 1 and a new line
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tint count = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a <= (i - 1) and (n - i) <= b) { count++; }\n\t}\n\tcout << count << endl;\n}	make ints n, a, and b\nread n, a, and b\nmake integer count = 0\nfor i = 1 to n\nif a is less than or equal to (i - 1) and (n - i) is less than or equal to b, increment count\nprint count
int main() {\n\tint n, i, j, x, y, z;\n\tcin >> n >> x >> y;\n\tz = (x + y);\n\tif (n - x == 1 && n != z)\n\t\tcout << 1 << endl;\n\telse if (n > z)\n\t\tcout << y + 1 << endl;\n\telse if (z > n && (n - x) > 1)\n\t\tcout << (n - x) << endl;\n\telse if (n == z)\n\t\tcout << y << endl;\n\treturn 0;\n}	create int n, i, j, x, y, z\nread n, x and y\nset z to x+y\nif n-x=1 and n differenf from z\nprint 1\nelse if n>z\nprint y+1\nelse if z>n and n-x>1\nprint n-x\nelse if n equal to z\nprint y
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tint i = a + 1, c = 0;\n\twhile (b >= 0 && i <= n) {\n\t\tc++;\n\t\ti++;\n\t\tb--;\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let n, a, b be integers\nread n, a, b\nlet i , c be integers with i = a + 1, c = 0\nwhile b >= 0 and i <= n\nincrement c by 1\nincrement i by 1\ndecrement b by 1\nprint c and newline
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tint x = n - b;\n\tint y = a + 1;\n\tint sum = n - max(x, y) + 1;\n\tcout << sum << '\n';\n}	n, a, b =integers\nRead n, a, b\nset x to n - b\nset y to a + 1\nset sum to n - maximum value of x and y + 1\nprint sum and a new line
int n, a, b;\nint main() {\n\tcin >> n >> a >> b;\n\tcout << min(n - a, b + 1) << endl;\n\treturn 0;\n}	declare new int variables n, a and b\nread variables n, a and b from the input\nprint min of n - a and b + 1
int main() {\n\tint n, a, b, X = 0;\n\tcin >> n >> a >> b;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (i - 1 >= a && n - i <= b) X++;\n\t}\n\tcout << X << endl;\n\treturn 0;\n}	declare integers n, a, b, X = 0\nread n and a and b\nfor i = 1 to n inclusive\nif i - 1 is greater than or equal to a and n - i is less than or equal to b, increment X\nprint X and newline
int n, a, b;\nint main() {\n\tcin >> n >> a >> b;\n\tcout << min(n - a, b + 1) << endl;\n\treturn 0;\n}	n,a,b=int\nread n,a,b\nprint min(n-a, b+1)
int n, a, b;\nint main() {\n\tint count = 0;\n\tcin >> n >> a >> b;\n\tif (a + b + 1 < n) a = n - b - 1;\n\tcount = n - a;\n\tcout << count << endl;\n\treturn 0;\n}	n, a, b = integer\ncount = integer = 0\nread n, a, b\nif a + b + 1 < n, then ans a = n - b -1\ncount = n - a\nprint count
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tif (a + b >= n) {\n\t\tcout << n - a << endl;\n\t} else {\n\t\tcout << b + 1 << endl;\n\t}\n\treturn 0;\n}	create int n, a and b\nread n, a and b\nif a + b >= n\nprint n-a\nelse\nprint b+1
int n, a, b;\nint main() {\n\tcin >> n >> a >> b;\n\tcout << min(n - a, b + 1) << endl;\n\treturn 0;\n}	n, a, b = integers\nRead n, a, b\nprint minimum value of n - a and b + 1 and a new line
int main() {\n\tint n, a, b, i = 0, c = 0;\n\tcin >> n >> a >> b;\n\ti = n - a;\n\tc = b + 1;\n\tif (i <= c) {\n\t\tcout << i << endl;\n\t} else {\n\t\tcout << c << endl;\n\t}\n\treturn 0;\n}	declare integers n, a, b, i = 0, c = 0\nread n, a, b\nlet i be n - a\nlet c be b + 11\nif i is less than or equal to c\nprint i and newline\nelse\nprint c and newline
int main() {\n\tint a, b, n;\n\twhile (cin >> n >> a >> b) { cout << (n - a > b ? b + 1 : n - a) << endl; }\n\treturn 0;\n}	declare new int variables a, b and n\nread n, a and b and loop, then print b + 1 if n - a > b, or n -a otherwise, then loop again
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tcout << min(b + 1, n - a) << endl;\n\treturn 0;\n}	n, a, b =integers\nRead n, a, b\nprint minimum value of b + 1 and n - a and a new line
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tcout << min(n - a, b + 1) << endl;\n\treturn 0;\n}	n, a, b =integers\nRead n, a, b\nprint minimum value of n - a and b + 1 and a new line
int n, l, r, i;\nint main() {\n\tcin >> n >> l >> r;\n\tcout << (n - max(l, n - r - 1)) << endl;\n\treturn 0;\n}	n,l,r,i=int\nread n,l,r\nprint n-max(l,n-r-1)
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tint x = min(n - a, b + 1);\n\tcout << x << endl;\n\treturn 0;\n}	declare new int variables n, a and b\nread from the input to n, a and b\ndeclare integer variable called x = min of n - a and b + 1\nprint x
int n, a, b;\nint main() {\n\tcin >> n >> a >> b;\n\tcout << min(n - a, b + 1) << endl;\n\treturn 0;\n}	create integers n, a and b\nread n, a and b\nprint min of n - a and b + 1 to the standard output
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tif (a - b > c + 1)\n\t\tcout << c + 1 << endl;\n\telse\n\t\tcout << a - b << endl;\n}	declare integers a, b, c\nread a, b, c\nif a - b is greater than c + 1\nprint c + 1 and newline\nelse\nprint a - b and newline
int res;\nint main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tres = max(a + 1, n - b);\n\tcout << n - res + 1 << endl;\n\treturn 0;\n}	declare res as integer\ndeclare n, a, b as integer\nread n and a and b\nlet res be maximum of ( a + 1 and n - b )\nprint n - res + 1 and newline
"int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tlong long c = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (((i > a) && (n - i) <= b)) c++;\n\t}\n\tcout << c << ""\n"";\n}"	"declare integers n, a, b\nread n and a and b\ndeclare long long c = 0\nfor i = 1 to n inclusive\nif ( i is greater than a ) and ( n - i ) is less than or equal to b, increment c\nprint c and ""\n"""
int main() {\n\tint n, a, b, d = 0, c = 0;\n\tcin >> n >> a >> b;\n\td = n - a;\n\tc = b + 1;\n\tif (d <= c)\n\t\tcout << d << endl;\n\telse\n\t\tcout << c << endl;\n\treturn 0;\n}	n,a,b=int, d and c=0\nread n,a,b\nd=n-a\nc=b+1\nif d<=c\nprint d\nelse\nprint c
int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tint k = n - a;\n\tcout << min(k, b + 1) << endl;\n\treturn 0;\n}	n,a,b=int\nread n,a,b\nk=n-a\nprint min(k, b+1)
int main() {\n\tint n, a, b;\n\twhile (cin >> n >> a >> b) {\n\t\tint cnt = 0;\n\t\tn -= a;\n\t\tif (n <= (b + 1)) {\n\t\t\tcout << n << endl;\n\t\t\tbreak;\n\t\t} else\n\t\t\tcout << b + 1 << endl;\n\t}\n\treturn 0;\n}	n,a,b=int\nwhile read n,a,b\ncnt=0\nsubtract a from n\nif n<=b+1\nprint n\nbreak\nelse\nprint b+1
int main() {\n\tlong long int a, b, c;\n\tcin >> a >> b >> c;\n\tlong long int k = 0, g = b + 1;\n\twhile (g <= a) {\n\t\tif (a - g <= c) { k++; }\n\t\tg++;\n\t}\n\tcout << k << '\n';\n\treturn 0;\n}	let a, b, c long long ints\nread a, b, and c\nlet k, g long long ints with k = 0, g = b + 1\nwhile g at most a\nif a - g at most c, increment k\nincrement g\nprint k
const int maxx = 1e3 + 10;\nint a[maxx];\nint n;\nint main() {\n\twhile (cin >> n) {\n\t\tfor (int i = 0; i < n; i++) cin >> a[i];\n\t\tsort(a, a + n);\n\t\tlong long sum = 0;\n\t\tfor (int i = 1; i < n; i++) { sum += (a[i] - a[i - 1] - 1); }\n\t\tcout << sum << endl;\n\t}\n\treturn 0;\n}	maxx = constant integer = 1e3 + 10\na = integer array of size maxx\nn = integer\nwhile n is read with a valid integer\nfor i = 0 to n exclusive, read a[i]\nsort a in ascending order\nsum = long long = 0\nfor i = 1 to n exclusive, then sum = sum + (a[i] - a[i - 1] - 1)\nprint sum
int main() {\n\tint n, x, max = 0, min = INT_MAX;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tif (x >= max) max = x;\n\t\tif (min > x) min = x;\n\t}\n\tcout << max - min + 1 - n << endl;\n}	create ints n, x, max = 0, and min = INT_MAX\nread n\nfor i = 0 to n exclusive\nread x\nif x is greater than or equal to max, set max to x\nif min is greater than x, set min to x\nprint max - min + 1 - n
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tcout << a[n - 1] - a[0] + 1 - n << endl;\n}	n = int\nread n\na = int array of size n\nread n values into a\nsort a\nprint a[n - 1] - a[0] + 1 - n
int main() {\n\tlong long int n, a[1000], result;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tresult = a[n - 1] - a[0] - n + 1;\n\tcout << result << endl;\n}	n, result =integers and a = array of 1000 integers\nRead n\nRead n values into array a\nsort array elements of a in ascending order\nset result to a[n - 1] - a[0] - n + 1\nprint result and a new line
int main() {\n\tlong long n, i, j, l = 1000000000000000, r = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> j;\n\t\tl = min(l, j);\n\t\tr = max(r, j);\n\t}\n\tcout << (r - l + 1) - n << endl;\n}	n, i, j, l, r =integers with l = 1000000000000000 and r = 0\nRead n\nfor i = 0 to n exclusive\nRead j\nset l to minimum value of l and j\nset r to minimum value of r and j\nprint (r - l + 1) - n and a new line
const int inf = 0x3f3f3f3f;\nconst int N = 1010;\nlong long a[N];\nint main() {\n\tint m;\n\tcin >> m;\n\tfor (int i = 0; i < m; i++) cin >> a[i];\n\tsort(a, a + m);\n\tlong long ans = 0;\n\tfor (int i = 1; i < m; i++) ans += a[i] - a[i - 1] - 1;\n\tcout << ans << endl;\n\treturn 0;\n}	let inf = 0x3f3f3f3f = const int\nN = 1010 = int const\nlet a be a long long array of length N\nm = int\nread m\nread the first m elements of a\nsort the first m elements of a\nans = 0 = long long\nfor i = 1 to m exclusive then increment ans by a[i]+a[i-1]-1\nprint ans
"int main() {\n\tint n, res = 0;\n\tcin >> n;\n\tlong long arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tfor (int i = 1; i < n; i++)\n\t\tif (arr[i] != (arr[i - 1] + 1)) res += (arr[i] - arr[i - 1] - 1);\n\tcout << res << ""\n"";\n\treturn 0;\n}"	"let n and res be ints with res = 0\nread input to n\ndeclare new array of long longs arr with n elements\nread standard input to arr n times\nsort arr\nfor integer i = 1 to n exclusive\nif arr[i] != arr[i - 1] + 1, change res to the sum of res and arr[i] - arr[i - 1] - 1\nprint res and ""\n"""
"int main() {\n\tlong long int arra[1100];\n\tlong long int i, j, k, l, p, q, r, s, t, u, v, w, n, max_i = 0;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) { cin >> arra[i]; }\n\tsort(arra, arra + n + 1);\n\tfor (i = 1; i <= n; i++) {\n\t\tif (arra[i] >= max_i) { max_i = arra[i]; }\n\t}\n\tif (n == 1) {\n\t\tcout << ""0"" << '\n';\n\t} else {\n\t\tl = max_i - arra[1] + 1 - n;\n\t\tcout << l << '\n';\n\t}\n}"	create long long int arra[1100]\ncreate long long int i, j, k, l, p, q, r, s, t, u, v, w, n, max_i, set max_i to 0\nread n\nfor i=1 to n inclusive, read arra[i]\nsort elements between arra and arra + n + 1\nfor i=1 to n inclusive\nif arra[i] >= max_i, set max_i = arra[i]\nif n equal to 1\nprint 0 and a new line\nelse\nset l to max_i - arra[1] + 1 - n\nprint l and a newline
int main() {\n\tint n;\n\tcin >> n;\n\tint mi = 1 << 30, mx = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tmi = min(x, mi);\n\t\tmx = max(x, mx);\n\t}\n\tcout << mx - mi + 1 - n << endl;\n\treturn 0;\n}	n = int\nread n\nmi, mx = int with mi = 1 bitshift left by 30 and mx = 0\nfor i = 0 to n\nx = int\nread x\nset mi to min of x, mi\nset mx to max of x, mx\nprint mx - mi + 1 - n
const int maxn = 1000010;\nconst int MAXM = 500000;\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a[1005];\n\t\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\t\tsort(a, a + n);\n\t\tint cnt = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (a[i] - a[i - 1] > 1) { cnt += (a[i] - a[i - 1]) - 1; }\n\t\t}\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}	set maxn to 1000010\nassign 500000 to MAXM\ncreate int n\nwhile read n\ncreate int a[1005]\nfor i=0 to n exclusive, read a[i]\nsort elements between a and a + n\ncnt =0\nfor i=1 to n exclusive\nif a[i] - a[i - 1] > 1, cnt = cnt + (a[i] - a[i - 1]) - 1\nprint cnt
int main() {\n\tint n;\n\tcin >> n;\n\tint mx = 0;\n\tint mn = 1e9;\n\tfor (int i = 0; i < n; i++) {\n\t\tint t;\n\t\tcin >> t;\n\t\tmx = max(mx, t);\n\t\tmn = min(mn, t);\n\t}\n\tcout << mx - mn + 1 - n << '\n';\n}	n =integer\nRead n\nmx = integer with 0\nmn = integer with 0\nfor i = 0 to n exclusive\nt = integer\nRead t\nset mx to maximum value of mx and t\nset mn to minimum value of mx and t\nprint mx - mn + 1 - n and a new line
int a[1010];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tcout << a[n - 1] - a[0] - n + 1 << endl;\n\treturn 0;\n}	a = array of 1010 integers\nn=integer\nRead n\nRead n values into array a\nsort array elements of a in ascending order\nprint a[n - 1] - a[0] - n + 1 and a new line
"int main() {\n\tint n, res = 0;\n\tcin >> n;\n\tlong long arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tfor (int i = 1; i < n; i++)\n\t\tif (arr[i] != (arr[i - 1] + 1)) res += (arr[i] - arr[i - 1] - 1);\n\tcout << res << ""\n"";\n\treturn 0;\n}"	create n and res = 0\nread n\nmake long long integer arr of size n\nfor i = 0 to n exclusive, read arr[i]\nsort arr using argument arr + n\nfor i = 1 to exclusive\nif arr[i] is not equal to arr[i - 1] + 1, set res to res + arr[i] - arr[i - 1] - 1\nprint res
const int maxn = 1e6;\nlong long n, a[maxn], res;\nint main() {\n\tcin >> n;\n\tfor (int i = int(0); i < int(n); i++) cin >> a[i];\n\tsort(a, a + n);\n\tres = a[n - 1] - a[0] - n + 1;\n\tcout << res << '\n';\n\treturn 0;\n}	maxn = const integer with maxn = 1e6\nn, a, res = long long with a = array of size maxn\nread n\nfor i = cast to int(0) to cast to int(n), read a[i]\nsort a and a + n\nres = a[n - 1] - a[0] - n + 1\nprint res
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a[1005];\n\t\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\t\tsort(a, a + n);\n\t\tint cnt = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (a[i] - a[i - 1] > 1) { cnt += (a[i] - a[i - 1]) - 1; }\n\t\t}\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}	create new integer variable n\nread n and loop further\na is a new array of integers with size 1005\nread n elements into a\nsort a\ncnt is a new integer variable = 0\nfor i from 1 to n exclusive\nif a[i] - a[i - 1] is greater than 1, change cnt to cnt + (a[i] - a[i - 1]) - 1\nprint cnt
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long a[n];\n\tfor (long long i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tlong long ans = 0;\n\tfor (long long i = 0; i < n - 1; i++) {\n\t\tif ((a[i + 1] - a[i]) > 1) { ans = ans + ((a[i + 1] - a[i]) - 1); }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare long long variable with name n\nread standard input to n\na is a new array of long longs with n elements\nread n elements into a\nsort a\ndeclare new long long variable ans with value 0\nstart for loop from i = 0 to n - 1 exclusive\nif a[i + 1] - a[i] is greater than 1, assign the new value = ans + ((a[i + 1] - a[i]) - 1) to ans\nprint ans
const int inf = 0x3f3f3f3f;\nconst int N = 1010;\nlong long a[N];\nint main() {\n\tint m;\n\tcin >> m;\n\tfor (int i = 0; i < m; i++) cin >> a[i];\n\tsort(a, a + m);\n\tlong long ans = 0;\n\tfor (int i = 1; i < m; i++) ans += a[i] - a[i - 1] - 1;\n\tcout << ans << endl;\n\treturn 0;\n}	create constant integer inf = 0x3f3f3f3f\nmake const int N = 1010\nmake long long array a of size N\nmake int m\nread m\nfor i = 0 to m exclusive, read a[i]\nsort a using argument a + m\ncreate long long int ans = 0\nfor i = 1 to m exclusive, add a[i] - a[i - 1] - 1 to ans\nprint ans
"int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long ar[n + 1];\n\tfor (int i = 0; i < n; i++) { cin >> ar[i]; }\n\tsort(ar, ar + n);\n\tlong long count = 0;\n\tlong long temp = n - 2;\n\tcount = (ar[n - 1] - ar[0] - 1) - temp;\n\tcout << (count) << ""\n"";\n\treturn 0;\n}"	create long long n\nread n\ncreate long long ar[n + 1]\ni=0 to n exclusive, read ar[i]\nsort elements between ar and ar+n\ncount =0\nset temp to n-2\ncount = (ar[n - 1] - ar[0] - 1) - temp\nprint (count) and a newline
int main() {\n\tint n;\n\tcin >> n;\n\tlong long a[100001];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tcout << a[n - 1] - a[0] + 1 - n << endl;\n}	make int n\nread n\ncreate long long array a of size 100001\nfor i = 0 to n exclusive, read a[i]\nsort a using a + n\nprint a[n -1] - a[0] + 1 - n
const int inf = 0x3f3f3f3f;\nconst int N = 1010;\nlong long a[N];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tlong long ans = 0;\n\tfor (int i = 1; i < n; i++) ans += a[i] - a[i - 1] - 1;\n\tcout << ans << endl;\n\treturn 0;\n}	inf = constant integer = 0x3f3f3f3f\nN = constant integer = 1010\na = long long array of size N\nn = integer\nread n\nfor i = 0 to n exclusive, then read a[i]\nsort a in ascending order\nans = long long = 0\nfor i = 1 to n exclusive, then ans = ans + a[i] - a[i - 1] - 1\nprint ans
long long i, j, k, n, t, m, x, z, ans, a[200007];\nint main() {\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tfor (i = 1; i < n; i++) { ans += a[i] - a[i - 1] - 1; }\n\tcout << ans << endl;\n\treturn 0;\n}	declare long long variables i, j, k, n, t, m, x, z and ans and an array a with size 200007\nread n from the input\nread n elements into a from the input\nsort a\nin a loop, change i from 1 to n exclusive, increasing ans by a[i] - a[i - 1] - 1 on each loop\nprint ans
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << ""0\n"";\n\telse\n\t\tcout << ""1\n"";\n}"	"declare integer n\nread n\nif n % 2 is 0\nprint ""0\n""\nelse\nprint ""1\n"""
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << ""0"" << endl;\n\telse if (n % 2 != 0)\n\t\tcout << ""1"" << endl;\n}"	n = int\nread n\nif even\nprint 0\nif not even\nprint 1
int main() {\n\tint i, j, m, n, x, y, k;\n\tcin >> n;\n\tcout << n % 2 << endl;\n\treturn 0;\n}	i,j,m,n,x,y,k=int\nread n\nprint n modulo 2
int main() {\n\tint n;\n\tcin >> n;\n\tcout << (n & 1 ? 1 : 0) << '\n';\n}	create integer n\nread from the input to n\nprint 1 if n & 1 = 1, or 0, and '\n'
int main() {\n\tint a;\n\tcin >> a;\n\tif (a % 2 == 0)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 1 << endl;\n}	a = int\nread a\nif a is even\nprint 0\nelse\nprint 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n % 2 << '\n';\n\treturn 0;\n}	declare integer n\nread n\nprint n % 2 and '\n'
const int maxn = 5001;\nint main() {\n\tint n;\n\tcin >> n;\n\tcout << n % 2 << endl;\n\treturn 0;\n}	declare constant integer maxn = 5001\ndeclare integer n\nread n\nprint n % 2 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n % 2 << '\n';\n\treturn 0;\n}	n = int\nread n\nprint remainder of n % 2
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n % 2 << endl;\n}	n = int\nread n\nprint remainder of n / 2
"int main() {\n\tint a;\n\tcin >> a;\n\tif (a % 2 != 0)\n\t\tcout << ""1"" << endl;\n\telse\n\t\tcout << ""0"" << endl;\n}"	"create integer variable a\nread standard input to a\nif a is odd\nprint ""1""\nelse\nprint ""0"" to the standard output"
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << ""0"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	"declare integer n\nread n\nif n % 2 is 0\nprint ""0"" and newline\nelse\nprint ""1"" and newline"
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << ""0"" << endl;\n\t} else {\n\t\tcout << ""1"" << endl;\n\t}\n\treturn 0;\n}"	n = integer\nread n\nif n % 2 == 0\nprint 0\nelse\nprint 1
int main() {\n\tint a;\n\tcin >> a;\n\tif (a % 2 == 0)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	a = int\nread a\nif a is even\nprint 0\nelse\nprint 1
int main() {\n\tint a;\n\tcin >> a;\n\tcout << a % 2 << endl;\n}	a = int\nread a\nprint remainder of a / 2
"const int INF = 0x3f3f3f3f;\nint main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tputs(""0"");\n\telse\n\t\tputs(""1"");\n\treturn 0;\n}"	"INF = const int with INF = 0x3f3f3f3f\nn = int\nread n\nif n is even\nprint ""0""\nelse\nprint ""1"""
"int main() {\n\tint a;\n\tcin >> a;\n\tif (a % 2 == 1)\n\t\tcout << ""1"" << endl;\n\telse\n\t\tcout << ""0"" << endl;\n}"	let a = int\nread a\nif remainder of a / 2 equals 1\nprint 1\nelse\nprint 0
int main() {\n\tint x;\n\tcin >> x;\n\tcout << x % 2 << endl;\n}	create integer x\nread x\nprint x % 2
int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n & 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}	create long long int n\nread n\nif n & 1 is truthy\nprint 1\nelse do\nshow 0
"int main() {\n\tint a;\n\tcin >> a;\n\tif (a % 2)\n\t\tcout << ""1\n"";\n\telse\n\t\tcout << ""0\n"";\n}"	a = int\nread a\nif a % 2\nprint 1 and new line\nelse\nprint 0 and new line
int main() {\n\tint n;\n\tcin >> n;\n\tcout << (n & 1) << endl;\n}	n=int\nread n\nprint n and 1
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	let n be a integer\nread n\nif n modulo 2 equals 0\nprint 0 and newline\nelse do the following\nprint 1 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tcout << (n & 1) << endl;\n}	n is a new integer variable\nread variable n from the input\nprint n & 1
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n % 2 << endl;\n}	create new integer variable n\nread n from the user input\nprint n % 2
int main() {\n\tint num;\n\tcin >> num;\n\tif (num % 2 == 0) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n}	let num be an integer\nread in num\nif num is even\nprint 0\nor else\nprint 1
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n & 1)\n\t\tcout << ""1"" << endl;\n\telse\n\t\tcout << ""0"" << endl;\n}"	"new integer n\nread from the input to n\nif n & 1 != 0\nprint ""1""\nelse\nprint ""0"""
int n;\nint main() {\n\tcin >> n;\n\tcout << n % 2 << endl;\n}	declare integer n\nread n\nprint n % 2 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 != 0) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}	let n be a integer\nread n\nif n modulo 2 is equal to 0\nprint 1 and newline\nelse do the following\nprint 0 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n % 2 << endl;\n\treturn 0;\n}	n=int\nread n\nprint n modulo 2
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << ""0"" << endl;\n\t} else\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	n = int\nread n\nif even\nprint 0\nelse\nprint 1
"int main() {\n\tint a;\n\tcin >> a;\n\tcout << a % 2 << ""\n"";\n}"	"declare integer a\nread a\nprint a % 2, ""\n"""
int main() {\n\tint n;\n\tcin >> n;\n\tif (n & 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}	n = int\nread n\nif n bitwise and 1\nprint 1\nelse\nprint 0
int main() {\n\tint x;\n\tcin >> x;\n\tcout << (x % 2) << endl;\n\treturn 0;\n}	x = int\nread x\nprint remainder of x / 2
int main() {\n\tint in;\n\tcin >> in;\n\tcout << in % 2 << endl;\n\treturn 0;\n}	create int in\nread in\nprint in % 2
int a;\nint main() {\n\tcin >> a;\n\tcout << a % 2 << '\n';\n}	a = int\nread a\nprint remainder of a / 2
int main() {\n\tlong long a, b, c;\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcout << 2 * c * (a + b - 2) - 8 * (c * (c - 1)) << endl;\n}	declare long longs a, b, c\nread a\nread b\nread c\nprint 2 * c * (a + b - 2) - 8 * (c * (c - 1)) and newline
int main() {\n\tint w, h, k;\n\tcin >> w >> h >> k;\n\tcout << 2 * k * (w + h - 2) - 8 * (k * (k - 1)) << endl;\n\treturn 0;\n}	declare integers w, h, k\nread w, h, k\nprint 2 * k * (w + h - 2) - 8 * (k * (k - 1)) and newline
bool can(int i, int j, int k) {\n\tif (i + j > k && j + k > i && i + k > j) return true;\n\treturn false;\n}\nint main() {\n\tint w, h, k;\n\tcin >> w >> h >> k;\n\tint ans = 0;\n\twhile (w > 0 && h > 0 && k > 0) {\n\t\tans += 2 * (w + h) - 4;\n\t\tw -= 4;\n\t\th -= 4;\n\t\tk--;\n\t}\n\tcout << ans << endl;\n}	let can be a function that accepts integers i , j , k and returns a boolean value\nif i + j is greater than k and j + k is greater than i and i + k is greater than j , return true\nreturn false\nlet w, h, k be integers\nread w, h, k\nlet ans be a integer with ans = 0\nwhile w is greater than 0 and h is greater than 0 and k is greater than 0\nincrement ans by 2 * (w + h) - 4\ndecrement w by 4\ndecrement h by 4\ndecrement k by 1\nprint ans and newline
int main() {\n\tint w, h, k;\n\tcin >> w >> h >> k;\n\tcout << 2 * k * (w + h - 2) - 8 * (k * (k - 1)) << endl;\n\treturn 0;\n}	create ints w, h, and k\nread w, h, and k\nshow the result of 2 * k * (w + h - 2) - 8 * (k * (k - 1))
"long long n, m, k;\nlong long ans = 0;\nint main() {\n\tcin >> n >> m >> k;\n\tfor (long long i = 0; i < k; i++) {\n\t\tlong long len = n - (i * 2) * 2;\n\t\tlong long wid = m - (i * 2) * 2;\n\t\tans += ((len + wid) * 2 - 4);\n\t}\n\tcout << ans << ""\n"";\n}"	let n, m, k be long long ints\nlet ans be a long long int with value 0\nread n and m and k\nfor longlong int i=0 to k\nlet len be a long long int with value n-(i*2)*2\nlet win be a long long int with value m-(i*2)*2\nset ans to ans+ ((len+wid)*2-4)\nprint ans and newline
int main() {\n\tint w, h, i, r = 0;\n\tcin >> w >> h >> i;\n\twhile (i >= 1) {\n\t\tr = r + (w + h - 2) * 2;\n\t\tw = (w - 4);\n\t\th = (h - 4);\n\t\ti--;\n\t}\n\tcout << r << endl;\n\treturn 0;\n}	make ints w, h, i, and r = 0\nread w, h, and i\nwhile i is greater than or equal to 1\nset r to r + (w + h - 2) * 2\nset w to (w - 4)\nset h to (h - 4)\nsubtract 1 from i\nprint r
int main() {\n\tint x, y, z, t = 0;\n\tcin >> x >> y >> z;\n\tfor (int i = 0; i < z; i++) {\n\t\tt = t + 2 * x + 2 * y - 4;\n\t\tx = x - 4;\n\t\ty = y - 4;\n\t}\n\tcout << t << endl;\n\treturn 0;\n}	let x, y, z, and t ints with t = 0\nread x, y, and z\nfor i from 0 to z exclusive\nset t to t + 2 * x + 2 * y - 4\nsubtract 4 from x\nsubtract 4 from y\nprint t
long long i, b, a, t, k, l, ans;\nint main() {\n\tcin >> a;\n\tcin >> b;\n\tcin >> k;\n\tfor (i = 1; i <= k; i++) {\n\t\tans = ans + (a + b) * 2 - 4;\n\t\ta = a - 4;\n\t\tb = b - 4;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	i, b, a, t, k, l, ans = long long\nread a\nread b\nread k\nfor i = 1 to k inclusive\nset ans to ans + (a + b) * 2 - 4\ndecrement a by 4\ndecrement b by 4\nprint ans
int main() {\n\tint w, h, k;\n\tcin >> w >> h >> k;\n\tint cnt = 0;\n\tfor (int i = 1; i <= k; i++) {\n\t\tint size = (w - 4 * (i - 1)) * (h - 4 * (i - 1));\n\t\tif (size <= 0)\n\t\t\tbreak;\n\t\telse\n\t\t\tcnt += (w - 4 * (i - 1)) * 2 + (h - 4 * (i - 1) - 2) * 2;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	create ints w, h, and k\nread w, h, and k\nmake int cnt = 0\nfor i = 1 to k\ncreate int size = (w - 4 * (i - 1)) * (h - 4 * (i - 1))\nif size is less than or equal to 0\nbreak loop\nelse do\nset cnt to cnt + (w - 4 * (i - 1)) * 2 + (h - 4 * (i - 1) - 2) * 2\ndisplay cnt
int w, h, k;\nint main() {\n\tint ans = 0;\n\tcin >> w >> h >> k;\n\tfor (int i = 1; i <= k; i++) {\n\t\tint _w = w - (i - 1) * 4;\n\t\tint _h = h - (i - 1) * 4;\n\t\tans += 2 * (_w + _h) - 4;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create ints w, h, and k\nmake int ans = 0\nread w, h, and k\nfor i = 1 to k\ncreate int _w = w - (i - 1) * 4\nlet integer _h = h - (i - 1) * 4\nset ans to ans + 2 * (_w + _h) - 4\ndisplay ans
int main() {\n\tint w, h, k, res = 0, i = 0;\n\tcin >> w >> h >> k;\n\twhile (k--) {\n\t\tres += 2 * (w - (4 * i) + h - (4 * i)) - 4;\n\t\ti++;\n\t}\n\tcout << res << endl;\n}	w,h,k=int, res and i=0\nread w,h,k\nwhile decremented value of k is not 0\nadd 2*(w-(4*i)+h-(4*i))-4 to res\nincrement i\nprint res
int main() {\n\tint w = 0, h = 0, k = 0, counter_yello = 0;\n\tcin >> w >> h >> k;\n\tfor (size_t i = 0; i < k; ++i) {\n\t\tcounter_yello += 2 * w + 2 * h - 4;\n\t\tw -= 4;\n\t\th -= 4;\n\t}\n\tcout << counter_yello << endl;\n\treturn 0;\n}	create ints w, h, k and counter_yello = 0\nread standard input to w, h and k\nfor i from 0 to k exclusive incrementing i\nchange counter_yello to counter_yello + 2 * w + 2 * h - 4\nchange w to w - 4\nchange h to h - 4\nprint counter_yello to the standard output
"int main() {\n\tlong long a, b, c, r = 0;\n\tcin >> a >> b >> c;\n\tfor (long long i = 0; i < c; i++) r += ((((a - (4 * i)) - 1) + ((b - (4 * i)) - 1)) * 2);\n\tcout << r << ""\n"";\n\treturn 0;\n}"	create long long integers a, b, c, r = 0\nread a, b and c\nfor c iterations set r to r + ((((a - (4 * i)) - 1) + ((b - (4 * i)) - 1)) * 2)\nprint r
int main() {\n\tint w, h, k, count = 0;\n\tcin >> w >> h >> k;\n\twhile (k--) {\n\t\tcount += 2 * (w + h) - 4;\n\t\tw -= 4;\n\t\th -= 4;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	let w, h, k, count be integers with count = 0\nread w, h, k\nwhile k is decremented by 1\nincrement count by 2 * (w + h) - 4\ndecrement w by 4\ndecrement h by 4\nprint count and newline
"long long int w, h, k;\nint main() {\n\tcin >> w >> h >> k;\n\tlong long int _rs = 0;\n\twhile (k--) {\n\t\t_rs = _rs + 2 * (w + h) - 4;\n\t\tw -= 4;\n\t\th -= 4;\n\t}\n\tcout << _rs << ""\n"";\n\treturn 0;\n}"	create long long ints w, h, and k\nread w, h, and k\nmake long long int _rs = 0\nwhile k-- is truthy\nset _rs to _rs + 2 * (w + h) - 4\nset w to w - 4\nset h to h - 4\nprint _rs
"int main() {\n\tint w = 0, h = 0, k = 0;\n\tcin >> w >> h >> k;\n\tint cells = 0;\n\twhile (k--) {\n\t\tcells = cells + ((2 * (w + h)) - 4);\n\t\tw -= 4;\n\t\th -= 4;\n\t}\n\tcout << cells << ""\n"";\n\treturn 0;\n}"	"declare new integer variables w, h and k = 0\nread w, h and k from the input\ncreate new integer called cells = 0\nwhile k != 0, decrement it and continue the loop\nset cells to cells + ((2 * (w + h)) - 4)\nsubtract 4 from w\ndecrease h by 4\nprint cells and ""\n"""
const int maxn = 1e3 + 5;\nint w, h, k;\nint main() {\n\tcin >> w >> h >> k;\n\tint total = 0;\n\tint sum = 0;\n\tsum = (w + h - 2) * 2;\n\tfor (int i = 1; i <= k; i++) {\n\t\tint a = sum - 16 * (i - 1);\n\t\ttotal = total + a;\n\t}\n\tcout << total << endl;\n}	declare new constant integer called maxn = 1e3 + 5\ndeclare new int variables w, h and k\nread input to w, h and k\ncreate integer variable total = 0\ndeclare integer variable sum with value 0\nchange the value of sum to (w + h - 2) * 2\nin a for loop, change i from 1 to k inclusive\na is a new integer with value sum - 16 * (i - 1)\nassign total + a to total\nprint total
int main() {\n\tint w, h, k;\n\twhile (cin >> w >> h >> k) {\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < k; ++i) {\n\t\t\tsum += 2 * (w + h) - 4;\n\t\t\tw -= 4;\n\t\t\th -= 4;\n\t\t}\n\t\tcout << sum << '\n';\n\t}\n\treturn 0;\n}	make ints w, h, and k\nread w, h, k and while they're truthy\nmake integer sum = 0\nfor i = 0 to k exclusive\nadd 2 * (w + h) - 4 to sum\nsubstract 4 from w\nset h to h - 4\nprint sum
int main() {\n\tint w, h, k, value = 0;\n\tcin >> w >> h >> k;\n\tint deck = 0, it = 2;\n\tfor (int i = 1; i <= k; i++) {\n\t\tvalue = (((h - deck) * 2) + ((w - it) * 2)) + value;\n\t\tdeck = deck + 4;\n\t\tit = it + 4;\n\t}\n\tcout << value << endl;\n}	create integers w, h, k, and value = 0\nread w, h, and k\ncreate integers deck = 0 and it = 2\nfor i = 1 to k\nset value to (((h - deck) * 2) + ((w - it) * 2)) + value\nset deck to deck + 4\nset it to it + 4\nshow value
int main() {\n\tint w, h, k, sum = 0;\n\tcin >> w >> h >> k;\n\tfor (int q = 0; q < k; q++) {\n\t\tsum += ((2 * w) + (2 * h) - 4);\n\t\tw -= 4;\n\t\th -= 4;\n\t\tif (w <= 1 || h <= 1) break;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	let w, h, k, sum be integers with sum = 0\nread w, h, k\nfor q = 0 to k exclusive\nincrement sum by (2 * w) + (2 * h) - 4\ndecrement w by 4\ndecrement h by 4\nif w <= 1 or h <= 1 , stop\nprint sum and new line
int main() {\n\tlong long int h, w, k;\n\tcin >> h >> w >> k;\n\tlong long int g = 0;\n\twhile (k > 0) {\n\t\tg += h * 2 + (w - 2) * 2;\n\t\tk--;\n\t\th -= 4;\n\t\tw -= 4;\n\t\tif (h <= 0) { break; }\n\t\tif (w <= 0) { break; }\n\t}\n\tcout << g << '\n';\n\treturn 0;\n}	let h, w, k be long integers\nread h, w, k\nlet g be a long integer with g = 0\nwhile k is greater than 0\nincrement g by h * 2 + (w - 2) * 2\ndecrement k by 1\ndecrement h by 4\ndecrement w by 4\nif h <= 0 , stop\nif w <= 0 , stop\nprint g and newline
int main() {\n\tint n, a, count = 0;\n\tcin >> n >> a;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a % i == 0 && (a / i) <= n) { count++; }\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	create int n, a, count, set count to 0\nread n and a\nfor i=1 to n inclusive\nif a mod i =0 and (a / i) <= n, increment count\nprint count
int main() {\n\tlong long n, x;\n\tcin >> n >> x;\n\tint c = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (x % i == 0 and x <= n * i) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let n and z be long long variables\nget value of n and x\nlet c be integer = 0\nfor i = 1 to n inclusive\nif x modulo i is zero and x less than or equal to n * i then increment c\nprint c
int main() {\n\tlong long n;\n\tlong long x;\n\tcin >> n >> x;\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (x % i == 0 && x <= i * n) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	n = long long\nx = long long\nread n, x\ncnt = 0 = int\nfor i = 1 to n inclusive\nif x mod i = 0 and x <= i *n then increment cnt\nprint cnt
int main() {\n\tint n, x, r = 0;\n\tcin >> n >> x;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (x % i != 0) continue;\n\t\tint y = x / i;\n\t\tif (y <= n) r++;\n\t}\n\tcout << r << endl;\n\treturn 0;\n}	let n, x and r be ints where r = 0\nread from the input to n and x\nfor i = 1 to n inclusive\nskip the rest of the loop if x % i is not 0\ncreate integer variable y with value x / i\nif y <= n, increment r by one\nprint r
int main() {\n\tint n, x, count = 0;\n\tcin >> n >> x;\n\tif (x == 1) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (x % i == 0 && x / i <= n) count++;\n\t}\n\tcout << (x <= n ? count + 1 : count) << endl;\n\treturn 0;\n}	let n, x and count = 0 be integers\nread n and x\nif x equal to 1\nprint 1\nfor i = 2 to n inclusive\nif x modulo i is equal to 0 and x/i less then or equal to n then increment count\nif x less than or equal to n print count +1 or print count
int main() {\n\tlong long n, m;\n\twhile (cin >> n >> m) {\n\t\tint flag = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint k = m / i;\n\t\t\tif (m % i == 0 && k <= n) flag++;\n\t\t}\n\t\tcout << flag << endl;\n\t}\n}	let n, m be integers\nwhile read n , m\nthe integer value of flag = 0\nfor i = 1 to n inclusive\nthe integer value of k = m / i\nif m modulo i is equal to 0 and k <= n , increment flag by 1\nprint flag and newline
int main() {\n\tint a, b, c = 0;\n\tcin >> a >> b;\n\tif (a == 1 && b == 1) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tif (a == 1 && b == 0) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= a; i++) {\n\t\tif (b % i == 0 && b / i <= a) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let a, b, c be integers with c = 0\nread a , b\nif a is equal to 1 and b is equal to 1\nprint 1 and newline\nif a is equal to 1 and b is equal to 0\nprint 0 and newline\nfor i = 1 to a inclusive\nif b modulo i is equal to 0 and b / i <= a\nprint c and newline
int main() {\n\tlong long int tabeSize, num, i, cnt = 0;\n\tcin >> tabeSize >> num;\n\tfor (i = 1; i <= tabeSize; i++) {\n\t\tif (num % i == 0 && num / i <= tabeSize) cnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	let tabeSize, num, i and cnt be long long ints with cnt = 0\nread input to tabeSize and num\nstart for loop from i = 1 to tabeSize inclusive incrementing i\nincrement cnt if num % i = 0 and num / i <= tabeSize\nprint cnt
int main() {\n\tlong long int n, x, cnt = 0;\n\tcin >> n >> x;\n\tfor (int i = 1; i * i <= x; i++) {\n\t\tif (x % i == 0) {\n\t\t\tif (i == x / i && i <= n && x / i <= n) cnt++;\n\t\t\tif (i != x / i && i <= n && x / i <= n) cnt += 2;\n\t\t}\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	n, x, cnt = 0 be ints\nread n, x\nfor i =1, until i^2 <= x\nif x mod i = 0\nif i = x / i and i <= n and x / i <= n then increment cnt\nif i isn't x/i and i <= n and x/i <= n then increment cnt by 2\nprint cnt
int main() {\n\tlong long n, x;\n\tcin >> n >> x;\n\tint c = 0;\n\tif (x <= n) c++;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (x % i == 0 && x / i <= n) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	create long long n, x\nread n and x\nc=0\nif x <= n, increment c\nfor i=2 to n inclusive\nif x % i = 0 and x / i <= n, increment c\nprint c
int main() {\n\tint n, i, c, t, d = 0;\n\tcin >> n >> t;\n\tc = 0;\n\tfor (i = 1; i <= n; i++) {\n\t\tif (t % i == 0) {\n\t\t\td = t / i;\n\t\t\tif (d >= 1 && d <= n) { c++; }\n\t\t}\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let n, i, c, t, d be integers with d = 0\nread n , t\nc is equal to 0\nfor i = 1 to n inclusive\nif t modulo i is equal to 0\nd is equal to t / i\nif d >= 1 and d <= n , increment c by 1\nprint c and newline
int main() {\n\tlong long int a, b, c, d, e, f, g, h, i, j;\n\tvector<long long int> v, x, u;\n\tstring s, t;\n\twhile (cin >> a >> b) {\n\t\tfor (c = 1; c <= a; c++) { v.push_back(c); }\n\t\te = 0;\n\t\tf = a - 1;\n\t\tg = 0;\n\t\twhile (e <= f) {\n\t\t\tif (v[e] * v[f] == b && v[e] != v[f]) {\n\t\t\t\tg += 2;\n\t\t\t\tf--;\n\t\t\t} else if (v[e] * v[f] == b && v[e] == v[f]) {\n\t\t\t\tg += 1;\n\t\t\t\tf--;\n\t\t\t} else if (v[e] * v[f] < b) {\n\t\t\t\te++;\n\t\t\t} else {\n\t\t\t\tf--;\n\t\t\t}\n\t\t}\n\t\tcout << g << endl;\n\t\tv.clear();\n\t}\n\treturn 0;\n}	declare long long ints a, b, c, d, e, f, g, h, i and j\ndeclare vectors of long long integers s v, x and u\ncreate new strings s and t\nread a and b and keep looping\nfor c from 1 to a inclusive, add element = c to the end of v\nassign the new value = 0 to e\nchange f to a - 1\nassign 0 to g\nwhile e <= f\nif v[e] * v[f] = b and v[e] != v[f]\nadd 2 to g\ndecrement f by one\nelse if v[e] * v[f] = b and v[e] is equal to v[f]\nchange g to g + 1\ndecrement f\nelse if v[e] * v[f] is less than b\nincrement e by one\nelse\ndecrement f by one\nprint g\nclear vector v
int main() {\n\tint n, x;\n\tcin >> n >> x;\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (x % i == 0 && x / i <= n) { ans++; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare new integers n and x\nread n and x from the user input\ndeclare new integer called ans with value 0\nfor i from 1 to n inclusive\nincrement ans if x modulo i = 0 and x / i <= n\nprint ans
int main() {\n\tint i, j, k, n, m, ans = 0, mn, count = 0;\n\tcin >> n >> m;\n\tmn = min(n, m);\n\tfor (i = 1; i <= mn; i++)\n\t\tif (m % i == 0 && m / i <= n) count++;\n\tcout << count << endl;\n\treturn 0;\n}	create ints i, j, k, n, m, ans, mn and count with ans and count = 0\nread user input to n and m\nchange the value of mn to min of n and m\nin a for loop, change i from 1 to mn inclusive incrementing i\nif m % i = 0 and m / i <= n, increment count\nprint count to the standard output
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (k % i == 0 && i * 1LL * n >= k) { cnt++; }\n\t}\n\tcout << cnt << endl;\n}	create new ints n and k\nread standard input to n and k\ndefine integer cnt = 0\nfor integer i = 1 to n inclusive\nincrement cnt if k % i = 0 and i * 1LL * n >= k\nprint cnt
"int main() {\n\tlong long int n, x, occurances = 0;\n\tcin >> n >> x;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (x % i == 0 && x / i <= n) { occurances++; }\n\t}\n\tcout << occurances << ""\n"";\n\treturn 0;\n}"	"define long long ints n, x and occurances with occurances = 0\nread n and x\nin a for loop, change i from 1 to n inclusive incrementing i\nif x % i = 0 and x / i <= n, increment occurances\nprint occurances and ""\n"""
int i, j;\nint cnt(int n) {\n\tint ans = 1, res;\n\tfor (int i = 2; i * i <= n; i++) {\n\t\tres = 0;\n\t\twhile (n % i == 0) {\n\t\t\tn /= i;\n\t\t\tres++;\n\t\t}\n\t\tans *= res + 1;\n\t}\n\treturn ans;\n}\nint main() {\n\tint n, x, ans = 0;\n\tcin >> n >> x;\n\tfor (i = 1; i * i <= x && i <= n; i++) {\n\t\tif (x % i) continue;\n\t\tif (x / i <= n) { ans += 2; }\n\t\tif (i * i == x) ans--;\n\t}\n\tcout << ans << endl;\n}	i, j = int\nin function cnt taking int n and returning int\nans, res = int with ans = 1\niterate i from 2 while i * i <= n\nset res to 0\nloop while n is a multiple of i\nset n to n / i\nincrement res\nset ans to ans* (res + 1)\nreturn ans\nn, x, ans = int with ans = 0\nread n then x\niterate i from 1 while i * i <= x and i <= n\nif x is not a multiple of i continue\nif x / i <= n increment ans by 2\nif i * i is x decrement ans\nprint ans
int main() {\n\tlong long n, t, cont = 0;\n\tcin >> n >> t;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (t % i == 0) {\n\t\t\tif (t / i >= 1 && t / i <= n) { cont++; }\n\t\t}\n\t}\n\tcout << cont << endl;\n\treturn 0;\n}	create long long n, t, cont, set cont to 0\nread na dn t\nfor i=1 to n inclusive\nif t mod i =0\nif t / i >= 1 and t / i <= n, increment cont\nprint cont
int main() {\n\tlong long int n, x, i, cnt = 0;\n\tcin >> n >> x;\n\tfor (i = 1; i <= n; i++) {\n\t\tif (x % i == 0 && x <= (i * n)) cnt++;\n\t}\n\tcout << cnt << endl;\n}	create long long int n, x, i, cnt, set cnt to 0\nread n and x\nfor i=0 to n inclusive\nif x mod i=0 and x <= (i * n), increment cnt\nprint cnt
int main() {\n\tint n, k;\n\tint a[105];\n\tcin >> n >> k;\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 0) break;\n\t\tif (k > 0) {\n\t\t\tk--;\n\t\t\tans++;\n\t\t} else if (a[i] == a[i - 1])\n\t\t\tans++;\n\t\telse\n\t\t\tbreak;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare ints n and k\na is a new array of integers with 105 elements\nread from the input to n and k\ncreate integer ans = 0\nstart for loop from i = 0 to n exclusive incrementing i\nread user input to a[i]\nif a[i] is equal to 0, break\nif k is greater than 0\ndecrement k\nincrement ans by one\nelse if a[i] is equal to a[i - 1]\nincrement ans by one\nelse\nstop the loop\nprint ans
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint prev, next, cnt = 0;\n\tcin >> prev;\n\tint total_cnt = 0;\n\tif (prev) {\n\t\ttotal_cnt = 1;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tcin >> next;\n\t\t\tif (!next) break;\n\t\t\tif (prev != next) {\n\t\t\t\tif (total_cnt + 1 > k) break;\n\t\t\t}\n\t\t\ttotal_cnt++;\n\t\t\tprev = next;\n\t\t}\n\t}\n\tcout << total_cnt << endl;\n\treturn 0;\n}	create int n and k\nread n and k\ncreate int prev, next, cnt, set cnt to 0\nread prev\nset total_cnt = 0\nif prev different from 0\ntotal_cnt = 1\nfor i=1 to n exclusive\nread next\nif next=0, break\nif prev different from next\nif total_cnt + 1 > k, break\nincrement total_cnt\nset prev to nect\nprint total_cnt
int main() {\n\tint n, k, f = 1, a, count = 0, temp;\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\tif (f > k && temp != a)\n\t\t\tbreak;\n\t\telse if (a > 0)\n\t\t\tcount++;\n\t\ttemp = a;\n\t\tf++;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	create ints n, k, f, a, count and temp where count = 0 and f = 1\nread input to n and k\nin a for loop, change i from 0 to n exclusive incrementing i\nread from the input to a\nif f > k and temp != a\nbreak the loop\nelse if a is greater than 0\nincrement count by one\nassign the new value = a to temp\nincrement f by one\nprint count
int main() {\n\tint i, n, m, x;\n\tcin >> n >> m;\n\tint a[n];\n\tfor (i = 1; i <= n; i++) { cin >> a[i]; }\n\tx = 0;\n\tfor (i = 1; i <= n; i++) {\n\t\tif ((a[i] >= a[m]) && (a[i] > 0)) x++;\n\t}\n\tcout << x << endl;\n\treturn 0;\n}	i, n, m, x = int\nread n then m\na = int array of size n\nfor i = 1 to n inclusive read a[i]\nset x to 0\nfor i = 1 to n inclusive\nif (a[i] >= a[m]) and (a[i] > 0) increment x\nprint x
int main() {\n\tint n, k, a[50] = {0};\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tif (a[k - 1] != 0) {\n\t\twhile (a[k - 1] == a[k]) { k++; }\n\t\tcout << k << endl;\n\t} else {\n\t\tif (k == 1)\n\t\t\tcout << 0 << endl;\n\t\telse {\n\t\t\tk--;\n\t\t\twhile (a[k - 1] == 0) k--;\n\t\t\tcout << k << endl;\n\t\t}\n\t}\n\treturn 0;\n}	let n, k be integers and 50th element of integer array a is 0\nread n and k\nfor i = 0 to n exclusive, read a[i]\nif a[k - 1] is not equal to 0\nwhile a[k - 1] is equal to a[k] , increment k by 1\nprint k and newline\nelse do the following\nif k is equal to 1\nprint 0 and newline\nelse do the following\nk is decremented by 1\nwhile a[k - 1] is equal to 0, decrement k by 1\nprint k and newline
int n, k, a, b;\nint main() {\n\tcin >> n >> k;\n\tfor (int i = 0; i < k; i++) {\n\t\tcin >> a;\n\t\tif (a == 0) {\n\t\t\tcout << i << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (int i = k; i < n; ++i) {\n\t\tcin >> b;\n\t\tif (b != a) {\n\t\t\tcout << i << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << n << endl;\n\treturn 0;\n}	n, k, a, b = long long integers\nRead n and k\nfor i = 0 to n exclusive\nRead a\nif a is 0\nprint i and a new line\nfor i = k to n exclusive\nRead b\nif b is not a\nprint i and a new line\nprint n and a new line
int main() {\n\tint ara[10000];\n\tint n, k;\n\tcin >> n >> k;\n\tint cnt = 0;\n\tfor (int i = 0; i < n; i++) { cin >> ara[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (ara[i] >= ara[k - 1] && ara[i] > 0) cnt++;\n\t}\n\tcout << cnt << endl;\n}	ara = integer array of size 10000\nn, k = integers\nread n, k\ncnt = integer with cnt = 0\nfor i = 0 to n exclusive, read ara[i]\nfor i = 0 to n exclusive\nif (ara[i] >= ara[k - 1] and ara[i] > 0), increment cnt\nprint cnt
int x[1000001];\nint main() {\n\tint k, n, points = 0;\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) { cin >> x[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (x[i] >= x[k - 1] && x[i] != 0) points++;\n\t}\n\tcout << points << endl;\n\treturn 0;\n}	x = integer array of size 1000001\nk, n, points = integers with points = 0\nread n, k\nfor i = 0 to n exclusive, read x[i]\nfor i = 0 to n exclusive\nif (x[i] >= x[k - 1] and x[i] is not 0) increment points\nprint points
"int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint a[n];\n\t;\n\tint i, t1;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (k == i + 1) t1 = a[i];\n\t}\n\tsort(a, a + n, greater<int>());\n\tint c = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (a[i] != 0 && a[i] >= t1) c++;\n\t}\n\tif (a[0] == 0)\n\t\tcout << ""0\n"";\n\telse\n\t\tcout << c << ""\n"";\n}"	"n, k = int\nread n then k\na = int array of size n\nnoop\ni, 1 = int\nfor i = 0 to n\nrad a[i]\nif k is i + 1 set t1 to a[i]\nsort a using greater of type int\nc = int with c = 0\nfor i = 0 to n\nif a[i] is not 0 and a[i] >= t1 increment c\nif a[0] is 0\nprint ""0""\nelse\nprint c"
int main() {\n\tint n, k, i, A[110], c = 0;\n\tcin >> n >> k;\n\tfor (i = 1; i <= n; i++) { cin >> A[i]; }\n\tfor (i = 1; i <= n; i++) {\n\t\tif (A[i] >= A[k] && A[i] > 0) { c++; }\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	declare integers n, k, i, c = 0, integer array A size 110\nread n and k\nfor i= 1 to n inclusive, read A[i]\nfor i = 1 to n inclusive\nif A[i] is greater than or equal to A[k]] and A[i] is greater than 0, increment c\nprint c and newline
int main() {\n\tint n, k, i, a[100], cnt = 0;\n\tcin >> n >> k;\n\tfor (i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (i = 1; i <= n; i++) {\n\t\tif (a[i] >= a[k] && a[i] > 0) cnt++;\n\t}\n\tcout << cnt << endl;\n}	create int n, k, i, a[100], cnt. set cnt to 0\nread n and k\nfor i=1 to n inclusive, read a[i]\nfor i=1 to n inclusive\nif a[i] >= a[k] and a[i] > 0, increment cnt\nprint cnt
int n, k, a[1000] = {}, ans = 0;\nint main() {\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] >= a[k - 1] and a[i] > 0) { ans++; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create integers n, k and ans with ans = 0; create an array of integers a with size 1000 filled with 0\nread n and k\nread n elements into a\nchange i in a loop from 0 to n exclusive\nincrement ans if a[i] >= a[k - 1] and a[i] > 0\nprint ans to the standard output
int main() {\n\tint a[101], n, c, s = 0;\n\tcin >> n >> c;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] > 0 && a[i] >= a[c - 1]) s += 1;\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	declare integer array a size 101, integers n, c, s = 0\nread n and c\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to n exclusive\nif a[i] is greater than 0 and a[i] is greater than or equal to a[c-1], increment s by i\nprint s and newline
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tint *a = new int[n];\n\tint output = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (i <= (k - 1) && a[i] > 0)\n\t\t\toutput++;\n\t\telse if (i > (k - 1) && a[i] > 0 && a[i] == a[k - 1])\n\t\t\toutput++;\n\t\telse\n\t\t\tbreak;\n\t}\n\tcout << output << endl;\n\treturn 0;\n}	n, k = int\nread n and k\nlet a pointer be a new int array of length n\noutput = 0 = int\nfor i = 0 to n exclusive\nread a at i\nif i <= k-1 and a[i] is positive\nincrement output\nelse if i > k-1 and a[i] is positive and a[i] = a[k-1]\nincrement output\nelse\nexit loop\nprint output
int main() {\n\tint n, k, *arr, sum = 0;\n\tcin >> n >> k;\n\tarr = new int[n];\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (arr[k - 1] == 0) {\n\t\t\tif (arr[i] > arr[k - 1]) { sum += 1; }\n\t\t} else {\n\t\t\tif (arr[i] >= arr[k - 1]) sum += 1;\n\t\t}\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	create new int variables n, k and sum with sum = 0 and a new int pointer *arr\nread input to n and k\nset arr to point to the new integer array with n elements\nread n elements into arr\nin a for loop, change i from 0 to n exclusive\nif arr[k - 1] = 0\nif arr[i] is greater than arr[k - 1], add 1 to sum\nelse\nif arr[i] >= arr[k - 1], change sum to sum + 1\nprint sum
int x, y, ar[100];\nint main() {\n\tint c = 0;\n\tcin >> x >> y;\n\tfor (int i = 0; i < x; i++) {\n\t\tcin >> ar[i];\n\t\tif (ar[i] >= ar[y - 1] && ar[i] > 0) c++;\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	create ints x and y and int array ar of size 100\nmake integer c = 0\nread x and y\nfor i = 0 to x exclusive\nread ar[i]\nif ar[i] is greater than or equal to ar[y - 1] and ar[i] is greater than 0\nprint c
long long n, k;\nint main() {\n\tcin >> n >> k;\n\tif (k % n == 0)\n\t\tcout << k / n << endl;\n\telse\n\t\tcout << k / n + 1 << endl;\n\treturn 0;\n}	create long long n, k\nread n and k\nif k mod n=0\nprint k/n\nelse\nprint k/n + 1
int main() {\n\tlong long n, k;\n\twhile (cin >> n >> k) {\n\t\tlong long ans = k / n;\n\t\tif (k % n) ans++;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n,k=long long\nwhile read n,k\nans=k/n\nif k is not multiple of n increment ans\nprint ans
int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif (m % n != 0)\n\t\tcout << m / n + 1 << endl;\n\telse\n\t\tcout << m / n << endl;\n}	create new long longs n and m\nread user input to n and m\nif m % n != 0\nprint m / n + 1 to the output\nelse\nprint m / n
int main() {\n\tlong long n, k, h;\n\tcin >> n >> k;\n\tif (k % n == 0)\n\t\tcout << k / n << endl;\n\telse\n\t\tcout << k / n + 1 << endl;\n}	create long long n, k, h\nread n and k\nif k mod n=0\nprint k/n\nelse\nprint k/n + 1
"int main() {\n\tlong long int n, m;\n\tcin >> n >> m;\n\tif (m <= n) {\n\t\tcout << ""1"" << endl;\n\t} else {\n\t\tif (m % n == 0) {\n\t\t\tcout << m / n << endl;\n\t\t} else {\n\t\t\tcout << m / n + 1 << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"n, m = long long int\nread n then m\nif m <= n\nprint ""1""\nelse\nif m is a multiple of n\nprint m / n\nelse\nprint m / n + 1"
int main() {\n\tlong long int n, k, h;\n\tcin >> n >> k;\n\tif (k <= n)\n\t\th = 1;\n\telse {\n\t\tif ((k % n) != 0)\n\t\t\th = k / n + 1;\n\t\telse\n\t\t\th = k / n;\n\t}\n\tcout << h << endl;\n\treturn 0;\n}	n,k,h=long long int\nread n,k\nif k<=n\nh=1\nelse\nif k is not multiple of n\nh=k/n+1\nelse\nh=k/n\nprint h
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tlong long counts = 0;\n\tif (k % n) counts++;\n\tcounts += k / n;\n\tcout << counts << endl;\n}	n, k = long long\nread n then k\ncounts = long long with counts = 0\nif k is not a multiple of n increment counts\nincrement counts by k / n\nprint counts
const int MAXN = 1e4 + 20;\nconst int INF = 1e9 + 100;\nconst int MOD = 1e9;\nint main() {\n\tlong long n, k;\n\twhile (cin >> n >> k) { cout << (k + n - 1) / n << endl; }\n}	MAXN = const int = 1e4 + 20\nconst int = INF = 1e9 + 100\nMOD = const int = 1e9\nn, k = long long\nwhile read n and k, print (k + n - 1) / n
int main() {\n\tlong long int n, k, h;\n\tcin >> n >> k;\n\th = (k / n);\n\tif (h != 0) {\n\t\tif (k % n == 0) {\n\t\t\tcout << h << endl;\n\t\t} else {\n\t\t\tcout << h + 1 << endl;\n\t\t}\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	n, k, h =integers\nRead n and k\nset h to k / n\nif h is not equal to 0\nif k modulo n is equal to 0\nprint h and a new line\nelse do the following\nprint h + 1 and a new line\nelse do the following\nprint 1 and a new line
int main() {\n\tlong long n, k;\n\twhile (cin >> n >> k) {\n\t\tif (k % n == 0)\n\t\t\tcout << k / n << endl;\n\t\telse\n\t\t\tcout << k / n + 1 << endl;\n\t}\n\treturn 0;\n}	create new long longs n and k\nloop, reading n and k from the input\nif k % n = 0\nprint k / n\nelse\nprint k / n + 1
int main() {\n\tlong long n, k;\n\twhile (cin >> n >> k) {\n\t\tif (k % n == 0)\n\t\t\tcout << k / n << endl;\n\t\telse\n\t\t\tcout << k / n + 1 << endl;\n\t}\n\treturn 0;\n}	n, k =integers\nwhile reading values n, k\nif k modulo n is 0\nprint k / n and a new line\nelse do the following\nprint k / n + 1 and a new line
int main() {\n\tlong long int n, k, h;\n\twhile (cin >> n >> k) {\n\t\tif (n == 0 || k == 0) break;\n\t\th = k / n;\n\t\tif (k % n == 0)\n\t\t\tcout << h << endl;\n\t\telse\n\t\t\tcout << h + 1 << endl;\n\t}\n\treturn 0;\n}	n, k, h =integers\nwhile reading values n, k, h\nif n is 0 OR k is 0, then Terminate the loop\nset h to k / n\nif k modulo n is 0\nprint h and a new line\nelse do the following\nprint h + 1 and a new line
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n >= k)\n\t\tcout << ""1"" << endl;\n\telse if (k % n == 0)\n\t\tcout << k / n << endl;\n\telse\n\t\tcout << k / n + 1 << endl;\n\treturn 0;\n}"	let n, k be long integers\nread n , k\nif n >= k\nprint 1 and newline\nelse if k modulo n equals 0\nprint k / n and newline\nelse do the following\nprint k / n + 1 and newline
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (n >= k)\n\t\tcout << 1 << endl;\n\telse {\n\t\tif (k % n == 0)\n\t\t\tcout << k / n << endl;\n\t\telse\n\t\t\tcout << k / n + 1 << endl;\n\t}\n\treturn 0;\n}	n, k = long long\nread n then k\nif n >= k\nprint 1\nelse\nif k is a multiple of n\nprint k / n\nelse\nprint k / n + 1
int main() {\n\tlong long n, s;\n\tcin >> n >> s;\n\tcout << (s / n) + (s % n != 0) << endl;\n\treturn 0;\n}	define new long longs n and s\nread n and s from the user input\nprint (s / n) + (1 if s modulo n != 0, or 0 otherwise)
int main() {\n\tint a;\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (k <= n) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tif (k % n == 0) {\n\t\t\tcout << k / n << endl;\n\t\t} else {\n\t\t\tcout << k / n + 1 << endl;\n\t\t}\n\t}\n\treturn 0;\n}	a=int\nn,k=long long\nread n,k\nif k <= n\nprint 1\nelse\nif k is multiple of n\nprint k/n\nelse\nprint k/n+1
long long n, k;\nint main() {\n\twhile (cin >> n >> k) {\n\t\tif (k <= n)\n\t\t\tcout << 1 << endl;\n\t\telse if (k % n == 0)\n\t\t\tcout << k / n << endl;\n\t\telse if (k % n != 0)\n\t\t\tcout << k / n + 1 << endl;\n\t}\n}	create long long n, k\nwhile read n and k\nif k<= n\nprint 1\nelse if k mod n =0\nprint k/n\nelse if k mod n different from 0\nprint k/n +1
"long long n, k;\nlong long cl(long long n, long long k) {\n\tif (n % k == 0) return n / k;\n\treturn n / k + 1;\n}\nint main() {\n\tcin >> n >> k;\n\tcout << cl(k, n) << ""\n"";\n\treturn 0;\n}"	n,l=long long\nfunction c1 (get long long n and k, return long long)\nif n is multiple of k return n/k\nreturn n/k+1\nread n\nprint cl(k, n)
long long n, k;\nint main() {\n\twhile (cin >> n >> k) {\n\t\tlong long ans = k / n;\n\t\tif (k % n) ans++;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n, k = integers\nwhile reading values n, k\nans = integer, set to k / n\nif k modulo n, then increment ans\nprint ans and a new line
int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif (n >= m)\n\t\tcout << 1 << endl;\n\telse {\n\t\tif (m % n == 0)\n\t\t\tcout << m / n << endl;\n\t\telse\n\t\t\tcout << m / n + 1 << endl;\n\t}\n\treturn 0;\n}	create new long longs n and m\nread n and m from the user input\nif n >= m\nprint 1\nelse\nif m % n = 0\nprint m / n\nelse\nprint m / n + 1
int main() {\n\tlong long n, k;\n\tfor (; cin >> n >> k;) {\n\t\tif (k % n == 0)\n\t\t\tcout << k / n << endl;\n\t\telse\n\t\t\tcout << k / n + 1 << endl;\n\t}\n\treturn 0;\n}	n, k =integers\nRead n and k\nif k modulo n is 0\nprint k / n and a new line\nelse do the following\nprint k / n + 1 and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tif ((n % 3) == 1) n--;\n\tif ((n % 3) == 2) n++;\n\tn /= 3;\n\tint feet = n / 12;\n\tint inch = n % 12;\n\tcout << feet << "" "" << inch << endl;\n\treturn 0;\n}"	"n = integer\nread n\nif ((n modulo 3) is 1), decrement n\nif ((n modulo 3) is 2), increment n\nn = n / 3\nfeet = integer with feet = n / 12\ninch = integer with inch = n modulo 12\nprint feet,"" "",inch"
"int main() {\n\tint n;\n\tcin >> n;\n\tint ans1 = n / 3;\n\tn %= 3;\n\tif (n >= 2) { ans1++; }\n\tint ans2 = ans1 / 12;\n\tans1 %= 12;\n\tcout << ans2 << "" "" << ans1 << endl;\n\treturn 0;\n}"	let n be a integer\nread n\nlet ans1 be a integer with ans1 = n / 3\nn is equal to n modulo 3\nif n >= 2 , increment ans1 by 1\nlet ans2 be a integer with ans2 = ans1 / 12\nans1 is equal to ans1 modulo 12\nprint ans2 and space and ans1 and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tint inches = n / 3;\n\tif (n % 3 == 2) inches += 1;\n\tcout << inches / 12 << "" "" << inches % 12 << endl;\n}"	let n an int\nread n\nlet inches an int with value n / 3\nif n mod 3 is 2, add 1 to inches\nprint inches / 12, followed by a space, followed by inches mod 12
"int main() {\n\tint n;\n\tcin >> n;\n\tint k = (n + 1) / 3;\n\tcout << k / 12 << "" "" << k % 12 << endl;\n\treturn 0;\n}"	let n be a integer\nread n\nlet k be a integer with k = (n + 1) / 3\nprint k / 12 and space and k modulo 12 and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tint a = n / 36;\n\tint b = (n - 36 * a) / 3;\n\tint c = n - 36 * a - b * 3;\n\tif (c == 2) b++;\n\tif (b == 12) {\n\t\ta++;\n\t\tb = 0;\n\t}\n\tcout << a << "" "" << b << endl;\n\treturn 0;\n}"	"create new integer called n\nread standard input to n\ndefine new integer variable a = n / 36\ndefine new integer b with value (n - 36 * a) / 3\nc is a new integer variable with value n - 36 * a - b * 3\nif c = 2, increase b by 1\nif b = 12\nadd 1 to a\nassign 0 to b\nprint a, "" "" and b"
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << (n + 1) / 36 << "" "";\n\tn %= 36;\n\tif ((n + 1) / 36 <= n / 36)\n\t\tcout << (n + 1) / 3 << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}"	"n is a new integer\nread user input to n\nprint (n + 1) / 36 and "" ""\nchange the value of n to n modulo 36\nif (n + 1) / 36 <= n / 36\nprint (n + 1) / 3\nelse\nprint 0 to the standard output"
int main() {\n\tint n;\n\tcin >> n;\n\tif ((n + 1) % 36 == 0) n++;\n\tint ft = n / 36;\n\tn %= 36;\n\tint in;\n\tif (n % 3 == 0 || (n - 1) % 3 == 0)\n\t\tin = n / 3;\n\telse\n\t\tin = n / 3 + 1;\n\tcout << ft << ' ' << in << '\n';\n\treturn 0;\n}	n = integer\nread n\nif ((n + 1) modulo 36 is 0), increment n\nft = integer with ft = n / 36\nn = n modulo 36\nin = integer\nif (n modulo 3 is 0 or (n - 1) modulo 3 is 0)\nin = n / 3\nelse\nin = n / 3 + 1\nprint ft,' ',in
"int main() {\n\tint n;\n\tcin >> n;\n\tint inches = n / 3 + (n % 3 > 1);\n\tcout << inches / 12 << "" "" << inches % 12 << ""\n"";\n\treturn 0;\n}"	"create integer n\nread standard input to n\ndefine new integer inches with value n / 3 + (n modulo 3 > 1)\nprint inches / 12, "" "", inches modulo 12 and ""\n"""
int main() {\n\tint n;\n\tcin >> n;\n\tint c = n / 3;\n\tif (n % 3 == 2) { c += 1; }\n\tcout << c / 12 << ' ' << c % 12 << endl;\n\treturn 0;\n}	n =integer\nRead n\nc = integer, set to n / 3\nif n modulo 3 is 2, then set c to c + 1\nprint c / 12, c modulo 12 and a new line
int main() {\n\tint n, foot, inch, x;\n\tcin >> n;\n\tfoot = n / 36;\n\tx = n % 36;\n\tif (x == 35) {\n\t\tfoot++;\n\t\tinch = 0;\n\t\tcout << foot << ' ' << inch << endl;\n\t} else {\n\t\tinch = x / 3;\n\t\tif (x % 3 == 2) inch++;\n\t\tcout << foot << ' ' << inch << endl;\n\t}\n\treturn 0;\n}	n, foot, inch, x =integers\nRead n\nset foot to n / 36\nset x to n modulo 36\nif x is equal to 35\nincrement foot\nset inch to 0\nprint foot , inch and a new line\nelse do the following\nset inch to x / 3\nif x modulo 3 is 2, then increment inch\nprint foot , inch and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tint k = (n + 1) / 3;\n\tcout << k / 12 << ' ' << k % 12 << endl;\n\treturn 0;\n}	n = integer\nread n\nk = integer with k = (n + 1) / 3\nprint k / 12,' ',k modulo 12
"int main() {\n\tlong long m;\n\tdouble n;\n\tcin >> n;\n\tm = (long long)round(n / 3);\n\tcout << m / 12 << "" "" << m % 12 << endl;\n}"	m=long long\nn=double\nread n\nm=round(n/3)\nprint m/12, space, m modulo 12
"int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long ft = (n / 36), cm = n - (36 * ft);\n\tlong long in = cm / 3;\n\tif (cm % 3 == 2) in++;\n\tif (in == 12) ft++, in = 0;\n\tcout << ft << "" "" << in << endl;\n}"	n = long long\nread n\nft, cm = long long with ft = (n / 36) and cm =n - (36 * ft)\nin = long long with in = cm / 3\nif cm mod 3 is 2 increment in\nif in is 12 increment ft then set in to 0\nprint ft and in
"int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint inches = (n + 1) / 3;\n\t\tint foot = (inches) / 12;\n\t\tcout << foot << "" "";\n\t\tif (inches - foot * 12 <= 0) {\n\t\t\tcout << ""0"" << endl;\n\t\t} else\n\t\t\tcout << inches - foot * 12 << endl;\n\t}\n}"	"new integer variable n\nread n and keep looping\nnew integer variable inches with value (n+1) /3\ndefine new integer foot = inches / 12\nprint foot and "" ""\nif inches - foot * 12 <= 0\nprint ""0""\nelse\nprint inches - foot * 12"
"int main() {\n\tint n, x, y;\n\tcin >> n;\n\tx = n / 36;\n\tn = n - x * 36;\n\tif (n % 3 == 2)\n\t\ty = n / 3 + 1;\n\telse\n\t\ty = n / 3;\n\tif (y == 12)\n\t\tcout << x + 1 << "" "" << 0 << endl;\n\telse\n\t\tcout << x << "" "" << y << endl;\n}"	n, x, y = integers\nread n\nset x to n / 36\nset n to n - x*36\nif n mod 3 equals 2\nset y to n / 3 + 1\nelse\nset y to n / 3\nif y equals 12\nprint x+1 space 0\nelse\nprint x space y
"int main() {\n\tint n;\n\tcin >> n;\n\tint inch = 0;\n\tint feet = n / 36;\n\tn -= (n / 36) * 36;\n\tif (n == 35)\n\t\t++feet;\n\telse {\n\t\tinch = n / 3;\n\t\tn -= (n / 3) * 3;\n\t\tif (n == 2) ++inch;\n\t}\n\tcout << feet << "" "" << inch << endl;\n\treturn 0;\n}"	"create integer n\nread n\nmake int inch = 0\ncreate integer feet = n / 36\nsubtract (n / 36) * 36 from n\nif n is 35\nincrement feet\nelse do\nset inch to n / 3\nset n to n - (n / 3) * 3\nif n is equal to 2, increment inch\nshow feet, "" "", and inch"
const int INF = 0x3f3f3f3f;\nint main() {\n\tlong long i, j, k;\n\tlong long n, m;\n\tcin >> n;\n\tk = n % 3;\n\tn /= 3;\n\tif (k == 2) n++;\n\tcout << n / 12 << ' ' << n % 12 << endl;\n\treturn 0;\n}	define new integer constant INF with value 0x3f3f3f3f\ndeclare long long variables i, j and k\ncreate new long longs n and m\nread input to n\nassign n modulo 3 to k\ndivide n by 3\nif k is equal to 2, increment n\nprint n / 12, ' ' and n modulo 12 to the output
"int main() {\n\tint n;\n\tcin >> n;\n\tint m = n / 36;\n\tint q = (n % 36) / 3;\n\tint mo = (n % 36) % 3;\n\tif (mo == 2) q += 1;\n\tif (q == 12) q = 0, m++;\n\tcout << m << "" "" << q << endl;\n}"	"declare new integer variable n\nread n from the user input\ncreate new integer m = n / 36\ndefine integer q with value (n % 36) / 3\nmo is a new integer with value n modulo 36 modulo 3\nif mo is equal to 2, add 1 to q\nassign 0 to q and increment m by one, if q = 12\nprint m, "" "" and q"
"int main() {\n\tlong long n, inches, feets;\n\tcin >> n;\n\tinches = n / 3;\n\tif (n % 3 == 2) inches += 1;\n\tfeets = inches / 12;\n\tinches -= feets * 12;\n\tcout << feets << "" "" << inches << endl;\n\treturn 0;\n}"	"create long longs n, inches and feets\nread variable n from the input\nset inches to n / 3\nif n modulo 3 is 2, add 1 to inches\nchange feets to inches / 12\nsubtract feets * 12 from inches\nprint feets, "" "" and inches"
"int main() {\n\tint n, ft, inch, r;\n\tcin >> n;\n\tft = n / 36;\n\tinch = (n % 36) / 3;\n\tr = (n % 36) % 3;\n\tif (r > 1) inch++;\n\tif (inch == 12) {\n\t\tft++;\n\t\tinch = 0;\n\t}\n\tcout << ft << "" "" << inch << endl;\n\treturn 0;\n}"	"define ints n, ft, inch and r\nread variable n from the input\nassign the new value = n / 36 to ft\nset inch to (n modulo 36) / 3\nchange the value of r to (n % 36) % 3\nincrement inch if r is greater than 1\nif inch is 12\nadd one to ft\nset inch to 0\nprint ft, "" "" and inch to the standard output"
int main() {\n\tmap<int, int> m;\n\tint t, x, c = 1, y = 1;\n\tcin >> t;\n\tbool hard = false;\n\tfor (int i = 0; i < t; i++) {\n\t\tcin >> x;\n\t\tif (m[x] >= c) {\n\t\t\tm[x]++;\n\t\t\tif (m[x] > y) y = m[x];\n\t\t} else {\n\t\t\tm[x] = c;\n\t\t\tif (m[x] > y) y = m[x];\n\t\t}\n\t}\n\tcout << t - y << endl;\n\treturn 0;\n}	let m be a map from integers to integers\ncreate ints t, x, c and y with c and y = 1\nread t\ncreate boolean variable hard with value false\nstart for loop from i = 0 to t exclusive incrementing i\nread variable x from the input\nif m[x] >= c\nincrement m[x] by one\nif m[x] is greater than y, assign the new value = m[x] to y\nelse\nchange the value of m[x] to c\nif m[x] is greater than y, set y to m[x]\nprint t - y
int main() {\n\tint n;\n\tcin >> n;\n\tint temp, j = 0, d = 0, t = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> temp;\n\t\tif (temp == 1) {\n\t\t\tj++;\n\t\t} else if (temp == 2) {\n\t\t\td++;\n\t\t} else\n\t\t\tt++;\n\t}\n\ttemp = max(max(j, t), max(j, d));\n\tcout << n - temp << endl;\n\treturn 0;\n}	n =integer\nRead n\nj, d, t = integers with all set to 0\nfor i = 0 to n exclusive\nRead temp\nif temp is equal to 1\nincrement j\nelse if temp is equal to 2\nincrement d\nelse do the following\nincrement t\nset maximum value of (maximum value of (j and t) and maximum value of(j and d))\nprint n - temp and a new line
int v[5];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tv[x]++;\n\t}\n\tint maxi = max(v[1], max(v[2], v[3]));\n\tcout << n - maxi << endl;\n\treturn 0;\n}	v is a new array of integers with 5 elements\ncreate new integer variable n\nread variable n from the input\nincrementi i in a for loop, changing it from 1 to n inclusive\ncreate new integer called x\nread from the input to x\nincrement v[x] by one\nmaxi is a new integer variable = max of v[1] and max(v[2], v[3])\nprint n - maxi
int main() {\n\tint n;\n\tcin >> n;\n\tint a[1000005];\n\tint n1, n2, n3;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1)\n\t\t\tn1++;\n\t\telse if (a[i] == 2)\n\t\t\tn2++;\n\t\telse\n\t\t\tn3++;\n\t}\n\tif ((n1 >= n2) && (n1 >= n3))\n\t\tcout << n - n1 << endl;\n\telse if ((n2 >= n1) && (n2 >= n3))\n\t\tcout << n - n2 << endl;\n\telse\n\t\tcout << n - n3 << endl;\n\treturn 0;\n}	let n be a integer\nread n\na = array of integers of length 1000005\nlet n1, n2, n3 be integers\nfor i = 0 to n exclusive\nread a[i]\nif a[i] is equal to 1\nincrement n1 by 1\nelse if a[i] is equal to 2\nincrement n2 by 1\nelse do the following\nincrement n3 by 1\nif (n1 >= n2) and (n1 >= n3)\nprint n - n1 and newline\nelse if (n2 >= n1) and (n2 >= n3)\nprint n - n2 and newline\nelse do the following\nprint n - n3 and newline
int main() {\n\tint num[4] = {0};\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint tmp;\n\t\tcin >> tmp;\n\t\tnum[tmp]++;\n\t}\n\tif (num[1] >= num[2] && num[1] >= num[3])\n\t\tcout << num[2] + num[3] << endl;\n\telse if (num[2] >= num[1] && num[2] >= num[3])\n\t\tcout << num[1] + num[3] << endl;\n\telse\n\t\tcout << num[1] + num[2] << endl;\n\treturn 0;\n}	set num[4] = {0}\ncreate int n\nread n\nfor i=1 to n inclusive\ncreate int tmp\nread tmp\nincrement num[tmp]\nif num[1] >= num[2] and num[1] >= num[3]\nprint num[2] + num[3]\nelse if num[2] >= num[1] and num[2] >= num[3]\nprint num[1] + num[3]\nelse\nprint num[1] + num[2]
int freq[3];\nint main() {\n\tint a, b, mx;\n\tcin >> a;\n\tfor (int i = 0; i < a; i++) {\n\t\tcin >> b;\n\t\tfreq[b - 1]++;\n\t}\n\tmx = max(max(freq[0], freq[1]), freq[2]);\n\tcout << a - mx << endl;\n\treturn 0;\n}	freq=array of 3 int\na,b,mx=int\nread a\nfor i=0 to a exclusive\nread b\nincrement freq[b-1]\nmx=max of freq items\nprint a-mx
int main() {\n\tint n;\n\tcin >> n;\n\tint a = 0, b = 0, c = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (x == 1) a++;\n\t\tif (x == 2) b++;\n\t\tif (x == 3) c++;\n\t}\n\tif (a >= b && a >= c)\n\t\tcout << b + c << endl;\n\telse if (b >= a && b >= c)\n\t\tcout << a + c << endl;\n\telse if (c >= a && c >= b)\n\t\tcout << a + b << endl;\n\treturn 0;\n}	let n be an integer\nread n\nlet a, b, c be integers with value of 0\nfor int i = 0 to n\nlet x be an integer\nread x\nif x equals 1, add one to a\nif x equals 2, add one to b\nif x equals 3, add one to c\nif a is greater or equal to b and a is greater or equal to c\nprint b + c\nelse if b is greater or equal to a and b is greater or equal to c\nprint a + c\nelse if c is greater or equal to a and c is greater or equal to b\nprint a + b
int main() {\n\tint n;\n\tcin >> n;\n\tint freq[3] = {};\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tfreq[x - 1]++;\n\t}\n\tint m = max(freq[0], max(freq[1], freq[2]));\n\tcout << n - m << endl;\n}	let n be integer\nread n\nlet freq be integer array of length 3 and initiate it to blank\nfor i = 0 to n exclusive\nlet x be integer\nread x\ncall freq with x-1 and increment\nlet m be integer and assign max(freq[0], max(freq[1], freq[2])) to m\nprint n - m
"int main() {\n\tint n, i, j, k, x;\n\tvector<int> ct(4, 0);\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tct[x]++;\n\t}\n\tcout << n - max(ct[1], max(ct[2], ct[3])) << ""\n"";\n\t;\n\treturn 0;\n}"	create int n, i, j, k, x\ncrate vector int ct\nread n\nfor i=0 to n exclusive\nread x\nincrement ct[x]\nprint n - max of ct[1] and max(ct[2], ct[3]), and a newline\n;
int a[11];\nint main() {\n\tint n, i, x;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> x;\n\t\ta[x]++;\n\t}\n\tint max = -1;\n\tfor (i = 1; i <= 3; i++) {\n\t\tif (a[i] > max) max = a[i];\n\t}\n\tcout << n - max << endl;\n}	a = array of 11 integers\nn, i, x = integers\nRead n\nfor i = 1 to n exclusive\nRead x\nincrement a[x]\nmax = integer, set to -1\nfor i = 1 to 3 exclusive\nif a[i] is greater than max, set max to a[i]\nprint n - max and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tint a = 0, b = 0, c = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (x == 1) a++;\n\t\tif (x == 2) b++;\n\t\tif (x == 3) c++;\n\t}\n\tif (a >= b && a >= c)\n\t\tcout << b + c << endl;\n\telse if (b >= a && b >= c)\n\t\tcout << a + c << endl;\n\telse if (c >= a && c >= b)\n\t\tcout << a + b << endl;\n\treturn 0;\n}	create int n\nread n\nset a, b and c = 0\nfor i=0 to n exclusive\ncreate int x\nread x\nif x=1, increment a\nif x =2, increment b\nif x=3, add 1 to c\nif a >= b and a >= c\nprint b+c\nelse if b >= a and b >= c\nprint a+c\nelse if c >= a and c >= b\nprint a+b
int a[1000005];\nint max(int a, int b) {\n\treturn a > b ? a : b;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tint x = 0, y = 0, z = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1) { x++; }\n\t\tif (a[i] == 2) { y++; }\n\t\tif (a[i] == 3) { z++; }\n\t}\n\tcout << x + y + z - max(max(x, y), z) << endl;\n\treturn 0;\n}	a = integer array of size 1000005\nin the function max that takes integer a, b and returns integer\nreturn if a > b, a else b\nn = integer\nread n\nx, y, z = integers x = 0, y = 0, z = 0\nfor i = 0 to n exclusive\nread a[i]\nif (a[i] is 1), increment x\nif (a[i] is 2), increment y\nif (a[i] is 3), increment z\nprint x + y + z - max(max(x, y), z)
int num[4];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tnum[a]++;\n\t}\n\tint max_num = -1;\n\tfor (int i = 1; i <= 3; i++) {\n\t\tif (num[i] > max_num) { max_num = num[i]; }\n\t}\n\tcout << n - max_num << endl;\n}	num = int array of length 4\nn = int\nread n\nfor i = 0 to n exclusive\na = int\nread a\nincrement num at a\nmax_num = -1 = int\nfor i = 1 to 3 inclusive\nif num[i] > max_num then set max_num to num at i\nprint n - max_num
int A[4];\nint main() {\n\tint n, inp;\n\tcin >> n;\n\twhile (cin >> inp) ++A[inp];\n\tcout << n - max(A[1], max(A[2], A[3])) << endl;\n\treturn 0;\n}	create int A[4]\ncreate int n and inp\nread n\nwhile read inp, pre increment A[inp]\nprint n - max(A[1], max(A[2], A[3]))
int main() {\n\tlong long n, a;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\ta = n / 2;\n\telse\n\t\ta = ((n + 1) / 2) * (-1);\n\tcout << a << endl;\n\treturn 0;\n}	create long long n and a\nread n\nif n is even\na= n/2\nelse\nset ((n + 1) / 2) * (-1)\nprint a
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << n / 2 << endl;\n\t} else {\n\t\tcout << (-n - 1) / 2 << endl;\n\t}\n\treturn 0;\n}	let n be a long integer\nread n\nif n modulo 2 is equal to 0\nprint n / 2 and newline\nelse do the following\nprint (-n - 1) / 2 and newline
long long int MIN(long long int a, long long int b) {\n\tif (a > b)\n\t\treturn b;\n\telse\n\t\treturn a;\n}\nlong long int MAX(long long int a, long long int b) {\n\tif (a > b)\n\t\treturn a;\n\telse\n\t\treturn b;\n}\nlong long int MOD(long long int x) {\n\tif (x >= 0)\n\t\treturn x;\n\telse\n\t\treturn -x;\n}\nint main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << n / 2 << endl;\n\t} else {\n\t\tlong long int d = n / 2;\n\t\td -= n;\n\t\tcout << d << endl;\n\t}\n\treturn 0;\n}	in function MIN taking long long int a, long long int b and returning long long int\nif a > b\nreturn b\nelse\nreturn a\nin function MAX taking long long int a, long long int b and returning long long int\nif a > b\nreturn a\nelse\nreturn b\nin function MOD taking long long int x and returning long long int\nif x >= 0\nreturn x\nelse\nreturn -x\nn = long long int\nread n\nif n is even\nprint n / 2\nelse\nd = long long int with d = n / 2\ndecrement d by n\nprint d
int main() {\n\tlong long n, a;\n\tcin >> n;\n\ta = n / 2;\n\tif (n % 2 == 0)\n\t\tcout << a << endl;\n\telse\n\t\tcout << a - n << endl;\n}	n, a = long long\nread n\nset a to n / 2\nif n is even\nprint a\nelse\nprint a - n
int main() {\n\tlong long a, b = 0;\n\tcin >> a;\n\tint i;\n\tif (a % 2 != 0) {\n\t\ti = -1;\n\t} else {\n\t\ti = 0;\n\t}\n\tb = a / 2 * powl(-1, a % 2) + i;\n\tcout << b << endl;\n\treturn 0;\n}	declare long longs a, b = 0\nread a\ndeclare integer i\nif a % 2 is not 0\nlet i be -1\nelse\nlet i be 0\nlet b be a / 2 * ( -1 raised to power of a % 2 ) + i\nprint b and newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << n / 2 << endl;\n\telse\n\t\tcout << -(n + 1) / 2 << endl;\n\treturn 0;\n}	create long long n\nread n\nif n is even\nprint n/2\nelse\nprint -(n + 1) / 2
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << n / 2 << endl;\n\telse\n\t\tcout << ""-"" << (n + 1) / 2 << endl;\n\treturn 0;\n}"	create long long int n\nread n\nif n is even\nprint n/2\nelse\nprint -, (n + 1) / 2
int main() {\n\tlong long n, a;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\ta = n / 2;\n\telse\n\t\ta = ((n + 1) / 2) * (-1);\n\tcout << a << endl;\n\treturn 0;\n}	declare long longs n, a\nread n\nif n % 2 is 0\nlet a be n / 2\nelse\nlet a be ((n + 1) / 2) * (-1)\nprint a and newline
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << n / 2 << endl;\n\t\treturn 0;\n\t} else if (n == 1) {\n\t\tcout << ""-1\n"";\n\t\treturn 0;\n\t}\n\tlong long int div;\n\tdiv = n / 2;\n\tn = (n * (-1)) + div;\n\tcout << n << endl;\n\treturn 0;\n}"	create long long int n\nread n\nif n is even\nprint n/2\nelse if n=1\nprint -1 and a newline\ncreate long long int div\ndiv = n/2\nset n = (n * (-1)) + div\nprint n
int main() {\n\tlong long int n = 0;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << n / 2 << endl;\n\telse\n\t\tcout << -((n + 1) / 2) << endl;\n}	n = 0\nread n\nif n is even\nprint n/2\nelse\nprint -((n + 1) / 2)
int main() {\n\tlong long int n;\n\tcin >> n;\n\tif ((n % 2) == 0)\n\t\tcout << n / 2 << endl;\n\telse\n\t\tcout << (n / 2) - n << endl;\n\treturn 0;\n}	n = long long int\nread n\nif ((n modulo 2) is 0)\nprint n / 2\nelse\nprint (n / 2) - n
long long f(long long);\nint main() {\n\tlong long n;\n\tcin >> n;\n\tf(n);\n}\nlong long f(long long n) {\n\tif (n % 2 == 0)\n\t\tcout << (n / 2) << endl;\n\telse\n\t\tcout << (n / 2 - n) << endl;\n\treturn 0;\n}	declare f with long long as argument, returning long long\ndeclare long long n\nread n\nrun f(n)\ndeclare f with long long n as argument, returning long long\nif n % 2 is 0\nprint ( n / 2 ) and newline\nelse\nprint ( n / 2 - n ) and newline
"int dx[] = {1, 0, -1, 0, 1, 1, -1, -1};\nint dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\nvoid fast() {}\nconst long long md = 1e9 + 7;\nint main() {\n\tfast();\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << n / 2 << ""\n"";\n\telse\n\t\tcout << -(n + 1) / 2 << ""\n"";\n\treturn 0;\n}"	"declare integer array dx = {1, 0, -1, 0, 1, 1, -1, -1}\ndeclare integer array dy = {0, 1, 0, -1, 1, -1, 1, -1}\ndeclare fast with no arguments, returning void\ndeclare constant long long md = 1e9 + 7\nrun fast\ndeclare long long n\nread n\nif n % 2 is 0\nprint n / 2 and ""\n""\nelse\nprint -(n+1)/2 and ""\n"""
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 0)\n\t\tcout << n / 2 << endl;\n\telse\n\t\tcout << -(n + 1) / 2 << endl;\n\treturn 0;\n}	declare long long variable n\nread n from the input\nif n is even\nprint n / 2\nelse\nprint - (n + 1) / 2 to the output
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long chk = 0;\n\tchk = n / 2;\n\tif (chk * 2 == n)\n\t\tcout << chk;\n\telse\n\t\tcout << chk - n;\n\tcout << endl;\n\treturn 0;\n}	create long long variable n\nread user input to n\ndefine long long chk = 0\nassign n / 2 to chk\nif chk * 2 is equal to n\nprint chk to the standard output\nelse\nprint chk - n to the standard output\nprint new line
int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n % 2 == 0) {\n\t\tcout << n / 2 << endl;\n\t} else {\n\t\tlong long int ans = (n - 1) / 2;\n\t\tcout << -1 - ans << endl;\n\t}\n\treturn 0;\n}	n = long long ing\nread n\nif n is even\nprint n / 2\nelse\nans = long long int with value of (n - 1) / 2\nprint -1 - ans
int main() {\n\tlong long n, y;\n\tdouble x;\n\tcin >> n;\n\tif (n % 2 == 0 && n != 0) { cout << n / 2 << endl; }\n\tif (n % 2 != 0 && n != 0) {\n\t\tx = ceil((1. * n) / 2);\n\t\ty = x;\n\t\tcout << -y << endl;\n\t}\n}	n, y = long long\nx = double\nread n\nif n % 2 = 0 && n != 0m print n / 2\nif n % 2 != 0 && n != 0\nlet x = ceil(1. * n / 2)\nlet y = x\nprint -y
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long k1 = ((2 + (n % 2 == 1 ? n - 1 : n)) / 2) * (n / 2);\n\tlong long k2 = ((1 + (n % 2 == 1 ? n : n - 1)) / 2) * ((n + 1) / 2);\n\tcout << k1 - k2 << '\n';\n}	declare long long n\nread n\ndeclare long long k1 = ((2 + (n - 1 if n % 2 is 1, else n)) / 2) * (n / 2)\ndeclare long long k2 = ((1 + (n if n % 2 is 1, else n - 1)) / 2) * ((n + 1) / 2)\nprint k1 - k2 and '\n'
int main() {\n\tchar num;\n\tint n = 0;\n\twhile (num != '\n') {\n\t\tnum = getchar();\n\t\tif (n == 0 && num == '9') {\n\t\t\tcout << num;\n\t\t} else if (num >= '5') {\n\t\t\tcout << '9' - num;\n\t\t} else\n\t\t\tcout << num;\n\t\tn++;\n\t}\n\treturn 0;\n}	num = char\nn = int, n = 0\nwhile num is not a new line\nlet num = getchar\nif n = 0 and num = 9\nprint num\nelse if num >= 5\nprint 9\nelse\nprint num\nadd one to n
"int check(int x, int y) {\n\tif (x <= y) return x;\n\treturn y;\n}\nint main() {\n\tstring s, p = """";\n\tint i, j;\n\tcin >> s;\n\tp = s;\n\tfor (i = s.size() - 1; i > 0; i--) {\n\t\tj = check(s[i] - '0', 9 - (s[i] - '0'));\n\t\tp[i] = (char)(j + '0');\n\t}\n\tj = 9 - (s[0] - '0');\n\tif (j) {\n\t\tj = check(s[0] - '0', 9 - (s[0] - '0'));\n\t\tp[0] = (char)(j + '0');\n\t}\n\tcout << p << endl;\n}"	"function check with int arguments x and y that returns int\nif x <= y, return x\nreturn y\ndefine strings s and p with p = """"\ndeclare int variables i and j\nread variable s from the input\nassign the new value = s to p\nfor i = length of s - 1 to 0 counting down\nchange j to the result of check(s[i] - '0', 9 - (s[i] - '0'))\nassign the new value = (j + '0') casted to char, to p[i]\nchange j to 9 - (s[0] - '0')\nif j is not 0\nassign the returned value of check(s[0] - '0', 9 - (s[0] - '0')) to j\nchange p[0] to (j + '0') casted to char\nprint p"
int main() {\n\tstring s;\n\tint i;\n\twhile (cin >> s) {\n\t\ti = 0;\n\t\tif (s[0] == '9') i++;\n\t\tfor (; i < s.size(); i++) {\n\t\t\tif (s[i] > '4') { s[i] = '9' - s[i] + '0'; }\n\t\t}\n\t\tcout << s << endl;\n\t}\n\treturn 0;\n}	declare string s\nnew integer i\nread s and keep looping\nchange the value of i to 0\nif s[0] is equal to '9', increment i by one\nwhile i < length of s, increment it by 1 in a loop\nif s[i] is greater than '4', assign the value = '9' - s[i] + '0' to s[i]\nprint s to the standard output
int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] - '0' >= 5) {\n\t\t\tint x = 9 - (s[i] - '0');\n\t\t\ts[i] = x + '0';\n\t\t}\n\t\tif (s[0] == '0') { s[0] = '9'; }\n\t}\n\tcout << s << endl;\n}	declare new string s\nread variable s from the input\nfor integer i = 0 to length of s exclusive\nif s[i] - '0' >= 5\ncreate integer x with value = 9 - (s[i] - '0')\nchange s[i] to x + '0'\nif s[0] is equal to '0', set s[0] to '9'\nprint s
int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (i == 0 && s[i] == '9') continue;\n\t\tif (s[i] >= '5') { s[i] = '9' - s[i] + '0'; }\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	define string s\nread from the input to s\nfor i from 0 to length of s exclusive\nif i = 0 and s[i] is equal to '9', go to the start of the loop\nif s[i] >= '5', change s[i] to '9' - s[i] + '0'\nprint s
"int main() {\n\tstring s;\n\tcin >> s;\n\tfor (long long int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '9') {\n\t\t\tif (i == 0)\n\t\t\t\tcontinue;\n\t\t\telse\n\t\t\t\ts[i] = '0';\n\t\t\tcontinue;\n\t\t}\n\t\tif ((s[i] - '0') > 4) s[i] = 48 + 9 - (s[i] - '0');\n\t}\n\tcout << s << ""\n"";\n}"	"create new string s\nread standard input to s\nfor i = 0 to length of s exclusive\nif s[i] = '9'\nif i is equal to 0\ngo to the start of the loop\nelse\nassign the new value = '0' to s[i]\ngo to the start of the loop\nif s[i] - '0' is greater than 4, set s[i] to 48 + 9 - (s[i] - '0')\nprint s and ""\n"" to the standard output"
int main() {\n\tstring s;\n\tcin >> s;\n\tunsigned long long int i = 0;\n\tif (s[i] == '9') {\n\t\tcout << s[i];\n\t\ti++;\n\t}\n\tfor (; i < s.length(); i++) { cout << min(s[i] - '0', 9 - (s[i] - '0')); }\n\tcout << endl;\n\treturn 0;\n}	s = string\nread s\ni = unsigned long long int with i = 0\nif s[i] is '9'\nprint s[i]\nincrement i\ncontinue iterating i while i < length of s print min of s[i] - '0', 9 - (s[i] - '0')\nprint newline
int main() {\n\tstring numero;\n\tcin >> numero;\n\tint n = numero.size();\n\tfor (int i = 0; i <= n - 1; ++i) {\n\t\tint x = numero[i] - '0';\n\t\tif (i == 0) {\n\t\t\tif (5 <= x and x <= 8) { numero[i] = (char)('0' + 9 - x); }\n\t\t} else if (5 <= x) {\n\t\t\tnumero[i] = (char)('0' + 9 - x);\n\t\t}\n\t}\n\tcout << numero << endl;\n\treturn 0;\n}	let numero be a string\nread numero\nlet n be a integer with n is equal to length of numero\nfor i = 0 to n - 1 inclusive\nlet x be a integer with x = numero[i] - 0\nif i is equal to 0\nif 5 <= x and x <= 8 , numero[i] is equal to (char)(0 + 9 - x)\nelse if 5 <= x\nnumero[i] is equal to (char)(0 + 9 - x)\nprint numero and newline
int a[100010];\nlong long cnt[100010];\nint main() {\n\tchar c[155];\n\tint num[155];\n\tcin >> c;\n\tint len = strlen(c);\n\tfor (int i = 0; i < len; i++) {\n\t\tif (c[i] >= '5' && c[i] <= '9') {\n\t\t\tif ((c[i] == '9' && i == 0))\n\t\t\t\tnum[i] = c[i] - '0';\n\t\t\telse\n\t\t\t\tnum[i] = 9 - (c[i] - '0');\n\t\t} else\n\t\t\tnum[i] = c[i] - '0';\n\t}\n\tfor (int i = 0; i < len; i++) cout << num[i];\n\tcout << endl;\n\treturn 0;\n}	declare integer array a size 100010\ndeclare long long array cnt size 100010\ndeclare character array c size 155\ndeclare integer array num size 155\nread c\ndeclare integer len = string length of c\nfor i = 0 to len exclusive\nif c[i] is greater than or equal to '5' and c[i] is less than or equal to '9'\nif c[i] is '9' and i is 0\nlet num[i] be c[i] - '0'\nelse\nlet num[i] be 9 - ( c[i] - '0' )\nelse\nlet num[i] be c[i] - '0'\nfor i = 0 to len exclusive, print num[i]\nprint newline
int main() {\n\tchar x[20];\n\tint ok = 1;\n\twhile (cin >> x) {\n\t\tint len = strlen(x);\n\t\tfor (int i = 0; i < len; i++) {\n\t\t\tif (i == 0) {\n\t\t\t\tif (x[i] == '9')\n\t\t\t\t\tcout << x[i];\n\t\t\t\telse if (x[i] >= '5')\n\t\t\t\t\tcout << '9' - x[i];\n\t\t\t\telse\n\t\t\t\t\tcout << x[i];\n\t\t\t} else {\n\t\t\t\tif (x[i] >= '5')\n\t\t\t\t\tcout << '9' - x[i];\n\t\t\t\telse\n\t\t\t\t\tcout << x[i];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	declare character array x size 20\ndeclare integer ok = 1\nwhile read x is true\ndeclare integer len = string length of x\nfor i = 0 to len exclusive\nif i is 0\nif x[i] is '9'\nprint x[i]\nelse if x[i] is greater than or equal to '5'\nprint '9' - x[i]\nelse\nprint x[i]\nelse\nif x[i] is greater than or equal to '5'\nprint '9' - x[i]\nelse\nprint x[i]\nprint newline
int main() {\n\tstring str;\n\tcin >> str;\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (i == 0 && str[i] == '9') { continue; }\n\t\tif (str[i] > '4') { str[i] = '9' - str[i] + 48; }\n\t}\n\tcout << str << endl;\n\treturn 0;\n}	create string str\nread str\nfor i=0 to size of str exclusive\nif i = 0 and str[i] = 9, continue\nif str[i] > 4, set str[i] = 9 - str[i] + 48\nprint str
int main() {\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] > '9' - s[i] + '0') s[i] = '9' - s[i] + '0';\n\t\tif (s[0] == '0') s[0] = '9';\n\t}\n\tcout << s << endl;\n}	create string s\nread s\nfor i=0 to length of s exclusive\nif s[i] > 9 - s[i] + 0, s[i] = 9 - s[i] + 0\nif s[0] = 0, s[0] = 9\nprint s
int main() {\n\tstring a;\n\tcin >> a;\n\tfor (int i = 0; i < a.size(); i++) {\n\t\tif (a[i] >= '5') a[i] = 9 - (a[i] - '0') + '0';\n\t}\n\tif (a[0] == '0') {\n\t\tcout << 9;\n\t} else\n\t\tcout << a[0];\n\tfor (int j = 1; j < a.size(); j++) { cout << a[j]; }\n\tcout << endl;\n\treturn 0;\n}	define new string a\nread user input to a\nfor i = 0 to length of a exclusive\nif a[i] >= '5', change the value of a[i] to 9 - (a[i] - '0') + '0'\nif a[0] is equal to '0'\nprint 9\nelse\nprint a[0]\nprint all elements of a, starting from the index 1, to the output\nprint new line
int main() {\n\tstring s, output;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tint temp = s[i] - 48;\n\t\tchar tempChar = '\0';\n\t\tif ((i == 0 && temp == 9) || temp < 5)\n\t\t\toutput.push_back(s[i]);\n\t\telse {\n\t\t\ttempChar = (9 - temp) + 48;\n\t\t\toutput.push_back(tempChar);\n\t\t}\n\t}\n\tcout << output << endl;\n\treturn 0;\n}	create strings s and output\nread from the input to s\nstart for loop from i = 0 to length of s exclusive\ndeclare new integer temp with value s[i] - 48\ncreate new character called tempChar = '\0'\nif (i = 0 and temp = 9) or temp < 5\nadd new element = s[i] after the last element of output\nelse\nassign (9 - temp) + 48 to tempChar\npush tempChar to the variable output\nprint output to the stdout
const int arr = 4 * 1e5;\nconst int md = 1e9 + 7;\nint pref[2600][2600];\nint n, m;\nint solve(int u) {\n\tint res = 0;\n\tfor (int i = 0; i < n; i += u)\n\t\tfor (int j = 0; j < m; j += u) {\n\t\t\tint l1 = i;\n\t\t\tint l2 = j;\n\t\t\tint r1 = min(n, i + u);\n\t\t\tint r2 = min(m, j + u);\n\t\t\tint now = pref[r1][r2] - pref[r1][l2] - pref[l1][r2] + pref[l1][l2];\n\t\t\tres += min(now, u * u - now);\n\t\t}\n\treturn (res);\n}\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tstring st;\n\t\tcin >> st;\n\t\tfor (int j = 0; j < st.size(); j++) pref[i][j + 1] = st[j] - '0';\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++) pref[i][j] = pref[i - 1][j] + pref[i][j - 1] - pref[i - 1][j - 1] + pref[i][j];\n\tint ans = 1e9;\n\tfor (int k = 2; k <= max(n, m); k++) ans = min(ans, solve(k));\n\tcout << ans << '\n';\n}	arr = 4 * 1e5\nmd = 1e9 + 7\ncreate int pref[2600][2600]\ncreate n and m\ncall solve(int u)\nres=0\nfor i=0 to n exclusive\nfor j=0 to m exclusive\nl1 = i\nset l2 = j\nassign min(n, i + u) to r1\nset r2 to min(m, j + u)\nset now = pref[r1][r2] - pref[r1][l2] - pref[l1][r2] + pref[l1][l2];\nset res to res + min of now and u*u-now\nreturn res\nread n and m\nfor i=1 to n inclusive\ncreate string st\nread st\nfor j=0 to size of st, pref[i][j + 1] = st[j] - 0\nfor i=1 to n inclusive\nfor j=1 to m inclusive, set pref[i][j] = pref[i - 1][j] + pref[i][j - 1] - pref[i - 1][j - 1] + pref[i][j]\nassign 1e9 to ans\nfor k=2 to max of n and m inclusive, set ans to min of ans and solve(k)\nprint ans and a newline
int mat[5001][5001];\nint psum[5001][5001];\nint sum(int fi, int li, int fj, int lj) {\n\tint big = psum[li][lj];\n\tint smol = (fi and fj ? psum[fi - 1][fj - 1] : 0);\n\tint lat1 = (fj ? psum[li][fj - 1] : 0);\n\tint lat2 = (fi ? psum[fi - 1][lj] : 0);\n\treturn big + smol - lat1 - lat2;\n}\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < 5001; ++i) {\n\t\tfor (int j = 0; j < 5001; ++j) { mat[i][j] = 0; }\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tfor (int j = 0; j < m; ++j) { mat[i][j] = s[j] - '0'; }\n\t}\n\tpsum[0][0] = mat[0][0];\n\tfor (int i = 1; i < 5001; ++i) { psum[0][i] = psum[0][i - 1] + mat[0][i]; }\n\tfor (int i = 1; i < 5001; ++i) { psum[i][0] = psum[i - 1][0] + mat[i][0]; }\n\tfor (int i = 1; i < 5001; ++i) {\n\t\tfor (int j = 1; j < 5001; ++j) { psum[i][j] = psum[i][j - 1] + psum[i - 1][j] - psum[i - 1][j - 1] + mat[i][j]; }\n\t}\n\tint ans = 1e9;\n\tfor (int k = 2; k <= 2500; ++k) {\n\t\t;\n\t\tint pans = 0;\n\t\tfor (int i = 0; i < (n + k - 1) / k; ++i) {\n\t\t\tfor (int j = 0; j < (m + k - 1) / k; ++j) {\n\t\t\t\tint c1 = sum(i * k, (i + 1) * k - 1, j * k, (j + 1) * k - 1);\n\t\t\t\tint c0 = k * k - c1;\n\t\t\t\t;\n\t\t\t\t;\n\t\t\t\t;\n\t\t\t\t;\n\t\t\t\tpans += min(c0, c1);\n\t\t\t}\n\t\t};\n\t\tans = min(ans, pans);\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	declare integer array at size 5001 by 5001\ndeclare integer array psum size 5001 by 5001\ndeclare sum with integers fi, li, fj, lj as arguments, returning integer\ndeclare integer big = psum[li][lj]\ndeclare integer smol = psum[fi - 1][fj - 1] if fi and fj, else 0\ndeclare integer lat1 = psum[li][fj - 1] if fj is true, else 0\ndeclare integer lat2 = psum[fi - 1][lj] if fi is true, else 0\nreturn big + smol - lat1 - lat2 from function\ndeclare integers n, m\nread n and m\nfor i = 0 to 5001 exclusive\nfor j = 0 to 5001 exclusive, let mat[i][j] be 0\nfor i = 0 to n exclusive\ndeclare string s\nread s\nfor j = 0 to m exclusive, let max[i][j] be s[j] - '0'\nlet psum[0][0] be mat[0][0]\nfor i = 1 to 5001 exclusive, let psum[0][i] be psum[0][i - 1] + mat[0][i]\nfor i = 1 to 5001 exclusive, let psum[i][0] be psum[i - 1][0] + mat[i][0]\nfor i = 1 to 5001 exclusive\nfor j = 1 to 5001 exclusive, let psum[i][j] be psum[i][j - 1] + psum[i - 1][j] - psum[i - 1][j - 1] + mat[i][j]\ndeclare integer ans = 1e9\nfor k = 2 to 2500 inclusive\nend statement\ndeclare integer pans = 0\nfor i = 0 to (n + k - 1) / k exclusive\nfor j = t0 to (m + k - 1) / k excclusive\ndeclare integer c1 = result of run sum with i * k, (i + 1) * k - 1, j * k, (j + 1) * k - 1 as arguments\ndeclare integer c0 = k * k - c1\nend statement\nend statement\nend statement\nend statement\nincrement pans by minimum of c0 and c1\nend statement\nlet ans be minimum of ans and pans\nprint ans and '\n'
int dp[2505][2505];\nint n, m;\nint cntt(int k) {\n\tint k1 = k - 1, res = 0;\n\tfor (int i = 1; i <= n; i += k) {\n\t\tfor (int j = 1; j <= m; j += k) {\n\t\t\tint cnt = 0;\n\t\t\tcnt += dp[min(i + k1, n)][min(j + k1, m)];\n\t\t\tcnt -= dp[i - 1][min(j + k1, m)];\n\t\t\tcnt -= dp[min(i + k1, n)][j - 1];\n\t\t\tcnt += dp[i - 1][j - 1];\n\t\t\tres += min(cnt, k * k - cnt);\n\t\t}\n\t}\n\treturn res;\n}\nint main() {\n\tcin >> n >> m;\n\tstring s;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> s;\n\t\tfor (int j = 1; j <= m; ++j) { dp[i][j] = dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1] + s[j - 1] - '0'; }\n\t}\n\tint res = n * m;\n\tfor (int k = 2; k <= min(n, m); ++k) { res = min(res, cntt(k)); }\n\tcout << res << '\n';\n\treturn 0;\n}	create int array dp of size 2505 with array of size 2505\nmake ints n and m\ndeclare cntt taking in int k and returning integer\ncreate integers k - 1 and res = 0\nfor i = 1 to n\nfor j = 1 to m\ncreate integer cnt = 0\nset cnt to cnt + dp[min(i + k1, n)][min(j + k1, m)]\nset cnt to cnt - dp[i - 1][min(j + k1, m)]\nsubtract dp[min(i + k1, n)][j - 1] from cnt\nadd dp[i - 1][j - 1] to cnt\nadd min(cnt, k * k - cnt) to res\nreturn res\nread n and m\ncreate string s\nfor i = 1 to n\nread s\nfor j = 1 to m, set dp[i][j] to dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1] + s[j - 1] - '0'\ncreate integer res = n * m\nfor k = 2 to min(n, m), set res to min of res and cntt(k)\nshow res
int mat[5001][5001];\nint psum[5001][5001];\nint sum(int fi, int li, int fj, int lj) {\n\tint big = psum[li][lj];\n\tint smol = (fi and fj ? psum[fi - 1][fj - 1] : 0);\n\tint lat1 = (fj ? psum[li][fj - 1] : 0);\n\tint lat2 = (fi ? psum[fi - 1][lj] : 0);\n\treturn big + smol - lat1 - lat2;\n}\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < 5001; ++i) {\n\t\tfor (int j = 0; j < 5001; ++j) { mat[i][j] = 0; }\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tfor (int j = 0; j < m; ++j) { mat[i][j] = s[j] - '0'; }\n\t}\n\tpsum[0][0] = mat[0][0];\n\tfor (int i = 1; i < 5001; ++i) { psum[0][i] = psum[0][i - 1] + mat[0][i]; }\n\tfor (int i = 1; i < 5001; ++i) { psum[i][0] = psum[i - 1][0] + mat[i][0]; }\n\tfor (int i = 1; i < 5001; ++i) {\n\t\tfor (int j = 1; j < 5001; ++j) { psum[i][j] = psum[i][j - 1] + psum[i - 1][j] - psum[i - 1][j - 1] + mat[i][j]; }\n\t}\n\tint ans = 1e9;\n\tfor (int k = 2; k <= 10; ++k) {\n\t\t;\n\t\tint pans = 0;\n\t\tfor (int i = 0; i < (n + k - 1) / k; ++i) {\n\t\t\tfor (int j = 0; j < (m + k - 1) / k; ++j) {\n\t\t\t\tint c1 = sum(i * k, (i + 1) * k - 1, j * k, (j + 1) * k - 1);\n\t\t\t\tint c0 = k * k - c1;\n\t\t\t\t;\n\t\t\t\t;\n\t\t\t\t;\n\t\t\t\t;\n\t\t\t\tpans += min(c0, c1);\n\t\t\t}\n\t\t};\n\t\tans = min(ans, pans);\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	create int array mat of size 5001 with array of size 5001\nmake integer array psum of size 5001 with array of size 5001\ndeclare sum taking in ints fi, li, fj, and lj and returning integer\nmake integer big = psum[li][lj]\ncreate integer smol =\nmake integer lat1 = (fj ? psum[li][fj - 1] : 0)\nlet int lat2 = (fi ? psum[fi - 1][lj] : 0)\nreturn big + smol - lat1 - lat2\ncreate ints n and m\nread n and m\nfor i = 0 to 5001 exclusive\nfor j = 0 to 5001 exclusive, set mat[i][j] to 1\nfor i = 0 to n exclusive\nmake string s\nread s\nfor j = 0 to m exclusive, set m[i][j] to s[j] - '0'\nset psum[0][0] to mat[0][0]\nfor i = 1 to 5001 exclusive, set psum[0][i] to psum[0][i - 1] + mat[0][i]\nfor i = 1 to 5001 exclusive, set psum[i][0] to psum[i - 1][0] + mat[i][0]\nfor i = 1 to 5001 exclusive\nfor j = 1 to 5001 exclusive, set psum[i][j] to psum[i][j - 1] + psum[i - 1][j] - psum[i - 1][j - 1] + mat[i][j]\nmake integer ans = 1e9\nfor k = 2 to 10\nend statement\nmake integer pans = 0\nfor i = 0 to (n + k - 1) / k exclusive\nfor j = 0 to (m + k - 1) / k exclusive\ncreate int c1 = sum(i * k, (i + 1) * k - 1, j * k, (j + 1) * k - 1)\ncreate integer c0 to k * k - c1\nend\nend\nend\nend statement\nset pans to pans + min of c0 and c1\nend statement\nset ans to min of ans and pans\nprint ans
string db[2501];\nint n, m, ans = 6250000, prf[2 * 2501][2 * 2501];\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) { cin >> db[i]; }\n\tfor (int i = 0; i < 2 * 2501; i++) {\n\t\tfor (int j = 0; j < 2 * 2501; j++) {\n\t\t\tif (i < n && j < m && db[i][j] == '1') prf[i][j] = 1;\n\t\t\tif (i) prf[i][j] += prf[i - 1][j];\n\t\t\tif (j) prf[i][j] += prf[i][j - 1];\n\t\t\tif (i && j) prf[i][j] -= prf[i - 1][j - 1];\n\t\t}\n\t}\n\tint maxk = min(n, m);\n\tfor (int k = 2; k <= maxk; k++) {\n\t\tint tmp_ans = 0;\n\t\tfor (int i = 0; i < n; i += k) {\n\t\t\tfor (int j = 0; j < m; j += k) {\n\t\t\t\tint solve = prf[i + k - 1][j + k - 1];\n\t\t\t\tif (i) solve -= prf[i - 1][j + k - 1];\n\t\t\t\tif (j) solve -= prf[i + k - 1][j - 1];\n\t\t\t\tif (i && j) solve += prf[i - 1][j - 1];\n\t\t\t\ttmp_ans += min(solve, k * k - solve);\n\t\t\t}\n\t\t}\n\t\tans = min(ans, tmp_ans);\n\t}\n\tcout << ans << endl;\n}	db = string of size 2501\nn, m, ans, prf = integers with ans = 6250000, prf = array of size [2 * 2501][2 * 2501]\nread n, m\nfor i = 0 to n exclusive, read db[i]\nfor i = 0 to 2 * 2501 exclusive\nfor j = 0 to 2 * 2501 exclusive\nif (i < n and j < m and db[i][j] is 1), prf[i][j] = 1\nif (i), prf[i][j] = prf[i][j] + prf[i - 1][j]\nif (j), prf[i][j] = prf[i][j] + prf[i][j - 1]\nif (i and j), prf[i][j] = prf[i][j] - prf[i - 1][j - 1]\nmaxk = integer with maxk = min of n and m\nfor k = 2 to maxk\ntmp_ans = integer with tmp_ans = 0\nfor i = 0 to n exclusvie, i = i + k\nfor j = 0 to m exclusive, j = j + k\nsolve = integer with solve = prf[i + k - 1][j + k - 1]\nif (i), solve = solve - prf[i - 1][j + k - 1]\nif (j), solve = solve - prf[i + k - 1][j - 1]\nif (i and j), solve = solve + prf[i - 1][j - 1]\ntmp_ans = tmp_ans + min(solve, k * k - solve)\nans = min of ans and tmp_ans\nprint ans
const int MAXN = 2500, MAXM = 2500;\nint S[MAXN + 1][MAXM + 1];\nint main() {\n\tint N, M;\n\tcin >> N >> M;\n\tfor (int i = 1; i <= N; ++i) {\n\t\tstring R;\n\t\tcin >> R;\n\t\tfor (int j = 1; j <= M; ++j) S[i][j] = (R[j - 1] - '0') + S[i - 1][j] + S[i][j - 1] - S[i - 1][j - 1];\n\t}\n\tint ans = INT_MAX;\n\tfor (int k = 2; k <= N || k <= M; ++k) {\n\t\tint aux = 0;\n\t\tfor (int i = 1; i <= N; i += k)\n\t\t\tfor (int j = 1; j <= M; j += k) {\n\t\t\t\tint ii = min(N, i + k - 1), jj = min(M, j + k - 1);\n\t\t\t\tint q = S[ii][jj] - S[ii][j - 1] - S[i - 1][jj] + S[i - 1][j - 1];\n\t\t\t\taux += min(q, k * k - q);\n\t\t\t}\n\t\tans = min(ans, aux);\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	MAXN, MAXM = const int with MAXN = 2500 and MAXM = 2500\nS = two dimensional int array of sizes MAXN + 1 and MAXM + 1\nN, M = int\nread N then M\nfor i = 1 to N inclusive\nR = string\nread R\nfor j = 1 to M inclusive set S[i][j] to (R[j - 1] - '0') + S[i - 1][j] + S[i][j - 1] - S[i - 1][j - 1]\nans = int with ans = INT_MAX\niterate k from 2 while k <= N or k <= M\naux = int with aux = 0\nfor i = 1 to N inclusive incrementing i by k\nfor j = 1 to M inclusive incrementing j by k\nii, jj = int with ii = min of N, i + k - 1 and jj = min of M, j + k - 1\nq = int with q = S[ii][jj] - S[ii][j - 1] - S[i - 1][jj] + S[i - 1][j - 1]\nincrement aux by min of q, k * k - q\nset ans to min of ans, aux\nprint ans
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2)\n\t\tcout << ""2\n"";\n\telse\n\t\tcout << ""1\n"";\n\treturn 0;\n}"	let n be a integer\nread n\nif n equals 2\nprint 2 and newline\nelse do the following\nprint 1 and newline
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tif (n == 2) {\n\t\t\tcout << 2 << endl;\n\t\t} else {\n\t\t\tcout << 1 << endl;\n\t\t}\n\t}\n\treturn 0;\n}	n=int\nwhile read n\nif n is 2\nprint 2\nelse\nprint 1
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2)\n\t\tcout << ""2"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	"n = int\nread n\nif n is 2\nprint ""2""\nelse\nprint ""1"""
int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2) {\n\t\tcout << n << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n}	n = int\nread n\nif n = 2\nprint n\nelse\nprint 1
"int main() {\n\tint l, r, a, b, d, i, n;\n\tcin >> n;\n\tcout << ((n == 2) ? 2 : 1) << ""\n"";\n\treturn 0;\n}"	integer as l,r,a,b,d,i,n\nread n\noutput 2 if n =2, else output 1
int n;\nint main() {\n\tcin >> n;\n\tif (n == 2)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	declare integer n\nread n\nif n is 2\nprint 2 and newline\nelse\nprint 1 and newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	declare integer n\nread n\nif n is 2\nprint 2 and newline\nelse\nprint 1 and newline
int main() {\n\tint v;\n\tcin >> v;\n\tif (v == 2)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << 1 << endl;\n\treturn 0;\n}	declare integer v\nread v\nif v is 2\nprint 2 and newline\nelse\nprint 1 and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n != 2)\n\t\tcout << ""1"" << endl;\n\telse\n\t\tcout << ""2"" << endl;\n}"	"n = int\nread n\nif n is not 2\nprint ""1""\nelse\nprint ""2"""
int main() {\n\tlong int n, x, v;\n\tcin >> v;\n\tn = v;\n\tif (n > 2) {\n\t\tn = 1;\n\t} else if (n == 2) {\n\t\tn = 2;\n\t}\n\tcout << n << endl;\n\treturn 0;\n}	let n, x, v be long integers\nread v\nn is equal to v\nif n is greater than 2\nn is equal to 1\nelse if n is equal to 2\nn is equal to 2\nprint n and newline
int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 1 || n == 2) {\n\t\tcout << n << endl;\n\t} else\n\t\tcout << 1 << endl;\n\treturn 0;\n}	integer as n\nread n\nif n is 1 or n is 2 then do the following\noutput n\nelse\noutput 1
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2)\n\t\tcout << ""2"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	let n be a integer\nread n\nif n equals 2\nprint 2 and newline\nelse do the following\nprint 1 and newline
"int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tif (n == 2) {\n\t\t\tcout << ""2"" << endl;\n\t\t} else {\n\t\t\tcout << ""1"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	let n be a long integer\nwhile read n\nif n equals 2\nprint 2 and newline\nelse do the following\nprint 1 and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2) {\n\t\tcout << ""2\n"";\n\t} else\n\t\tcout << ""1\n"";\n}"	n=int\nread n\nif n is 2\nprint 2\nelse\nprint 1
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2)\n\t\tcout << n << endl;\n\telse\n\t\tcout << ""1\n"";\n\treturn 0;\n}"	n = integer\nread n\nif (n is 2)\nread n\nelse\nprint 1
int main() {\n\tint n;\n\tcin >> n;\n\tint k = n - 1;\n\tif (n == 2)\n\t\tcout << 2 << endl;\n\telse\n\t\tcout << n - k << endl;\n}	n = int\nread n\nk = int, k = n - 1\nif n = 2\nprint 2\nelse\nprint n - k
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n == 2)\n\t\tcout << ""2"" << endl;\n\telse\n\t\tcout << ""1"" << endl;\n\treturn 0;\n}"	integer as n\nread n\nif n is 2 then do the following\noutput 2\nelse\noutput 1
"const int N = 1e5 + 50;\nconst int oo = 1e9;\nconst int mod = 1e9 + 7;\nstring a[2001], b[201], f1[2001], f2[2001];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < m; i++) cin >> b[i];\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tf1[i] = """";\n\t\tfor (int j = 0; j < m; j++) f1[i] += a[i + j];\n\t}\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tf2[i] = """";\n\t\tfor (int j = 0; j < m; j++) { f2[i] += b[j].substr(i, m); }\n\t}\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tfor (int j = 0; j + m <= n; j++) {\n\t\t\tif (f1[i] == f2[j]) {\n\t\t\t\tcout << i + 1 << ' ' << j + 1 << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}"	let N be a constant integer with N is equal to 1e5 + 50\nlet oo be a constant integer with oo is equal to1e9\nlet mod be a constant integer with mod is equal to 1e9 + 7\nlet a, b,f1,f2 be string arrays of size 2001\nlet n be a integer\nread n, m\nfor integer i = 0 to n exclusive, read a[i]\nfor integer i = 0 to m exclusive, read b[i]\nfor integer i = 0 to n-m inclusive,\nf1[i] is empty\nfor integer j = 0 to m exclusive, increase f1[i] with a[i + j]\nfor integer i = 0 to n-m inclusive,\nf2[i] is empty\nfor integer j = 0 to m exclusive, increase f2[i] withb[j].substr(i, m)\nfor integer i = 0 to n-m inclusive,\nfor integer j = 0 to n-m inclusive,\nif f1[i] equals f2[j]\nprint i + 1 space j + 1 and endline
"const int maxn = 2000 + 5;\nstring s1[maxn], s2[maxn];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) cin >> s1[i];\n\tfor (int i = 0; i < m; i++) cin >> s2[i];\n\tfor (int i = 0; i <= n - m; i++)\n\t\tfor (int j = 0; j <= n - m; j++) {\n\t\t\tbool flag = true;\n\t\t\tfor (int p = 0; p < m && flag; p++) {\n\t\t\t\tif (memcmp(&s1[i + p][0], &s2[p][j], m)) flag = false;\n\t\t\t}\n\t\t\tif (flag) {\n\t\t\t\tcout << i + 1 << "" "" << j + 1 << ""\n"";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\treturn 0;\n}"	"declare constant integer maxn = 2000 + 5\ndeclare string arrays s1 size maxn, s2 size maxn\ndeclare integers n, m\nread n, m\nfor i = 0 to n exclusive, read s1[i]\nfor i = 0 to m exclusive, read s2[i]\nfor i = 0 to n - m inclusive\nfor j = 0 to n - m inclusive\ndeclare boolean flag = true\nfor p = 0 to p is less than m and flag, incrementing p\nif memory compare between address of s1[i + p][0] and address of s2[p][j] comparing m bytes, let flag be false\nif flag is true\nprint i + 1, "" "", j + 1, ""\n"""
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tvector<string> A(n), B(m);\n\tfor (auto &s : A) cin >> s;\n\tfor (auto &s : B) cin >> s;\n\tfor (int i = 0; i < n; i++) {\n\t\tint pos = -1;\n\t\twhile (pos + 1 < n) {\n\t\t\tbool ok = 1;\n\t\t\tpos = B[0].find(A[i], pos + 1);\n\t\t\tif (pos == -1) break;\n\t\t\tfor (int k = m - 1; k >= 0 && ok; k--)\n\t\t\t\tif (A[i + k] != B[k].substr(pos, m)) ok = 0;\n\t\t\tif (ok) return cout << i + 1 << "" "" << pos + 1 << ""\n"", 0;\n\t\t}\n\t}\n\tcout << -1;\n}"	n, m = int\nread n, m\nA, B = string vectors with size of A = n and size of B = m\nread all A\nread all B\nfor i = 0 to n exclusive\npos = -1 = int\nwhile pos+1 < n\nok = 1 = bool\nset pos to find A[i], pos + 1 on B[0]\nif pos = -1 then break\nfor k = m - 1, until k <= 0 and is ok, decrement k\nif A[i+k] isn't substring from pos to m of b then set ok to 0\nif ok then return print i+1 and space and pos + 1 and new line\nprint -1
char mp[2][2001][2001];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) cin >> mp[0][i];\n\tfor (int i = 0; i < m; i++) cin >> mp[1][i];\n\tfor (int i = 0; i <= n - m; i++) {\n\t\tfor (int j = 0; j <= n - m; j++) {\n\t\t\tint ok = 1;\n\t\t\tfor (int p = 0; p < m && ok == 1; p++) { ok &= !memcmp(&mp[0][i + p][0], &mp[1][p][j], m); }\n\t\t\tif (ok) {\n\t\t\t\tcout << i + 1 << ' ' << j + 1 << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	let mp[2][2001][2001] be a array of character elements\nlet n , m be integers\nread n , m\nfor i = 0 to n exclusive , read mp[0][i]\nfor i = 0 to m exclusive , read mp[1][i]\nfor i = 0 to n - m inclusive\nfor j = 0 to n - m inclusive\nthe integer value of ok = 1\nfor integer p = 0, p is less than m and ok equals 1, increment p by 1 , ok &= !memcmp(&mp[0][i + p][0], &mp[1][p][j], m)\nif ok is true\nprint i + 1 and ' ' and j + 1 and newline
"const int N = 1e5 + 50;\nconst int oo = 1e9;\nconst int mod = 1e9 + 7;\nstring a[2001], b[201], f1[2001], f2[2001];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < m; i++) cin >> b[i];\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tf1[i] = """";\n\t\tfor (int j = 0; j < m; j++) f1[i] += a[i + j];\n\t}\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tf2[i] = """";\n\t\tfor (int j = 0; j < m; j++) { f2[i] += b[j].substr(i, m); }\n\t}\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tfor (int j = 0; j + m <= n; j++) {\n\t\t\tif (f1[i] == f2[j]) {\n\t\t\t\tcout << i + 1 << ' ' << j + 1 << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}"	"declare constant integer N = 1e5 + 50\ndeclare constant integer oo = 1e9\ndeclare constant integer mod = 1e9 + 7\ndeclare string arrays a size 2001, b size 201, f1 size 2001, f2 size 2001\ndeclare integers n, m\nread n, m\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to m exclusive, read b[i]\nfor i = 0 to i + m is less than or equal to n, incrementing i\nlet f1[i] be """"\nfor j = 0 to m exclusive, increment f1[i] by a[i+j]\nfor i = 0 to i + m is less than or equal to n, incrementing i\nlet f2[i] be """"\nfor j = 0 to m exclusive, increment f2[i] by substring of b[j] from i to m\nfor i = 0 to i + m is less than or equal to n, incrementing i\nfor j = 0 to j + m is less than or equal to n, incrementing j\nif f1[i] is f2[j]\nprint i + 1, ' ', j + 1, newline"
char mp[2][2001][2001];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) cin >> mp[0][i];\n\tfor (int i = 0; i < m; i++) cin >> mp[1][i];\n\tint i, j;\n\tfor (i = 0; i <= n - m; i++) {\n\t\tfor (j = 0; j <= n - m; j++) {\n\t\t\tbool ok = true;\n\t\t\tfor (int p = 0; p < m && ok; p++) ok &= !memcmp(&mp[0][i + p][0], &mp[1][p][j], m);\n\t\t\tif (ok) {\n\t\t\t\tcout << i + 1 << ' ' << j + 1 << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}	declare character array mp size 2 by 2001 by 2001\ndeclare integers n, m\nread n, m\nfor i = 0 to n exclusive, read mp[0][i]\nfor i = 0 to m exclusive, read mp[1][i]\ndeclare integers i, j\nfor i = 0 to n - m inclusive\nfor j = 0 to n - m inclusive\ndeclare boolean ok = true\nfor p = 0 to p is less than m and ok, incrementing p, let ok be ok bitwise and not ( memory compare ( address of mp[0][i + p][0] and address of mp[1][p][j] comparing m bytes ) )\nif ok is true\nprint i + 1, ' ', j + 1, newline
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tvector<string> v1(2002), v2(202), v3(2002), v4(2002);\n\tfor (int i = 0; i < n; i++) cin >> v1[i];\n\tfor (int i = 0; i < m; i++) cin >> v2[i];\n\tfor (int i = 0; i + m <= n; i++)\n\t\tfor (int j = 0; j < m; j++) v3[i] += v1[i + j];\n\tfor (int i = 0; i + m <= n; i++)\n\t\tfor (int j = 0; j < m; j++) v4[i] += v2[j].substr(i, m);\n\tfor (int i = 0; i + m <= n; i++)\n\t\tfor (int j = 0; j + m <= n; j++)\n\t\t\tif (v3[i] == v4[j]) {\n\t\t\t\tcout << i + 1 << ' ' << j + 1 << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\treturn 0;\n}	n, m = int\nread n, m\nlet v1(2002), v2(202), v3(2002), v4(2002) be vector of string\nfor i = 0 to n exlcusive, read v[i]\nread the first m elements of v2\nfor i = 0 until i+m <=n increment i after\nfor j = 0 to m exlcusive, increment v3 at i by v1[i+j]\nfor i = 0 until i+m <= n increment i after\nfor j = 0 to m exclusive, increment v4[j] by substring of v2[j] form i to m\nfor i = 0 until i+m <= n\nfor j = 0 until j + m <= n\nif v3 at i is v4 at j\nprint i + 1 << ' ' << j + 1 <<
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n, r;\n\t\tcin >> n >> r;\n\t\tfor (int i = 1, x; i < n; ++i) cin >> x, r -= x;\n\t\tcout << (r % n + n) % n + 1 << '\n';\n\t}\n}	t = int\nread t\nloop t times\nn, r = int\nread n then r\nx = int then for i = 1 to n read x then decrement r by x\nprint (r mod n + n) mod n + 1
int main() {\n\tint t, n, r, k;\n\tint q[5];\n\tcin >> t;\n\tfor (int i = 0; i < t; i++) {\n\t\tk = 0;\n\t\tcin >> n >> r;\n\t\tfor (int j = 0; j < n - 1; j++) {\n\t\t\tcin >> q[j];\n\t\t\tk = k + q[j];\n\t\t}\n\t\tcout << ((r - k) % n + n) % n + 1 << endl;\n\t}\n\treturn 0;\n}	t, n, r, k = integer\nq = integer array of size 5\nread t\nfor i = 0 to t exclusive\nk = 0\nread n, r\nfor j = 0 to n - 1 exclusive\nread q[j]\nk = k + q[j]\nprint the result of ((r - k) modulo n + n) modulo n + 1
"int main() {\n\tint test;\n\tcin >> test;\n\twhile (test--) {\n\t\tint n, r;\n\t\tcin >> n >> r;\n\t\tint sum = r;\n\t\tfor (int i = 0; i < n - 1; ++i) {\n\t\t\tint val;\n\t\t\tcin >> val;\n\t\t\tsum -= val;\n\t\t}\n\t\tsum = (sum % n + n) % n;\n\t\tcout << (sum + 1) << ""\n"";\n\t}\n\treturn 0;\n}"	test = integer\nread test\nwhile looping decrease test by 1\nn, r = integers\nread n, r\nsum = integer = r\nfor i = 0 to n - 1 exclusive\nval = integer\nread val\nsum = sum - val\nsum = (sum modulo n + n) modulo n\nprint the result of sum + 1
int main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tunsigned int a, b, sum = 0;\n\t\tcin >> a >> b;\n\t\tfor (int i = 1; i < a; ++i) {\n\t\t\tint c;\n\t\t\tcin >> c;\n\t\t\tsum += c;\n\t\t}\n\t\tsum %= a;\n\t\tsum = (a + b - sum) % a;\n\t\tcout << sum + 1 << endl;\n\t}\n\treturn 0;\n}	create int n\nread n\nwhile decrement n\ncreate unsigned int a, b and sum, set sum to 0\nread a and b\nfor i=1 to a exclusive\ncreate int c\nread c\nset sum to sum + c\nassign sum mod a to sum\nsum = (a + b - sum) % a\nprint sum +1
int nums[5], r, n, T;\nint main() {\n\tcin >> T;\n\twhile (T--) {\n\t\tcin >> n >> r;\n\t\tint sum = 0;\n\t\tfor (int c = 1; c < n; c++) {\n\t\t\tint i;\n\t\t\tcin >> i;\n\t\t\tsum -= i;\n\t\t}\n\t\tsum += r;\n\t\tsum += n * 1000;\n\t\tcout << (sum % n + 1) << endl;\n\t}\n}	create int nums[5], r, n, T\nread T\nwhile decrement T\nread n and r\nset sum to 0\nfor c=1 to n exclusive\ncreate int i\nread i\nset sum to sum -i\nset sum = sum +r\nassign sum + n*1000 to sum\nprint sum mod n + 1
long long no[300001], appr[300001], st[300001];\nvector<long long> app[300001];\nint main() {\n\tlong long i, j, n, m, k, cnt = 0, ans = 0, t = 1;\n\tcin >> n >> t;\n\tvector<long long> v;\n\tlong long pos = 0;\n\twhile (t--) {\n\t\tcin >> m >> k;\n\t\tif (m == 1) {\n\t\t\tno[cnt] = k;\n\t\t\tapp[k].push_back(cnt);\n\t\t\tst[cnt] = 0;\n\t\t\tv.push_back(cnt);\n\t\t\tcnt++;\n\t\t\tans++;\n\t\t} else if (m == 2) {\n\t\t\tfor (i = appr[k]; i < app[k].size(); i++) {\n\t\t\t\tif (st[app[k][i]] == 0) ans--;\n\t\t\t\tst[app[k][i]] = 1;\n\t\t\t}\n\t\t\tappr[k] = app[k].size();\n\t\t} else {\n\t\t\tfor (i = pos; i < k; i++) {\n\t\t\t\tif (st[v[i]] == 0) ans--;\n\t\t\t\tst[v[i]] = 1;\n\t\t\t}\n\t\t\tpos = max(pos, k);\n\t\t}\n\t\tcout << ans << '\n';\n\t}\n\treturn 0;\n}	no, appr, st = long long arrays all with length 300001\napp = long long vector with length 300001\ni, j, n, m, k, cnt, ans, t = long long with cnt and ans having value of 0 and t having value of 1\nread n and t\nv = long long vector\npos = long long with value of 0\nwhile t is not zero subtract 1 from t and do\nread m and k\nif m equals 1\nset no[cnt] to k\nappend cnt to the end of app[k]\nset st[cnt] to 0\nappend cnt to the end of v\nadd 1 to cnt\nadd 1 to ans\nelse if m equals 2\nfor i = appr[k] to the size of app[k] exclusive\nif st[app[k][i]] equals 0 subtract 1 from ans\nset st[app[k][i]] to 1\nset appr[k] to the size of app[k]\nelse\nfor i = pos to k exclusive\nif st[v[i]] equals 0 subtract 1 from ans\nset st[v[i]] to 1\nset pos to the maximum of pos and k\nprint ans
const int MAXN = 3 * 1e5 + 5;\nint N, M, S, x, y, j, z, r;\nvector<int> V[MAXN];\nint v[MAXN];\nbool R[MAXN];\nint main() {\n\tcin >> N >> M;\n\twhile (M--) {\n\t\tcin >> x >> y;\n\t\tif (x == 1) {\n\t\t\tV[y].push_back(j);\n\t\t\tj++;\n\t\t\tS++;\n\t\t}\n\t\tif (x == 2) {\n\t\t\tz = (int)V[y].size();\n\t\t\tfor (int i = v[y]; i < z; i++) {\n\t\t\t\tif (!R[V[y][i]]) S--;\n\t\t\t\tR[V[y][i]] = true;\n\t\t\t}\n\t\t\tv[y] = z;\n\t\t}\n\t\tif (x == 3) {\n\t\t\tfor (int i = r; i < y; i++) {\n\t\t\t\tif (!R[i]) S--;\n\t\t\t\tR[i] = true;\n\t\t\t}\n\t\t\tr = max(r, y);\n\t\t}\n\t\tcout << S << endl;\n\t}\n}	MAXN = 3 * 1e5 + 5\ncreate int N, M, S, x, y, j, z, r\ncreate vector int V[MAXN]\ncreate int v[MAXN]\ncreate bool R[MAXN]\nread N and M\nwhile decrement M\nread x and y\nif x = 1\nassign j to last element of V[y]\nincrement j\nincrement S\nif x = 2\nset z to size of V[y]\nfor i=v[y] to z exclusive\nif R[V[y][i]] = 0, decrement S\nset R[V[y][i]] = true\nset v[y] = z\nif x = 3\nfor i=r to y exclusive\nif R[i]=0, decrement S\nassign true to R[i]\nset r to max of r and y\nprint S
vector<int> mp[100010 * 3], dis[100010 * 3];\nint u, v, c;\nlong long res;\nlong long a[100010 * 3];\nlong long dp[100010 * 3], dp_max[100010 * 3];\nvoid dfs(int x, int y) {\n\tlong long max1 = 0;\n\tlong long max2 = 0;\n\tfor (int i = 0; i < mp[x].size(); i++) {\n\t\tint f = mp[x][i];\n\t\tif (f == y) continue;\n\t\tdfs(f, x);\n\t\tif (dp[f] - dis[x][i] > max1) {\n\t\t\tmax2 = max1;\n\t\t\tmax1 = dp[f] - dis[x][i];\n\t\t} else if (dp[f] - dis[x][i] == max1) {\n\t\t\tmax2 = max1;\n\t\t} else {\n\t\t\tif (dp[f] - dis[x][i] > max2) max2 = dp[f] - dis[x][i];\n\t\t}\n\t}\n\tdp_max[x] = max1 + max2 + a[x];\n\tdp[x] = max1 + a[x];\n\tres = max(max(dp[x], dp_max[x]), res);\n}\nint main() {\n\tint t;\n\tcin >> t;\n\tres = 0;\n\tfor (int i = 1; i <= t; i++) cin >> a[i];\n\tt -= 1;\n\twhile (t--) {\n\t\tcin >> u >> v >> c;\n\t\tmp[u].push_back(v);\n\t\tmp[v].push_back(u);\n\t\tdis[u].push_back(c);\n\t\tdis[v].push_back(c);\n\t}\n\tdfs(1, -1);\n\tcout << res << endl;\n\treturn 0;\n}	declare integers vector arrays mp and dis with size 100010 * 3\ncreate ints u, v and c\ndeclare long long res\ncreate long long array a with 100010 * 3 elements\ncreate long long arrays dp and dp_max with 100010 * 3 elements\ndfs is a void function with int arguments x and y\ncreate long long max1 = 0\ncreate long long max2 = 0\nloop i from 0 to length of mp[x] exclusive\ndeclare integer f = mp[x][i]\nif f = y, skip the rest of the loop\ncall function dfs with arguments f and x\nif dp[f] - dis[x][i] is greater than max1\nset max2 to max1\nassign dp[f] - dis[x][i] to max1\nelse if dp[f] - dis[x][i] = max1\nset value of max2 to max1\nelse\nif dp[f] - dis[x][i] is greater than max2, change max2 to dp[f] - dis[x][i]\nassign max1 + max2 + a[x] to dp_max[x]\nchange dp[x] to max1 + a[x]\nassign max of max(dp[x], dp_max[x]) and res to res\ndeclare int t\nread t\nset res to 0\nfor i = 1 to t inclusive, read a[i]\nsubtract 1 from t\ndecrement t and loop further, while t is not 0\nread u, v and c\npush v into mp[u]\npush u into mp[v]\npush c into dis[u]\npush c into dis[v]\ncall function dfs with arguments 1 and -1\nprint res
"long long m, a[200000];\npair<long long, long long> b[200000];\nlong long cnt[200000];\nint main() {\n\tcin >> m;\n\tfor (int i = 0; i < m; ++i) cin >> a[i];\n\tfor (int i = 0; i < m; ++i) {\n\t\tcin >> b[i].first;\n\t\tb[i].second = i;\n\t}\n\tsort(a, a + m);\n\tsort(b, b + m);\n\treverse(b, b + m);\n\tfor (int i = 0; i < m; ++i) { cnt[b[i].second] = a[i]; }\n\tfor (int i = 0; i < m; ++i) cout << cnt[i] << "" \n""[i == m - 1];\n\treturn 0;\n}"	"create long long m and an array of long longs a with size 200000\ncreate array of long long pairs b with size 200000\ncreate long long array cnt with size 200000\nread m\nfor integer i = 0 to m exclusive read a[i]\nfor i = 0 to m exclusive\nread b[i].first\nb[i].second = i\nsort array a\nsort b\nreverse b\nfor i = 0 to m exclusive, set cnt[b[i].second] to a[i]\nfor i = 0 to m exclusive, print cnt[i] and "" \n""[i == m - 1]"
