code	nl
"int main() {\n\tint n;\n\tcin >> n;\n\tint cur = 1, cnt = 0;\n\tvector<int> ans;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (x == cur) {\n\t\t\tcnt++;\n\t\t\tcur++;\n\t\t} else {\n\t\t\tans.push_back(cnt);\n\t\t\tcnt = 1;\n\t\t\tcur = 2;\n\t\t}\n\t\tif (i == n - 1) { ans.push_back(cnt); }\n\t}\n\tcout << (int)ans.size() << endl;\n\tfor (int i = 0; i < (int)ans.size(); i++) {\n\t\tif (i > 0) cout << "" "";\n\t\tcout << ans[i];\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"create integer n\nread n\ncreate integers cur, cnt with cur = 1, cnt = 0\ncreate integer vector ans\nfor i = 0 to n exclusive\ncreate integer x\nread x\nif x is cur\nincrement cnt\nincrement cur\nelse\nadd element cnt to end of ans\nset cnt to 1\nset cur to 2\nif i is n - 1, add element cnt to end of ans\nprint integer casted size of ans print newline\nfor i = 0 to integer casted size of ans exclusive\nif i is greater than 0, print "" ""\nprint ans[i]\nprint newline"
"int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a[n];\n\t\tint b[n];\n\t\tint max;\n\t\tint count = 0;\n\t\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\t\tmax = a[0];\n\t\tfor (int q = 1; q < n; q++) {\n\t\t\tif (a[q] == 1) { b[++count] = a[q - 1]; }\n\t\t}\n\t\tcout << count + 1 << endl;\n\t\tfor (int j = 1; j <= count; j++) cout << b[j] << "" "";\n\t\tcout << a[n - 1] << endl;\n\t}\n\treturn 0;\n}"	let n be an integer\nwhile reading n\nlet a be an integer array of length n\nlet b be an integer array of length n\nlet max be an int\nlet count = 0 be an int\nread a n times\nset max = a at 0\nfor q = 1 to n exclusive\nif a at q is 1 then increment count, set b[count] to a[q-1]\nprint count + 1\nfor j = 1 to count inclusive print b\nprint a[n-1]
"int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n], ct = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tif (arr[i] == 1) ct++;\n\t}\n\tcout << ct << endl;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (arr[i] == 1) cout << arr[i - 1] << "" "";\n\t}\n\tcout << arr[n - 1] << endl;\n\treturn 0;\n}"	"create int n\nread n\ndeclare int array arr with n elements and int variable ct = 0\nchange i from 0 to n exclusive in a loop\nread input to arr[i]\nif arr[i] is equal to 1, increment ct\nprint ct\nfor i from 1 to n exclusive\nif arr[i] is equal to 1, print arr[i - 1] and "" ""\nprint arr[n - 1]"
"int main() {\n\tint n;\n\tcin >> n;\n\tint a[n + 1], i, j, k = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] == 1) k++;\n\t}\n\tcout << k << endl;\n\tfor (i = 1; i < n; i++) {\n\t\tif (a[i] == 1) cout << a[i - 1] << "" "";\n\t}\n\tcout << a[n - 1] << endl;\n}"	"n = int\nread n\ni, j, k= int with k = 0 and a = int array of size n + 1\nfor i = 0 to n\nread a[i]\nif a[i] is 1 then increment k\nprint k\nfor i = 1 to n\nif a[i] is 1 print a[i - 1] and "" ""\nprint a[n - 1]"
"int main() {\n\tint n;\n\tcin >> n;\n\tint a[1005];\n\tint ans[1005];\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tint j = 0;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (a[i + 1] <= a[i]) { ans[j++] = a[i]; }\n\t}\n\tans[j++] = a[n];\n\tcout << j << endl;\n\tfor (int i = 0; i < j - 1; i++) cout << ans[i] << "" "";\n\tcout << ans[j - 1] << endl;\n\treturn 0;\n}"	"declare int variable n\nread n\ndeclare an array of integers a with size 1005\ndeclare an array of integers ans with size 1005\nfor i from 1 to n inclusive, read a[i]\ncreate integer j = 0\nloop i from 1 to n exclusive\nif a[i + 1] <= a[i], set ans[j] to a[i] and increment j\nset ans[j] to a[n] and increment j\nprint j\nfor i = 0 to j - 1 exclusive, print ans[i] and "" ""\nprint ans[j - 1]"
"const int maxn = 1e3 + 5;\nint arr[maxn];\nint stc[maxn];\nint main() {\n\tint n, top;\n\twhile (cin >> n) {\n\t\ttop = 0;\n\t\tfor (int i = 0; i < n; ++i) { cin >> arr[i]; }\n\t\tint i;\n\t\tfor (i = 0; i < n - 1; ++i) {\n\t\t\tif (arr[i + 1] == 1) { stc[top++] = arr[i]; }\n\t\t}\n\t\tstc[top++] = arr[i];\n\t\tcout << top << endl << stc[0];\n\t\tfor (int i = 1; i < top; ++i) { cout << "" "" << stc[i]; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	maxn = const integer with maxn = 1e3 + 5\narr = integer array of size maxn\nstc = integer array of size maxn\nn, top = integers\nwhile read n\ntop = 0\nfor i = 0 to n exclusive, readarr[i]\ni = integer\nfor i = 0 to n - 1 exclusive\nif arr[i + 1] is 1, stc[increment top] = arr[i]\nstc[increment top] = arr[i]\nprint top,stc[0]\nfor i = 1 to top exclusive, print stc[i]\nprint next line
"int main() {\n\tint n;\n\tcin >> n;\n\tint nxt = 1;\n\tvector<int> ans;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (x != nxt) { ans.push_back(nxt - 1); }\n\t\tnxt = x + 1;\n\t}\n\tans.push_back(nxt - 1);\n\tcout << (int)ans.size() << endl;\n\tfor (int i = 0; i < (int)ans.size(); i++) {\n\t\tif (i > 0) cout << "" "";\n\t\tcout << ans[i];\n\t}\n\tcout << endl;\n\treturn 0;\n}"	n = integer\nread n\nnxt = integer = 1\nans = integer vector\nfor i = 0 to n exclusive\nx = integer\nread x\nif x is not nxt, then push back the values of ans and insert a new element of nxt - 1 at the end of ans\nnxt = x + 1\npush back the values of ans and insert a new element of nxt - 1 at the end of ans\nprint size of ans in integer form\nfor i = 0 to size of ans in integer form\nif i > 0, then print a space\nprint ans[i]\nprint endline
"int main() {\n\tint a[1001], n, sum = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tif (a[i] == 1) sum++;\n\tcout << sum << endl;\n\tfor (int i = 1; i < n; i++)\n\t\tif (a[i + 1] == 1) cout << a[i] << "" "";\n\tcout << a[n] << endl;\n\treturn 0;\n}"	a = int array of length 1001, n = int, s = int= 0\nread n\nread n values into array a\nfor i = 1 to n inclusive\nif a at i is 1 increment sum\nprint sum\nfor i = 1 to n exclusive\nif a at i + 1 is 1 print a at i\nprint a at n
"int main() {\n\tint n, arr[1001], c = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tif (arr[i] == 1) c++;\n\t}\n\tcout << c << endl;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (arr[i] == 1) { cout << arr[i - 1] << "" ""; }\n\t}\n\tcout << arr[n - 1] << endl;\n\treturn 0;\n}"	"create integers n, c with c = 0, create integer array arr with size 1001\nread n\nfor i = 0 to n exclusive\nread arr[i]\nif arr[i] is 1 increment c\nprint c print newline\nfor i = 1 to n exclusive\nif arr[i] is 1, print arr[i-1] print "" ""\nprint arr[n-1] print newline"
"int main() {\n\tint n;\n\tint val;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (i > 0) { cout << "" ""; }\n\t\tcin >> val;\n\t\tcout << (val - ((val + 1) % 2));\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"n =integer\nval = integer\nRead n\nfor i = 0 to n exclusive\nif i is greater than 0, print "" ""\nRead val\nprint val - (val + 1) % 2 and a new line\nprint a new line"
"int n;\nint main() {\n\tcin >> n;\n\tint a[n + 10];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] % 2 == 0) { a[i] -= 1; }\n\t}\n\tfor (int j = 0; j < n - 1; j++) { cout << a[j] << "" ""; }\n\tcout << a[n - 1] << endl;\n\treturn 0;\n}"	n = integer\nRead n\na = array of n+10 integers\nfor i = 0 to n exclusive\nRead n values into array a\nif a[i] modulo 2 is 0, then set a[i] to a[i] - 1\nprint a[j] and a new line\nprint a[n - 1] and a new line
"int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint flag = 1;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint num;\n\t\t\tcin >> num;\n\t\t\tif (num == 0) {\n\t\t\t\tif (flag)\n\t\t\t\t\tcout << num, flag = 0;\n\t\t\t\telse\n\t\t\t\t\tcout << "" "" << num;\n\t\t\t} else if (num % 2 == 0) {\n\t\t\t\tif (flag)\n\t\t\t\t\tcout << num - 1, flag = 0;\n\t\t\t\telse\n\t\t\t\t\tcout << "" "" << num - 1;\n\t\t\t} else {\n\t\t\t\tif (flag)\n\t\t\t\t\tcout << num, flag = 0;\n\t\t\t\telse\n\t\t\t\t\tcout << "" "" << num;\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n}"	"create integer n\nwhile read n is true\ncreate integer flag with flag = 1\nfor i = 0 to n exclusive\ncreate integer num\nread num\nif num is 0\nif flag is true\nprint num, set flag to 0\nelse\nprint "" "" print num\nelse if num % 2 is 0\nif flag is true\nprint num - 1, set flag to 0\nelse\nprint "" "" print num - 1\nelse\nif flag is true\nprint num, flag with flag = 0\nelse\nprint "" "" print num\nprint newline"
"int a[10000];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] % 2 == 0) a[i] -= 1;\n\t\tif (i == n)\n\t\t\tcout << a[i] << endl;\n\t\telse\n\t\t\tcout << a[i] << "" "";\n\t}\n\treturn 0;\n}"	array of 1000 = a\nintegers = n\nread n\nread in a until i = n inclusive\nfor i = 0 to n inclusive\nif a[i] modulo 2 is 0 then do the following a[i] -= 1\nif i = n then do the following\noutput a[i]\nelse\noutput a[i],
"int n;\nint main() {\n\tcin >> n;\n\tint a[n + 10];\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t\tif (a[i] % 2 == 0) { a[i] -= 1; }\n\t}\n\tfor (int j = 0; j < n - 1; ++j) { cout << a[j] << "" ""; }\n\tcout << a[n - 1] << endl;\n\treturn 0;\n}"	"create integer n\nread n\ncreate integer array a with size n + 10\nfor i = 0 to n exclusive\nread a[i]\nif a[i] % 2 is 0, decrement a[i] by 1\nfor j = 0 to n - 1 exclusive, print a[j] print "" ""\nprint a[n-1] print newline"
"const int N = 1e5 + 50;\nint T, n, m, L, R;\nlong long a[2 * N];\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n * 2; i++) { cin >> a[i]; }\n\tif (n <= 1) {\n\t\tcout << ""0"" << endl;\n\t\treturn 0;\n\t}\n\tsort(a, a + 2 * n);\n\tlong long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n\tlong long C = a[2 * n - 1] - a[0];\n\tfor (int i = 1; i <= n; i++) {\n\t\tlong long temp = C * (a[i + n - 1] - a[i]);\n\t\tans = min(ans, temp);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	"declare const int N = 1e5 + 50\ndeclare ints T, n, m, L and R\ndeclare long long array a with size 2 * N\nread input to n\nfor i from 0 to n * 2 exclusive, read a[i]\nif n <= 1\nprint ""0""\nsort a from the start to the position 2 * n\ndeclare long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\ndeclare long long C = a[2 * n - 1] - a[0]\nfor i = 1 to n inclusive\ndeclare long long variable temp = C * (a[i + n - 1] - a[i])\nset ans to min of ans and temp\nprint ans"
int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tlong long a[2 * n + 10];\n\t\tfor (int i = 0; i < 2 * n; i++) cin >> a[i];\n\t\tsort(a, a + 2 * n);\n\t\tlong long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n\t\tfor (int i = 1; i < n; i++) ans = min(ans, (a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]));\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n = long long\nwhile the loop reads n\na = long long array of size 2 * n +10\nfor i = 0 to 2 * n exclusive, read a[i]\nsort a in ascending order\nans = long long = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\nfor i = 1 to n exclusive, ans = the minimum value between ans and (a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i])\nprint ans
const int sz = 200010;\nlong long int a[sz];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n\tsort(a, a + 2 * n);\n\tlong long int ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n\tfor (int i = n; i < 2 * n; i++) { ans = min(ans, (a[2 * n - 1] - a[0]) * (a[i] - a[i - n + 1])); }\n\tcout << ans << endl;\n\treturn 0;\n}	create constant integer sz with sz = 200010\ncreate long long integer array a with size sz\ncreate integer n\nread n\nfor i = 0 to 2 * n exclusive, read [i]\nsort elements from a to a + 2 * n\ncreate long long integer ans with ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\nfor i = n to 2 * 2 exclusive, set ans to minimum of ( ans and (a[2 * n - 1] - a[0]) * (a[i] - a[i - n + 1]) )\nprint ans print newline
const int N = 2e6 + 5;\nlong long a[N];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < 2 * n; i++) cin >> a[i];\n\tsort(a, a + 2 * n);\n\tlong long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n\tfor (int i = 1; i < n; i++) ans = min(ans, (a[i + n - 1] - a[i]) * (a[2 * n - 1] - a[0]));\n\tcout << ans << endl;\n\treturn 0;\n}	set N to 2e6 + 5\ncreate long long a[N]\ncreate int n\nread n\nfor i=0 to 2*n, read a[i]\nsort elements between a and a + 2*n\nset ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\nfor i=1 to n exclusive, set and to min(ans, (a[i + n - 1] - a[i]) * (a[2 * n - 1] - a[0]))\nprint ans
const int N = 2e5 + 50;\nconst int M = 1e6;\nconst long long oo = 1e18;\nconst int mod = 1e9 + 7;\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<long long> a(2 * n);\n\tfor (int i = 0; i < n * 2; i++) cin >> a[i];\n\tsort(a.begin(), a.end());\n\tlong long ans = (a[n - 1] - a[0]) * (a.back() - a[n]);\n\tfor (int i = 1; i < n; i++) { ans = min(ans, (a[i + n - 1] - a[i]) * (a.back() - a[0])); }\n\tcout << ans << endl;\n}	N = const integer with N = 2e5 + 50\nM = const integer with M = 1e6\noo = const long long with oo = 1e18\nmod = const integer mod = 1e9 + 7\nn = integer\nread n\na(2 * n) = vector of long long\nfor i = 0 to n * 2 exclusive, read a[i]\nsort a.begin() and a.end()\nans = long long with ans = (a[n - 1] - a[0]) * (a.back() - a[n])\nfor i = 1 to n exclusive, ans = min(ans, (a[i + n - 1] - a[i]) * (a.back() - a[0]))\nprint ans
const int INF = 0x3f3f3f3f;\nconst int maxa = 1e5 + 10;\nint a[maxa << 1];\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint i;\n\t\tfor (i = 0; i < 2 * n; i++) cin >> a[i];\n\t\tsort(a, a + 2 * n);\n\t\tlong long x = a[n - 1] - a[0];\n\t\tlong long y = a[2 * n - 1] - a[n];\n\t\tlong long minsq = x * y;\n\t\tx = a[2 * n - 1] - a[0];\n\t\tfor (i = 1; i < n; i++) {\n\t\t\ty = a[i + n - 1] - a[i];\n\t\t\tminsq = min(minsq, x * y);\n\t\t}\n\t\tcout << minsq << endl;\n\t}\n\treturn 0;\n}	declare const int INF = 0x3f3f3f3f\ncreate const int maxa = 1e5 + 10\ndeclare int array a with size maxa << 1\ndeclare integer variable n\nread n and loop further\ndeclare int variable i\nfor i = 0 to 2 * n exclusive, read a[i]\nsort a\ndeclare long long x = a[n - 1] - a[0]\ncreate long long y = a[2 * n - 1] - a[n]\ndeclare long long minsq = x * y\nset x to a[2 * n - 1] - a[0]\nfor i from 1 to n exclusive\nset y to a[i + n - 1] - a[i]\nchange minsq to min of minsq and x * y\nprint minsq
int N;\nlong long A[200005];\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i <= 2 * N - 1; i++) cin >> A[i];\n\tsort(A, A + 2 * N);\n\tlong long Ans = (A[N - 1] - A[0]) * (A[2 * N - 1] - A[N]);\n\tfor (int i = 1; i <= N - 1; i++) { Ans = min(Ans, (A[2 * N - 1] - A[0]) * (A[i + N - 1] - A[i])); }\n\tcout << Ans << '\n';\n\treturn 0;\n}	create integer N\ncreate long long array A with size 200005\nread N\nfor i = 0 to 2 * N - 1 inclusive, read A[i]\nsort elements from A to A + 2 * N\ncreate long long Ans with Ans = (A[N - 1] - A[0]) * (A[2 * N - 1] - A[N])\nfor i = 1 to N - 1 inclusive, set Ans to minimum of Ans and (A[2 * N - 1] - A[0]) * (A[i + N - 1] - A[i])\nprint Ans print '\n'
int niz[200005];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) { cin >> niz[i]; }\n\tsort(niz + 1, niz + 2 * n + 1);\n\tint dx = niz[n] - niz[1];\n\tint dy = niz[2 * n] - niz[n + 1];\n\tlong long int p = 0;\n\tp = (long long int)dx * dy;\n\tlong long int tren = 0;\n\tfor (int i = n + 1; i <= 2 * n - 1; i++) {\n\t\ttren = (long long int)(niz[i] - niz[i - n + 1]) * (niz[2 * n] - niz[1]);\n\t\tif (tren < p) p = tren;\n\t}\n\tcout << p << endl;\n\treturn 0;\n}	niz = array of integers of length 200005\nlet n be a integer\nread n\nfor i = 1 to 2 * n inclusive , read niz[i]\nsort the values niz + 1 and niz + 2 * n + 1\nlet dx be a integer with dx = niz[n] - niz[1]\nlet dy be a integer with dy = niz[2 * n] - niz[n + 1]\nlet p be a long integer with p = 0\nthe value (long long int)dx * dy is initialized to p\nset the long integer tren to 0\nfor i = n + 1 to 2 * n - 1 inclusive\nthe long integer value of (niz[i] - niz[i - n + 1]) * (niz[2 * n] - niz[1]) is assigned to tren\nif tren is less than p , the value of p is equal to tren\nprint p and newline
long long n, a[1000001];\nint main() {\n\tcin >> n;\n\tn *= 2;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tlong long ans = (a[n / 2] - a[1]) * (a[n] - a[n / 2 + 1]);\n\tfor (int i = 2; i <= n / 2 + 1; i++) ans = min(ans, (a[i + n / 2 - 1] - a[i]) * (a[n] - a[1]));\n\tcout << ans << endl;\n\treturn 0;\n}	declare long long n and long long array a with size 1000001\nread n\nmultiply n by 2\nloop i from 1 to n inclusive, read a[i]\nsort a from element 1 to n + 1\ncreate long long ans = (a[n / 2] - a[1]) * (a[n] - a[n / 2 + 1])\nloop i from 2 to n / 2 + 1 inclusive, assign min of ans and (a[i + n / 2 - 1] - a[i]) * (a[n] - a[1]) to ans\nprint ans
long long a[202000];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= (n << 1); ++i) { cin >> a[i]; }\n\tsort(a + 1, a + 1 + n + n);\n\tlong long s = 1ll << 62;\n\ts = min(s, (a[n] - a[1]) * (a[n << 1] - a[n + 1]));\n\tfor (int i = 2; i <= n; i++) { s = min(s, (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])); }\n\tcout << s << endl;\n\treturn 0;\n}	declare long long array a with size 202000\ndeclare integer n\nread input to n\nfor i = 1 to n << 1 inclusive, read a[i]\nsort a fron index 1 to 1 + n + n\nlong long s = 1ll << 62\nset s to min of s and (a[n] - a[1]) * (a[n << 1] - a[n + 1])\nfor i from 2 to n inclusive, change s to min of s and (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])\nprint s
int flag;\nint n, m, len;\nlong long a[200005];\nlong long ans, temp;\nint main() {\n\twhile (cin >> n) {\n\t\tfor (int i = 0; i < 2 * n; ++i) cin >> a[i];\n\t\tsort(a, a + n + n);\n\t\tans = (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0]);\n\t\ttemp = a[2 * n - 1] - a[0];\n\t\tfor (int i = 1; i < n; ++i) { ans = min(ans, temp * (a[i + n - 1] - a[i])); }\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	flag = int\nn, m, len = int\na = long long array of size 200005\nans, temp = long long\nloop while reading n\nread 2 * n values into a\nsort a\nset ans to (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0])\nset temp to a[2 * n - 1] - a[0]\nfor i = 1 to n set ans to min of ans and temp * (a[i + n - 1] - a[i])\nprint ans
int flag;\nint n, m, len;\nlong long a[200005];\nlong long ans, temp;\nint main() {\n\twhile (cin >> n) {\n\t\tfor (int i = 0; i < 2 * n; ++i) cin >> a[i];\n\t\tsort(a, a + n + n);\n\t\tans = (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0]);\n\t\ttemp = a[2 * n - 1] - a[0];\n\t\tfor (int i = 1; i < n; ++i) { ans = min(ans, temp * (a[i + n - 1] - a[i])); }\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	create integer flag\ncreate integers n, m, len\ncreate long long array a with size 200005\ncreate long longs ans, temp\nwhile read n is true\nfor i = 0 to 2 * n exclusive, read a[i]\nsort elements from a to a + n + n\nset ans to (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0])\nset temp to a[2 * n - 1] - a[0]\nfor i = 1 to n exclusive, set ans to minimum of ans and temp * (a[i + n - 1] - a[i])\nprint ans print newline
const int maxn = 2e5 + 10;\nlong long a[maxn];\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long ans = 0;\n\tfor (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n\tsort(a, a + 2 * n);\n\tans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n\tfor (int i = 1; i < n; i++) { ans = min((a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]), ans); }\n\tcout << ans << endl;\n\treturn 0;\n}	maxn = const integer with maxn = 2e5 + 10\na = array of size maxn long long\nn = integer\nread n\nans = long long with ans = 0\nfor i = 0 to 2 * n exclusive, read a[i]\nsort a and a + 2 * n\nans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\nfor i = 1 to n exclusive, ans = min((a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]), ans)\nprint ans
int n;\nlong long a[200001], ans;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= (n << 1); i++) cin >> a[i];\n\tsort(a + 1, a + (n << 1) + 1);\n\tans = (a[n] - a[1]) * (a[n << 1] - a[n + 1]);\n\tfor (int i = 1; i < n; i++) ans = min((a[n << 1] - a[1]) * (a[n + i] - a[i + 1]), ans);\n\tcout << ans << endl;\n\treturn 0;\n}	n = integer\na = long long array of size 200001, ans = long long\nread n\nfor i = 1 to (left shift n 1 place), read a[i]\nsort a + 1 and a + (n << 1) + 1\nans = (a[n] - a[1]) * (a[shift n 1 place] - a[n + 1])\nfor i = 1 to n exclusive, ans = min((a[left shift n 1 place] - a[1]) * (a[n + i] - a[i + 1]), ans)\nprint ans
long long in[200010];\nint n, n2;\nlong long ans;\nint main() {\n\tcin >> n;\n\tn2 = n * 2;\n\tfor (int i = 0; i < n2; i++) cin >> in[i];\n\tsort(in, in + n2);\n\tans = (in[n - 1] - in[0]) * (in[n2 - 1] - in[n]);\n\tfor (int i = 1; i < n; i++) ans = min(ans, (in[n - 1 + i] - in[i]) * (in[n2 - 1] - in[0]));\n\tcout << ans << '\n';\n\treturn 0;\n}	let in be long long array with size 200010\ncreate ints n and n2\ndeclare long long ans\nread n\nchange n2 to n * 2\nfor integer i = 0 to n2 exclusive, read in[i]\nsort n2 elements of in\nassign (in[n - 1] - in[0]) * (in[n2 - 1] - in[n]) to ans\nfor i from 1 to n exclusive, set ans to min of ans and in[n - 1 + i] - in[i]) * (in[n2 - 1] - in[0]\nprint ans and '\n'
long long a[200020];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= 2 * n; i++) cin >> a[i];\n\tsort(a + 1, a + 2 * n + 1);\n\tlong long min1 = (a[n] - a[1]) * (a[2 * n] - a[n + 1]);\n\tfor (int i = 2; i <= n + 1; i++) { min1 = min(min1, (a[2 * n] - a[1]) * (a[i + n - 1] - a[i])); }\n\tcout << min1 << endl;\n\treturn 0;\n}	create long long array of length 200020\ncreate int n\nread n\nfor i=1 to 2*n inclusive, read a[i]\nsort elements between a+1 and a + 2 * n + 1\nset min1 to (a[n] - a[1]) * (a[2 * n] - a[n + 1])\nfor i=2 to n+1 inclusive, assign min of min1 and (a[2 * n] - a[1]) * (a[i + n - 1] - a[i]) to min1\nprint min1
long long a[202000];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= (n << 1); ++i) { cin >> a[i]; }\n\tsort(a + 1, a + 1 + n + n);\n\tlong long s = (s, (a[n] - a[1]) * (a[n << 1] - a[n + 1]));\n\tfor (int i = 2; i <= n; i++) { s = min(s, (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])); }\n\tcout << s << endl;\n\treturn 0;\n}	create long long array a with size 202000\ncreate integer n\nread n\nfor i = 1 to i is less than or equal to ( n bitshift left 1 ), incrementing i, read a[i]\nsort elements from a + 1 to a + 1 + n + n\ncreate long long s with s = (s, (a[n] - a[1]) * (a[n bitshift left 1] - a[n + 1]))\nfor i = 2 to n inclusive, set s to minimum of ( s and (a[n bitshift left 1] - a[1]) * (a[n + i - 1] - a[i])\nprint s print newline
int main() {\n\tint n;\n\tcin >> n;\n\tvector<long long> a(n * 2);\n\tfor (int i = 0; i < n * 2; i++) { cin >> a[i]; }\n\tsort(a.begin(), a.end());\n\tlong long ans = LLONG_MAX;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (i == 0) {\n\t\t\tans = min(ans, (a[n - 1] - a[0]) * (a[n * 2 - 1] - a[n]));\n\t\t} else {\n\t\t\tans = min(ans, (a[i + n - 1] - a[i]) * (a[n * 2 - 1] - a[0]));\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare integer variable n\nread n\ncreate long longs vector a with n * 2 elements\nfor i = 0 to n*2 exclusive, read a[i]\nsort a\ncreate long long ans = LLONG_MAX\nloop i from 0 to n exclusive\nif i = 0\nassign min of ans and (a[n - 1] - a[0]) * (a[n * 2 - 1] - a[n]) to ans\nelse\nassign min of ans and (a[i + n - 1] - a[i]) * (a[n * 2 - 1] - a[0]) to ans\nprint ans
const int maxn = 1e5 + 2;\nlong long a[maxn * 2];\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long m = n * 2;\n\tfor (int i = 1; i <= m; i++) { cin >> a[i]; }\n\tsort(a + 1, a + m + 1);\n\tlong long ans = 1e18;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (i == 1) {\n\t\t\tans = min(ans, (a[n] - a[1]) * (a[m] - a[n + 1]));\n\t\t} else {\n\t\t\tans = min(ans, (a[m] - a[1]) * (a[n + i - 1] - a[i]));\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create const int maxn = 1e5 + 2\nlet a be long long array with size maxn * 2\ndeclare integer variable n\nread n\ncreate long long m = n * 2\nfor i from 1 to m inclusive, read input to a[i]\nsort a from index 1 to m + 1\ncreate long long ans = 1e18\nfor i from 1 to n inclusive\nif i = 1\nchange ans to min of ans and (a[n] - a[1]) * (a[m] - a[n + 1])\nelse\nchange ans to min of ans and (a[m] - a[1]) * (a[n + i - 1] - a[i])\nprint ans
"const int MAXN = (int)(2 * 1e5 + 5);\nint n;\nlong long a[MAXN];\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n + n; i++) { cin >> a[i]; }\n\tsort(a, a + n + n);\n\tif (n <= 1) {\n\t\tcout << ""0"" << endl;\n\t} else {\n\t\tlong long ans = a[n - 1] - a[0];\n\t\tans *= a[n + n - 1] - a[n];\n\t\tlong long l = a[n + n - 1] - a[0];\n\t\tfor (int i = 1; i <= n; i++) { ans = min(ans, l * (a[i + n - 1] - a[i])); }\n\t\tcout << ans << endl;\n\t}\n}"	"create constant integer MAXN with MAXN = integer casted ( 2 * 1e5 + 5 )\ncreate integer n\ncreate long long array a with size MAXN\nread n\nfor i = 0 to n + n exclusive, read a[i]\nsort elements from a to a + n + n\nif n is less than or equal to 1\nprint ""0"" print newline\nelse\ncreate long long ans with ans = a[n-1]-a[0]\nset ans to ans * ( a[n + n - 1] - a[n] )\ncreate long long l with l = a[n + n - 1] - a[0]\nfor i = 1 to n inclusive, set ans to minimum of ( ans and ( l * (a[i + n - 1] - a[i]) ) )\nprint ans print newline"
"int main() {\n\tint n, x;\n\tcin >> n;\n\tint cnt1 = 0, cnt2 = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tcnt1 += x;\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tcnt2 += x;\n\t}\n\tif (cnt1 >= cnt2)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"n, x = integers\nread n\nset cnt1, cnt2 = 0\nfor i = 0 to n exclusive\nread x\nset cnt1 = cnt1 + x\nfor i = 0 to n exclusive\nread x\nset cnt2 = cnt2 + x\nif cnt1 >= cnt2\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tlong long int n, i, j;\n\tcin >> n;\n\tlong long int a[n], b[n], s1 = 0, s2 = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\ts1 += a[i];\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> b[i];\n\t\ts2 += b[i];\n\t}\n\tif (s1 >= s2) {\n\t\tcout << ""YES"" << '\n';\n\t} else {\n\t\tcout << ""NO"" << '\n';\n\t}\n\treturn 0;\n}"	"declare long long integer variables n, i and j\nread n\ndeclare long long integers s1 and s2 = 0 and long long integer arrays a and b with size n\nfor i = 0 to n exclusive\nread a[i]\nincrease s1 by a[i]\nfor i = 0 to n exclusive\nread b[i]\nincrease s2 by b[i]\nif s1 >= s2\nprint ""YES"" and '\n'\nelse\nprint ""NO"" and '\n'"
"int main() {\n\tint n;\n\tcin >> n;\n\tint sumx = 0;\n\tint sumy = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tsumx = sumx + x;\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tint y;\n\t\tcin >> y;\n\t\tsumy = sumy + y;\n\t}\n\tif (sumy <= sumx) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	n =integer\nRead n\nsumx = integer, set to 0\nsumy = integer, set to 0\nfor i = 0 to n exclusive\nx =integer\nRead x\nset sumx to sumx + x\nfor i = 0 to n exclusive\ny =integer\nRead y\nset sumy to sumy + y\nif sumy is less than or equal to sumx\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint x = 0, y = 0, n;\n\tint a;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\tx += a;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\ty += a;\n\t}\n\tif (x >= y) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	x, y, n = integers with x, y = 0\na = integer\nread n\nfor i = 1 to n inclusive\nread a\nset x to x + a\nfor i = 1 to n inclusive\nread a\nset y to y + a\nif x >= y\nprint YES\nelse\nprint NO
"int x[51], y[51];\nint main() {\n\tint n, sum_x = 0, sum_y = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> x[i], sum_x += x[i];\n\tfor (int i = 0; i < n; i++) cin >> y[i], sum_y += y[i];\n\tif (sum_x >= sum_y)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"create integer arrays x, y, with x size 51, y size 51\ncreate integers n, sum_x, sum_y, with sum_x = 0, sum_y = 0\nread n\nfor i = 0 to n exclusive, read x[i], increment sum_x by x[i]\nfor i = 0 to n exclusive, read y[i], increment sum_y by y[i]\nif sum_x is greater than or equal than sum_y\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tint n, sum = 0, s = 0;\n\tcin >> n;\n\tint arr[n], ar[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tsum += arr[i];\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> ar[i];\n\t\ts += ar[i];\n\t}\n\tif (s <= sum) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n}"	create n, sum, s as int set sum and s to 0\nread in to n\ncreate int array arr and ar both size n\nfor i = 0 to n exclusive\nread in to arr[i]\nincrease sum by arr[i]\nfor i = 0 to n exclusive\nread in to ar[i]\nincrease s by ar[i]\nif s <= sum\nprint YES\nelse\nprint NO
"int is[105];\nint main() {\n\tint n, m, a, b;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a >> b;\n\t\tfor (int j = a; j <= b; j++) is[j] = 1;\n\t}\n\tvector<int> ans;\n\tfor (int i = 1; i <= m; i++)\n\t\tif (!is[i]) ans.push_back(i);\n\tcout << ans.size() << ""\n"";\n\tfor (int i = 0; i < ans.size(); i++)\n\t\tif (i != ans.size() - 1)\n\t\t\tcout << ans[i] << "" "";\n\t\telse\n\t\t\tcout << ans[i] << ""\n"";\n\treturn 0;\n}"	"let is be integer array with size 105\ncreate integers n, m, a and b\nread n and m\nfor integer i = 0 to n exclusive\nread a and b\nfor j = a to b inclusive set is[j] to 1\ndeclare integer vector ans\nfor i = 1 to m inclusive\nif is[i] is 0, push i into ans\nprint length of ans and ""\n""\nfor i = 0 to length of ans exclusive\nif i != length of ans - 1\nprint ans[i] and "" ""\nelse\nprint ans[i] and ""\n"""
"int main() {\n\tint a = 0, tam = 0, comeco = 0, fim = 0;\n\tcin >> a >> tam;\n\tbool isThere[tam + 1];\n\tfor (int j = 0; j <= tam; j++) { isThere[j] = false; }\n\tfor (int b = 0; b < a; b++) {\n\t\tcin >> comeco >> fim;\n\t\tfor (int c = comeco; c <= fim; c++) { isThere[c] = true; }\n\t}\n\tint resp = 0;\n\tint presentes[tam + 1];\n\tstring ordem = """";\n\tfor (int b = 1; b <= tam; b++) {\n\t\tif (!isThere[b]) {\n\t\t\tpresentes[resp] = b;\n\t\t\tresp++;\n\t\t}\n\t}\n\tcout << resp << endl;\n\tfor (int b = 0; b < resp; b++) {\n\t\tcout << presentes[b];\n\t\tif (b == resp - 1) {\n\t\t\tcout << endl;\n\t\t} else {\n\t\t\tcout << "" "";\n\t\t}\n\t}\n\treturn 0;\n}"	"a, tam, comeco, fim = int witha = 0 and tam = 0 and comeco = 0 and fim = 0\nread a then tam\nisThere = bool array of size tam + 1\nset all values of isThere to false\nfor b = 0 to a\nread comeco then fim\nfor c = comeco to fim inclusive set siThere[c] to true\nresp = int with resp = 0\npresentes = int array of size tam + 1\nordem = string with ordem = """"\nfor b = 1 to tam inclusive\nis isThere[b] is false\nset presentes[resp] to b\nincrement resp\nprint resp\nfor b = 0 to resp\nprint presentes[b]\nif b is resp - 1\nprint newline\nelse\nprint "" """
const int M = 3010;\nvector<int> a[M], b;\nint n, m;\nbool judge(int x) {\n\tint num1 = a[1].size();\n\tfor (int i = 2; i <= m; i++) {\n\t\tif (a[i].size() > x)\n\t\t\tnum1 += a[i].size() - x;\n\t\telse\n\t\t\tnum1 += a[i].size();\n\t}\n\treturn num1 > x;\n}\nlong long get_ans(int x) {\n\tlong long ans = 0;\n\tint num1 = a[1].size();\n\tb.clear();\n\tfor (int i = 2; i <= m; i++) {\n\t\tif (a[i].size() > x) {\n\t\t\tfor (int j = x; j < a[i].size(); j++) {\n\t\t\t\tnum1++;\n\t\t\t\tans += a[i][j];\n\t\t\t}\n\t\t\tfor (int j = 0; j < x; j++) b.push_back(a[i][j]);\n\t\t} else\n\t\t\tfor (int j = 0; j < a[i].size(); j++) b.push_back(a[i][j]);\n\t}\n\tsort(b.begin(), b.end());\n\tif (num1 < x && x - num1 + 1 > b.size()) return 10000000000000ll;\n\tint hh = x - num1 + 1;\n\tfor (int i = 0; i < hh; i++) ans += b[i];\n\treturn ans;\n}\nbool cmp(int x, int y) {\n\treturn x > y;\n}\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\ta[x].push_back(y);\n\t}\n\tfor (int i = 1; i <= m; i++) sort(a[i].begin(), a[i].end(), cmp);\n\tlong long ans = 10000000000000ll;\n\tfor (int i = 0; i <= n / 2; i++) ans = min(ans, get_ans(i));\n\tcout << ans << endl;\n\treturn 0;\n}	M = const int with M = 3010\nb = int vector and a = int vector array of size M\nn, m = int\nin function judge taking an int x and returning a bool\nnum1 = int with num1 = size of a[1]\nfor i = 2 to m inclusive\nif size of a[i] is greater than x\nincrement num1 by size of a[i] - x\nelse\nincrement num1 by size of a[i]\nreturn true if num1 is greater than x else return false\nin function get_ans taking an int x and returning a long long\nans = long long with ans = 0\nnum1 = int with num1 = size of a[1]\nclear b\nfor i = 2 to m inclusive\nif size of a[i] is greater than x\nfor j = x to size of a[i]\nincrement num1\nincrement ans by a[i][j]\nfor j = 0 to x append a[i][j] to b\nelse\nfor j = 0 to size of a[i] append a[i][j] to b\nsort b\nif num1 is less than x and x - num1 + 1 is greater than size of b then return 10000000000000ll\nhh = int with hh = x - num1 + 1\nfor i = 0 to hh increment ans by b[i]\nreturn ans\nin function cmp taking two ints x and y and returning a bool\nreturn true if x is greater than y else return false\nread n then m\nfor i = 1 to n inclusive\nx, y = int\nread x then y\nappend y to a[x]\nfor i = 1 to m inclusive sort a[i] using cmp\nans = long long with ans = 10000000000000ll\nfor i = 0 to n / 2 inclusive set ans to min of ans and get_ans of i\nprint ans
pair<long long int, long long int> p[3007];\nlong long int c[3007];\nint main() {\n\tlong long int n, m;\n\tcin >> n >> m;\n\tlong long int mx = 0;\n\tfor (long long int i = 0; i < n; i++) {\n\t\tcin >> p[i].second >> p[i].first;\n\t\tc[p[i].second]++;\n\t}\n\tsort(p, p + n);\n\tfor (long long int i = 2; i <= m; i++) mx = max(mx, c[i]);\n\tlong long int ans = 21474836470000;\n\tlong long int sum = 0;\n\tfor (long long int i = mx; i >= 0; i--) {\n\t\tfor (long long int j = 0; j < n; j++) {\n\t\t\tif (p[j].second != 1 && c[p[j].second] > i) {\n\t\t\t\tc[p[j].second]--;\n\t\t\t\tp[j].second = 1;\n\t\t\t\tc[1]++;\n\t\t\t\tsum += p[j].first;\n\t\t\t}\n\t\t}\n\t\tlong long int k = i - c[1] + 1;\n\t\tlong long int t = sum;\n\t\tfor (long long int j = 0; j < n; j++) {\n\t\t\tif (k > 0) {\n\t\t\t\tif (p[j].second != 1) {\n\t\t\t\t\tt += p[j].first;\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tans = min(ans, t);\n\t}\n\tcout << ans << '\n';\n}	create long long integer pair p of 3007 size\nc = long long integers array of length 3007\ninteger n,m = long long integers\nread n,m\nset long long integer mx to 0\nfor i = 0 to less than n do the following\nread p[i].second,p[i].first\nadd one to c[p[i].second]\nsort the values of p to p + n\nfor i = 2 to less than or equal to m then make mx the maximum of mx or c[i]\nset long long integer ans to 21474836470000\nset long long integer sum to 0\nfor i = mx to greater than or equal to 0 do the following\nfor j = 0 to less than n do the following\nif p[j].second is not equal to 1 and c[p[j].second] > i then do the following\nminus 1from c[p[j].second]\nset p[j].second to 1\nadd 1 to c[1]\nsum equals sum plus p[j].first\nset long long integer k to i - c[1] + 1\nset long long integer t to sum\nfor j = 0 to less than n do the following\nif k is greater than 0 then do the following\nif p[j].second is not equal to 1 then do the following\nt equals t plus p[j].first\nminus 1 from k--\nset ans to min(ans, t)\noutput ans,\n
"int main() {\n\tint ax, ay, bx, by, cx, cy, n;\n\tcin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n\tif (cx > bx) {\n\t\tif (cy > by) {\n\t\t\tif ((ax < cx && ax > bx) || (ay < cy && ay > by)) {\n\t\t\t\tcout << ""NO\n"";\n\t\t\t} else {\n\t\t\t\tcout << ""YES\n"";\n\t\t\t}\n\t\t} else {\n\t\t\tif ((ax < cx && ax > bx) || (ay > cy && ay < by)) {\n\t\t\t\tcout << ""NO\n"";\n\t\t\t} else {\n\t\t\t\tcout << ""YES\n"";\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (cy > by) {\n\t\t\tif ((ax > cx && ax < bx) || (ay < cy && ay > by)) {\n\t\t\t\tcout << ""NO\n"";\n\t\t\t} else {\n\t\t\t\tcout << ""YES\n"";\n\t\t\t}\n\t\t} else {\n\t\t\tif ((ax > cx && ax < bx) || (ay > cy && ay < by)) {\n\t\t\t\tcout << ""NO\n"";\n\t\t\t} else {\n\t\t\t\tcout << ""YES\n"";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"	ax, ay, bx, by, cx, cy, n =integers\nRead ax, ay, bx, by, cx, cy, n\nif cx is greater than bx\nif cy is greater than by\nif (ax is less than cx and ax is greater than bx) OR (ay is less than cy and ay is greater than by)\nprint NO and a new line\nelse do the following\nprint YES and a new line\nelse do the following\nif (ax is less than cx and ax is greater than bx) OR (ay is greater than cy and ay is less than by)\nprint NO and a new line\nelse do the following\nprint YES and a new line\nelse do the following\nif cy is greater than by\nif (ax is greater than cx and ax is less than bx) OR| (ay is less than cy and ay is greater than by\nprint NO and a new line\nelse do the following\nprint YES and a new line\nelse do the following\nif (ax is greater than cx and ax is less than bx) OR| (ay is greater than cy and ay is less than by)\nprint NO and a new line\nelse do the following\nprint YES and a new line
"int bio[1000][1000];\nconst int smjeroviX[8] = {0, 0, 1, -1, 1, 1, -1, -1};\nconst int smjeroviY[8] = {1, -1, 0, 0, 1, -1, 1, -1};\nint main() {\n\tint n, aX, aY, bX, bY, cX, cY;\n\tcin >> n >> aX >> aY >> bX >> bY >> cX >> cY;\n\taX--;\n\taY--;\n\tbX--;\n\tbY--;\n\tcX--;\n\tcY--;\n\tqueue<int> q;\n\tq.push(bX);\n\tq.push(bY);\n\tbio[bX][bY] = 1;\n\twhile (!q.empty()) {\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tint y = q.front();\n\t\tq.pop();\n\t\tif (x == cX && y == cY) {\n\t\t\tcout << ""YES\n"";\n\t\t\treturn 0;\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tint X = x + smjeroviX[i];\n\t\t\tint Y = y + smjeroviY[i];\n\t\t\tif (X < 0 || X == n || Y < 0 || Y == n || bio[X][Y]) continue;\n\t\t\tbio[X][Y] = 1;\n\t\t\tif (X != aX && Y != aY && (X + Y != aX + aY) && (X - Y != aX - aY)) {\n\t\t\t\tq.push(X);\n\t\t\t\tq.push(Y);\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO\n"";\n\treturn 0;\n}"	"create 2d integer array bio with size 1000 by 1000\ncreate constant integer array smjeroviX with size 8 with smjeroviX = {0, 0, 1, -1, 1, 1, -1, -1}\ncreate constant integer array smjeroviY with size 8 with smjeroviY = {1, -1, 0, 0, 1, -1, 1, -1}\ncreate integers n, aX, aY, bX, bY, cX, cY\nread n read aX read aY read bX read bY read cX read cY\ndecrement aX\ndecrement aY\ndecrement bX\ndecrement bY\ndecrement cX\ndecrement cY\ncreate integer queue q\nadd element bX to end of q\nadd element bY to end of q\nset bio[bX][bY] to 1\nwhile q is not empty\ncreate integer x with x = front of q\nremove next element from q\nset y to front of q\nremove next element from q\nif x is cX and y is cY\nprint ""YES\n""\nfor i = 0 to 8 exclusive\ncreate integer X with X = x + smjeroviX[i]\ncreate integer Y with Y = y + smjeroviY[i]\nif X is less than 0 or X is n or Y is less than 0 or Y is n or bio[X][Y], break current loop iteration\nset bio[X][Y] to 1\nif X is not aX and Y is not aY and ( X + Y is not aX + aY) and ( X - Y is not aX - aY)\nadd element X to end of q\nadd element Y to end of q\nprint ""NO\n"""
"int main() {\n\tint n, ax, ay, bx, by, cx, cy;\n\tcin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n\tif ((bx - ax) * (cx - ax) < 0 || (by - ay) * (cy - ay) < 0)\n\t\tcout << ""NO"" << endl;\n\telse\n\t\tcout << ""YES"" << endl;\n\treturn 0;\n}"	integers = n,ax,ay,bx,by,cx,cy\nread n,ax,ay,bx,by,cx,cy\nif (bx - ax) * (cx - ax)is less than 0 or (by - ay) * (cy - ay) < 0 then do the following\noutput NO\nelse\nprint YES
"int main() {\n\tint n;\n\tcin >> n;\n\tint x1, y1;\n\tcin >> x1 >> y1;\n\tint x2, y2;\n\tcin >> x2 >> y2;\n\tint x3, y3;\n\tcin >> x3 >> y3;\n\tif (x2 < x1 && y2 < y1 && x3 < x1 && y3 < y1)\n\t\tcout << ""YES"" << endl;\n\telse if (x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1)\n\t\tcout << ""YES"" << endl;\n\telse if (x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1)\n\t\tcout << ""YES"" << endl;\n\telse if (x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"declare integer variable n\nread input to n\ncreate integers x1 and y1\nread x1 and y1\ndeclare ints x2 and y2\nread x2 and y2\ndeclare integers x3 and y3\nread x3 and y3\nif x2 < x1 and y2 < y1 and x3 < x1 and y3 < y1\nprint ""YES""\nelse if x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1\nprint ""YES""\nelse if x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1\nprint ""YES""\nelse if x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1\nprint ""YES""\nelse\nprint ""NO"""
"int n, qx, qy, kx, ky, tx, ty;\nint main() {\n\tcin >> n;\n\tcin >> qx;\n\tcin >> qy;\n\tcin >> kx;\n\tcin >> ky;\n\tcin >> tx;\n\tcin >> ty;\n\tif (kx < qx) {\n\t\tif (ky < qy) {\n\t\t\tif (tx < qx && ty < qy) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t} else\n\t\t\t\tcout << ""NO"" << endl;\n\t\t} else {\n\t\t\tif (tx < qx && ty > qy) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t} else\n\t\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t} else {\n\t\tif (ky < qy) {\n\t\t\tif (tx > qx && ty < qy) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t} else\n\t\t\t\tcout << ""NO"" << endl;\n\t\t} else {\n\t\t\tif (tx > qx && ty > qy) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t} else\n\t\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t}\n}"	n, qx, qy, kx, ky, tx, ty = integers\nRead n\nRead qx\nRead qy\nRead kx\nRead ky\nRead tx\nRead ty\nif kx is less than qx\nif ky is less than qy\nif tx is less than qx and ty is less than qy\nprint YES and a new line\nelse do the following\nprint NO and a new line\nelse do the following\nif tx is less than qx and ty is greater than qy\nprint YES and a new line\nelse do the following\nprint NO and a new line\nelse do the following\nif ky is less than qy\nif tx is greater than qx and ty is less than qy\nprint YES and a new line\nelse do the following\nprint NO and a new line\nelse do the following\nif tx is greater than qx and ty is greater than qy\nprint YES and a new line\nelse do the following\nprint NO and a new line
"int main() {\n\tint n;\n\tcin >> n;\n\tint x, y, x1, y1, x2, y2;\n\tcin >> x >> y >> x1 >> y1 >> x2 >> y2;\n\tint flag = 1;\n\tif (x1 == x || y1 == y || x2 == x || y2 == y) { flag = 0; }\n\tif (abs(x - x1) == abs(y - y1) || abs(x - x2) == abs(y - y2)) {\n\t\tflag = 0;\n\t} else if (x1 < x && x2 > x) {\n\t\tflag = 0;\n\t} else if (x1 > x && x2 < x) {\n\t\tflag = 0;\n\t} else if (y1 < y && y2 > y) {\n\t\tflag = 0;\n\t} else if (y1 > y && y2 < y) {\n\t\tflag = 0;\n\t}\n\tif (flag)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	integers = n\nread n\nintegers = x,y,x1,y1,x2,y2\nread input x,y,x1,y1,x2,y2\nintegers = flag = 1\nif x1 is x or y1 then do the following\nif abs is abs(y - y1 then do the following or abs(x - x2\nset flag to 0\nelse if x1 is less than x and x2 > x then do the following\nset flag to 0\nelse if x1 > x and x2 is less than x then do the following\nset flag to 0\nelse if y1 is less than y and y2 > y then do the following\nset flag to 0\nelse if y1 > y and y2 is less than y then do the following\nset flag to 0\nif flag is true\noutput YES\nelse\noutput NO
"bool search(int ax, int ay, int bx, int by, int cx, int cy) {\n\tif (bx < ax && cx < ax && by < ay && cy < ay)\n\t\treturn true;\n\telse if (bx < ax && cx < ax && by > ay && cy > ay)\n\t\treturn true;\n\telse if (bx > ax && cx > ax && by < ay && cy < ay)\n\t\treturn true;\n\telse if (bx > ax && cx > ax && by > ay && cy > ay)\n\t\treturn true;\n\treturn false;\n}\nint main() {\n\tint n, ax, ay, bx, by, cx, cy;\n\tcin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n\tif (search(ax, ay, bx, by, cx, cy))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"boolean function search with int arguments ax, ay, bx, by, cx and cy\nif bx < ax and cx < ax and by < ay and cy < ay\nreturn true\nelse if bx < ax and cx < ax and by > ay and cy > ay\nreturn true\nelse if bx > ax and cx > ax and by < ay and cy < ay\nreturn true\nelse if bx > ax and cx > ax and by > ay and cy > ay\nreturn true\nreturn false\ncreate ints n, ax, ay, bx, by, cx and cy\nread n, ax, ay, bx, by, cx and cy\nif search(ax, ay, bx, by, cx, cy) returns true\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tlong long int n, a, b, c;\n\tcin >> n;\n\tif (n % 3 == 0 || n % 3 == 1) {\n\t\ta = n - 2;\n\t\tb = 1;\n\t\tc = 1;\n\t} else if (n % 3 == 2) {\n\t\ta = n - 3;\n\t\tb = 1;\n\t\tc = 2;\n\t}\n\tcout << a << "" "" << b << "" "" << c << endl;\n}"	n, a, b, c = long long int\nread n\nif n is a multiple of 3 or n mod 3 is 1\nset a to n - 2\nset b to 1\nset c to 1\nelse if n mod 3 is 2\nset a to n - 3\nset b to 1\nset c to 2\nprint a and b and c
int main() {\n\tint n;\n\tint c8 = 0;\n\tcin >> n;\n\tcin.ignore();\n\tchar s[101];\n\tgets(s);\n\tif (n >= 11) {\n\t\tint r = n / 11;\n\t\tfor (int i = 0; s[i]; i++) {\n\t\t\tif (s[i] == '8') c8++;\n\t\t\tif (c8 == r) break;\n\t\t}\n\t\tcout << c8 << endl;\n\t\treturn 0;\n\t}\n\tcout << c8 << endl;\n\treturn 0;\n}	declare integer n\ndeclare integer variable c8 = 0\nread n\nread from the input input and ignore it\nlet s be char array with size 101\nread s\nif n >= 11\ndeclare integer r = n / 11\nloop i from 0 while s[i] !=0, incrementing i\nif s[i] is equal to '8', increment c8\nif c8 is equal to r, break the loop\nprint c8\nprint c8
int main() {\n\tint n, num8, numn, num;\n\tchar str[101];\n\twhile (cin >> n) {\n\t\tnum8 = 0;\n\t\tcin >> str;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (str[i] == '8') num8++;\n\t\tnumn = n / 11;\n\t\tif (num8 > numn)\n\t\t\tnum = numn;\n\t\telse\n\t\t\tnum = num8;\n\t\tcout << num << endl;\n\t}\n\treturn 0;\n}	create integers n, num8, numn and num\ncreate character array str with 101 element\nread n and loop further\nset num8 to 0\nread input to str\nfor i from 0 to n exclusive\nif str[i] = '8', increment num8 by one\nassign n / 11 to numn\nif num8 is greater than numn\nchange num to numn\nelse\nchange num to num8\nprint num
int main() {\n\tstring st, s;\n\tint i, a, b, count = 0;\n\tcin >> a >> st;\n\tb = a / 11;\n\tfor (i = 0; i < a; i++) {\n\t\tif (st[i] == '8') { count++; }\n\t}\n\tif (count < b) {\n\t\tcout << count << endl;\n\t} else {\n\t\tcout << b << endl;\n\t}\n\treturn 0;\n}	st, s = string\ni, a, b, count = int with count = 0\nread a then st\nset b to a / 11\nfor i = 0 to a\nif st[i] is '8' then increment count\nif count is less than b\nprint count\nelse\nprint b
int main() {\n\tchar s[101];\n\tint n, i, sum8 = 0, sum = 0, total = 0;\n\tcin >> n;\n\tcin >> s;\n\tfor (i = 0; i < n; i++) {\n\t\tif (s[i] == '8') sum8++;\n\t\tsum++;\n\t}\n\tif (sum8 >= sum / 11)\n\t\ttotal = sum / 11;\n\telse\n\t\ttotal = sum8;\n\tcout << total << endl;\n\treturn 0;\n}	s = character array of size 101\nn, i = integers, sum8 = integer = 0, sum = integer = 0, total = integer = 0\nread n\nread s\nfor i = 0 to n exclusive\nif s[i] is 8, then increase sum8 by 1\nincrease sum by 1\nif sum8 >= sum / 11\ntotal = sum / 11\nelse\ntotal = sum8\nprint total
int main() {\n\tchar s[101];\n\tint n, i, sum8 = 0, sum = 0, total = 0;\n\tcin >> n;\n\tcin >> s;\n\tfor (i = 0; i < n; i++) {\n\t\tif (s[i] == '8') sum8++;\n\t\tsum++;\n\t}\n\tif (sum8 >= sum / 11)\n\t\ttotal = sum / 11;\n\telse\n\t\ttotal = sum8;\n\tcout << total << endl;\n\treturn 0;\n}	create character array s with size 101\ncreate integers n, i, sum8, sum, total, with sum8 = 0, sum = 0, total = 0\nread n\nread s\nfor i = 0 to n exclusive\nif s[i] is '8', increment sum8\nincrement sum\nif sum8 is greater than or equal to sum / 11\nset total to sum / 11\nelse\nset total to sum8\nprint total print newline
int main() {\n\tstring s;\n\tint n, sum = 0;\n\tcin >> n;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '8') sum++;\n\t}\n\tif (n / 11 < sum)\n\t\tcout << (n / 11) << endl;\n\telse\n\t\tcout << sum << endl;\n}	create string s\ncreate int n and sum, set to sum 0\nread n\nread s\nfor i=0 to length of s exclusive\nif s[i] equal to 8, increment sum\nif n/11 greater than 11\nprint n/11\nelse\nprint sum and a newline
const int N = 1e6 + 10;\nconst int mod = 998244353;\nint n;\nstring x;\nmap<int, int> m;\nint main() {\n\tcin >> n >> x;\n\tfor (int i = 0; i < n; i++) m[x[i] - '0']++;\n\tint s = x.size();\n\tcout << min(m[8], s / 11) << endl;\n}	set N to 1e6 + 10\nmod = 998244353\ncreate int n\ncreate string x\ncreate map m from int to int\nread n and x\nfor i=0 to n exclusive, increment m[x[i] - 0]\nset s to size of x\nprint min of m[8] and s/11
int main() {\n\tint n, k = 0;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == '8') { k++; }\n\t}\n\tcout << min(n / 11, k) << endl;\n\treturn 0;\n}	n, k = integers with k = 0\nRead n\ns=string\nRead s\nfor i = 0 to n exclusive\nif s[i] is 8, then increment k\nprint minimum value of n / 11 and k and a new line
const int MAX = 100000;\nconst int INF = 1000000001;\nint a[MAX];\nint n, sum = 0;\nstring s;\nint main() {\n\tcin >> n;\n\tcin >> s;\n\tint len = s.length();\n\tfor (int i = 0; i < len; ++i) sum += (s[i] == '8');\n\tint res = n / 11;\n\tif (sum <= res)\n\t\tcout << sum << endl;\n\telse\n\t\tcout << res << endl;\n\treturn 0;\n}	MAX = const int with MAX = 100000\nIN = const int with INF = 1000000001\na = int array of size MAX\nn, sum = int with sum = 0\ns = string\nread n\nread s\nlen = int with len = length of s\nfor i = 0 to len increment sum if s[i] is '8'\nres = int with res = n / 11\nif sum is less or equal to res\nprint sum\nelse\nprint res
int main() {\n\tint n;\n\tcin >> n;\n\tstring number;\n\tcin >> number;\n\tint has_eight = 0;\n\tfor (int i = 0; i < number.length(); i++)\n\t\tif (number[i] == '8') has_eight++;\n\tif (n < 11 || has_eight == 0) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tif ((n / 11) >= has_eight)\n\t\tcout << has_eight << endl;\n\telse if ((n / 11) < has_eight)\n\t\tcout << n / 11 << endl;\n}	n =integer\nRead n\nnumber =string\nRead number\nhas_eight =integer with 0\nfor i = 0 to length of string number exclusive\nif number[i] is 8, then increment has_eight\nif n is less than 11 OR has_eight is 0\nprint 0 and a new line\nif (n / 11) is greater than or equal to has_eight\nprint has_eight and a new line\nelse if (n / 11) is less than has_eight\nprint n / 11 and a new line
int main() {\n\tint n, count = 0;\n\tcin >> n;\n\tchar c;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> c;\n\t\tif (c == '8') count++;\n\t}\n\tif (n < 11 || count == 0) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t\t;\n\t}\n\tcout << min(count, n / 11) << endl;\n\treturn 0;\n\t;\n}	declare integer variables n and count with count = 0\nread n\ncreate character c\nfor integer i = 0 to n exclusive\nread c\nif c = '8', increment count\nif n < 11 or count = 0\nprint 0\nprint min of count and n / 11
int k, i, n, ans, m;\nstring s;\nint main() {\n\tcin >> n >> s;\n\tfor (i = 0; i < n; i++) {\n\t\tif (s[i] == '8') k++;\n\t}\n\tans = min(k, n / 11);\n\tcout << ans << endl;\n}	k, i, n, ans, m = integers\ns = string\nread n, s\nfor i = 0 to n exclusive\nif s[i] is 8, increment k\nans = min of k and n / 11\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tint eight = 0, other = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == '8')\n\t\t\teight++;\n\t\telse\n\t\t\tother++;\n\t}\n\tif (eight == 0)\n\t\tcout << 0 << endl;\n\telse {\n\t\tint ans = other / 10;\n\t\tif (ans > eight) {\n\t\t\tcout << eight << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (eight - ans == 0)\n\t\t\tcout << ans << endl;\n\t\telse {\n\t\t\tcout << (((eight - ans) + (other % 10)) / 11) + ans << endl;\n\t\t}\n\t}\n}	n = int\nread n\ns = string\nread s\neight, other = int with eight = 0 and other = 0\nfor i= 0 to n\nif s[i] is '8'\nincrement eight\nelse\nincrement other\nif eight is 0\nprint 0\nelse\nans = int with ans = other / 10\nif ans is greater than eight\nprint eight\nif eight - ans is 0\nprint ans\nelse\nprint (((eight - ans) + (other mod 10)) / 11) + ans
"int main() {\n\tint n, i = 0, cnt = 0;\n\tstring s;\n\tcin >> n >> s;\n\twhile (s[i] != '\0') {\n\t\tif (s[i] == '8') cnt++;\n\t\ti++;\n\t}\n\tif (n >= 11 && n / 11 <= cnt && cnt != 0)\n\t\tcout << n / 11 << ""\n"";\n\telse if (n >= 11 && n / 11 >= cnt && cnt != 0)\n\t\tcout << cnt << ""\n"";\n\telse\n\t\tcout << ""0\n"";\n\treturn 0;\n}"	"create integers n, i and cnt where i and cnt = 0\ncreate string s\nread n and s\nwhile s[i] != '\0'\nif s[i] = '8', increment cnt by one\nincrement i\nif n >= 11 and n / 11 <= cnt and cnt != 0\nprint n / 11 and ""\n""\nelse if n >= 11 && n / 11 >= cnt && cnt != 0\nprint cnt and ""\n""\nelse\nprint ""0\n"""
int main() {\n\tstring s;\n\tint n, sum = 0;\n\tcin >> n;\n\tcin >> s;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '8') sum++;\n\t}\n\tif (n / 11 < sum)\n\t\tcout << (n / 11) << endl;\n\telse\n\t\tcout << sum << endl;\n}	create string s\ndeclare integers n and sum with sum = 0\nread n\nread s\nfor i from 0 to length of s exclusive\nif s[i] = '8', increment sum\nif n / 11 is less than sum\nprint n / 11\nelse\nprint sum
int main() {\n\tint n;\n\tstring num;\n\tcin >> n >> num;\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (num[i] == '8') { count++; }\n\t}\n\tcout << (n / 11 > count ? count : n / 11) << endl;\n}	declare int variable n\ndeclare string variable num\nread n and num\ndeclare int count = 0\nfor integer i = 0 to n exclusive\nif num[i] is equal to '8', increment count by one\nprint count if n / 11 > count and n / 11 otherwise
int main() {\n\tint n, i, no_of_8 = 0, groups;\n\tchar c;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> c;\n\t\tif (c == '8') no_of_8++;\n\t}\n\tgroups = n / 11;\n\tif (no_of_8 >= groups)\n\t\tcout << groups << endl;\n\telse\n\t\tcout << no_of_8 << endl;\n\treturn 0;\n}	n, i, no_of_8, groups =integers with no_of_8 = 0\nc = character\nRead n\nfor i = 1 to n exclusive\nRead c\nf c is 8, then increment no_of_8\nset groups to n / 11\nif no_of_8 is greater than or equal to groups\nprint groups and a new line\nelse do the following\nprint no_of_8 and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tint ans = 0;\n\tchar s[101];\n\tcin >> s;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == '8') ans++;\n\t}\n\tif (ans == 0 || n / 11 == 0)\n\t\tcout << 0 << endl;\n\telse if (ans > n / 11)\n\t\tcout << n / 11 << endl;\n\telse\n\t\tcout << ans << endl;\n\treturn 0;\n}	create integer n\nread n\ndeclare integer ans = 0\ncreate char array s with 101 element\nread s\nfor integer i = 0 to n exclusive\nif s[i] = '8', increment ans by 1\nif ans is equal to 0 or n / 11 is equal to 0\nprint 0\nelse if ans > n / 11\nprint n / 11\nelse\nprint ans
int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n, k;\n\t\tcin >> n >> k;\n\t\tint flag = 0;\n\t\tfor (int i = 0; i < (n / k); i++) {\n\t\t\tfor (int j = 0; j < k; j++) {\n\t\t\t\tcout << char(97 + j);\n\t\t\t\tflag = j;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < n - (n / k) * k; i++) { cout << char(97 + flag); }\n\t\tcout << endl;\n\t}\n}	create int\nread t\nwhile decrement t\nn and k = int\nread n, k\nset flag =0\nfor i=0 to n/k exclusive\nfor j=0 to k exclusive\nprint char(97+j)\nassign j to flag\nfor i=0 to n - (n/k) * k exclusive, print char(97 + flag)\nprint a newline
"int main() {\n\tint n;\n\tstring s;\n\tcin >> n;\n\tcin >> s;\n\tstring t = """";\n\tfor (int i = 0; i < n; i++) {\n\t\tint k = (i * (i + 1)) / 2;\n\t\tif (k >= n) { break; }\n\t\tt = t + s[k];\n\t}\n\tcout << t << endl;\n\treturn 0;\n}"	"create integer n\ncreate string s\nread n\nread s\ncreate string t with t = """"\nfor i = 0 to n exclusive\ncreate integer k with k = (i * (i + 1)) / 2\nif k is greater than or equal to n, break loop\nset t to t + s[k]\nprint t print newline"
long long x, y, z = 1;\nstring s, ss;\nint main() {\n\tcin >> x >> s;\n\tfor (int i = 0; i < x;) {\n\t\tss += s[i];\n\t\ti += z;\n\t\tz++;\n\t}\n\tcout << ss << endl;\n\treturn 0;\n}	create long longs x, y and z, with z = 1\ndeclare string variables s and ss\nread x and s\nfor integer i = 0 to x exclusive\nincrease ss by s[i]\nincrease i by z\nincrement z\nprint ss and a new line
int main() {\n\tvector<char> v;\n\tvector<char> s;\n\tint count = 1, size;\n\tchar c;\n\tcin >> size;\n\tfor (int i = 0; i < size; i++) {\n\t\tcin >> c;\n\t\tv.push_back(c);\n\t}\n\tint in, i = 0;\n\twhile (i < size) {\n\t\tif (i == 0) {\n\t\t\ts.push_back(v[i]);\n\t\t\ti++;\n\t\t} else {\n\t\t\tin = count;\n\t\t\tfor (int j = 0; j < in; j++) { i++; }\n\t\t\tif (i < size) s.push_back(v[i]);\n\t\t\tcount++;\n\t\t}\n\t}\n\tfor (int i = 0; i < s.size(); i++) { cout << s[i]; }\n\tcout << endl;\n\treturn 0;\n}	v = vector of characters\ns = vector of characters\ncount and size are integers, with count = 1\ndeclare character variable called c\nread size\nfor integer i = 0 to size exclusive\nread c\npush c into v\nlet in and i be integers, with i = 0\nwhile i is less than size\nif i = 0\npush v[i] into s\nincrease i by one\nelse\nset value of in to count\nfor integer j = 0 to in exclusive\nif i is less than size push v[i] into s\nincrease count\nfor integer i = 0 to length of s exclusive, print s[i]\nprint new line
int main() {\n\tint n;\n\tcin >> n;\n\tstring a;\n\tcin >> a;\n\tfor (int i = 1; i * (i + 1) / 2 < n + 1; i++) { cout << a[(i * (i + 1) / 2) - 1]; }\n\tcout << endl;\n\treturn 0;\n}	declare integer variable called n\nread n\nlet a be string\nread a\nfor integer i = 1 while i * (i + 1) / 2 < n + 1, print a[(i * (i + 1) / 2) - 1]\nprint new line
int main() {\n\tint n, sum, index;\n\tchar s[55], a[55];\n\tcin >> n >> s;\n\tsum = index = 0;\n\tfor (int i = 0;; i++) {\n\t\tindex += i;\n\t\tif (index >= n) break;\n\t\ta[sum++] = s[index];\n\t}\n\ta[sum] = '\0';\n\tcout << a << endl;\n\treturn 0;\n}	create integers n, sum, index\ncreate character arrays s, a, with s size 55, a size 55\nread n read s\nset sum to index to 0\nfor i = 0\nincrement index by i\nif index is greater than or equal to n, break loop\nset a[increment sum] to s[index]\nset a[sum] to '\0'\nprint a print newline
"int compare(pair<string, int> p1, pair<string, int> p2) {\n\treturn (p1.second > p2.second);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tstring ans = """";\n\tint h = 1;\n\tint c = 1;\n\tfor (int i = 0; i < int(s.size()); i++) {\n\t\tif (c == h) {\n\t\t\tans += s[i];\n\t\t\th++;\n\t\t\tc = 1;\n\t\t} else\n\t\t\tc++;\n\t}\n\tcout << ans << endl;\n\tcin >> n;\n}"	"define function compare with arguments p1 and p2 of type pair of string and int\nreturn true if p1.second > p2.second or false if it is not\nn is integer\nread n\ndeclare string called s\nread s\ndeclare string variable called ans = "" ""\ndeclare integer called h = 1\ndeclare integer variable called c = 1\nfor integer i = 0 to length of s exclusive\nif c = h\nincrease ans by s[i]\nincrement h\nc = 1\nelse\nincrease c by one\nprint ans and a new line\nread n"
string s, sd;\nlong long n, i, l;\nint main() {\n\tcin >> n;\n\tcin >> s;\n\twhile (n != 0) {\n\t\tl++;\n\t\tn -= l;\n\t}\n\tfor (i = 1; i <= l; i++) {\n\t\tsd = sd + s[0];\n\t\ts.erase(0, i);\n\t}\n\tcout << sd << endl;\n\treturn 0;\n}	s, d = strings\nn, i, l = long long\nread n\nread s\nwhile n is not 0\nincrement l\nn=n-l\nfor i=1 to less or equal l\nsd = sd + s[0]\nErases the portion of the string\nprint sd and new line
int main() {\n\tstring a;\n\tint n, num = 0, l = 2;\n\tcin >> n >> a;\n\twhile (true) {\n\t\tif (num < n - 1) {\n\t\t\tcout << a[num];\n\t\t\tnum += l;\n\t\t\tl++;\n\t\t} else {\n\t\t\tcout << a[num] << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	create string a\ncreate integers n, num, l with num = 0, l = 2\nread n read a\nwhile true\nif num is less than n - 1\nprint a[num]\nincrement num by l\nincrement l\nelse\nprint a[num] print newline\nbreak loop
"int main() {\n\tlong long n;\n\tcin >> n;\n\tstring palabra;\n\tcin >> palabra;\n\tstring answer = """";\n\tlong long aumento = 1;\n\tfor (long long i = 0; i < n; i = i + aumento) {\n\t\tanswer.append(palabra.substr(i, 1));\n\t\taumento++;\n\t}\n\tcout << answer << endl;\n\treturn 0;\n}"	"create long long n\nread n\ncreate string palabra\nread palabra\ncreate string answer with answer = """"\ncreate long long aumento with aumento = 1\nfor i = 0 to n exclusive, setting i to i + aumento\nadd element substring of palabra from i to 1 to end of answer\nincrement aumento\nprint answer print newline"
int main() {\n\tint n, sum, index;\n\tchar s[56], a[56];\n\tcin >> n >> s;\n\tsum = index = 0;\n\tfor (int i = 0;; i++) {\n\t\tindex += i;\n\t\tif (index >= n) break;\n\t\ta[sum++] = s[index];\n\t}\n\ta[sum] = '\0';\n\tcout << a << endl;\n\treturn 0;\n}	create integers n, sum, index\ncreate character arrays s, a, with s size 56, a size 56\nread n read s\nset sum to index to 0\nfor i = 0\nincrement index by i\nif index is greater than or equal to n, break loop\nset a[increment sum] to s[index]\nset a[sum] to '\0'\nprint a print newline
"int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tint i = 2;\n\tstring ans = """";\n\tans = ans + s[0];\n\tint j = 3;\n\twhile (i <= n - 1) {\n\t\tans = ans + s[i];\n\t\ti = i + j;\n\t\tj++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	declare integer called n\nread n\ncreate string s\nread s\nlet i be integer = 2\nans is an empty string\nans = ans + s[0]\nj is integer = 3\nwhile i <= n - 1\nans = ans + s[i]\ni = i + j\nincrement j\nprint ans and a new line
int main() {\n\tstring a;\n\tint n, s = 0;\n\tcin >> n >> a;\n\tfor (int i = 1; s <= n; i++) {\n\t\ts += i;\n\t\tif (s <= n) cout << a[s - i];\n\t}\n\tcout << endl;\n\treturn 0;\n}	declare string variable a\ndeclare integer variables n and s with s = 0\nread n and a\nfor i = 1 to n inclusive\nincrease s by i\nif s <= n print a[s - i]\nprint new line
int main() {\n\tint n;\n\tcin >> n;\n\tchar a[n];\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tint incr = 1;\n\tfor (int i = 0; i < n; i = i + incr) {\n\t\tcout << a[i];\n\t\tincr++;\n\t}\n\tcout << endl;\n}	n is integer\nread n\nlet a be an array of characters of length n\nfor i = 0 to n exclusive put input to a[i]\nlet incr be integer = 1\nfor integer i = 0 to n exclusive incrementing by incr\nprint a[i]\nincrease incr\nprint new line
int main() {\n\tint n;\n\tchar s[100];\n\tcin >> n >> s;\n\tint t = 1;\n\tfor (int i = 0; i < n; i += t) {\n\t\tcout << s[i];\n\t\tt++;\n\t}\n\tcout << endl;\n\treturn 0;\n}	create integer n\nlet s be an array of characters of length 100\nread n and s\nt is integer = 1\nfor i = 0 to n exclusive\nprint s[i]\nincrease t by one\nprint new line
int main() {\n\tint n, it = 1;\n\tstring s;\n\tcin >> n >> s;\n\tfor (int i = 0; i < n; i += it) {\n\t\tit++;\n\t\tcout << s[i];\n\t}\n\tcout << endl;\n}	create integers n and it; it = 1\ncreate string s\nread n and s\nfor i = 0 to n exclusive with step of it\nincrease it by one\nprint s[i]\nprint new line
char a[60], b[60];\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tmemset(b, 0, sizeof(b));\n\t\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\t\tint k = 0, d = 0;\n\t\tfor (int i = 1; i <= n; i = i + k) {\n\t\t\tb[d] = a[i];\n\t\t\td++;\n\t\t\tk++;\n\t\t}\n\t\tcout << b << endl;\n\t}\n}	a and b are char arrays with size 60\nlet n be integer\nread n in a loop\ncall memset(b, 0 and sizeof(b))\nread n elements into a starting from index 1\nk and d are integers = 0\nfor i = 1 to n inclusive, incrementing by k\nset b[d] to a[i]\nincrement d\nincrease k\nprint b and a new line
int main() {\n\tint n;\n\tcin >> n;\n\tchar a[60];\n\tcin >> a;\n\tint j = 1;\n\tfor (int i = 0; i < n; i = i + j) {\n\t\tcout << a[i];\n\t\tj++;\n\t}\n\tcout << endl;\n\treturn 0;\n}	declare integer variable called n\nread n\nlet a be an array of characters of size 60\nread a\nj is integer = 1\nfor i = 0 to n exclusive, incrementing i by j\nprint a[i]\nincrease j by one\nprint new line
int main() {\n\tchar s[60];\n\tint n, ans = 0;\n\tcin >> n;\n\tcin >> s;\n\tfor (int i = 0; i < n; i += ans) {\n\t\tans += 1;\n\t\tcout << s[i];\n\t}\n\tcout << endl;\n\treturn 0;\n}	set s to character array of length 60\nn, ans = integers with ans set to 0\nread n\nread s\nfor i to n inclusive incremented by ans\nincrement ans by 1\nprint s[i]\nprint new line
int main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tstring ans;\n\tint cnt = 0, sum = 0;\n\tfor (int i = 0; i < n; i += cnt) {\n\t\tans.push_back(s[i]);\n\t\tcnt++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate string s\nread s\ncreate string ans\ncreate integers cnt, sum with cnt = 0, sum = 0\nfor i = 0 to n exclusive, incrementing i by cnt\nadd element s[i] to end of ans\nincrement cnt\nprint ans print newline
int main() {\n\tint n, cnt = 1, i = 0;\n\tstring s;\n\tcin >> n >> s;\n\twhile (true) {\n\t\tcout << s[i];\n\t\ti += cnt;\n\t\tcnt++;\n\t\tif (i + cnt > n) { break; }\n\t}\n\tcout << endl;\n\treturn 0;\n}	create integers n, cnt, i with cnt = 1, i = 0\ncreate string s\nread n read s\nwhile true\nprint s[i]\nincrement i by cnt\nincrement cnt\nif i + cnt is greater than n, break loop\nprint newline
int main() {\n\tint l, r, n, k;\n\tcin >> k;\n\tfor (int i = 0; i < k; i++) {\n\t\tcin >> l >> r;\n\t\tcout << l << ' ' << r - (r % l) << endl;\n\t}\n}	declare integer variables l, r, n and k\nread k\nfor i = 0 to k exclusive\nread l and r\nprint l, ' ' and r - (r modulo l)
"int main() {\n\tint n;\n\tcin >> n;\n\tlong long l[1000], r[1000], R[1000];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> l[i] >> r[i];\n\t\tR[i] = r[i] / l[i];\n\t}\n\tfor (int i = 0; i < n; i++) cout << l[i] << "" "" << l[i] * R[i] << endl;\n\treturn 0;\n}"	"n = int\nread n\nl, r, R = long long arrays of size 1000 each\nfor i = 0 to n\nread l[i] then r[i]\nset R[i] to r[i] / l[i]\nfor i = 0 to n print l[i] then "" "" then l[i] * R[i]"
"int main() {\n\tint t, n, l;\n\tcin >> t;\n\twhile (t--) {\n\t\tcin >> n >> l;\n\t\tcout << n << "" "" << (l / n) * n << endl;\n\t}\n\treturn 0;\n}"	"create integers t, n, l\nread t\nwhile decrement t is true\nread n read l\nprint n print "" "" print ( l / n ) * n print newline"
"int main() {\n\tint T, l, r;\n\tcin >> T;\n\tfor (int i = 1; i <= T; i++) {\n\t\tcin >> l >> r;\n\t\tcout << l << "" "" << l * (r / l) << endl;\n\t}\n}"	"create integers T, l, r\nread T\nfor i = 1 to T inclusive\nread l read r\nprint l print "" "" print l * ( r / l ) print newline"
"int main() {\n\tint numberOfInputs;\n\tcin >> numberOfInputs;\n\tlong long input1, input2;\n\twhile (numberOfInputs--) {\n\t\tcin >> input1 >> input2;\n\t\tlong long div = input2 / input1;\n\t\tlong long answer = input1 * div;\n\t\tcout << input1 << "" "" << answer << endl;\n\t}\n\treturn 0;\n}"	"create integer numberOfInputs\nread numberOfInputs\ncreate long longs input1 and input2\nwhile numberOfInputs > 0, decrement it and keep looping\nread input1 and input2\ncreate long long div = input2 / input1\ncreate long long answer = input1 * div\nprint input1, "" "" and answer"
int T, l, r;\nint main() {\n\tint i, j;\n\tcin >> T;\n\tfor (i = 1; i <= T; i++) {\n\t\tcin >> l >> r;\n\t\tcout << l << ' ' << (r / l) * l << '\n';\n\t}\n\treturn 0;\n}	create integers T, l ,r\ncreate integers i, j\nread T\nfor i = 1 to T inclusive\nread l read r\nprint l print ' ' print ( r / l ) * l print '\n'
"int main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong int l, r;\n\t\tcin >> l >> r;\n\t\tif (l == 1)\n\t\t\tcout << l << "" "" << r << endl;\n\t\telse {\n\t\t\tcout << l << "" "";\n\t\t\tlong int mod = (r % l);\n\t\t\tcout << (r - mod) << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"t = int\nread t\nloop t times\nl, r = long int\nread l then r\nif l equals 1\nprint l and r\nelse\nprint l and "" ""\nmod = long int with mod = r modulo l\nprint r - mod"
"int main() {\n\tint t;\n\tcin >> t;\n\tint l, r, d;\n\twhile (t--) {\n\t\tcin >> l >> r;\n\t\tif (r % l == 0) {\n\t\t\tcout << l << "" "" << r << endl;\n\t\t} else {\n\t\t\td = r % l;\n\t\t\td = r - d;\n\t\t\tcout << l << "" "" << d << endl;\n\t\t}\n\t}\n}"	t=int\nread t\nl,r,d=int\nwhile decremented t not equal 0\nread l,r\nif r modulo l is zero\nprint l, space, r\nelse\nd=r modulo l\nd=r-d\nprint l, space, d
"int main() {\n\tlong long n, m;\n\tcin >> n;\n\tlong long l, r;\n\twhile (n--) {\n\t\tcin >> l >> r;\n\t\tif (r % l == 0) {\n\t\t\tcout << l << "" "" << r << endl;\n\t\t} else {\n\t\t\tcout << l << "" "" << r - (r % l) << endl;\n\t\t}\n\t}\n}"	"create long long n and m\nread n\ncreate long long l and r\nwhile decrement n\nread l and r\nif r mod l = 0\nprint l, "" "", r\nelse\nprint l, "" "", r - (r mod l)"
"long long x, y;\nint main() {\n\tint T;\n\tcin >> T;\n\twhile (T--) {\n\t\tcin >> x >> y;\n\t\tlong long r = y % x;\n\t\tcout << x << "" "" << y - r << ""\n"";\n\t}\n\treturn 0;\n}"	"x, y = long long\nT = int\nread T\nloop T times\nread x then y\nr = long long with r = y mod x\nprint x then "" "" then y - r"
int main() {\n\tint n, p[100100], s[100100], i;\n\tcin >> n;\n\tfor (i = 2; i <= n; i++) cin >> p[i];\n\tfor (i = 1; i <= n; i++) cin >> s[i];\n\tfor (i = 2; i <= n; i++) {\n\t\tif (s[i] == -1) continue;\n\t\tif (s[p[i]] == -1)\n\t\t\ts[p[i]] = s[i];\n\t\telse\n\t\t\ts[p[i]] = min(s[p[i]], s[i]);\n\t}\n\tfor (i = 2; i <= n; i++) {\n\t\tif (s[i] == -1) continue;\n\t\tif (s[p[i]] > s[i]) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tlong long ans = s[1];\n\tfor (i = 2; i <= n; i++) {\n\t\tif (s[i] == -1) continue;\n\t\tans += (s[i] - s[p[i]]);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create int n, i and arrays p and s of length 100100\nread n\nfor i=2 to n inclusive, read p[i]\nfor i=1 to n inclusive, read s[i]\nfor i=2 to n inclusive\nif s[i] = -1, continue the loop\ns[p[i]] = -1\nset s[p[i]] = s[i]\nelse\ns[p[i]] = min of s[p[i]] and s[i]\nfor i=2 to n inclusive\nif s[i] equal to -1, continue the loop\nif s[p[i]] greater than s[i]\nprint -1\nset ans to s[1]\nfor i=2 to n inclusive\nif s[i] equal to -1, continue the loop\nassign ans + s[i] - s[p[i]] to ans\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tlong long int s[n], ms[n], p[n], v[n];\n\tp[0] = 0;\n\tfor (int i = 1; i < n; --p[i++]) cin >> p[i];\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> s[i];\n\t\tms[i] = s[i];\n\t}\n\tfor (int i = n - 1; i > 0; --i) {\n\t\tif (ms[i] < 0) continue;\n\t\tif (s[p[i]] < 0 && (ms[p[i]] < 0 || ms[p[i]] > ms[i])) ms[p[i]] = ms[i];\n\t}\n\tif (ms[0] < 0) ms[0] = 0;\n\tlong long int sum = ms[0];\n\tfor (int i = 1; i < n; ++i) {\n\t\tif (ms[i] < 0)\n\t\t\tms[i] = ms[p[i]];\n\t\telse if (ms[i] < ms[p[i]]) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t} else\n\t\t\tsum += ms[i] - ms[p[i]];\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate long long integer arrays s, ms, p, v with s size n, ms size n, p size n, v size n\nset p[0] to 0\nfor i = 1 to n exclusive, decrementing p[increment i], read p[i]\nfor i = 0 to n exclusive\nread s[i]\nset ms[i] to s[i]\nfor i = n - 1 to 0 exclusive, decrementing i\nif ms[i] is less than 0, break current loop iteration\nif s[p[i]] is less than 0 and ( ms[p[i]] is less than 0 or ms[p[i]] is greater than ms[i]), set ms[p[i]] to ms[i]\nif ms[0] is less than 0, set ms[0] to 0\ncreate long long integer sum with sum = ms[0]\nfor i = 1 to n exclusive\nif ms[i] is less than 0\nset ms[i] to mms[p[i]]\nelse if ms[i] is less than ms[p[i]]\nprint -1 print newline\nelse\nincrement sum by ms[i] - ms[p[i]]\nprint sum print newline
const int N = 100001;\nvector<int> g[N];\nint n, val[N];\nlong long sum[N];\nbool dfs(int u, int p) {\n\tif (g[u].size() == 1 && p != -1) {\n\t\tif (sum[u] == -1) {\n\t\t\tval[u] = 0;\n\t\t\tsum[u] = sum[p];\n\t\t} else\n\t\t\tval[u] = sum[u] - sum[p];\n\t\treturn true;\n\t}\n\tif (sum[u] == -1) {\n\t\tlong long mn = 1e9;\n\t\tfor (int i = 0; i < g[u].size(); ++i) {\n\t\t\tint v = g[u][i];\n\t\t\tif (v == p) continue;\n\t\t\tlong long diff = sum[v] - sum[p];\n\t\t\tif (diff < 0) return false;\n\t\t\tmn = min(mn, diff);\n\t\t}\n\t\tval[u] = mn;\n\t\tsum[u] = sum[p] + val[u];\n\t} else if (p != -1)\n\t\tval[u] = sum[u] - sum[p];\n\tbool check = 1;\n\tfor (int i = 0; i < g[u].size(); ++i) {\n\t\tint v = g[u][i];\n\t\tif (v == p) continue;\n\t\tcheck = check && dfs(v, u);\n\t}\n\treturn check;\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tint p;\n\t\tcin >> p;\n\t\t--p;\n\t\tg[p].push_back(i + 1);\n\t\tg[i + 1].push_back(p);\n\t}\n\tfor (int i = 0; i < n; ++i) cin >> sum[i];\n\tval[0] = sum[0];\n\tif (!dfs(0, -1))\n\t\tcout << -1 << endl;\n\telse {\n\t\tlong long s = 0;\n\t\tfor (int i = 0; i < n; ++i) s += val[i];\n\t\tcout << s << endl;\n\t}\n\treturn 0;\n}	let N be a constant integer with value N is equal to 100001\ng = array of vector integers of size N\nlet n, val be integers with val = array of integers of length N\nsum = array of long integers of length N\nlet depth first search of int u and int p be a boolean type\nif length of g[u] is equal to 1 and p is not equal to -1\nif sum[u] is equal to -1\nset val[u] to 0\nassign the value sum[p] to sum[u]\nelse do the following\nassign the value of sum[u] - sum[p] to val[u]\nreturn the value as true\nif sum[u] is equal to -1\nlet mn be a long integer with mn = 1e9\nfor i =0 to length of g[u] exclusive\nlet v be a integer with v = g[u][i]\nif v is equal to p , proceed to next\nlet diff be a long integer with diff = sum[v] - sum[p]\nif diff is less than 0, return false\nmn = minimum of mn and diff\nthe uth element of val = mn\nsum[u] is equal to sum[p] + val[u]\nelse if ( p is not equal to -1 )\nthe value of sum[u] - sum[p] is assigned to val[u]\nlet check is a boolean type with check = 1\nfor i = 0 to length of g[u] exclusive]\nlet v be a integer with v = g[u][i]\nif v is equal to p , proceed to next\ncheck = check and depth first search of v , u\nreturn the value of check\nread n\nfor i = 0 to n - 1 exclusive\nlet p be a integer\nread p\ndecrease p value by 1\ndo g[p].push_back(i + 1)\ndo g[i + 1].push_back(p)\nfor i = 0 to n exclusive , read sum[i]\nlet val[0] = sum[0]\nif not dfs of 0 and -1\nprint -1 and newline\nelse do the following\nlet long integer s = 0\nfor i = 0 to n exclusive , increase s by val[i]\nprint s and newline
long long p[200000];\nlong long s[200000];\nint main() {\n\tlong long num = 0;\n\tlong long n, i, j;\n\tcin >> n;\n\tfor (i = 2; i <= n; i++) { cin >> p[i]; }\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> s[i];\n\t\tif (s[i] == -1) s[i] = 1e10;\n\t}\n\tfor (i = 1; i <= n; i++) s[p[i]] = min(s[p[i]], s[i]);\n\tfor (i = 1; i <= n; i++) {\n\t\tif (s[p[i]] > s[i]) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (s[i] == 1e10) s[i] = s[p[i]];\n\t\tnum += s[i] - s[p[i]];\n\t}\n\tcout << num << endl;\n\treturn 0;\n}	create long long p with size 200000\ncreate long long s with size 200000\ncreate long long num with num = 0\ncreate long longs n, i, j\nread n\nfor i = 2 to n inclusive, read p[i]\nfor i = 1 to n inclusive\nread s[i]\nif s[i] is -1, set s[i] to 1e10\nfor i = 1 to n inclusive, set s[p[i]] to minimum of s[p[i]] and s[i]\nfor i = 1 to n inclusive\nif s[p[i]] is greater than s[i]\nprint -1 print newline\nif s[i] is 1e10, set s[i] to s[p[i]]\nincrement num by s[i] - s[p[i]]\nprint num print newline
const int maxn = 1e5 + 5;\nconst long long inf = 0x3f3f3f3f;\nvector<int> G[maxn];\nlong long sum[maxn], a[maxn];\nint minson[maxn];\nint n;\nint getson(int v) {\n\tint minkey = inf;\n\tfor (int i = 0; i < G[v].size(); ++i) {\n\t\tint to = G[v][i];\n\t\tif (minkey > getson(to)) {\n\t\t\tminkey = sum[to];\n\t\t\tminson[v] = to;\n\t\t}\n\t}\n\treturn sum[v];\n}\nvoid dfs(int v, long long fasum, int deep) {\n\tif (deep & 1)\n\t\ta[v] = sum[v] - fasum;\n\telse if (!G[v].size()) {\n\t\ta[v] = 0;\n\t\treturn;\n\t} else\n\t\ta[v] = sum[minson[v]] - fasum;\n\tfor (int i = 0; i < G[v].size(); ++i) dfs(G[v][i], fasum + a[v], deep + 1);\n}\nint main() {\n\twhile (cin >> n) {\n\t\tint pa;\n\t\tfor (int i = 2; i <= n; ++i) {\n\t\t\tcin >> pa;\n\t\t\tG[pa].push_back(i);\n\t\t}\n\t\tfor (int i = 1; i <= n; ++i) cin >> sum[i];\n\t\tgetson(1);\n\t\tdfs(1, 0, 1);\n\t\tlong long maxsum = 0;\n\t\tint flag = 0;\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tif (a[i] >= 0)\n\t\t\t\tmaxsum += a[i];\n\t\t\telse\n\t\t\t\tflag = 1;\n\t\t}\n\t\tif (!flag)\n\t\t\tcout << maxsum << endl;\n\t\telse\n\t\t\tcout << -1 << endl;\n\t\tfor (int i = 0; i <= n; ++i) G[i].clear();\n\t}\n\treturn 0;\n}	declare const int maxn = 1e5 + 5\ndeclare const long long inf = 0x3f3f3f3f\ndeclare an array of integer vectors G with size maxn\ncreate long long arrays sum and a with maxn elements\ncreate integer array minson with maxn elements\ndeclare int variable n\ndefine function getson\ndeclare int minkey = inf\nfor i = 0 to length of G[v] exclusive\ncreate int to = G[v][i]\nif minkey is greater than getson(to)\nset minkey to sum[to]\nchange minson[v] to to\nreturn sum[v]\nvoid function dfs with int arguments v and deep and long long argument fasum\nif deep & 1 is not 0\nassign sum[v] - fasum to a[v]\nelse if length of G[v] is not 0\nchange a[v] to 0\nreturn\nelse\nset a[v] to sum[minson[v]] - fasum\nfor i = 0 to length of G[v] exclusive, call dfs(G[v][i], fasum + a[v], deep + 1)\nread n and loop further\ncreate int pa\nfor i = 2 to n inclusive\nread pa\npush i to G[pa]\nfor integer i = 1 to n inclusive, read sum[i]\ncall function getson with argument 1\ncall function dfs with arguments 1, 0 and 1\ncreate long long maxsum = 0\ncreate integer flag = 0\nfor integer i = 1 to n inclusive\nif a[i] >= 0\nadd a[i] to maxsum\nelse\nset flag to 1\nif flag is 0\nprint maxsum\nelse\nprint -1\nfor i = 0 to n inclusive, clear G[i]
int main() {\n\tstring x;\n\tcin >> x;\n\tint v = 0, h = 0;\n\tfor (int i = 0; i < x.size(); i++) {\n\t\tif (x[i] == '0') {\n\t\t\tif (!v)\n\t\t\t\tcout << 1 << ' ' << 1 << endl, v++;\n\t\t\telse\n\t\t\t\tcout << 3 << ' ' << 1 << endl, v = 0;\n\t\t} else {\n\t\t\tif (!h)\n\t\t\t\tcout << 4 << ' ' << 3 << endl, h++;\n\t\t\telse\n\t\t\t\tcout << 4 << ' ' << 1 << endl, h = 0;\n\t\t}\n\t}\n\treturn 0;\n}	create string x\nread x\ncreate integers v and h = 0\nfor i = 0 to length of x exclusive\nif x[i] is '0'\nif v is 0\nprint 1, ' ', 1 and a new line, then increment v\nelse\nprint 3, ' ', 1 and a new line, then set v to 0\nelse\nif h is 0\nprint 4, ' ', 3 and a new line, then increment h\nelse\nprint 4, ' ', 1 and a new line, then set h to 0
"bool l, r;\nstring s;\nint main() {\n\tcin >> s;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == '0' && l) {\n\t\t\tcout << ""3 1"" << endl;\n\t\t\tl = false;\n\t\t} else if (s[i] == '0') {\n\t\t\tcout << ""1 1"" << endl;\n\t\t\tl = true;\n\t\t} else if (s[i] == '1' && r) {\n\t\t\tcout << ""4 1"" << endl;\n\t\t\tr = false;\n\t\t} else {\n\t\t\tcout << ""4 3"" << endl;\n\t\t\tr = true;\n\t\t}\n\t}\n\treturn 0;\n}"	"declare boolean variables l and r\nlet s be string\nread s\nfor i = 0 to length of s exclusive\nif s[i] = '0' && l is true\nprint ""3 1"" and a new line\nset value of l to false\nelse if s[i] = '0'\nprint ""1 1"" and a new line\nl = true\nelse if s[i] = '1' && r is true\nprint ""4 1"" and a new line\nassign value of false to r\nelse\nprint ""4 3"" and a new line\nr = true"
"const int MAXN = 100000 + 5;\nint main() {\n\tstring s;\n\tcin >> s;\n\tint cnt1 = 0, cnt2 = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == '0') {\n\t\t\tif (cnt1 % 2 == 0)\n\t\t\t\tcout << 1 << "" "" << 1;\n\t\t\telse\n\t\t\t\tcout << 3 << "" "" << 1;\n\t\t\tcnt1++;\n\t\t} else {\n\t\t\tif (cnt2 % 2 == 0)\n\t\t\t\tcout << 4 << "" "" << 3;\n\t\t\telse\n\t\t\t\tcout << 4 << "" "" << 1;\n\t\t\tcnt2++;\n\t\t}\n\t\tcout << ""\n"";\n\t}\n\treturn 0;\n}"	"create constant integer MAXN with value 100000 + 5\ncreate string s\nread s\nlet cnt1 and cnt2 be integers = 0\nfor integer i = 0 to length of s exclusive\nif s[i] = '0'\nif cnt1 is even\nprint 1, "" "" and 1\nelse\nprint 3, "" "" and 1\nincrement cnt1\nelse\nif cnt2 is even\nprint 4, "" "" and 3\nelse\nprint 4, "" "" and 1\nincrease cnt2\nprint ""\n"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint l1 = s.length();\n\tbool vertikal = 0, horizontal = 0;\n\tfor (int i = 0; i < l1; i++) {\n\t\tif (s[i] == '0') {\n\t\t\tif (vertikal) {\n\t\t\t\tvertikal = 0;\n\t\t\t\tcout << ""3 1\n"";\n\t\t\t} else {\n\t\t\t\tvertikal = 1;\n\t\t\t\tcout << ""1 1\n"";\n\t\t\t}\n\t\t} else {\n\t\t\tif (horizontal) {\n\t\t\t\thorizontal = 0;\n\t\t\t\tcout << ""4 1\n"";\n\t\t\t} else {\n\t\t\t\thorizontal = 1;\n\t\t\t\tcout << ""4 3\n"";\n\t\t\t}\n\t\t}\n\t}\n}"	"s is string\nread s\nl1 is integer = length of s\ncreate booleans vertikal and horizontal = 0\nfor integer i = 0 to l1 exclusive\nif s[i] = '0'\nif vertikal is not 0\nassign value of 0 to vertikal\nprint ""3 1\n""\nelse\nassign value of 1 to vertikal\nprint ""1 1\n""\nelse\nif horizontal is not 0\nassign value of 0 to horizontal\nprint ""4 1\n""\nelse\nset value of horizontal to 1\nprint ""4 3\n"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint o = 0, z = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (s[i] == '0') {\n\t\t\to++;\n\t\t\tif (o % 2)\n\t\t\t\tcout << 1 << "" "" << 1 << endl;\n\t\t\telse\n\t\t\t\tcout << 3 << "" "" << 1 << endl;\n\t\t} else if (s[i] == '1') {\n\t\t\tz++;\n\t\t\tif (z % 2)\n\t\t\t\tcout << 4 << "" "" << 3 << endl;\n\t\t\telse\n\t\t\t\tcout << 4 << "" "" << 1 << endl;\n\t\t}\n\t}\n}"	"create string s\nread s\ncreate integers o, z, with o = 0, z = 0\nfor i = 0 to size of s exclusive\nif s[i] is '0'\nincrement o\nif o % 2\nprint 1 print "" "" print 1 print newline\nelse\nprint 3 print "" "" print 1 print newline\nelse if s[i] is '1'\nincrement z\nif z % 2\nprint 4 print "" "" print 3 print newline\nelse\nprint 4 print "" "" print 1 print newline"
"int main() {\n\tstring str;\n\tcin >> str;\n\tint len = str.length();\n\tint a = 0, c = 0;\n\tfor (int i = 0; i < len; i++) {\n\t\tif (str[i] == '0') {\n\t\t\tif (a == 0) {\n\t\t\t\ta = 1;\n\t\t\t\tputs(""1 1"");\n\t\t\t} else {\n\t\t\t\ta = 0;\n\t\t\t\tputs(""3 1"");\n\t\t\t}\n\t\t}\n\t\tif (str[i] == '1') {\n\t\t\tif (c == 0) {\n\t\t\t\tc = 1;\n\t\t\t\tputs(""4 3"");\n\t\t\t} else {\n\t\t\t\tc = 0;\n\t\t\t\tputs(""4 1"");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"	"create string str\nread str\ncreate integer len with len = length of str\ncreate integers a, c, with a = 0, c = 0\nfor i = 0 to len exclusive\nif str[i] is '0'\nif a is 0\nset a to 1\nprint ""1 1""\nelse\nset a to 0\nprint ""3 1""\nif str[i] is '1'\nif c is 0\nset c to 1\nprint ""4 3""\nelse\nset c to 0\nprint ""4 1"""
"const int N = 200005;\nconst long long MOD = 998244353;\nvoid solve() {\n\tstring s;\n\tbool v = false;\n\tbool g = false;\n\tcin >> s;\n\tint n = s.length();\n\tfor (int i = 0; i < (s.length()); i++) {\n\t\tif (s[i] == '0') {\n\t\t\tif (v) {\n\t\t\t\tcout << 3 << "" "" << 1 << endl;\n\t\t\t\tv = false;\n\t\t\t} else {\n\t\t\t\tcout << ""1 1"" << endl;\n\t\t\t\tv = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (g) {\n\t\t\t\tcout << 4 << "" "" << 1 << endl;\n\t\t\t\tg = false;\n\t\t\t} else {\n\t\t\t\tcout << 4 << "" "" << 3 << endl;\n\t\t\t\tg = true;\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tint t = 1;\n\twhile (t--) { solve(); }\n}"	"assign value 200005 to constant integer N\nassign value 998244353 to constant integer MOD\ndefine function solve\ncreate string s\ncreate boolean v = false\ncreate boolean g = false\nread s\ndeclare integer n = length of s\nfor i = 0 to length of s exclusive\nif s[i] = '0'\nif v is true\nprint 3, "" "", 1 and a new line\nset v to false\nelse\nprint ""1 1"" and a new line\nset v to true\nelse\nif g is true\nprint 4, "" "", 1 and a new line\nset g to false\nelse\nprint 4, "" "", 3 and a new line\nset g to true\ndeclare integer variable t = 1\nwhile t is not 0, decrement it and call solve"
"long long int expo_fast(long long int a, long long int b) {\n\ta = a;\n\tlong long int result = 1;\n\twhile (b) {\n\t\tif (b & 1) result = (result * a);\n\t\tb >>= 1;\n\t\ta = (a * a);\n\t}\n\treturn (result);\n}\nvoid take_in(vector<long long int> *arr) {\n\tfor (int i = 0; i < arr->size(); i++) cin >> (*(arr))[i];\n}\nvoid disp_arr(vector<long long int> *arr) {\n\tfor (int i = 0; i < arr->size(); i++) cout << (*(arr))[i] << "" "";\n}\nstring func(string s, int n) {\n\tstring q;\n\tq.resize(n);\n\tq[0] = s[0];\n\tq[1] = s[1];\n\tq[2] = s[2];\n\tfor (int i = 3; i < n; i++) {\n\t\tif (i % 3 == 0)\n\t\t\tq[i] = q[0];\n\t\telse if (i % 3 == 1)\n\t\t\tq[i] = q[1];\n\t\telse\n\t\t\tq[i] = q[2];\n\t}\n\treturn q;\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\tstack<char> stk;\n\tlong long int ans = 0;\n\tbool cond1 = true, cond2 = true;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == '0') {\n\t\t\tif (cond1) {\n\t\t\t\tcond1 = false;\n\t\t\t\tcout << ""1 1\n"";\n\t\t\t} else {\n\t\t\t\tcond1 = true;\n\t\t\t\tcout << ""3 1\n"";\n\t\t\t}\n\t\t} else {\n\t\t\tif (cond2) {\n\t\t\t\tcond2 = false;\n\t\t\t\tcout << ""4 3\n"";\n\t\t\t} else {\n\t\t\t\tcond2 = true;\n\t\t\t\tcout << ""4 1\n"";\n\t\t\t}\n\t\t}\n\t}\n}"	"declare expo_fast with long long integers a, b as arguments, returning long long integer\nset a to a\ncreate long long integer result with result = 1\nwhile b is true\nif b bitwise and 1, set result to result * a\nset b to b bitshift right 1\nset a to a * a\nreturn result from function\ndeclare take_in with long long integer vector pointer arr as argument returning void\nfor i = 0 to result of run size from arr exclusive, read value of arr[i]\ndeclare disp_arr with long long integer vector pointer as argument, returning void\nfor i = 0 to result of run size from arr exclusive, print value of arr[i] print "" ""\ndeclare func with string s, integer n as arguments, returning string\ncreate string q\nresize q to size n\nset q[0] to s[0]\nset q[1] to s[1]\nset q[2] to s[2]\nfor i = 3 to n exclusive\nif i % 3 is 0\nset q[i] to q[0]\nelse if i % 3 is 1\nset q[i] to q[1]\nelse\nset q[i] to q[2]\nreturn q from function\ncreate string s\nread s\ncreate character stack stk\ncreate long long integers ans with ans = 0\ncreate booleans cond1, cond2 with cond1 = true, cond2 = true\nfor i = 0 to length of s exclusive\nif s[i] is '0'\nif cond1 is true\nset cond1 to false\nprint ""1 1\n""\nelse\nset cond1 to true\nprint ""3 1\n""\nelse\nif cond2 is true\nset cond2 to false\nprint ""4 3\n""\nelse\nset cond2 to true\nprint ""4 1\n"""
"string s;\nint r[1001];\nint c[1001];\nint main() {\n\tcin >> s;\n\tint n = s.length();\n\tbool slot_0 = false;\n\tbool slot_1 = false;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == '0') {\n\t\t\tif (!slot_0) {\n\t\t\t\tcout << ""1 1\n"";\n\t\t\t\tslot_0 = true;\n\t\t\t} else {\n\t\t\t\tcout << ""3 1\n"";\n\t\t\t\tslot_0 = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!slot_1) {\n\t\t\t\tcout << ""4 3\n"";\n\t\t\t\tslot_1 = true;\n\t\t\t} else {\n\t\t\t\tcout << ""4 1\n"";\n\t\t\t\tslot_1 = false;\n\t\t\t}\n\t\t}\n\t}\n}"	"create string s\ncreate integer array r with size 1001\ncreate integer array c with size 1001\nread s\ncreate integer n with n = length of s\ncreate boolean slot_0 with slot_0 = false\ncreate boolean slot_1 with slot_1 = false\nfor i = 0 to n exclusive\nif s[i] is '0'\nif not slot_0\nprint ""1 1\n""\nset slot_0 to true\nelse\nprint ""3 1\n""\nset slot_0 to false\nelse\nif not slot_1\nprint ""4 3\n""\nset slot_1 to true\nelse\nprint ""4 1\n""\nset slot_1 to false"
"long long int llin() {\n\tlong long int tmp;\n\tcin >> tmp;\n\treturn tmp;\n}\nvoid solve() {\n\tlong long int nsticks = llin();\n\tlong long int lengths[nsticks];\n\tlong long int min = 101;\n\tlong long int max = 0;\n\tfor (long long int i = 0; i < nsticks; i++) {\n\t\tlong long int tmp = llin();\n\t\tlengths[i] = tmp;\n\t\tif (tmp > max) max = tmp;\n\t\tif (tmp < min) min = tmp;\n\t}\n\tlong long int min_t = min;\n\tlong long int min_cost = 1000005;\n\tfor (long long int t = min; t < max + 1; t++) {\n\t\tlong long int tmp_cost = 0;\n\t\tfor (long long int i = 0; i < nsticks; i++) {\n\t\t\tlong long int tmp_length = lengths[i];\n\t\t\tif (tmp_length > t + 1)\n\t\t\t\ttmp_cost += tmp_length - (t + 1);\n\t\t\telse if (tmp_length < t - 1)\n\t\t\t\ttmp_cost += t - 1 - (tmp_length);\n\t\t}\n\t\tif (min_cost > tmp_cost) {\n\t\t\tmin_t = t;\n\t\t\tmin_cost = tmp_cost;\n\t\t}\n\t}\n\tcout << min_t << "" "" << min_cost << '\n';\n\treturn;\n}\nint main() {\n\tint TESTS = 1;\n\twhile (TESTS--) { solve(); }\n\treturn 0;\n}"	"create llin with no arguments, returning long long integer\ncreate long long integer tmp\nread tmp\nreturn tmp from function\ndeclare solve with no arguments, returning void\ncreate long long integer nsticks with nsticks = result of run llin\ncreate long long integer array lengths with size nsticks\ncreate long long integer min with min = 101\ncreate long long integer max with max = 0\nfor i = 0 to nsticks exclusive\ncreate long long integer tmp with tmp = result of run llin\nset lengths[i] to tmp\nif tmp is greater than max, set max to tmp\nif tmp is less than min, set min to tmp\ncreate long long integer min_t with min_t to min\ncreate long long integer min_cost with min_cost = 1000005\nfor t = min to max + 1 exclusive\ncreate long long integer tmp_cost with tmp_cost = 0\nfor i = 0 to nsticks exclusive\ncreate long long integer tmp_length with tmp_length = lengths[i]\nif tmp_length is greater than t + 1\nincrement tmp_cost by tmp_length - ( t + 1 )\nelse if tmp_length is less than t - 1\nincrement tmp_cost by t - 1 - tmp_length\nif min_cost is greater than tmp_cost\nset min_t to t\nset min_cost to tmp_cost\nprint min_t print "" "" print min_cost print '\n'\nreturn from function\ncreate integer TESTS with TESTS = 1\nwhile decrement TESTS is true, run solve"
int main() {\n\tint n;\n\tcin >> n;\n\tint a, b, i, cnt = 0, max = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a >> b;\n\t\tcnt = cnt + b - a;\n\t\tif (cnt > max) max = cnt;\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integer a, b, i, cnt, max, set cnt = 0, max = 0\nfor i = 0 to n execute\nprint a, b\nset cnt = cnt + b - a\nif cnt>max set max = cnt\nprint max
int main() {\n\tint x, y, c = 0, m = 0;\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> x >> y;\n\t\tc -= x;\n\t\tc += y;\n\t\tif (c > m) { m = c; }\n\t}\n\tcout << m << endl;\n\treturn 0;\n}	create integers x, y, c, m with c = 0, m = 0\ncreate integer n\nread n\nwhile decrement n is true\nread x read y\ndecrement c by x\nincrement c by y\nif c is greater than m, set m to c\nprint m print newline
string str;\nint n, a, b, capacity = 0, total = 0;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a >> b;\n\t\ttotal -= a;\n\t\ttotal += b;\n\t\tcapacity = max(capacity, total);\n\t}\n\tcout << capacity << endl;\n\treturn 0;\n}	create string str\nlet n, a, b, capacity, total be integers, set capacity = 0, total=0\nread n\nfor i=0 to n exclusive\nread a and b\ntotal = total - a\nset total to total + b\nassign max of capacity and total to capacity\nprint capacity
int main() {\n\tint n;\n\tcin >> n;\n\tint on, off, count = 0, c = 0;\n\twhile (n--) {\n\t\tcin >> off >> on;\n\t\tc += on - off;\n\t\tif (c > count) count = c;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integers on, off, count, c with count = 0, c = 0\nwhile decrement n is true\nread off read on\nincrement c by on - off\nif c is greater than count, set count to c\nprint count print newline
int main() {\n\tint n;\n\tcin >> n;\n\tint max, a, b, c;\n\tcin >> a >> b;\n\tc = a + b;\n\tmax = c;\n\tfor (int i = 1; i < n; i++) {\n\t\tcin >> a >> b;\n\t\tc -= a;\n\t\tc += b;\n\t\tif (c > max) max = c;\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	integers = n\nread n\nintegers = max,a,b,c\nread a,b\nset c to a + b\nset max to c\nfor i = 1 to less than n do the following\nread a,b\nsubtract a from c\nc equals c plus b\nif c is greater than max then do the following max = c\noutput max
int main() {\n\tint n, i, j, k, max, cap;\n\tmax = -1;\n\tcap = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> j >> k;\n\t\tcap = cap - j + k;\n\t\tif (cap > max) max = cap;\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	n, i, j, k, max, cap = int\nset max to -1\nset cap to 0\nread n\nfor i = 0 to n\nrad j then k\nset cap to cap - j + k\nif cap is greater than max set max to cap\nprint max
int main() {\n\tint n;\n\tcin >> n;\n\tint max = 0;\n\tint cp = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tcp += (b - a);\n\t\tif (cp >= max) max = cp;\n\t}\n\tcout << max << endl;\n}	let n be an integer\nread n\nmax = int = 0\ncp = 0 = int\nfor i = 0 to n\nlet a, b be ints\nread a and b\nincrement cp by (b- a)\nif cp >= max then set max to cp\nprint max
int main() {\n\tint n, a, b, c = 0, m = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a >> b;\n\t\tc = c + b - a;\n\t\tif (m < c) m = c;\n\t}\n\tcout << m << endl;\n\treturn 0;\n}	create integers n, a, b, c, m with c = 0, m = 0\nread n\nfor i = 0 to n exclusive\nread a read b\nset c to c + b - a\nif m is less than c, set m to c\nprint m print newline
int main() {\n\tint n;\n\tcin >> n;\n\tint ans = 0;\n\tint temp = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\ttemp -= a;\n\t\ttemp += b;\n\t\tans = max(temp, ans);\n\t}\n\tcout << ans << endl;\n}	create int n\nread n\nans =0\ntemp =0\nfor i=0 to n exclusive\ncreate int a and b\nread a and b\nset temp to temp - a\nassign temp + b to temp\nset ans = max of temp and ans\nprint ans
int main() {\n\tlong long n, max = 0, d = 0;\n\tcin >> n;\n\tlong long a[100000], b[100000];\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> a[i] >> b[i];\n\t\td = d - a[i];\n\t\td = d + b[i];\n\t\tif (d > max) max = d;\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	create long longs n, max, d, with max = 0, d = 0\nread n\ncreate long long arrays a, b, with a size 100000, with b size 100000\nfor i = 0 to n exclusive\nread a[i] read b[i]\nset d to d - a[i]\nset d to d + b[i]\nif d is greater than max, set max to d\nprint max print newline
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n], b[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i] >> b[i]; }\n\tint curr = 0;\n\tint req = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcurr -= a[i];\n\t\tcurr += b[i];\n\t\tif (curr > req) { req = curr; }\n\t}\n\tcout << req << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integer arrays a, b with a size n, b size n\nfor i = 0 to n exclusive, read a[i] read b[i]\ncreate integer curr with curr = 0\ncreate integer req with req = 0\nfor i = 0 to n exclusive\ndecrement curr by a[i]\nincrement cur by b[i]\nif curr is greater than req, set req to curr\nprint req print newline
int main() {\n\tint n;\n\tint maxValue = INT_MIN;\n\tcin >> n;\n\tint a, b;\n\tint d = 0;\n\tint c = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a >> b;\n\t\tc = c + a;\n\t\td = d + b;\n\t\tif (maxValue < abs(c - d)) maxValue = abs(c - d);\n\t}\n\tcout << maxValue << endl;\n\treturn 0;\n}	create integer n\ncreate integer maxValue set maxValue = INT_MIN\nread n\ncreate Integer a, b\ncreate integer d set d = 0\ncreate integer c set c = 0\nfor i =0 to n execute\nprint a, b\nset c = c + a\nset d = d + b\nif maxValue is less than the absolute value of c - d set maxValue = abs(c - d)\nprint maxValue
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint ans = 0, temp = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint p, q;\n\t\t\tcin >> p >> q;\n\t\t\ttemp += q;\n\t\t\ttemp -= p;\n\t\t\tans = max(ans, temp);\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	create integer n\nwhile read n is true\ncreate integers ans, temp with ans = 0, temp = 0\nfor i = 0 to n exclusive\ncreate integers p, q\nread p read q\nincrement temp by q\ndecrement temp by p\nset ans to maximum of ans and temp\nprint ans print newline
int main() {\n\tint n, Max = 0, Count = 0;\n\tcin >> n;\n\tint a[n], b[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i] >> b[i];\n\t\tCount -= a[i];\n\t\tCount += b[i];\n\t\tif (Count > Max) { Max = Count; }\n\t}\n\tcout << Max << endl;\n\treturn 0;\n}	n=int, Max and Count=0\nread n\na and b=array of n int\nfor i=0 to n exclusive\nread a[i],b[i]\nsubtract a[i] from Count\nadd b[i] to Count\nif Count>Max Max=Count\nprint Max
int main() {\n\tint a, b, i, j = 0, c = 0, n, p = 0, q = 0;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> a >> b;\n\t\tp = p + a;\n\t\tq = q + b;\n\t\tc = q - p;\n\t\tif (c > j) { j = c; }\n\t}\n\tcout << j << endl;\n\treturn 0;\n}	a, b, i, j, c, n, p, q = int with j = 0 and c = 0 and p = 0 and q = 0\nread n\nfor i = 1 to n inclusive\nread a then b\nset p to p + a\nset q to q + b\nset c to q - p\nif c > j set j to c\nprint j
int main() {\n\tchar s[10001];\n\tint t;\n\twhile (cin >> t) {\n\t\tint ns = -1, sm = 0;\n\t\twhile (t--) {\n\t\t\tint doll, puppet;\n\t\t\tcin >> doll >> puppet;\n\t\t\tsm = sm - doll + puppet;\n\t\t\tns = max(ns, sm);\n\t\t}\n\t\tcout << ns << endl;\n\t}\n}	create character array s with size 10001\ncreate integer t\nwhile read t is true\ncreate integers ns, sm with ns = -1, sm = 0\nwhile decrement t is true\ncreate integers doll, puppet\nread doll read puppet\nset sm to sm - doll + puppet\nset ns to maximum of ns and sm\nprint ns print newline
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint a, b, total, k = 0, max;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> a >> b;\n\t\t\tif (k == 0) {\n\t\t\t\ttotal = b;\n\t\t\t\tk = 1;\n\t\t\t\tmax = b;\n\t\t\t} else if (k == 1) {\n\t\t\t\ttotal = total - a + b;\n\t\t\t\tif (total > max) max = total;\n\t\t\t}\n\t\t}\n\t\tcout << max << endl;\n\t}\n\treturn 0;\n}	n = integer\nwhile n can be read as a valid integer\na, b, total, max = integers, k = integer = 0\nfor i = 0 to n exclusive\nread a, b\nif k is 0\ntotal = b\nk = 1\nmax = b\nelse if k is 1\ntotal = total - a + b\nif total > max, then max = total\nprint max
int main() {\n\tint a, b;\n\tint counter = 0;\n\tint tranSize = 0;\n\tint rep;\n\tcin >> rep;\n\twhile (rep--) {\n\t\tcin >> a >> b;\n\t\tcounter -= a;\n\t\tcounter += b;\n\t\tif (counter > tranSize) { tranSize = counter; }\n\t}\n\tcout << tranSize << endl;\n\treturn 0;\n}	create integers a, b\ncreate integer counter with counter = 0\ncreate integer tranSize with tranSize = 0\ncreate integer rep\nread rep\nwhile decrement rep is true\nread a read b\ndecrement counter by a\nincrement counter by b\nif counter is greater than tranSize, set tranSize to counter\nprint tranSize print newline
int main() {\n\tvector<long long int> v;\n\tlong long int n, out, in, sum = 0;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> out >> in;\n\t\tsum = sum - out + in;\n\t\tv.push_back(sum);\n\t}\n\tsort(v.begin(), v.end());\n\treverse(v.begin(), v.end());\n\tcout << v[0] << endl;\n\treturn 0;\n}	v = long long int vector\nn, out, in, sum = long long int with sum = 0\nread n\nloop n times\nread out then in\nset sum to sum - out + in\nappend sum to v\nsort v\nreverse v\nprint v[0]
"int main() {\n\tlong long int n, x, y, i, max = 0, a = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> x >> y;\n\t\ta = a - x + y;\n\t\tif (max < a) { max = a; }\n\t}\n\tcout << max << ""\n"";\n}"	n, x, y, i, max, a = long long integer with max, a = 0\nread n\nfor i = 0 to n exclusive\nread x, y\na = a - x + y\nif max < a, max = a\nprint max
int main() {\n\tint minx = 0, n, a, b, test = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a >> b;\n\t\ttest -= a;\n\t\ttest += b;\n\t\tminx = max(minx, test);\n\t}\n\tcout << minx << endl;\n\treturn 0;\n}	create integers minx, n, a, b and test with minx and test = 0\nread variable n from the input\nfor integer i = 0 to n exclusive\nread standard input to a and b\nchange test to test - a\nchange test to sum of test and b\nchange minx to max of minx and test\nprint minx to the standard output
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n], b[n];\n\tint cntr = 0, ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i] >> b[i];\n\t\tcntr -= a[i];\n\t\tcntr += b[i];\n\t\tans = max(ans, cntr);\n\t}\n\tcout << ans << endl;\n}	n = int\nread n\na, b = int array of size n each\ncntr, ans = int with cntr = 0 and ans = 0\nfor i = 0 to n\nread a[i] then b[i]\ndecrement cntr by a[i]\nincrement cntr by b[i]\nset ans to max of ans and cntr\nprint ans
int main() {\n\tint n, a, b, s, t;\n\twhile (cin >> n) {\n\t\tt = 0;\n\t\tint r = 0, z = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> a >> b;\n\t\t\tr += a;\n\t\t\tz += b;\n\t\t\ts = z - r;\n\t\t\tt = max(t, s);\n\t\t}\n\t\tcout << t << endl;\n\t}\n\treturn 0;\n}	create integers n, a, b, s, t\nwhile read n is true\nset t to 0\ncreate integers r, z, with r = 0, z = 0\nfor i = 0 to n exclusive\nread a read b\nincrement r by a\nincrement z by b\nset s to z - r\nset t to maximum of t ans s\nprint t print newline
int s;\nint main() {\n\tint x, a[10001], b[10001], maxs = 0;\n\tcin >> x;\n\tfor (int i = 1; i <= x; i++) cin >> a[i] >> b[i];\n\tfor (int i = 1; i <= x; i++) {\n\t\ts -= a[i];\n\t\ts += b[i];\n\t\tif (s > maxs) maxs = s;\n\t}\n\tcout << maxs << endl;\n\treturn 0;\n}	s = integer\ncreate integers x, a[10001], b[10001], maxs, set maxs to 0\nread x\nfor i=1 to x inclusive, read a[i] and b[i]\nfor i=1 to x inclusive\nset s to s - a[i]\nassign s + b[i] to s\nif s greater than maxs, set maxs to s\nprint maxs
int main() {\n\tint n, r = 0, t = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tt = t - a + b;\n\t\tif (t > r) r = t;\n\t}\n\tcout << r << endl;\n\treturn 0;\n}	create integers n, r, t, with r = 0, t = 0\nread n\nfor i = 0 to n exclusive\ncreate integers a, b\nread a read b\nset t to t = a + b\nif t is greater than r, set r to t\nprint r print newline
"bool lucky(int n) {\n\twhile (n != 0) {\n\t\tif (n % 10 != 4 && n % 10 != 7) { return false; }\n\t\tn /= 10;\n\t}\n\treturn true;\n}\nbool almost_lucky(int n) {\n\tif (lucky(n)) { return true; }\n\tfor (int i = 2; i * i <= n; ++i) {\n\t\tif (n % i == 0 && (lucky(i) || lucky(n / i))) { return true; }\n\t}\n\treturn false;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tif (almost_lucky(n)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"bool function lucky with integer argument n\nwhile n != 0\nif n % 10 != 4 && n % 10 != 7 return false\ndivide n by 10\nreturn true\nalmost_lucky is a boolean function with integer argument n\nif lucky(n) is true, return true\nfor i = 2 while i * i <= n\nif n % i = 0 && (lucky(i) or lucky(n / i) is true)\nreturn false\ndeclare integer n\nread n\nif almost_lucky(n) is true\nprint ""YES""\nelse\nprint ""NO"""
"string str(int n) {\n\tstringstream ss;\n\tss << n;\n\tstring s;\n\tss >> s;\n\treturn s;\n}\nint sorte[1001];\nint tam = 0;\nvoid lucky() {\n\tfor (int i = 0; i < 1001; i++) {\n\t\tstring s = str(i);\n\t\tbool sorte2 = true;\n\t\tfor (int c = 0; c < s.length(); c++) {\n\t\t\tif (s[c] != '4' && s[c] != '7') {\n\t\t\t\tsorte2 = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (sorte2) {\n\t\t\tsorte[tam] = i;\n\t\t\ttam++;\n\t\t}\n\t}\n}\nint main() {\n\tlucky();\n\tint n;\n\tcin >> n;\n\tint pos = 0;\n\tbool divide = false;\n\twhile (sorte[pos] <= n && pos < tam) {\n\t\tif (n % sorte[pos] == 0) {\n\t\t\tdivide = true;\n\t\t\tbreak;\n\t\t}\n\t\tpos++;\n\t}\n\tif (divide) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	"function str (get int n, return string)\nss = stringstream\npush n into ss\ns=string\ns = ss\nreturn s\nsorte=array of 1001 int\ntam=0\nfunction lucky\nfor i=0 to 1001 exclusive\ns string = str(i)\nsorte2=true\nfor c=0 to length of s exclusive\nif s[c] != '4' and != '7'\nsorte2 = false\nbreak\nif sorte2\nsorte[tam] = i\nincrement tam\ncall lucky()\nn=int\nread n\npos=0\ndivide=false\nwhile sorte[pos] <= n and pos < tam\nif n modulo sorte[pos] is zero\ndivide=true\nbreak\nincrement pos\nif divide\nprint ""YES""\nelse\nprint ""NO"""
"int arr[] = {4, 7, 44, 77, 47, 74, 444, 447, 474, 477, 777, 744, 747, 774};\nbool s = false;\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < 14; ++i) {\n\t\tif (n % arr[i] == 0) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\ts = true;\n\t\t\tbreak;\n\t\t} else\n\t\t\tcontinue;\n\t}\n\tif (s == false) cout << ""NO"" << endl;\n\treturn 0;\n}"	assign elements 4, 7, 44, 77, 47, 74, 444, 447, 474, 477, 777, 744, 747, 774 to int array arr\nset bool s to false\ncreate int n\nread n\nfor i=0 to 14 exclusive\nif n mod arr[i] = 0\nprint YES\ns = true\nbreak\nelse\ncontinue the loop\nif s is false, print NO and a newline
"int main() {\n\tint n, i, k, a, j, h;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tk = i;\n\t\tif (n % k == 0) {\n\t\t\tj = h = 0;\n\t\t\twhile (k != 0) {\n\t\t\t\ta = k % 10;\n\t\t\t\tif (a == 4 || a == 7) { h++; }\n\t\t\t\tk = k / 10;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (h == j) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n}"	"create integers n, i, , a, j, h\nread n\nfor i = 1 to n inclusive\nset k to i\nif n % k is 0\nset j to h to 0\nwhile k is not 0\nset a to k % 10\nif a is 4 or a is 7, increment h\nset k to k / 10\nincrement j\nif h is j\nprint ""YES"" print newline\nprint ""NO"" print newline"
"int main() {\n\tint num;\n\tint arr[14] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777};\n\tcin >> num;\n\tfor (int i = 0; i < 14; i++) {\n\t\tif (num % arr[i] == 0) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	num = integer\narr = integer array of 14 strings with arr = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777}\nread num\nfor i = 0 to 13\nif num modulo arr[i] is 0\nprint YES\nprint NO
"int main() {\n\tint i, j, l, x, m, m1, k = 0, res = 0;\n\tcin >> x;\n\tint a[1000] = {0};\n\tfor (j = 4; j <= 1000; j++) {\n\t\ti = j;\n\t\tm = 0, m1 = 0;\n\t\twhile (i > 0) {\n\t\t\tl = i % 10;\n\t\t\tif (l == 4 || l == 7) m++;\n\t\t\ti = i / 10;\n\t\t\tm1++;\n\t\t}\n\t\tif (m == m1) {\n\t\t\ta[k] = j;\n\t\t\tk++;\n\t\t}\n\t}\n\tfor (i = 0; i < k; i++) {\n\t\tif (x % a[i] == 0) {\n\t\t\tres = 5;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (res == 5)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	set int i, j, l, x, m, m1, k to 0, res=0\nread x\nset int a as array of 1000 all to 0\nfor = 4 to less than or equal to 1000 do the following\nset i to j\nset m to 0, m1\nif i is greater than 0 then do\nset l to i modulo 10\nif l is 4 or 7 then add one to m\nset i to i / 10\nadd one to m1\nif m is m1 then do the following\nset a[k] to j\nadd one to k\nfor = 0 to less than k do the following\nif x modulo a[i] is 0 then do\nset res to 5\nbreak\nif res is 5 then do the following commands\noutput YES\nelse\noutput NO
"int n;\nint arr[] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477};\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < sizeof(arr) / 4; i++)\n\t\tif (!(n % arr[i])) {\n\t\t\tcout << ""YES\n"";\n\t\t\texit(0);\n\t\t}\n\tcout << ""NO\n"";\n\treturn 0;\n}"	"create integer n\ncreate integer array arr with arr = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477}\nread n\nfor i = 0 to size of arr / 4 exclusie\nif not ( n % arr[i] )\nprint ""YES\n""\nexit from program with code 0\nprint ""NO\n"""
"int getdigits(int n) {\n\tint c = 0;\n\twhile (n != 0) {\n\t\tn /= 10;\n\t\tc++;\n\t}\n\treturn c;\n}\nint main() {\n\tint n, d, i, flag = 0;\n\t;\n\tcin >> n;\n\td = getdigits(n);\n\tif (n % 4 == 0) {\n\t\tflag = 1;\n\t} else if (n % 7 == 0) {\n\t\tflag = 1;\n\t} else if (n % 47 == 0) {\n\t\tflag = 1;\n\t} else if (n % 477 == 0) {\n\t\tflag = 1;\n\t} else if (n % 447 == 0) {\n\t\tflag = 1;\n\t} else if (n % 474 == 0) {\n\t\tflag = 1;\n\t} else if (n % 744 == 0) {\n\t\tflag = 1;\n\t} else if (n % 747 == 0) {\n\t\tflag = 1;\n\t} else if (n % 774 == 0) {\n\t\tflag = 1;\n\t}\n\tif (flag)\n\t\tcout << ""YES""\n\t\t\t<< ""\n"";\n\telse\n\t\tcout << ""NO""\n\t\t\t<< ""\n"";\n\treturn 0;\n}"	"int function getdigits with int argument n\ndeclare int variable c = 0\nwhile n is not 0\ndivide n by 10\nincrement c\nreturn c\ndeclare int variables n, d, i and flag where flag = 0\nread input to n\nassign result of etdigits(n) to d\nif n % 4 = 0\nset flag to 1\nelse if n % 7 = 0\nassign 1 to flag\nelse if n % 47 = 0\nassign 1 to flag\nelse if n % 477 = 0\nchange flag to 1\nelse if n % 447 = 0\nassign 1 to flag\nelse if n % 474 = 0\nset flag to 1\nelse if n % 744 = 0\nassign 1 to flag\nelse if n % 747 = 0\nset flag to 1\nelse if n % 774 = 0\nset flag to 1\nif flag is true\nprint ""YES""\nprint ""\n""\nelse\nprint ""NO""\nprint ""\n"""
"int main() {\n\tint a;\n\tcin >> a;\n\tint l = 0;\n\tint m = a;\n\tfor (int i = 0; i < a; i++) {\n\t\tm = m / 10;\n\t\tl = l + 1;\n\t\tif (m == 0) { break; }\n\t}\n\tfor (int k = 1; k <= l; k++) {\n\t\tint b[k] = {};\n\t\tfor (int i = 1; i <= k; i++) {\n\t\t\tint sum1 = 0;\n\t\t\tb[k - i] = 4;\n\t\t\tfor (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n\t\t\tif (a % sum1 == 0) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= k; i++) {\n\t\t\tint sum1 = 0;\n\t\t\tb[k - i] = 7;\n\t\t\tfor (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n\t\t\tif (a % sum1 == 0) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tfor (int j = 0; j < k; j++) { b[j] = 0; }\n\t\tfor (int i = 1; i <= k; i++) {\n\t\t\tint sum1 = 0;\n\t\t\tb[k - i] = 7;\n\t\t\tfor (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n\t\t\tif (a % sum1 == 0) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= k; i++) {\n\t\t\tint sum1 = 0;\n\t\t\tb[k - i] = 4;\n\t\t\tfor (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n\t\t\tif (a % sum1 == 0) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n}"	integers = a\nread a\nset int l to 0\nset int m to a\nfor i = 0 to less than a do the following\nset m to m / 10\nset l to l + 1\nif m is 0 then do break\nfor k = 1 to less than or equal to l do the following\nset int b[k] to\nfor i = 1 to less than or equal to k do the following\nset int sum1 to 0\nset b[k - i] to 4\nfor j = 0 to less than k then sum1 = 10 * sum1 + b[j]\nif a modulo sum1 is 0 then do\noutput YES\nfor i = 1 to less than or equal to k do the following\nset int sum1 to 0\nset b[k - i] to 7\nfor j = 0 to less than k do the following\nif a modulo sum1 is 0 then do\noutput YES\nfor j = 0 to less than k do b[j] = 0\nfor i = 1 to less than or equal to k do the following\nset int sum1 to 0\nset b[k - i] to 7\nfor j = 0 to less than k do the following\nif a modulo sum1 is 0 then do\noutput YES\nfor i = 1 to less than or equal to k do the following\nset int sum1 to 0\nset b[k - i] to 4\nfor j = 0 to less than k do the following\nif a modulo sum1 is 0 then do\noutput YES\noutput NO
"int n, arr[] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777};\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < 10; i++) {\n\t\tif (!(n % arr[i])) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	set int n, arr[] to 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777\nread n\nfor i = 0 to less than 10 do the following\nif n / arr[i] has no remainder then do the following\noutput YES\noutput NO
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tdouble x, y, x0, y0, total(0.0);\n\tcin >> x0 >> y0;\n\twhile (--n) {\n\t\tcin >> x >> y;\n\t\ttotal += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n\t\tx0 = x;\n\t\ty0 = y;\n\t}\n\tcout << fixed << setprecision(6) << total * k / 50 << endl;\n\treturn 0;\n}	n, k = integer\nread n, k\nx, y, x0, y0, total = double with total(0.0)\nread x0, y0\nwhile decrement n\nread x, y\ntotal = total + sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0))\nx0 = x\ny0 = y\nprint fixed, setprecision(6), total * k / 50
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tdouble x, y, x0, y0, total(0.0);\n\tcin >> x0 >> y0;\n\twhile (--n) {\n\t\tcin >> x >> y;\n\t\ttotal += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n\t\tx0 = x;\n\t\ty0 = y;\n\t}\n\tcout << fixed << setprecision(6) << total * k / 50 << endl;\n\treturn 0;\n}	n, k = int\nread n then k\nx, y, x0, y0, total = double with total = 0.0\nread x0 then y0\nloop n times\nread x then y\nadd sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0)) to total\nset x0 = x\nset y0 = y\nprint total * k / 50 with 6 decimal digits
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tdouble x, y, x0, y0, total(0.0);\n\tcin >> x0 >> y0;\n\twhile (--n) {\n\t\tcin >> x >> y;\n\t\ttotal += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n\t\tx0 = x;\n\t\ty0 = y;\n\t}\n\tcout << fixed << setprecision(6) << total * k / 50 << endl;\n\treturn 0;\n}	create integers n, k\nread n read k\ncreate doubles x, y, x0, y0, total with total initialized with 0.0\nread x0 read y0\nwhile decrement n is true\nread x read y\nincrement total by square root of ( (x - x0) * (x - x0) + (y - y0) * (y - y0) )\nset x0 to x\nset y0 to y\nprint fixed, set cout decimal precision to 6, print total*k/50 print newline
double dist(int x1, int y1, int x2, int y2) {\n\treturn sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));\n}\nint main() {\n\tint n, k;\n\tcin >> n >> k;\n\tbool f = true;\n\tint x1, y1, x2, y2;\n\tdouble totDist;\n\twhile (n--) {\n\t\tif (f) {\n\t\t\tcin >> x1 >> y1;\n\t\t\tf = false;\n\t\t} else {\n\t\t\tcin >> x2 >> y2;\n\t\t\ttotDist += dist(x1, y1, x2, y2);\n\t\t\tx1 = x2;\n\t\t\ty1 = y2;\n\t\t}\n\t}\n\tdouble r = totDist * k / 50.0;\n\tcout << fixed << r << endl;\n\treturn 0;\n}	double function dist with integer arguments x1, y1, x2 and y2\nreturn square root of (pow((x1 - x2), 2) + pow((y1 - y2), 2))\ncreate integers n and k\nread n and k\ndeclare boolean f = true\ncreate integers x1, y1, x2 and y2\ncreate double totDist\ndecrement n in a loop while n > 0\nif f is true\nread x1 and y1\nset f to false\nelse\nread x2 and y2\nincrease totDist by dist of (x1, y1, x2, y2)\nset x1 to x2\nassign value of y2 to y1\ncreate double r = totDist * k / 50.0\nprint fixed and r
"int main() {\n\tstring s;\n\tgetline(cin, s);\n\tfor (int i = 0; i < s.length(); i++) {\n\t\twhile (s[i - 1] == ' ' && s[i] == ' ') s.erase(s.begin() + i - 1);\n\t\tif ((s[i] == '.' || s[i] == '!' || s[i] == ',' || s[i] == '?')) {\n\t\t\tif (s[i - 1] == ' ' && s[i + 1] == ' ')\n\t\t\t\ts.erase(s.begin() + i - 1);\n\t\t\telse if (s[i + 1] != ' ')\n\t\t\t\ts.insert(s.begin() + i + 1, ' ');\n\t\t\twhile (s[i - 1] == ' ') s.erase(s.begin() + i - 1);\n\t\t}\n\t}\n\tcout << s << ""\n"";\n\treturn 0;\n}"	s = string\nread s\nfor i = 0 to s.length() exclusive\nwhile (s[i - 1] is character ' ' and s[i] is character ' '), erase(s.begin() + i - 1) from s\nif ((s[i] is . or s[i] is ! or s[i] is , or s[i] is ?))\nif (s[i - 1] is character ' ' and s[i + 1] is character ' ')\nerase(s.begin() + i - 1) from s\nelse if (s[i + 1] is not character ' '\ninsert(s.begin() + i + 1, character ' ') in s\nwhile (s[i - 1] is character ' ') erase(s.begin() + i - 1) from s\nprint s
"const int N = 1e5 + 5, OO = 0x3f3f3f3f;\nint main() {\n\tstring str;\n\tgetline(cin, str);\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ' && str[i + 1] == ' ') {\n\t\t\tstr.erase(str.begin() + i);\n\t\t\ti--;\n\t\t}\n\t\tif (str[i] == ',' || str[i] == '!' || str[i] == '?' || str[i] == '.') {\n\t\t\tif (str[i + 1] != ' ' && i < str.size() - 1) {\n\t\t\t\tstring a = "" "";\n\t\t\t\tstr.insert(i + 1, a);\n\t\t\t}\n\t\t\tif (str[i - 1] == ' ') {\n\t\t\t\tstr.erase(str.begin() + (i - 1));\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\tcout << str << endl;\n}"	"create const ints N = 1e5 + 5 and OO = 0x3f3f3f3f\ndeclare string variable str\nread input into str\nloop i from 0 to length of str exclusive\nif str[i] is equal to ' ' and str[i + 1] is equal to ' '\nremove element at position i from str\ndecrement i by one\nif str[i] = ',' or str[i] = '!' or str[i] = '?' or str[i] = '.'\nif str[i + 1] != ' ' and i < length of str-1\ndeclare string a = "" ""\ninsert a to position i + 1 of str\nif str[i - 1] is equal to ' '\nremove element at position i - 1 from str\ndecrement i by one\nprint str"
"int main() {\n\tstring s;\n\tint sp = 0, p = 0;\n\tgetline(cin, s);\n\tstring s2 = """";\n\tint l = s.size();\n\tfor (int i = 0; i < l; i++) {\n\t\tif (s[i] == ' ')\n\t\t\tsp++;\n\t\telse if (s[i] == ',' || s[i] == '.' || s[i] == '?' || s[i] == '!') {\n\t\t\tp++;\n\t\t\ts2 += s[i];\n\t\t} else {\n\t\t\tif (sp == 0 && p == 0)\n\t\t\t\ts2 += s[i];\n\t\t\telse if (p == 0 && sp > 0) {\n\t\t\t\ts2 += ' ';\n\t\t\t\ts2 += s[i];\n\t\t\t\tsp = 0;\n\t\t\t} else {\n\t\t\t\ts2 += ' ';\n\t\t\t\ts2 += s[i];\n\t\t\t\tp = 0;\n\t\t\t\tsp = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << s2 << endl;\n\treturn 0;\n}"	s = string array\nset int sp to 0, p = 0\nget the line as variable s\nset string s2 to\nset int l to s.size()\nfor i = 0 to less than l do the following\nif s[i] is then do\nadd one to sp\nelse if (s[i] equals , . ? or ! then do the following\nadd one to p\ns2 equals s2 plus s[i]\nelse\nif sp is 0 and p = 0 then do the following instructions\ns2 equals s2 plus s[i]\nelse if sp and p = 0 the do the following\ns2 equals s2 plus space\ns2 equals s2 plus s[i]\nset sp to 0\nelse\ns2 equals s2 plus space\ns2 equals s2 plus s[i]\nset p to 0\nset sp to 0\noutput s2
char c[10005];\nstring s;\nint main() {\n\tcin.getline(c, 10005);\n\tint i = 0;\n\tint lg = strlen(c);\n\tbool ok = 0;\n\twhile (i < lg) {\n\t\tif (isalpha(c[i])) {\n\t\t\tif (ok == 0 && i != 0 && !isalpha(c[i - 1])) s += ' ';\n\t\t\ts += c[i];\n\t\t\tok = 0;\n\t\t} else {\n\t\t\tif (c[i] == '?' || c[i] == '!' || c[i] == ',' || c[i] == '.') s += c[i], s += ' ', ok = 1;\n\t\t}\n\t\t++i;\n\t}\n\tcout << s << '\n';\n\treturn 0;\n}	create character variable c with size of 10005\ns = string\ninput line into array c of 10005 size\nset int i to 0\nset int lg to strlen(c)\nset bool ok to 0\nif i is less than lg then do\nif isalpha is true\nif ok = 0 and i is not equal to 0 and not isalpha(c[i - 1] then add a space character to s\ns equals s plus c[i]\nset ok to 0\nelse\nset if (c[i] = ? or c[i] = ! or c[i] = , or c[i] = .) s += c[i] then add a c[i] to s and add a space to s, and make ok = 1\nadd one to i\noutput s
"void File() {\n\tfreopen(""output.txt"", ""w"", stdout);\n\tfreopen(""input.txt"", ""r"", stdin);\n}\nvoid fast() {}\nconst double pi = 2 * acos(0.0);\nconst int nn = 1e5 + 4;\nconst int oo = 0x3f3f3f3f;\nlong long nCr(long long n, long long r) {\n\tif (n < r) return 0;\n\tif (r == 0) return 1;\n\treturn n * nCr(n - 1, r - 1) / r;\n}\nlong long gcd(long long a, long long b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\nint main() {\n\tfast();\n\tstring s;\n\tgetline(cin, s);\n\tvector<char> arr;\n\tif (s[0] >= 'a' && s[0] <= 'z') arr.push_back(s[0]);\n\tfor (int i = 1; i < ((int)((s).size())); i++) {\n\t\tif (s[i] >= 'a' && s[i] <= 'z') {\n\t\t\tif (s[i - 1] >= 'a' && s[i - 1] <= 'z')\n\t\t\t\tarr.push_back(s[i]);\n\t\t\telse\n\t\t\t\tarr.push_back(' '), arr.push_back(s[i]);\n\t\t} else if (s[i] == ' ')\n\t\t\tcontinue;\n\t\telse\n\t\t\tarr.push_back(s[i]);\n\t}\n\tfor (int i = 0; i < ((int)((arr).size())); i++) cout << arr[i];\n\tcout << endl;\n\treturn 0;\n}"	"in function File\ncall freopen on ""output.txt"", ""w"" and stdout\ncall freopen on ""input.txt"", ""r"" and stdin\ndefine empty function fast\npi = const double with pi = 2 * acos of 0.0\nnn = const int with nn = 1e5 + 4\noo = const int with oo = 0x3f3f3f3f\nin function nCr taking two long longs n and r and returning a long long\nif n is less than r then return 0\nif r is 0 then return 1\nreturn n * nCr of n - 1 and r - 1 / r\nin function gcd taking two long longs a and b and returning a long long\nif b is 0 return a\nreturn gcd of b and a mod b\ncall fast\ns = string\ncall getline on cin and s\narr = char vector\nif s[0] is a lower case letter then append s[0] to arr\nfor i = 1 to size of s\nif s[i] is a lower case letter\nif s[i - 1] is a lower case letter\nappend s[i] to arr\nelse\nappend ' ' then s[i] to arr\nelse if s[i] is ' '\ncontinue loop\nelse\nappend s[i] to arr\nprint all values of arr\nprint newline"
"string s;\nstring ans[111111];\nint main() {\n\tgetline(cin, s);\n\tint n = s.size(), p = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == ',' || s[i] == '.' || s[i] == '!' || s[i] == '?') {\n\t\t\tans[p++] = "" "";\n\t\t\tans[p - 1][0] = s[i];\n\t\t} else if (s[i] >= 'a' && s[i] <= 'z') {\n\t\t\tint j = i;\n\t\t\tfor (; s[j] >= 'a' && s[j] <= 'z' && j < n;) { j++; }\n\t\t\tans[p++] = s.substr(i, j - i);\n\t\t\ti = j - 1;\n\t\t}\n\t}\n\tint l = 0;\n\tfor (int i = 0; i < p; i++) {\n\t\tif (ans[i][0] >= 'a') {\n\t\t\tif (l == 1) { cout << ' '; }\n\t\t\tcout << ans[i];\n\t\t\tl = 1;\n\t\t} else {\n\t\t\tcout << ans[i] << ' ';\n\t\t\tl = 0;\n\t\t}\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"s = string\nans = string array of size 111111\ncall getline of cin and s\nn, p = int with n = size of s and p = 0\nfor i = 0 to n\nif s[i] equals ',' or '.' or '!' or '?'\nset ans[p] to "" "" then increment p\nset ans[p - 1][0] to s[i]\nelse if s[i] is a lowercase character\nj = int with j = i\nloop while s[j] is a lowercase character and j is less than n increment j\nset ans[p] to result of s.substr of i and j - i then increment p\nset i to j - 1\nl = int with l = 0\nfor i = 0 to p\nif ans[i][0] is greater or equal to 'a'\nif l equals 1 print ' '\nprint ans[i]\nset l to 1\nelse\nprint ans[i] and ' '\nset l to 0\nprint newline"
"string in;\nstring n = """";\nint main() {\n\tgetline(cin, in);\n\tint m = in.size();\n\tbool se = false;\n\tfor (int i = 0; i < m; i++) {\n\t\tif (in[i] >= 'a' && in[i] <= 'z') {\n\t\t\tn += in[i];\n\t\t} else if (in[i] == ' ') {\n\t\t\tif (n == "" "") { continue; }\n\t\t\tcout << n;\n\t\t\tn = ' ';\n\t\t\tse = true;\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (se && n == "" "") {\n\t\t\t\tcout << in[i];\n\t\t\t\tn = ' ';\n\t\t\t\tse = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcout << n << in[i];\n\t\t\tn = ' ';\n\t\t}\n\t}\n\tif (n != "" "") { cout << n; }\n\tcout << endl;\n\treturn 0;\n}"	"create string in\ndeclare string n = """"\nread line and store it into in\ndeclare int m = length of in\ndeclare boolean se = false\nfor i from 0 to m exclusive\nif in[i] >= 'a' and in[i] <= 'z'\nappend n to in[i]\nelse if in[i] = ' '\nif n is equal to "" "" continue the loop from the start\nprint n\nassign ' ' to n\nchange se to true\ncontinue the loop from the start\nelse\nif se is true and n = "" ""\nprint in[i]\nset n to ' '\nset se to false\ngo to the start of the loop\nprint n and in[i]\nchange n to ' '\nprint n if if n != "" ""\nprint a new line"
"int main() {\n\tstring s;\n\twhile (getline(cin, s)) {\n\t\tstring n = """";\n\t\tint d = s.length();\n\t\tfor (int i = 0; i < d; i++) {\n\t\t\tif (s[i] == ' ') {\n\t\t\t\tif (n[n.length() - 1] != ' ') { n = n + s[i]; }\n\t\t\t} else if (s[i] == '.' || s[i] == ',' || s[i] == '!' || s[i] == '?') {\n\t\t\t\tif (n[n.length() - 1] != ' ') {\n\t\t\t\t\tn = n + s[i] + ' ';\n\t\t\t\t} else {\n\t\t\t\t\tn.erase(n.length() - 1);\n\t\t\t\t\tn = n + s[i] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn = n + s[i];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < n.length(); i++) cout << n[i];\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"declare string variable s\nloop when read data from input into s\ndeclare string n = """"\ndeclare integer d = length of s\nfor i = 0 to d exclusive incrementing i\nif s[i] is equal to ' '\nif n[n.length() - 1] is not ' ', incremen n by s[i]\nelse if s[i] = '.' || s[i] = ',' || s[i] = '!' || s[i] = '?'\nif n[n.length() - 1] is not ' '\nappend s[i] + ' ' to n\nelse\nremove n.length() - 1 elements from n\nappend s[i] + ' ' to n\nelse\nappend s[i] to n\nprint all elements of n sequentially\nprint a new line"
bool isp(char c) {\n\tif (c == '.' or c == ',' or c == '!' or c == '?') return true;\n\treturn false;\n}\nint main() {\n\tstring s;\n\tgetline(cin, s);\n\tint len = s.size();\n\tstring s2;\n\tint lenn = len - 1;\n\tfor (int i = 0; i < lenn; i++) {\n\t\tif (s[i] == ' ' and (s[i + 1] == ' ' or isp(s[i + 1]))) continue;\n\t\ts2 += s[i];\n\t\tif (isp(s[i]) and s[i + 1] != ' ') s2 += ' ';\n\t}\n\ts2 += s[len - 1];\n\tcout << s2 << endl;\n}	declare isp with character c as argument, returning boolean\nif c is '.' or c is ',' or c is '!' or c is '?', return true from function\nreturn false from function\ncreate string s\nread line from cin to s\ncreate integer len with len = size of s\ncreate string s2\ncreate integer lenn with lenn = len - 1\nfor i = 0 to lenn exclusive\nif s[i] is ' ' and ( s[i+1] is ' ' or result of run isp with s[i+1] as argument is true ), break current loop iteration\nincrement s2 by s[i]\nif result of run isp with s[i] as argument is true and s[i+1] is not ' ', increment s2 by ' '\nincrement s2 by s[len - 1]\nprint s2 print newline
string s;\nint p;\nchar ans[111111];\nint main() {\n\tgetline(cin, s);\n\tint n = s.size();\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] >= 'a' && s[i] <= 'z') {\n\t\t\tans[p++] = s[i];\n\t\t} else if (s[i] == ',' || s[i] == '.' || s[i] == '?' || s[i] == '!') {\n\t\t\tfor (; p && ans[p - 1] == ' ';) { p--; }\n\t\t\tans[p++] = s[i];\n\t\t\tans[p++] = ' ';\n\t\t} else if (s[i] == ' ') {\n\t\t\tif (ans[p - 1] != ' ') { ans[p++] = s[i]; }\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	s = string\np = integer\nans = character array of size 111111\nread s\nn = integer with n = s.size()\nfor i = 0 to n exclusive\nif s[i] >= a and s[i] <= z\nans[increment p] = s[i]\nelse if s[i] is , or s[i] is . or s[i] is ? or s[i] is !\nfor p and ans[p - 1] is character' ', decrement p\nans[increment p] = s[i]\nans[increment p] = character ' '\nelse if (s[i] is character ' '\nif ans[p - 1] is not character ' ', ans[increment p] = s[i]\nprint ans
"const double PI = 3.1415926535897932384626433832795;\nlong long mod = 1e9 + 7;\nbool isp(char c) {\n\treturn (c == '.' || c == ',' || c == '?' || c == '!');\n}\nint main() {\n\tcout.precision(12);\n\tcout << fixed;\n\tstring s, ans = """";\n\twhile (cin >> s) {\n\t\tif (s.size() == 1 && isp(s[0]) && ans.size())\n\t\t\tans[ans.size() - 1] = s[0], ans += "" "";\n\t\telse\n\t\t\tans = ans + s + "" "";\n\t}\n\tint sz = ans.size();\n\tint last = 0, i = 0;\n\tfor (i = 0, last = 0; i < sz - 1; ++i) {\n\t\tif (ans[i] == ' ' && isp(ans[i + 1]))\n\t\t\tcout << ans.substr(last, i - last) + ans[i + 1] + "" "", last = i + 2, i++;\n\t\telse if (ans[i] == ' ')\n\t\t\tcout << ans.substr(last, i - last + 1), last = i + 1;\n\t\telse if (isp(ans[i]))\n\t\t\tif (ans[i + 1] != ' ')\n\t\t\t\tcout << ans.substr(last, i - last + 1) + "" "", last = i + 1;\n\t\t\telse\n\t\t\t\tcout << ans.substr(last, i - last + 1), last = i + 1;\n\t}\n\tcout << ans.substr(last, i - last) << '\n';\n\treturn 0;\n}"	"create const double PI = 3.1415926535897932384626433832795\ndeclare long long mod = 1e9 + 7\nfunction isp with char argument c that returns bool\nreturn true if c = '.' || c = ',' || c = '?' || c = '!' and false otherwise\nchange output decimal precision to 12\nchange output decimal format to fixed\nlet s and ans be strings where ans = """"\nread s and loop further\nif length of s = 1 and isp of s[0] return true and size of ans > 0\nassign s[0] to ans[ans.size() - 1] and append "" "" to ans\nelse\nchange ans to ans + s + "" ""\ncreate int sz = length of ans\ncreate integers last and i = 0\nfor i = 0, last = 0 to sz - 1 exclusive\nif ans[i] = ' ' and isp(ans[i + 1]) is true\nprint (substring of ans from position last to position i - last) + ans[i + 1] + "" "", set value of last to i + 2 and increment i\nelse if ans[i] = ' '\nprint substring of ans from position last with length of i - last + 1, then change last to i + 1\nelse if isp(ans[i]) is true\nif ans[i + 1] != ' '\nprint substring of ans from position last with length of i - last + 1 and "" "", then change last to i + 1\nelse\nprint substring of ans from position last with length of i - last + 1 and "" "", then change last to i + 1\nprint substring of ans from position last to i and '\n'"
"int main() {\n\tint n, dx;\n\tcin >> n >> dx;\n\tstring a[1001], b[1001], c[1001], d[1001];\n\tint t[1001];\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) cin >> a[i] >> b[i] >> t[i];\n\tfor (int i = 0; i < n - 1; i++)\n\t\tfor (int j = i + 1; j < n; j++)\n\t\t\tif (t[j] - t[i] > 0 && t[j] - t[i] <= dx)\n\t\t\t\tif (a[i] == b[j] && b[i] == a[j]) {\n\t\t\t\t\tint flat = 0;\n\t\t\t\t\tfor (int k = 0; k < sum; k++)\n\t\t\t\t\t\tif (a[i] == c[k] && b[i] == d[k] || a[i] == d[k] && b[i] == c[k]) {\n\t\t\t\t\t\t\tflat = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tif (!flat) {\n\t\t\t\t\t\tc[sum] = a[i];\n\t\t\t\t\t\td[sum] = b[i];\n\t\t\t\t\t\tsum++;\n\t\t\t\t\t}\n\t\t\t\t}\n\tcout << sum << endl;\n\tfor (int i = 0; i < sum; i++) { cout << c[i] << "" "" << d[i] << endl; }\n}"	"create integers n, dx\nread n read dx\ncreate string arrays a, b, c, d, with a size 1001, b size 1001, c size 1001, d size 1001\ncreate integer array t with size 1001\ncreate integer sum with sum = 0\nfor i = 0 to n exclusive, read a[i] read b[i] read t[i]\nor i = 0 to n - 1 exclusive\nfor j = i + 1 to n exclusive\nif t[j] - t[i] is greater than 0 and t[j] - t[i] is less than or equal to dx\nif a[i] is b[j] and b[i] is a[j]\ncreate integer flat with flat = 0\nfor k = 0 to sum exclusive\nif a[i] is c[k] and b[i] is d[k] or a[i] is d[k] and b[i] is c[k]\nset flat to 1\nbreak loop\nif not flag\nset c[sum] to a[i]\nset d[sum] to b[i]\nincrement sum\nprint sum print newline\nfor i = 0 to sum exclusive, print c[i] print "" "" print d[i] print newline"
double x[100000], y[100000];\nint n, t;\nvoid sorty() {\n\tint i, k;\n\tfor (i = 0; i < n; i++) {\n\t\tint min = x[i];\n\t\tint pos = i;\n\t\tfor (k = i + 1; k < n; k++) {\n\t\t\tif (x[k] < min) {\n\t\t\t\tmin = x[k];\n\t\t\t\tpos = k;\n\t\t\t}\n\t\t}\n\t\tswap(x[i], x[pos]);\n\t\tswap(y[i], y[pos]);\n\t}\n}\nint main() {\n\tcin >> n >> t;\n\tint i;\n\tfor (i = 0; i < n; i++) {\n\t\tdouble a, b;\n\t\tcin >> a >> b;\n\t\tx[i] = (a - (b / 2.0));\n\t\ty[i] = (a + (b / 2.0));\n\t}\n\tsorty();\n\tint ct = 2;\n\tfor (i = 0; i < n - 1; i++) {\n\t\tdouble h = y[i] + t;\n\t\tif (x[i + 1] >= h) { ct++; }\n\t\th = x[i + 1] - t;\n\t\tif (y[i] < h) { ct++; }\n\t}\n\tcout << ct << endl;\n}	let x and y be arrays of double of size 100000\nn and t = integers\ndefine function sorty\nlet i and k be integers\nfor i = 0 to n exclusive\ncreate integer min with value x[i]\nset integer pos to i\nfor k = i + 1 to n exclusive\nif x[k] is less than min\nset value of min to x[k]\nset value of pos to k\ninvoke function swap with arguments x[i] and x[pos]\ninvoke function swap with arguments y[i] and y[pos]\nread n and t\nlet i be integer\nfor i = 0 to n exclusive\na and b = doubles\nread a and b\nx[i] = (a - (b / 2.0))\ny[i] = (a + (b / 2.0))\ncall sorty\ncreate integer ct with value 2\nfor i = 0 to n - 1 exclusive\ncreate double h with value y[i] + t\nif x[i + 1] >= h increment ct\nh = x[i + 1] - t\nif y[i] is less than h increment ct\nprint ct and a new line
int a[10005];\nint main() {\n\tint n, t;\n\tcin >> n >> t;\n\tt *= 2;\n\tint mi = 5000, mx = 0;\n\tmemset(a, 0, sizeof(a));\n\twhile (n--) {\n\t\tint x, aa;\n\t\tcin >> x >> aa;\n\t\tint ll = x * 2 + 4000 - aa;\n\t\tint rr = x * 2 + 4000 + aa;\n\t\tfor (int i = ll; i <= rr; ++i) {\n\t\t\ta[i]++;\n\t\t\tmx = max(mx, i);\n\t\t\tmi = min(mi, i);\n\t\t}\n\t}\n\tint len = 0, ans = 2;\n\tfor (int i = mi; i <= mx; ++i) {\n\t\tlen++;\n\t\tif (a[i]) {\n\t\t\tif (len > t)\n\t\t\t\tans += 2;\n\t\t\telse if (len == t)\n\t\t\t\tans++;\n\t\t\tlen = 0;\n\t\t}\n\t}\n\tif (len > t)\n\t\tans += 2;\n\telse if (len == t)\n\t\tans++;\n\tcout << ans << endl;\n\treturn 0;\n}	let a be an array of integers of length 10005\ncreate integers n and t\nread n and t\nmultiply t by 2\nmi and mx are integers with mi = 5000 and mx = 0\ninvoke function memset with arguments a, 0 and size of a\nwhile n--\nlet x and aa be integers\nread x and aa\nset integer ll to x * 2 + 4000 - aa;\nset integer rr to x * 2 + 4000 + aa\nfor i = ll to rr inclusive\nincrease a[i]\nset mx to max of mx, i\nset value of mi to min of mi, i\nlen and ans are integers with len = 0 and ans = 2\nfor integer i = mi to mx inclusive\nincrease len\nif a[i] is true\nif len is greater than t\nincrease ans by 2\nelse if len is equal to t\nincrease ans by one\nlen = 0\nif len is greater than t\nincrease ans by 2\nelse if len is equal to t\nincrement ans\nprint ans and a new line
"const double Pi = acos(-1.0);\nint main() {\n\tint n, s;\n\tcin >> n >> s;\n\tint x, size;\n\tdouble start[1005], end[1005];\n\tmemset(start, 0, sizeof(start));\n\tmemset(end, 0, sizeof(end));\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> size;\n\t\tstart[i] = x - size / 2.0;\n\t\tend[i] = x + size / 2.0;\n\t}\n\tsort(start, start + n);\n\tsort(end, end + n);\n\tint res = 2;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tdouble gap = start[i + 1] - end[i];\n\t\tif (s < gap) { res += 2; }\n\t\tif (s == gap) { res++; }\n\t}\n\tcout << res << ""\n"";\n\treturn 0;\n}"	"double constant PI is acos(-1.0)\nlet n and s be integers\nread n and s\ncreate integers x and size\ncreate arrays of doubles start and end with size 1005\ncall memset with arguments start, 0 and sizeof(start)\ncall memset with arguments end, 0 and sizeof(end)\nfor integer i = 0 to n exclusive\nread x and size\nstart[i] = x - size / 2.0\nend[i] = x + size / 2.0\nsort n elements of array start\nsort n elements of array end\nres is integer = 2\nfor integer i = 0 to n - 1 exclusive\nset double gap to start[i + 1] - end[i]\nif s is less than gap increase res by 2\nif s = gap increase res by 1\nprint res and ""\n"""
int main() {\n\tint n, i, sum = 2;\n\tdouble x, y, t;\n\tdouble a[2005];\n\tcin >> n >> t;\n\tfor (i = 0; i < n + n; i = i + 2) {\n\t\tcin >> x >> y;\n\t\ta[i] = x - y * 0.5;\n\t\ta[i + 1] = x + y * 0.5;\n\t}\n\tsort(a, a + n + n);\n\tdouble b[2005];\n\tfor (i = 1; i < n; i++) {\n\t\tb[i] = a[i * 2] - a[i * 2 - 1];\n\t\tif (b[i] == t)\n\t\t\tsum = sum + 1;\n\t\telse if (b[i] > t)\n\t\t\tsum = sum + 2;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	let n, i and sum be integers with sum = 2\nlet x, y and t be doubles\na = array of doubles of length 2005\nread n and t\nfor i = 0 to n + n exclusive looping by steps of 2\nread x and y\na[i] = x - y * 0.5\na[i + 1] = x + y * 0.5\nsort a from the start to n + n\nb = array of doubles of length 2005\nfor i = 1 to n exclusive\nb[i] = a[i * 2] - a[i * 2 - 1]\nif b[i] is equal to t\nsum = sum + 1\nelse if b[i] is greater than t\nsum = sum + 2\nprint sum and a new line
int main() {\n\tdouble x, d, c;\n\tint cnt = 0, n, t;\n\tpair<double, double> arr[1500];\n\tcin >> n >> t;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> d;\n\t\td /= 2;\n\t\tarr[i] = make_pair(x - d, x + d);\n\t}\n\tsort(arr, arr + n);\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tc = arr[i + 1].first - arr[i].second;\n\t\tc -= t;\n\t\tif (c == 0)\n\t\t\tcnt++;\n\t\telse if (c > 0)\n\t\t\tcnt += 2;\n\t}\n\tcout << cnt + 2 << endl;\n\treturn 0;\n}	let x, d and c be doubles\nassign value 0, n, t to the integer cnt\narr is an array of double double pairs\nread n and t\nfor i = 0 to n exclusive\nread x and d\ndivide d by 2\narr[i] = make_pair(x - d, x + d)\nsort arr\nfor integer i = 0 to n - 1 exclusive\nc = first element of arr[i + 1] - second element\ndecrease c by t\nif c = 0\nincrease cnt\nelse if c is greater than 0\nincrease cnt by 2\nprint cnt + 2 and a new line
map<long long, long long> mp;\nint main() {\n\tint n, t, c = 2;\n\tcin >> n >> t;\n\tdouble x, y;\n\tpair<double, double> p[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> y;\n\t\tif (x >= 0) {\n\t\t\tp[i].first = x - (y / 2);\n\t\t\tp[i].second = x + (y / 2);\n\t\t} else {\n\t\t\tp[i].first = x - (y / 2);\n\t\t\tp[i].second = x + (y / 2);\n\t\t}\n\t}\n\tsort(p, p + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tx = p[i].first - p[i - 1].second;\n\t\tif (x == t)\n\t\t\tc++;\n\t\telse if (x > t)\n\t\t\tc += 2;\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	create map mp from long long to long long\ncreate integers n, t, c with c = 2\nread n read t\ncreate doubles x, y\ncreate pair array p with double, double, size n\nfor i = 0 to n exclusive\nread x read y\nif x is greater than or equal to 0\nset first element of p[i] to x - (y/2)\nset second element of p[i] to x + (y/2)\nelse\nset first element of p[i] to x - (y/2)\nset second element of p[i] to x + (y/2)\nsort elements from p to p + n\nfor i = 0 to n exclusive\nset x to first element of p[i] - second element of p[i-1]\nif x is t\nincrement c\nelse if x is greater than t\nincrement c by 2\nprint c print newline
map<long long, long long> mp;\nint main() {\n\tint n, t, c = 2;\n\tcin >> n >> t;\n\tdouble x, y;\n\tpair<double, double> p[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> y;\n\t\tif (x >= 0) {\n\t\t\tp[i].first = x - (y / 2);\n\t\t\tp[i].second = x + (y / 2);\n\t\t} else {\n\t\t\tp[i].first = x - (y / 2);\n\t\t\tp[i].second = x + (y / 2);\n\t\t}\n\t}\n\tsort(p, p + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tx = p[i].first - p[i - 1].second;\n\t\tif (x == t)\n\t\t\tc++;\n\t\telse if (x > t)\n\t\t\tc += 2;\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	let mp be a map from long long to long long\nintegers n, t and c with c = 2\nread n and t\ndeclare doubles called x and y\np is array of pairs of double, double with size n\nfor integer i = 0 to n exclusive\nread x and y\nif x >= 0\np[i].first = x - (y / 2)\np[i].second = x + (y / 2)\nelse\np[i].first = x - (y / 2)\np[i].second = x + (y / 2)\nsort array p\nfor integer i = 0 to n exclusive\nx = p[i].first - p[i - 1].second\nif x is equal to t\nincrease c\nelse if x is greater than t\nincrease c by 2\nprint c and a new line
"int n, t;\nvector<double> coord;\nint main() {\n\tcin >> n >> t;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint x, a;\n\t\tcin >> x >> a;\n\t\tcoord.push_back(1.0 * x - 1.0 * a / 2);\n\t\tcoord.push_back(1.0 * x + 1.0 * a / 2);\n\t}\n\tsort(coord.begin(), coord.end());\n\tint ans = 2;\n\tfor (int i = 1; i < coord.size() - 1; i += 2) {\n\t\tdouble x1 = coord[i], x2 = coord[i + 1];\n\t\tif (x2 - x1 < t)\n\t\t\tcontinue;\n\t\telse if (x2 - x1 == t)\n\t\t\tans += 1;\n\t\telse\n\t\t\tans += 2;\n\t}\n\tcout << ans << ""\n"";\n}"	"create integers n, t\ncreate double vector coord\nread n read t\nfor i = 0 to n exclusive\ncreate integers x, a\nread x read\nadd element 1.0 * x - 1.0 * a / 2 to end of coord\nadd element 1.0 * x + 1.0 * a / 2 to end of coord\nsort elements from beginning of coord to end of coord\ncreate integer ans with ans = 2\nfor i = 1 to size of coord -1 exclusive, incrementing i by 2\ncreate double x1, x2 with x1 = coord[i], x2 = coord[i+1]\nif x2 - x1 is less than t\nbreak current loop iteration\nelse if x2 - x1 is t\nincrement ans by 1\nelse\nincrement ans by 2\nprint ans print ""\n"""
"int n, t;\nvector<double> coord;\nint main() {\n\tcin >> n >> t;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint x, a;\n\t\tcin >> x >> a;\n\t\tcoord.push_back(1.0 * x - 1.0 * a / 2);\n\t\tcoord.push_back(1.0 * x + 1.0 * a / 2);\n\t}\n\tsort(coord.begin(), coord.end());\n\tint ans = 2;\n\tfor (int i = 1; i < coord.size() - 1; i += 2) {\n\t\tdouble x1 = coord[i], x2 = coord[i + 1];\n\t\tif (x2 - x1 < t)\n\t\t\tcontinue;\n\t\telse if (x2 - x1 == t)\n\t\t\tans += 1;\n\t\telse\n\t\t\tans += 2;\n\t}\n\tcout << ans << ""\n"";\n}"	"create integers n and t\ncoord = vector of doubles\nread n and t\nfor integer i = 0 to n exclusive\ndeclare integers called x and a\nread x and a\npush 1.0 * x - 1.0 * a / 2 into coord\npush 1.0 * x + 1.0 * a / 2 into coord\nsort coord\ncreate integer ans with value 2\nfor i = 1 to the length of coord - 1 exclusive with increments of 2\nlet double x1 = coord[i] and double x2 = coord[i + 1]\nif x2 - x1 is less than t\ngo to the start of the loop\nelse if x2 - x1 is equal to t\nincrease ans by 1\nelse\nincrease ans by 2\nprint ans and ""\n"""
int mod = (1e9) + 7;\nint n;\nconst int N = 50;\nint p[N], t[N];\nbool compare(int a, int b) {\n\tif (p[a] > p[b]) return 1;\n\tif (p[a] == p[b] && t[a] <= t[b]) return 1;\n\treturn 0;\n}\nbool eq(int a, int b) {\n\tif (p[a] == p[b] && t[a] == t[b]) return 1;\n\treturn 0;\n}\nint main() {\n\tint k;\n\tcin >> n >> k;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> p[i] >> t[i];\n\t\ta[i] = i;\n\t}\n\tstable_sort(a, a + n, compare);\n\tint c = 1;\n\tint i = k - 2;\n\twhile (i >= 0 && eq(a[k - 1], a[i])) {\n\t\tc++;\n\t\ti--;\n\t}\n\ti = k;\n\twhile (i < n && eq(a[k - 1], a[i])) {\n\t\tc++;\n\t\ti++;\n\t}\n\tcout << c << endl;\n}	mod = int with mod = 1e9 + 7\nn = int\nN = const int with N = 50\np, t = int array of size N each\nin function compare taking int a, int b and returning bool\nif p[a] > p[b] return 1\nif p[a] is p[b] and t[a] <= t[b] return 1\nin function eq taking int a, int b and returning bool\nif p[a] is p[b] and t[a] is t[b] return 1\nk = int\nread n then k\na = int array of size n\nfor i = 0 to n\nread p[i] then t[i]\nset a[i] to i\ncall stable_sort on a, a + n, compare\nc = int with c = 1\ni = int with i = k - 2\nloop while i >= 0 and eq of a[k - 1], a[i]\nincrement c\ndecrement i\nset to k\nloop while i < n and eq of a[k - 1], a[i]\nincrement c\nincrement i\nprint c
int n, i, a[111111], p, t, k;\nint main() {\n\tcin >> n >> k;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> p >> t;\n\t\ta[p * 50 - t]++;\n\t}\n\tt = 10000;\n\twhile (a[t] < k) k -= a[t--];\n\tcout << a[t] << endl;\n\treturn 0;\n}	create ints n, i, p, t, and k and int array a of size 111111\nread n and k\nfor i = 0 to n exclusive\nread p and t\nincrement a[p * 50 - t]\nset t to 10000\nwhile a[t] is less than k, set k to k - a[t--]\nprint a[t]
int main() {\n\tint i, j, n, a, k;\n\tint arr[55][2];\n\tcin >> n >> k;\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < 2; j++) { cin >> arr[i][j]; }\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (arr[i][0] > arr[j][0]) {\n\t\t\t\tint tmp = arr[i][0];\n\t\t\t\tarr[i][0] = arr[j][0];\n\t\t\t\tarr[j][0] = tmp;\n\t\t\t\ttmp = arr[i][1];\n\t\t\t\tarr[i][1] = arr[j][1];\n\t\t\t\tarr[j][1] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (arr[i][0] == arr[j][0]) {\n\t\t\t\tif (arr[i][1] < arr[j][1]) {\n\t\t\t\t\tint tmp = arr[i][1];\n\t\t\t\t\tarr[i][1] = arr[j][1];\n\t\t\t\t\tarr[j][1] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint frr[55], p = 0;\n\tfor (i = 0; i < n; i++) { frr[i] = 0; }\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (arr[i][0] == arr[j][0] && arr[i][1] == arr[j][1]) { frr[p]++; }\n\t\t}\n\t\tp++;\n\t}\n\tcout << frr[k - 1] << endl;\n\treturn 0;\n}	i, j, n, a, k = int\narr = two dimensional int array of sizes 55 and 2\nread n then k\nfor i = 0 to n\nfor j = 0 to 2 read arr[i][j]\nfor i = 0 to n\nfor j = 0 to n\nif arr[i][0] > arr[j][0]\ntmp = int with tmp = arr[i][0]\nset arr[i][0] to arr[j][0]\nset arr[j][0] to tmp\nset tmp to arr[i][1]\nset arr[i][1] to arr[j][1]\nset arr[j][1] to tmp\nfor i = 0 to n\nfor j = 0 to n\nif arr[i][0] is arr[j][0]\nif arr[i][1] < arr[j][1]\ntmp = int with tmp = arr[i][1]\nset arr[i][1] to arr[j][1]\nset arr[j][1] to tmp\np = int with p = 0 and frr = int array of size 55\nfor i = 0 to n set frr[i] to 0\nfor i = 0 to n\nfor j = 0 to n\nif arr[i][0] is arr[j][0] and arr[i][1] is arr[j][1] increment frr[p]\nincrement p\nprint frr[k - 1]
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tpair<int, int> A[n + 1];\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> A[i].first >> A[i].second;\n\t\tA[i].first *= -1;\n\t}\n\tsort(A + 1, A + n + 1);\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (A[i] == A[k]) ans++;\n\tcout << ans << '\n';\n\treturn 0;\n}	create new integers n and k\nread n and k\ncreate an array of int int pairs A witn n + 1 element\nfor integer i = 1 to n inclusive\nread input to A[i].first and A[i].second\ninvert the sign of A[i].first\nsort A from position 1 to n + 1\ncreate integer ans = 0\nfor i = 1 to n inclusive incrementing i\nif A[i] = A[k], increment ans by one\nprint ans and '\n'
int main() {\n\tint i, j, n, a, k;\n\tint arr[55][2];\n\tcin >> n >> k;\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < 2; j++) { cin >> arr[i][j]; }\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (arr[i][0] > arr[j][0]) {\n\t\t\t\tint tmp = arr[i][0];\n\t\t\t\tarr[i][0] = arr[j][0];\n\t\t\t\tarr[j][0] = tmp;\n\t\t\t\ttmp = arr[i][1];\n\t\t\t\tarr[i][1] = arr[j][1];\n\t\t\t\tarr[j][1] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (arr[i][0] == arr[j][0]) {\n\t\t\t\tif (arr[i][1] < arr[j][1]) {\n\t\t\t\t\tint tmp = arr[i][1];\n\t\t\t\t\tarr[i][1] = arr[j][1];\n\t\t\t\t\tarr[j][1] = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint frr[55], p = 0;\n\tfor (i = 0; i < n; i++) { frr[i] = 0; }\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (arr[i][0] == arr[j][0] && arr[i][1] == arr[j][1]) { frr[p]++; }\n\t\t}\n\t\tp++;\n\t}\n\tcout << frr[k - 1] << endl;\n}	i, j, n, a, k = int\narr = two dimensional int array of sizes 55 and 2\nread n then k\nfor i = 0 to n\nfor j = 0 to 2 read arr[i][j]\nfor i = 0 to n\nfor j = 0 to n\nif arr[i][0] is arr[j][0]\ntmp = int with tmp = arr[i][0]\nset arr[i][0] to arr[j][0]\nset arr[j][0] to tmp\nset tmp to arr[i][1]\nset arr[i][1] to arr[j][1]\nset arr[j][1] to tmp\nfor i = 0 to n\nfor j = 0 to n\nif arr[i][0] is arr[j][0]\nif arr[i][1] < arr[j][1]\ntmp = int with tmp = arr[i][1]\nset arr[i][1] to arr[j][1]\nset arr[j][1] to tmp\np = int with p = 0 and frr = int array of size 55\nfor i = 0 to n set frr[i] to 0\nfor i = 0 to n\nfor j = 0 to n\nif arr[i][0] is arr[j][0] and arr[i][1] is arr[j][1] incrment frr[p]\nincrement p\nprint frr[k - 1]
int main() {\n\tint a[10000], b[10000], i, j, n, k, ans1, ans2, c;\n\tcin >> n >> k;\n\tfor (i = 0; i < n; i++) cin >> a[i] >> b[i];\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = n - 1; j > i; j--) {\n\t\t\tif (a[j] > a[j - 1]) {\n\t\t\t\tswap(a[j], a[j - 1]);\n\t\t\t\tswap(b[j], b[j - 1]);\n\t\t\t}\n\t\t\tif (a[j] == a[j - 1] && b[j] < b[j - 1]) swap(b[j], b[j - 1]);\n\t\t}\n\t}\n\tans1 = a[k - 1];\n\tans2 = b[k - 1];\n\tfor (i = 0, c = 0; i < n; i++) {\n\t\tif (ans1 == a[i] && ans2 == b[i]) c++;\n\t}\n\tcout << c << endl;\n}	create ints i, j, n, k, ans1, ans2, and c and int arrays a of size 10000 and b of size 10000\nread n and k\nEnter integers for every index of arrays a and b\nfor i = 0 to n exclusive\nfor j = n - 1 to i exclusive\nif a[j] is greater than a[j - 1]\nswap the values of a[j] and a[j - 1]\nswap the values of b[j] and b[j - 1]\nif a[j] is equal to a[j - 1] and b[j] is less than a[j - 1], swap the values of b[j] and b[j -1]\nset ans1 to a[k - 1]\nset ans2 to b[k - 1]\nfor i = 0 and c = 0 to n exclusive\nif ans1 is equal to a[i] and ans2 is equal to b[i], increment c++\nprint c
const int N = 50 + 5;\nint n, k, res;\npair<int, int> a[N];\nbool cmp(pair<int, int> a, pair<int, int> b) {\n\tif (a.first > b.first)\n\t\treturn true;\n\telse if (a.first == b.first) {\n\t\tif (a.second < b.second) return true;\n\t\treturn false;\n\t} else\n\t\treturn false;\n}\nvoid Input() {\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n\tsort(a + 1, a + n + 1, cmp);\n}\nvoid Solve() {\n\tint problems = a[k].first, penalty = a[k].second;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i].first == problems && a[i].second == penalty) res++;\n\t}\n\tcout << res << '\n';\n}\nint main() {\n\tInput();\n\tSolve();\n\treturn 0;\n}	declare const int N = 50 + 5\ncreate integers n, k and res\ncreate an array of int-int pairs a with size N\ndeclare boolean function cmp that takes pairs of int-int a and b as an arguments\nif a.first is greater than b.first\nreturn true\nelse if a.first is equal to b.first\nif a.second is less than b.second, return true\nreturn false\nelse\nreturn false\ndefine function Input\nread n and k\nfor i from 1 to n inclusive, read input to a[i].first and a[i].second\nsort a from position 1 to n + 1 using cmp as a comparator method\nfunction Solve\ndeclare int problems = a[k].first and penalty=a[k].second\nfor i from 1 to n inclusive\nif a[i].first = problems and a[i].second is equal to penalty, increment res\nprint res and '\n'\ncall Input()\ncall Solve()
int a[100][100];\nvoid margesort(int p[], int t[], int l, int r);\nvoid marge(int p[], int t[], int l, int m, int r);\nint main() {\n\tint n, k, p[100], t[100];\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> p[i] >> t[i];\n\t\ta[p[i]][t[i]]++;\n\t}\n\tmargesort(p, t, 0, n - 1);\n\tcout << a[p[k - 1]][t[k - 1]] << endl;\n\treturn 0;\n}\nvoid margesort(int p[], int t[], int l, int r) {\n\tif (l < r) {\n\t\tint m = (l + r - 1) / 2;\n\t\tmargesort(p, t, l, m);\n\t\tmargesort(p, t, m + 1, r);\n\t\tmarge(p, t, l, m, r);\n\t}\n}\nvoid marge(int p[], int t[], int l, int m, int r) {\n\tint i, j, k;\n\tint n1 = m - l + 1;\n\tint n2 = r - m;\n\tint L[n1], R[n2], ll[n1], rr[n2];\n\tfor (i = 0; i < n1; i++) {\n\t\tL[i] = p[l + i];\n\t\tll[i] = t[l + i];\n\t}\n\tfor (j = 0; j < n2; j++) {\n\t\tR[j] = p[m + 1 + j];\n\t\trr[j] = t[m + 1 + j];\n\t}\n\ti = 0;\n\tj = 0;\n\tk = l;\n\twhile (i < n1 && j < n2) {\n\t\tif (L[i] > R[j]) {\n\t\t\tp[k] = L[i];\n\t\t\tt[k] = ll[i];\n\t\t\ti++;\n\t\t} else if (L[i] == R[j] && ll[i] <= rr[j]) {\n\t\t\tp[k] = L[i];\n\t\t\tt[k] = ll[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tp[k] = R[j];\n\t\t\tt[k] = rr[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < n1) {\n\t\tp[k] = L[i];\n\t\tt[k] = ll[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < n2) {\n\t\tp[k] = R[j];\n\t\tt[k] = rr[j];\n\t\tj++;\n\t\tk++;\n\t}\n}	create int array a of size 100 containing array of size 100\ndeclare margesort taking in ints l and r and int arrays p and t\ndeclare marge taking in int l, m, and r and int arrays p and t\nlet ints n and k and int arrays p of size 100 and t of size 100\nread n and k\nfor i - 0 to n exclusive\nread p[i] and t[i]\nincrement a[p[i]][t[i]]\ncall margesort with arguments p, t, 0, and n - 1\nprint a[p[k - 1]][t[k - 1]]\ndecalre margesort taking in ints l and r and int arrays p and t\nif l is less than r\nlet int m = (l + r - 1) / 2\ncall margesort(p, t, l, m)\ncall margesort(p, t, m + 1, r)\ncall margesort with arguments p, t, l, m, and r\ndeclare marge taking in ints l, m, and r and int arrays p and t\nlet ints i, j, and k\ncreate integer n1 = m - l + 1\nlet integer n2 = r - m\ncreate int arrays L of size n1, R of size n2, ll of size n1, and rr of size n2\nfor i = 0 to n1 exclusive\nset L[i] to p[l + i]\nset ll[i] to t[l + i]\nfor j = 0 to n2 exclusive\nset R[j] to p[m + 1 + j]\nset rr[j] to t[m + 1 + j]\nset i to 0\nset j to 0\nset k to l\nwhile i is less than n1 and j is less than n2\nif L[i] is greater than R[j]\nset p[k] to L[i]\nset t[k] to ll[i]\nincrease i by 1\nelse if L[i] is equal to R[j] and ll[i] is less than or equal to rr[j]\nset p[k] to L[i]\nset t[k] to ll[i]\nincrement i\nelse\nset p[k] to R[j]\nset t[k] to rr[j]\nincrement j\nincrease k by 1\nwhile i is less than n1\nset p[k] to L[i]\nset t[k] to ll[i]\nincrement i\nincrement k\nwhile j is less than n2\nset p[k] to R[j]\nset t[k] to rr[j]\nincrement j\nadd 1 to k
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tpair<int, int> a[50];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i].first >> a[i].second;\n\t\ta[i].first *= -1;\n\t}\n\tsort(a, a + n);\n\tcout << count(a, a + n, a[k - 1]) << endl;\n\treturn (0);\n}	declare integers n, k\nread n read k\ndeclare pair of integer, integer array a size 50\nfor i = 0 to n exclusive\nread first element for a[i], second element of a[i]\nlet first element of a[i] be first element of a[i] * -1\nsort elements from a to a + n\nprint result of run count with a, a + n, a[k - 1] as arguments, newline\nreturn 0 from function
int n, i, a[111111], p, t, k;\nint main() {\n\tcin >> n >> k;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> p >> t;\n\t\ta[p * 50 - t]++;\n\t}\n\tt = 2500;\n\twhile (a[t] < k) k -= a[t--];\n\tcout << a[t] << endl;\n\treturn 0;\n}	n, i, p, t, k = int and a = int array of size 111111\nread n then k\nfor i = 0 to n\nread p then t\nincrement a[p * 50 - t]\nset t to 2500\nloop while a[t] is less than k decrement k by a[t] then decrement t\nprint a[t]
int main() {\n\tint n, m, x[51], i, j, k, a, b;\n\twhile (cin >> n >> m) {\n\t\tj = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tcin >> a >> b;\n\t\t\tx[i] = a * 50 - b;\n\t\t}\n\t\tsort(x, x + n);\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tif (x[i] == x[n - m]) { j++; }\n\t\t}\n\t\tcout << j << endl;\n\t}\n\treturn 0;\n}	create integers n, m, i, j, k, a, b, create integer array x with size 51\nwhile read n read m\nset j to 0\nfor i = 0 to n exclusive\nread a read b\nset x[i] to a * 50 - b\nsort elements from x to x + n\nfor i = 0 to n exclusive\nif x[i] is x[n-m], increment j\nprint j print newline
int main() {\n\tint n, d;\n\tdouble a;\n\tcin >> n >> a >> d;\n\tlong long t[n], v[n];\n\tfor (int i = 0; i < n; i++) cin >> t[i] >> v[i];\n\tlong double T = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (v[i] * v[i] >= 2 * a * d) {\n\t\t\tT = max((long double)t[i] + sqrt((2.0 * d) / a), T);\n\t\t} else {\n\t\t\tlong double t1 = v[i] / a;\n\t\t\tlong double s = (v[i] * v[i]) / (2 * a);\n\t\t\tT = max(T, (long double)t[i] + t1 + ((d - s) / v[i]));\n\t\t}\n\t\tcout << setprecision(12) << T << endl;\n\t}\n}	declare int variables n and d\ndeclare double variable a\nread n, a and d\ncreate an arrays of long longs t and v with n elements\nloop i from 0 to n exclusive, read t[i] and v[i]\ndeclare long double T = 0\nloop i from 0 to n exclusive\nif v[i] * v[i] >= 2 * a * d\nT = max of t[i] + sqrt((2.0 * d) / a and T\nelse\ncreate long double t1 = v[i] / a\ncreate long double s = (v[i] * v[i]) / (2 * a)\nT = max of T and t[i] + t1 + ((d - s) / v[i])\nset output decimal precision to 12 and print T
const int maxn = 2e5 + 10;\nint arr[maxn], n, a, b;\nint main() {\n\tcin >> n >> a >> b;\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tcout << arr[b] - arr[b - 1] << endl;\n}	maxn = const int with maxn = 2e5 + 10\nn, a, b = int and arr = int array of size maxn\nread n then a then b\nread n values into arr\nsort arr\nprint arr[b] - arr[b - 1]
int main() {\n\tint n = 0;\n\tint a = 0;\n\tint b = 0;\n\tcin >> n;\n\tcin >> a;\n\tcin >> b;\n\tint h[2000];\n\tfor (int i = 0; i < n; i++) cin >> h[i];\n\tsort(h, h + n);\n\tcout << h[b] - h[b - 1] << endl;\n\treturn 0;\n}	n =integer with 0\na =integer with 0\nb =integer with 0\nRead n\nRead a\nRead b\nh = array of 2000 integers\nRead n values into array h\nsort array elements of h in ascending order\nprint h[b] - h[b - 1] and a new line
int arr[2005];\nint main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tfor (int i = 0; i < a; i++) { cin >> arr[i]; }\n\tsort(arr, arr + a);\n\tint mn = arr[c - 1];\n\tint mx = arr[c] - 1;\n\tcout << max(0, mx - mn + 1) << endl;\n}	create integer array arr of length 2005\ncreate integers a, b, and c\nread a, b, and c\nfor i = 0 to a exclusive, read arr[i]\nsort array arr\ncreate integer mn = arr[c - 1]\ncreate integer mx = arr[c] - 1\nprint the max of 0 and mx - mn + 1
int main() {\n\tlong long int n, a, b, i;\n\tcin >> n >> a >> b;\n\tlong long int p[n];\n\tfor (i = 0; i < n; i++) cin >> p[i];\n\tsort(p, p + n);\n\tlong long int x = p[n - a] - p[b - 1];\n\tcout << x << endl;\n}	n, a, b, i = long long int\nread n then a then b\np = long long int array of size n\nread n values into p\nsort p\nx = long long int with x = p[n - a] - p[b - 1]\nprint x
int n, a, b;\nint x[2005];\nint main() {\n\tcin >> n >> a >> b;\n\tfor (int i = 0; i < n; i++) cin >> x[i];\n\tsort(x, x + n);\n\tcout << x[b] - x[b - 1] << '\n';\n}	create ints n, a and b\ndeclare integer array x with 2005 elements\nread n, a and b\nfor i from 0 to n exclusive, read input to x[i]\nsort x\nprint x[b] - x[b - 1] and '\n'
"int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tint p[n];\n\tfor (int i = 0; i < n; i++) { cin >> p[i]; }\n\tsort(p, p + n);\n\tlong long count = 0;\n\tif (p[b - 1] != p[b]) {\n\t\tcount += p[b] - p[b - 1];\n\t\tcout << count << endl;\n\t} else {\n\t\tcout << ""0"" << endl;\n\t}\n\treturn 0;\n}"	"create integers n, a, b\nread n read a read b\ncreate integer array p with size n\nfor i = 0 to n exclusive, read p[i]\nsort elements from p to p + n\ncreate long long count with count = 0\nif p[b-1] is not p[b]\nincrement count by p[b] - p[b-1]\nprint count print newline\nelse\nprint ""0"" print newline"
string T;\nlong long N, K, M, A, B, C[2005], D, sum;\nint main() {\n\tcin >> N >> A >> B;\n\tfor (int i = 1; i <= N; i++) { cin >> C[i]; }\n\tsort(C + 1, C + N + 1);\n\tcout << C[B + 1] - C[B] << '\n';\n}	create string T\ncreate long long N, K, M, A, B, C[2005], D, sum\nread N, A and B\nfor i=1 to N inclusive, read C[i]\nsort elements between C+1 and C + N + 1\nprint C[B + 1] - C[B] and a newline
"int main() {\n\tint n, a, b, way;\n\tcin >> n >> a >> b;\n\tint *chore = new int[n];\n\tfor (int i = 0; i < n; i++) cin >> chore[i];\n\tsort(chore, chore + n);\n\tint j = n - 1;\n\twhile (j > n - a) { j--; }\n\tif (chore[j] == chore[j - 1])\n\t\tcout << 0 << ""\n"";\n\telse\n\t\tcout << chore[j] - chore[j - 1] << ""\n"";\n\treturn 0;\n}"	"create ints n, a, b and way\nread n, a and b\ncreate int pointer *chore to the new array of int with n elements\nloop i from 0 to n exclusive, read chore[i]\nsort chore\ndeclare int j = n - 1\ndecrement j while j > n - a\nif chore[j] = chore[j - 1]\nprint 0 and ""\n""\nelse\nprint chore[j] - chore[j - 1] and ""\n"""
"const int maxn = 5e3 + 5;\nconst unsigned long long base = 311;\nunsigned long long A[maxn];\nint main() {\n\tint N;\n\tcin >> N;\n\tint a, b;\n\tcin >> a >> b;\n\tfor (int i = (1); i <= (N); i += (1)) cin >> A[i];\n\tsort(A + 1, A + N + 1);\n\tcout << A[b + 1] - A[b] << ""\n"";\n\treturn 0;\n}"	define int constant maxn, set to 5e3 + 5\ndefine unsigned integer constant base, set to 311\ndefine unsigned integer array A to be of maxn elements\ndefine integer N\nread N\ndefine integers a and b\nread a, b\nfor int i from 1 to N by 1, read A[i]\nsort(A + 1, A + N + 1)\nprint A[b + 1] - A[b] and a newline
"int main() {\n\tint a, b, n, i, au, nx;\n\tcin >> n;\n\tcin >> a >> b;\n\tvector<int> c;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> au;\n\t\tc.push_back(au);\n\t}\n\tsort(c.begin(), c.end());\n\tnx = c[b] - c[b - 1];\n\tcout << nx << ""\n"";\n\treturn 0;\n}"	create int a, b, n, i, au, nx\nread n\nread a and b\ncreate vector int c\nfor i=0 to n exclusive\nread au\nput au at the end of c\nsort c\nset nx to c[b] - c[b - 1]\nprint nx and a newline
"int main() {\n\tint n, a, b, i, ans;\n\tcin >> n >> a >> b;\n\tvector<int> f(n);\n\tfor (i = 0; i < n; i++) cin >> f[i];\n\tsort(f.rbegin(), f.rend());\n\tans = -(f[a] - f[a - 1]);\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	n, a, b, i, ans = int\nread n then a then b\nf = int vector of size n\nread n values into f\nsort f from rbegin to rend\nset ans to n, a, b, i, ans\nprint ans
"int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tvector<int> V(n);\n\tfor (int i = 0; i < n; ++i) cin >> V[i];\n\tsort(V.begin(), V.end());\n\tcout << V[b] - V[b - 1] << ""\n"";\n\treturn 0;\n}"	n, a, b = int\nread n then a then b\nV = int vector of size n\nread n values into V\nsort V\nprint V[b] - V[b - 1]
const int N = 1e6 + 55;\nconst int M = 1e9 + 7;\nint n, a, b;\nvector<int> v;\nint main() {\n\tcin >> n >> a >> b;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tint q;\n\t\tcin >> q;\n\t\tv.push_back(q);\n\t}\n\tsort(v.begin(), v.end());\n\tint q = v[n - a] - v[n - a - 1];\n\tif (q <= 0) {\n\t\tcout << 0 << endl;\n\t\texit(0);\n\t}\n\tcout << q << endl;\n\treturn 0;\n}	N=1000055\nM=1000000007\nn,a,b=int\nv=vector of int\nread n,a,b\nfor i=1 to n inclusive\nq=int\nread q\nadd q to end of v\nsort v\nq=v[n-1]-v[n-a-1]\nif q <= 0\nprint 0\nexit\nprint q
int main() {\n\tint n;\n\tint a;\n\tint b;\n\tvector<int> complexity;\n\tcin >> n >> a >> b;\n\tint i = 0;\n\tfor (; i < n; i++) {\n\t\tint tmp;\n\t\tcin >> tmp;\n\t\tcomplexity.push_back(tmp);\n\t}\n\tsort(complexity.begin(), complexity.end());\n\tint cnt = 0;\n\tfor (i = complexity[b - 1]; i < complexity[b]; i++) { cnt++; }\n\tcout << cnt << endl;\n}	n = int\na = int\nb = int\ncomplexity = int vector\nread n then a then b\ni = int with i = 0\nloop while i is less than n incrementing i each time\ntmp = int\nread tmp\nappend tmp to complexity\nsort complexity\ncnt = int with cnt = 0\nfor i = complexity[b - 1] to complexity[b] increment cnt\nprint cnt
int main() {\n\tlong long n, a, b, i;\n\tcin >> n >> a >> b;\n\tlong long c[n];\n\tfor (i = 0; i < n; i++) { cin >> c[i]; }\n\tsort(c, c + n);\n\tcout << c[b] - c[b - 1] << endl;\n\treturn 0;\n}	let n, a, b, i be long integers\nread n , a, b\nlet c[n] be long integer\nfor i = 0 to n exclusive , read ith element of c\nsort the values of c and c + n\nprint c[b] - c[b - 1] and newline
int main() {\n\tint n, a, b;\n\tvector<int> h;\n\tcin >> n >> a >> b;\n\th.resize(n);\n\tfor (int i = 0; i < n; i++) { cin >> h[i]; }\n\tsort(h.begin(), h.end(), greater<int>());\n\tint min_petya = h[a - 1];\n\tint max_vasya = h[a];\n\tif (min_petya == max_vasya) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << min_petya - max_vasya << endl;\n\t}\n\treturn 0;\n}	create integers n, a, b\ncreate integer vector h\nread n read a read b\nresize vector to size n\nfor i = 0 to n exclusive, read h[i]\nsort elements from beginning of h to end of h using integer greater function to compare\ncreate integer min_petya with min_petya = h[a-1]\ncreate max_vasya with max_vasya = h[a]\nif min_petya is max_vasya\nprint 0 print newline\nelse\nprint min_petya - max_vasya print newline
"const long long N = 1e9 + 3;\nconst long long MN = 1e9 + 7;\nconst long long MX = -1e9 - 7;\nlong long n, a, b, x, c1, c2, cnt;\nstring s, s1;\nbool bl = false;\nlong long c;\npair<long long, long long> pr;\nvector<long long> v;\nmap<long long, long long> mp;\nset<long long> st;\nset<long long>::iterator it;\nint main() {\n\tcin >> n >> a >> b;\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tsort(v.begin(), v.end());\n\tif (v[b - 1] == v[b]) {\n\t\tcout << 0;\n\t} else {\n\t\tcout << v[b] - v[b - 1];\n\t}\n\tcout << ""\n"";\n\treturn 0;\n}"	N = const long long with N = 1e9 + 3\nMN = const long long with MN = 1e9 + 7\nMX = const long long with MX = -1e9 - 7\nn, a, b, x, c1, c2, cnt = long long\ns, s1 = string\nbl = bool with bl = false\nc = long long\npr = pair of long long and long long\nv = vector of long long\nmp = map from long long to long long\nst = set of long long\niterator it = set of long long\nread n, a, b\nfor i = 0 to n exclusive\nread x\nappend x in v\nsort v.begin() and v.end()\nif v[b - 1] is v[b]\nprint 0\nelse\nprint v[b] - v[b - 1]\nprint new line
int main() {\n\tvector<int> h;\n\tint a, b, n, num;\n\tcin >> n >> a >> b;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> num;\n\t\th.push_back(num);\n\t}\n\tsort(h.begin(), h.end());\n\tif (h[b - 1] == h[b])\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << h[b] - h[b - 1] << endl;\n\treturn 0;\n}	create integer vector h\ncreate integers a, b, n, num\nread n read a read b\nfor i = 0 to n exclusive\nread num\nadd element num to end of h\nsort elements from beginning of h to end of h\nif h[b-1] is h[b]\nprint 0 print newline\nelse\nprint h[b] - h[b-1] print newline
int main() {\n\tlong long int n, a, b, kount = 0, x;\n\tvector<long long int> h;\n\tcin >> n >> a >> b;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\th.push_back(x);\n\t}\n\tsort(h.begin(), h.end());\n\tif (h[b - 1] != h[b]) { kount = h[b] - h[b - 1]; }\n\tcout << kount << endl;\n\treturn 0;\n}	create long long int n, a, b, kount, x, set kount = 0\ncreate vector long long int h\nread n, a and b\nfor i=0 to n exclusive\nread x\nadd x to end of h\nsort h\nif h[b - 1] different from h[b], set kount to h[b] - h[b - 1]\nprint kount
"int main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tvector<int> h(n);\n\tfor (int i = 0; i < n; i++) { cin >> h[i]; }\n\tsort(h.begin(), h.end());\n\tcout << h[b] - h[b - 1] << ""\n"";\n\treturn 0;\n}"	create int n, a and b\nread n, a and b\ncreate vector int h(n)\nfor i=0 to n exclusive, read h[i]\nsort vector h\nprint h[b] - h[b - 1] and a newline
"int selsort(long long arr[], int n) {\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tint min = i;\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (arr[j] < arr[min]) { min = j; }\n\t\t}\n\t\tlong long t = arr[i];\n\t\tarr[i] = arr[min];\n\t\tarr[min] = t;\n\t}\n}\nint main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tlong long arr[n];\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tselsort(arr, n);\n\tcout << arr[n - a] - arr[n - a - 1] << ""\n"";\n}"	"integer function selsort with an array of long long argument arr and int argument n\nloop i from 0 to n - 1 exclusive\ndeclare integer min = i\nfor j = to n exclusive\nif arr[j] is less than arr[min], set min to j\ncreate long long t with value arr[i]\nset arr[i] to arr[min]\nassign t to arr[min]\ndeclare integers n, a and b\nread n, a and b\nlet arr be long long array with size n\nloop i from 0 to n exclusive, read input to arr[i]\ncall selsort(arr, n)\nprint arr[n - a] - arr[n - a - 1] and ""\n"""
int h[2000];\nint main() {\n\tint n, a, b;\n\tcin >> n >> a >> b;\n\tfor (int i = 0; i < n; i++) { cin >> h[i]; }\n\tsort(h, h + n);\n\tint ans = h[b] - h[b - 1];\n\tcout << ans << endl;\n\treturn 0;\n}	create integer array h with size 2000\ncreate integers n, a, b\nread n read a read b\nfor i = 0 to n exclusive, read h[i]\nsort elements from h to h + n\ncreate integer ans with ans = h[b] - h[b-1]\nprint ans print newline
int main() {\n\tint a, b, n, i;\n\tcin >> n >> a >> b;\n\tint C[n];\n\tfor (i = 0; i < n; i++) cin >> C[i];\n\tsort(C, C + n);\n\tcout << C[b] - C[b - 1] << endl;\n}	a, b, n, i =integers\nRead a, b, n\nC = array of n integers\nRead n values into array C\nsort array elements of C in ascending order\nprint C[b] - C[b - 1] and a new line
int n, a, b;\nint chores[2000];\nint main() {\n\tcin >> n >> a >> b;\n\tfor (int i = 0; i < n; i++) { cin >> chores[i]; }\n\tsort(chores, chores + n);\n\tcout << chores[b] - chores[b - 1] << '\n';\n}	create integers n, a, and b\nlet chores be an array of integers of length 2000\nread n, a, and b\nfor i to n exclusive, read chores[i]\nsort arrary chores\noutput chores[b] - chores[b - 1] and new line
int main() {\n\tlong long int n, a, b, c[2555], m;\n\tcin >> n >> a >> b;\n\tfor (int i = 0; i < n; i++) cin >> c[i];\n\tsort(c, c + n);\n\tm = c[b] - c[b - 1];\n\tcout << m << endl;\n}	n, a, b, m =integers and c = array of 2555 integers\nRead n, a, b\nRead n values into array c\nsort array elements of c in ascending order\nset m to c[b] - c[b - 1]\nprint m and a new line
"int main() {\n\tint n, b;\n\tcin >> n >> b;\n\tvector<int> V(n);\n\tfor (int i = 0; i < n; ++i) cin >> V[i];\n\tint total = b;\n\tfor (int i = 0; i < n; ++i) total += V[i];\n\tdouble t = (double)total / n;\n\tvector<double> ans(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (V[i] > t) {\n\t\t\tcout << ""-1\n"";\n\t\t\treturn 0;\n\t\t}\n\t\tans[i] = t - V[i];\n\t}\n\tcout << fixed << setprecision(10);\n\tfor (int i = 0; i < n; ++i) cout << ans[i] << ""\n"";\n\treturn 0;\n}"	"n and b = integers\nread n and b\ncreate vector of integers V with n elements\nread n elements into V\nassign value b to the integer total\nfor integer i = 0 to n exclusive, add V[i] to the total\ndouble t = total / n\ncreate vector of doubles ans with n elements\nfor integer i = 0 to n exclusive\nif V[i] is greater than t\nprint ""-1\n""\nassign value of t - V[i] to the ans[i]\nprint fixed and set decimal precision to 10\nfor integer i = 0 to n exclusive print ans[i]"
int p[101][101], ai[1000], bi[1000];\nunsigned int ci[1000];\nint main() {\n\tunsigned int n, m, k;\n\tcin >> n >> m >> k;\n\tstring u;\n\tunsigned int o = 0;\n\tfor (unsigned int i = 0; i < n; ++i) {\n\t\tcin >> u;\n\t\tfor (unsigned int j = 0; j < m; ++j) {\n\t\t\tunsigned int ix = o + j;\n\t\t\tcin >> ai[ix] >> bi[ix] >> ci[ix];\n\t\t}\n\t\to += m;\n\t}\n\tunsigned int e = n * m;\n\tint ma = 0;\n\tfor (unsigned int u = 0; u < e; u += m) {\n\t\tfor (unsigned int v = 0; v < e; v += m) {\n\t\t\tif (u == v) continue;\n\t\t\tfor (unsigned int i = 1; i <= m; ++i) {\n\t\t\t\tunsigned int ix = u + i - 1;\n\t\t\t\tfor (unsigned int j = 1; j <= k; ++j) {\n\t\t\t\t\tint mx = p[j][i - 1];\n\t\t\t\t\tfor (unsigned int x = 1; x <= ci[ix] && x <= j; ++x) {\n\t\t\t\t\t\tint mm = p[j - x][i - 1] + (bi[v + i - 1] - ai[ix]) * x;\n\t\t\t\t\t\tif (mm > mx) mx = mm;\n\t\t\t\t\t}\n\t\t\t\t\tp[j][i] = mx;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (p[k][m] > ma) ma = p[k][m];\n\t\t}\n\t}\n\tcout << ma << endl;\n\treturn 0;\n}	create integer arrays p of size 101 within an array of size 101, ai of size 1000, bi of size 1000\ncreate unsigned integer array ci of size 1000\ncreated unsigned integers n, m, and k\nread n, m, and k\ncreate string u\ncreate unsigned integer o = 0\nfor i = 0 to n exclusive\nread u\nfor j = 0 to m exclusive\ncreate unsigned integer ix = o + j\nread ai[ix], bi [ix], ci[ix]\nset o to the result of o + m\ncreated unsigned integer e = n * m\ncreate integer ma = 0\nfor u = 0 to e exclusive in increments of m\nfor v = 0 to e exclusive in increments of m\nif u is equal to v, continue to next loop iteration\nfor i = 1 to m inclusive\ncreated unsigned integer ix = u + i -1\nfor j = 1 to k inclusive\ncreate integer mx = p[j][i - 1]\nfor x = 1 to ci[ix] inclusive and j inclusive\ncreate integer mm = p[j - x][i - 1] + (bi[v + i - 1] - ai[ix]) * x\nif mm is greater than mx, set mx to mm\nset p[j][i] to mx\nif p[k][m] is greater than ma, set ma to p[k][m]\nprint ma
int a[15][105];\nint b[15][105];\nint c[15][105];\nbool vis[105];\nint n, m, k;\nint Cal(int x, int y) {\n\tmemset(vis, 0, sizeof vis);\n\tif (x == y) return -1;\n\tint cost = k;\n\tint ans = 0;\n\twhile (cost) {\n\t\tint flag;\n\t\tint maxgas = 0;\n\t\tint dp = 1;\n\t\tfor (int i = 1; i <= m; i++) {\n\t\t\tif (vis[i]) continue;\n\t\t\tif (b[y][i] - a[x][i] > maxgas) {\n\t\t\t\tdp = 0;\n\t\t\t\tmaxgas = b[y][i] - a[x][i];\n\t\t\t\tflag = i;\n\t\t\t}\n\t\t}\n\t\tif (dp) break;\n\t\tvis[flag] = 1;\n\t\tans += min(cost, c[x][flag]) * maxgas;\n\t\tcost -= min(cost, c[x][flag]);\n\t}\n\treturn ans;\n}\nint main() {\n\tmemset(vis, 0, sizeof vis);\n\tcin >> n >> m >> k;\n\tfor (int i = 1; i <= n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tfor (int j = 1; j <= m; j++) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) { ans = max(ans, Cal(i, j)); }\n\t}\n\tcout << ans << endl;\n}	create 2d array of integers a with size 15 by 105\ncreate 2d array of integers b with size 15 by 105\ncreate 2d array of integers c with size 15 by 105\ndeclare boolean array vis with 105 elements\ndeclare ints n, m and k\nfunction Cal with int arguments x and y that returns int\nset first sizeof vis bytes at the pointer vis to 0\nif x = y, return -1\ndeclare int variable cost = k\ncreate int ans = 0\nwhile cost != 0\ncreate integer flag\ndeclare integer maxgas = 0\ndeclare integer variable dp = 1\nfor integer i = 1 to m inclusive\nif vis[i] is true, skip the rest of the loop\nif b[y][i] - a[x][i] is greater than maxgas\nassign 0 to dp\nassign b[y][i] - a[x][i] to maxgas\nchange flag to i\nif dp is true, break the loop\nset vis[flag] to 1\nadd min of cost and c[x][flag] * maxgas to ans\ndecrease cost by min of cost and c[x][flag]\nreturn ans\nset first sizeof vis bytes at the pointer vis to 0\nread n, m and k\nfor i = 1 to n inclusive\ncreate string s\nread input to s\nfor j from 1 to m inclusive, read a[i][j], b[i][j] and c[i][j]\ndeclare int variable ans = 0\nchange i from 1 to n inclusive in a loop\nchange j from 1 to n inclusive in a loop, setting ans to max of ans and Cal(i, j)\nprint ans
int n, m, k;\nint a[11][111], b[11][111], c[11][111];\nint f[111];\nint main() {\n\tcin >> n >> m >> k;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring name;\n\t\tcin >> name;\n\t\tfor (int j = 0; j < m; ++j) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n\t}\n\tint ans = 0;\n\tfor (int st = 0; st < n; ++st)\n\t\tfor (int fn = 0; fn < n; ++fn)\n\t\t\tif (st != fn) {\n\t\t\t\tint cst[111], num[111];\n\t\t\t\tfor (int j = 0; j < m; ++j) {\n\t\t\t\t\tcst[j] = b[fn][j] - a[st][j];\n\t\t\t\t\tnum[j] = c[st][j];\n\t\t\t\t}\n\t\t\t\tmemset(f, -1, sizeof(f));\n\t\t\t\tf[0] = 0;\n\t\t\t\tfor (int j = 0; j < m; ++j)\n\t\t\t\t\tfor (int cnt = 0; cnt < num[j]; ++cnt)\n\t\t\t\t\t\tfor (int pos = k - 1; pos >= 0; --pos)\n\t\t\t\t\t\t\tif (f[pos] >= 0) f[pos + 1] = max(f[pos + 1], f[pos] + cst[j]);\n\t\t\t\tans = max(ans, *max_element(f, f + k + 1));\n\t\t\t}\n\tcout << ans << endl;\n}	n,m,k=int\na,b,c=array of 11 by 111 int\nf=array of 111 int\nread n,m,k\nfor i=0 to n exclusive\nname=string\nread name\nfor j=0 to m exclusive read a[i][j], b[i][j], c[i][j]\nans=0\nfor st=0 to n exclusive\nfor fn=0 to n exclusive\nif st is not fn\ncst and num=array of 111 int\nfor j=0 to m exclusive\ncst[j]=b[fn][j]-a[st][j]\nnum[j]=c[st][j]\nfill f with -1\nf[0]=0\nfor j=0 to m exclusive\nfor cnt=0 to num[j] exclusive\nfor pos=k-1 down to 0 inclusive\nif f[pos] >= 0 f[pos+1] = max(f[pos+1], f[pos]+cst[j])\nans=max(ans, element pointed by max_element(f, f+k+1))\npritn ans
int a[11][101], b[11][101], c[11][101], d[101], e[101];\nint x, y;\nint n, m, kkk, maxn;\nbool cmp(int x, int y) {\n\treturn d[x] > d[y];\n}\nint main() {\n\tcin >> n >> m >> kkk;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring cc;\n\t\tcin >> cc;\n\t\tfor (int j = 0; j < m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tint ans;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tans = 0;\n\t\t\tif (i != j) {\n\t\t\t\tmemset(d, 0, sizeof(d));\n\t\t\t\tfor (int k = 0; k < m; k++) e[k] = k;\n\t\t\t\tfor (int k = 0; k < m; k++) { d[k] = b[j][k] - a[i][k]; }\n\t\t\t\tsort(e, e + m, cmp);\n\t\t\t\tint kk = kkk;\n\t\t\t\tint p;\n\t\t\t\tp = 0;\n\t\t\t\twhile ((p < m) && (kk > 0)) {\n\t\t\t\t\tif (d[e[p]] <= 0) {\n\t\t\t\t\t\tkk = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (c[i][e[p]] <= kk) {\n\t\t\t\t\t\tans = ans + c[i][e[p]] * d[e[p]];\n\t\t\t\t\t\tkk = kk - c[i][e[p]];\n\t\t\t\t\t\tp = p + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tans = ans + kk * d[e[p]];\n\t\t\t\t\t\tkk = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (ans > maxn) {\n\t\t\t\t\tmaxn = ans;\n\t\t\t\t\tx = i;\n\t\t\t\t\ty = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << maxn << endl;\n}	let a, b, c be int matrices of size 11x101, and d, e int arrays of length 101\nlet x, y be ints\nlet n, m, kkk, maxn be ints\nin boolean function cmp that takes int x, int y\nreturn d[x] > d[y]\nread n, m, kkk\nfor i = 0 to n exclusive\ncc = string\nread cc\nfor j = 0 to m exclusive, read a[i][j], b[i][j], c[i][j]\nfor i = 0 to n exclusive\nlet ans be an int\nfor j = 0 to n exclusive\nset ans to 0\nif i is different from j\nreset d to all 0\nfor k = 0 to m exclusive set e[k] to k\nfor k = 0 to m exclusive, set d[k] to b[j][k] - a[i][k]\nsort the first m elements of e using cmp\nlet kk = kkk be an int\nlet p be an integer\nset p = 0\nwhile p < m and kk is positive\nif d[e[p]] is negative or zero\nset kk to 0\nexit loop\nif c[i][e[p]] <= kk\nincrement ans by c[i][e[p]] * d[e[p]]\ndecrement kk by c[i][e[p]]\nincrement p\nelse\nincrement ans by kk * d[e[p]]\nset kk to 0\nif ans > maxn\nset maxn to ans\nset x = i\nset y = j\nprint maxn
const int MOD = 1e9 + 7;\nint n, m, k;\nint a[10][100], b[10][100], c[10][100];\nint solve(int u, int v) {\n\tvector<int> profits;\n\tfor (int i = 0; i < m; ++i)\n\t\tfor (int j = 0; j < c[u][i]; ++j) profits.push_back(max(0, b[v][i] - a[u][i]));\n\tsort(profits.rbegin(), profits.rend());\n\tint ans = 0;\n\tfor (int i = 0; i < min(k, (int)profits.size()); ++i) ans += profits[i];\n\treturn ans;\n}\nint main() {\n\tcin >> n >> m >> k;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring name;\n\t\tcin >> name;\n\t\tfor (int j = 0; j < m; ++j) cin >> a[i][j] >> b[i][j] >> c[i][j];\n\t}\n\tint ans = 0;\n\tfor (int i = 0; i < n; ++i)\n\t\tfor (int j = 0; j < n; ++j) ans = max(ans, solve(i, j));\n\tcout << ans << '\n';\n}	declare const int MOD = 1e9 + 7\ncreate integers n, m and k\ncreate 2d arrays of integers a, b and c with size 10 by 100\ninteger function solve with int arguments u and v\ncreate vector of integers profits\nfor i = 0 to m exclusive\nloop j from 0 to c[u][i] exclusive, push max of 0 and b[v][i]-a[u][i] into profits\nsort profits\ndeclare integer variable ans = 0\nfor i = 0 to min of k and length of profits exclusive, increase ans by profits[i]\nreturn ans\nread n, m and k\nfor i = 0 to n exclusive\ndeclare string variable name\nread name\nloop j from 0 to m exclusive, read a[i][j], b[i][j] and c[i][j]\ncreate integer ans = 0\nfor i from 0 to n exclusive\nfor j from 0 to n exclusive, assign max of ans and solve(i, j) to ans\nprint ans and '\n'
int a[105][105], b[105][105], c[105][105], n, m, k;\nint buy(int x, int y) {\n\tint v[105] = {0};\n\tint ans = 0, i;\n\tint last = k;\n\twhile (last) {\n\t\tint maxn = 0;\n\t\tint maxi;\n\t\tint num;\n\t\tfor (i = 1; i <= m; i++) {\n\t\t\tif (v[i]) continue;\n\t\t\tif (b[y][i] - a[x][i] > maxn) {\n\t\t\t\tmaxi = i;\n\t\t\t\tmaxn = b[y][i] - a[x][i];\n\t\t\t}\n\t\t}\n\t\tif (maxn == 0) break;\n\t\tnum = min(last, c[x][maxi]);\n\t\tans += num * maxn;\n\t\tv[maxi] = 1;\n\t\tlast -= num;\n\t}\n\treturn ans;\n}\nint main() {\n\tint i, j;\n\tstring s;\n\tcin >> n >> m >> k;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> s;\n\t\tfor (j = 1; j <= m; j++) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n\t}\n\tint ans = 0;\n\tfor (i = 1; i <= n; i++) {\n\t\tfor (j = 1; j <= n; j++) { ans = max(ans, buy(i, j)); }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare arrays of integers a, b and c with size 105 by 105 and integer variables n, m and k\nfunction buy with int arguments x and y that returns int\ncreate an array of integers v with size 105\nlet ans and i be integers with ans = 0\ndeclare integer variable last = k\nwhile last is not 0\ndeclare integer variable maxn = 0\ndeclare int maxi\ndeclare integer variable num\nfor i from 1 to m inclusive\nif v[i] is true, skip the rest of the loop\nif b[y][i] - a[x][i] is greater than maxn\nassign i to maxi\nset maxn to b[y][i] - a[x][i]\nif maxn = 0, stop the loop\nchange num to min of last and c[x][maxi]\nadd num * maxn to ans\nassign 1 to v[maxi]\ndecrease last by num\nreturn ans\ndeclare ints i and j\ndeclare string variable s\nread n, m and k\nloop i from 1 to n inclusive\nread input to s\nread a[i][j], b[i][j] and c[i][j] m times\ncreate int ans = 0\nfor i = 1 to n inclusive\nloop j from 1 to n inclusive, change ans to max of ans and buy(i, j)\nprint ans
const int Maxn = 15, Maxm = 100 + 5;\nint n, m, k, a[Maxn][Maxm], b[Maxn][Maxm], c[Maxn][Maxm], ans;\nint main() {\n\tcin >> n >> m >> k;\n\tstring s;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tfor (int j = 0; j < m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n\t}\n\tpair<int, int> d[Maxm];\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tfor (int l = 0; l < m; l++) d[l] = make_pair(b[j][l] - a[i][l], c[i][l]);\n\t\t\tsort(d, d + m);\n\t\t\treverse(d, d + m);\n\t\t\tint num = 0, p = 0, cnt = 0;\n\t\t\twhile (p < m && cnt + d[p].second <= k) {\n\t\t\t\tif (d[p].first < 0) break;\n\t\t\t\tcnt += d[p].second;\n\t\t\t\tnum += d[p].first * d[p].second;\n\t\t\t\tp++;\n\t\t\t}\n\t\t\tif (d[p].first > 0) num += d[p].first * (k - cnt);\n\t\t\tans = max(ans, num);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create constant integers Maxn, Maxm with Maxn = 15, Maxm = 100 + 5\ncreate integers n, m, k, ans create 2d integer arrays a, b, c, with a size Maxn by Maxm, b size Maxn by Maxm, c size Maxn by Maxm\nread n read m read k\ncreate string s\nfor i = 0 to n exclusive\nread s\nfor j = 0 to m exclusive, read a[i][j] read b[i][j] read c[i][j]\ncreate pair of integer, integer array d with size Maxm\nfor i = 0 to n exclusive\nfor j = 0 to n exclusive\nfor l = 0 to m exclusive, set d[l] to make pair from ( b[j][l] - a[i][l] and c[i][l] )\nsort elements from d to d + m\nreverse sort elements from d to d + m\ncreate integers num, p, cnt with num = 0, p = 0, cnt = 0\nwhile p is less than m and cnt + second element of d[p] is less than or equal to k\nif first element of d[p] is less than 0, break loop\nincrement cnt by second element of d[p]\nincrement num by first element of d[p] * second eleement of d[p]\nincrement p\nif first element of d[p] is greater than 0, increment num by first element of d[p] * ( k - cnt )\nset ans to maximum of ans and num\nprint ans print newline
"long long a[11][105];\nlong long b[11][105];\nlong long c[11][105];\nbool vis[105];\nlong long n, m, k;\nlong long cal(int x, int y) {\n\tlong long last = k;\n\tlong long ans = 0;\n\tmemset(vis, 0, sizeof(vis));\n\twhile (last) {\n\t\tlong long v = 0;\n\t\tlong long p;\n\t\tlong long flag = 0;\n\t\tfor (int i = 1; i <= m; i++) {\n\t\t\tif (!vis[i]) {\n\t\t\t\tif (b[y][i] - a[x][i] > v) {\n\t\t\t\t\tv = b[y][i] - a[x][i];\n\t\t\t\t\tp = i;\n\t\t\t\t\tflag = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (flag == 0) break;\n\t\tvis[p] = 1;\n\t\tif (last >= c[x][p]) {\n\t\t\tans += c[x][p] * v;\n\t\t\tlast -= c[x][p];\n\t\t} else {\n\t\t\tans += last * v;\n\t\t\tlast = 0;\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tcin >> n >> m >> k;\n\tfor (int i = 1; i <= n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tfor (int j = 1; j <= m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n\t}\n\tlong long ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++) { ans = max(ans, cal(i, j)); }\n\tcout << ans << ""\n"";\n}"	"create 2d long long array a with size 11 by 105\ncreate 2d long long array b with size 11 by 105\ncreate 2d long long array c with size 11 by 105\ndeclare boolean array vis with 105 elements\ndeclare long longs n, m and k\ncal is a long long function with int arguments x and y\ncreate long long last = k\ncreate long long ans = 0\nset sizeof(vis) bytes at the pointer vis to 0\nwhile last != 0\ndeclare long long v = 0\ndeclare long long p\ndeclare long long flag = 0\nfor integer i = 1 to m inclusive\nif vis[i] is false\nif b[y][i] - a[x][i] is greater than v\nassign b[y][i] - a[x][i] to v\nset p to i\nassign 1 to flag\nif flag = 0, break\nset vis[p] to 1\nif last >= c[x][p]\nincrease ans by c[x][p] * v\ndecrease last by c[x][p]\nelse\nincrease ans by last * v\nchange last to 0\nreturn ans\nread n, m and k\nfor i from 1 to n inclusive\ndeclare string s\nread input to s\nfor j from 1 to m inclusive, read input to a[i][j], b[i][j] and c[i][j]\ndeclare long long variable ans = 0\nloop i from 1 to n inclusive\nfor int j = 1 to n inclusive, change ans to max of ans and cal(i, j)\nprint ans and ""\n"""
int main() {\n\tlong long n, a[100100];\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) cin >> a[i];\n\tlong long s = 0;\n\tfor (int k = 0; k < n - 1; ++k) {\n\t\tint t = 0;\n\t\twhile (k + (1 << t + 1) < n) ++t;\n\t\ts += a[k], a[k + (1 << t)] += a[k];\n\t\tcout << s << endl;\n\t}\n\treturn 0;\n}	declare n as long long, a as long long array with size 100100\nread n\nfor i = 0 to n exclusive, read a[i]\ndeclare s as long long = 0\nfor k = 0 to n - 1 exclusive\ndeclare integer t = 0\nwhile k + ( 1 bitshift left t + 1 ) is less than n, increment i\nincrement s by a[k], a[k + (1 << t)] by a[k]\nprint s, newline
const int MaxN = 1E5 + 10;\nint a[MaxN];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) cin >> a[i];\n\tint ans = 0;\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tint lg = log2(n - i - 1);\n\t\tans += a[i];\n\t\ta[i + (1 << lg)] += a[i];\n\t\tcout << ans << endl;\n\t}\n}	MaxN = const int with MaxN = 1E5 + 10\na = int array of size MaxN\nn = int\nread n\nread n values into a\nans = int with ans = 0\nfor i = 0 to n - 1\nlg = int with lg = log2 of n - i - 1\nincrement ans by a[i]\nincrement a[i + (1 bitshift left by lg)] by a[i]\nprint ans
int n, i, a[1111111], ans = 0, d[1111111];\nint main() {\n\tcin >> n;\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\td[1] = 1;\n\tfor (i = 2; i < n; i++) d[i] = d[i / 2] * 2;\n\tfor (i = 0; i + 1 < n; i++) {\n\t\ta[i + d[n - i - 1]] += a[i];\n\t\tans += a[i];\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n, i, a, ans, d = integers with ans = 0, a, d = integer array of size 1111111\nread n\nfor i = 0 to n exclusive, read a[i]\nd[1] = 1\nfor i = 2 to n exclusive, d[i] = d[i / 2] * 2\nfor i = 0 to i + 1 < n\na[i + d[n - i - 1]] = a[i + d[n - i - 1]] + a[i]\nans = ans + a[i]\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tlong long arr[n];\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tlong long N = 0;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tint t = floor(log2(n - i - 1));\n\t\tN = N + arr[i];\n\t\tint j = i + pow(2, t);\n\t\tarr[j] += arr[i];\n\t\tarr[i] = 0;\n\t\tcout << N << endl;\n\t}\n\treturn 0;\n}	create int n\nread n\ncreate long long int array arr[n]\nread every index of arr\ncreate long long N = 0\nfor i = 0 to n - 1 exclusive\nlet integer t = floor(log2(n - i - 1))\nset N to N + arr[i]\ncreate int j = i + pow(2, t)\nset arr[j] to arr[j] + arr[i]\nset arr[i] to 0\nprint N
int a[100001];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i < n + 1; i++) cin >> a[i];\n\tlong long res = 0;\n\tint t;\n\tfor (int i = 1; i < n; i++) {\n\t\tfor (t = 1; i + t <= n; t *= 2)\n\t\t\t;\n\t\tt >>= 1;\n\t\tres += a[i];\n\t\ta[i + t] += a[i];\n\t\tcout << res << endl;\n\t}\n\treturn 0;\n}	a = integer array of size 100001\nn = integer\nread n\nfor i = 1 to n + 1 exclusive, read a[i]\nres = long long with res = 0\nt = integer\nfor i = 1 to n exclusive\nfor t = 1, i + t <= n, t = t * 2\n;\nt = right shift t 1 place\nres = res + a[i]\na[i + t] = a[i + t] + a[i]\nprint res
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int a[n + 5];\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tlong long int c = 0;\n\tfor (int i = 1; i < n; i++) {\n\t\tc += a[i];\n\t\tcout << c << ""\n"";\n\t\tlong long int j = 1;\n\t\twhile ((i - 1) + j * 2 < n) j *= 2;\n\t\ta[i + j] += a[i];\n\t}\n}"	create long long int n\nread n\ncreate long long int a[n + 5]\nfor i=0 to n inclusive, read a[i]\nset c to 0\nfor i=0 to n exclusive\nset c to c + a[i]\nprint c and a newline\nj=1\nwhile ( - 1 + j * 2 < n, set j to j*2\nset a[i + j] to a[i + j] + a[i]
long long power2(long long pow, long long mod) {\n\tlong long res = 1ll, x = 2ll;\n\twhile (pow > 0) {\n\t\tif (pow & 1) res = (res * x) % mod;\n\t\tpow >>= 1;\n\t\tx = (x * x) % mod;\n\t}\n\treturn res;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n) {\n\t\tlong long M = 1 * 1000 * 1000 * 1000 + 7;\n\t\tlong long sol;\n\t\tsol = power2(2 * n - 1, M);\n\t\tsol += power2(n - 1, M);\n\t\tsol %= M;\n\t\tcout << sol << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	power2 is a long long function with long long arguments pow and mod\ndeclare long longs res = 1ll and x = 2ll\nwhile pow > 0\nif pow & 1 is true, set res to (res * x) modulo mod\npow >>= 1\nassign (x * x) modulo mod to x\nreturn res\ncreate long long n\nread n\nif n is true\ndeclare long long M = 1 * 1000 * 1000 * 1000 + 7\ndeclare long long variable sol\nassign power2(2 * n - 1, M) to sol\nincrease sol by power2(n - 1, M)\nsol = sol modulo M\nprint sol\nelse\nprint 1
int a, n, p = 1000000007;\nlong long fastmod(long long a, long long n) {\n\tif (n == 1) { return a; }\n\tlong long ans = fastmod(a, n / 2) % p;\n\tif (n % 2 == 0) {\n\t\treturn ans % p * ans % p;\n\t} else {\n\t\treturn ans % p * ans % p * a % p;\n\t}\n}\nint main() {\n\tlong long k;\n\tcin >> k;\n\tif (k >= 2) {\n\t\tlong long t = fastmod(2, k - 1);\n\t\tcout << (t + 2 * t * t % p) % p << endl;\n\t} else if (k == 1) {\n\t\tcout << 3 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\treturn 0;\n}	declare int variables a, n and p where p = 1000000007\nlong long function fastmod with long long arguments a and n\nif n is equal to 1, return a\ndeclare long long variable ans = fastmod(a, n / 2) modulo p\nif n is even\nreturn ans % p * ans % p\nelse{\nreturn ans % p * ans % p * a % p\ndeclare long long variable k\nread k\nif k >= 2\ndeclare long long variable t = fastmod(2, k - 1)\nprint (t + 2 * t * t % p) % p\nelse if k = 1\nprint 3\nelse\nprint 1
const long long mod = 1e9 + 7;\nlong long qpow2(long long p) {\n\tlong long a = 2;\n\tlong long res = 1;\n\twhile (p) {\n\t\tif (p & 1) {\n\t\t\tres *= a;\n\t\t\tres %= mod;\n\t\t}\n\t\ta *= a;\n\t\ta %= mod;\n\t\tp >>= 1;\n\t}\n\treturn res;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << 1 << endl;\n\t} else {\n\t\tcout << (qpow2(n - 1) + qpow2(2 * n - 1)) % mod << endl;\n\t}\n\treturn 0;\n}	mod = constant long long with value of 1e9 + 7\nin function qpow2 that returns a long long and takes argument p = long long\na = long long with value of 2\nres = long long with value of 1\nwhile p\nif p bitwise and 1\nset res to res * a\nset res to res modulo mod\nset a to a * a\nset a to a modulo mod\nset p to right shift p by 1\nreturn res\nn = long long\nread n\nif n equals 0\nprint 1\nelse\nprint (call qpow2 with argument n-1 plus call qpow2 with argument 2*n-1) modulo mod
const int oo = 1e9, MD = 1e9 + 7;\nlong long fastExp(long long b, long long e) {\n\tlong long ans = 1;\n\twhile (e > 0) {\n\t\tif (e & 1) ans = (ans * b) % MD;\n\t\tb = (b * b) % MD;\n\t\te >>= 1;\n\t}\n\treturn ans;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tlong long ans = (fastExp(4, n) + fastExp(2, n)) % MD;\n\tans = (ans * fastExp(2, MD - 2)) % MD;\n\tcout << ans << '\n';\n\treturn 0;\n}	oo=1000000000, MD=1000000007\nfunction fastExp (get long long b and e, return long long)\nans=1\nwhile e > 0\nif e and 1 ans = (ans*b) modulo MD\nb = (b*b) modulo MD\nright shift e\nreturn ans\nn=long long\nread n\nans=(fastExp(4,n) + fastExp(2,n)) modulo MD\nans = (ans*fastExp(2,MD-2)) modulo MD\nprint ans
long long mul(long long x, long long p) {\n\tlong long ans = 1;\n\twhile (p) {\n\t\tif (p & 1) ans = ans * x % 1000000007;\n\t\tx = x * x % 1000000007;\n\t\tp = p >> 1;\n\t}\n\treturn ans;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 0)\n\t\tcout << 1 << endl;\n\telse {\n\t\tlong long w = mul(2, n - 1) % 1000000007;\n\t\tcout << (w + w * w % 1000000007 * 2 % 1000000007) % 1000000007 << endl;\n\t}\n\treturn 0;\n}	mul is a long long function with long long arguments x and p\ndeclare long long ans = 1\nwhile p is not 0\nif p & 1 != 0, assign ans * x % 1000000007 to ans\nset x to x * x % 1000000007\nassign p >> 1 to p\nreturn ans\ndeclare long long variable n\nread n\nif n is equal to 0\nprint 1\nelse\ndeclare long long variable w = mul(2, n - 1) % 1000000007\nprint (w + w * w % 1000000007 * 2 % 1000000007) % 1000000007
long long MOD = 1e9 + 7;\nlong long mod = 1e9 + 7;\nconst int N = 100005;\nlong long inv[100005];\nlong long powmod(long long a, long long b) {\n\tlong long res = 1;\n\ta %= mod;\n\tfor (; b; b >>= 1) {\n\t\tif (b & 1) res = res * a % mod;\n\t\ta = a * a % mod;\n\t}\n\treturn res;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tinv[1] = 1;\n\tfor (int i = 2; i < N; i++) { inv[i] = (MOD - MOD / i) * inv[MOD % i] % MOD; }\n\tlong long d = powmod(2, n);\n\tlong long ans = d * (d + 1) % mod * inv[2] % mod;\n\tcout << ans << endl;\n}	MOD = 1000000007\nmod = 1000000007\nN = 100005\ninv = array of 100005 long long\nfunction powmod (get long long a and b, return long long)\nres = 1\na = a modulo mod\nwhile b = b >> 1\nif b and 1 multiply res by a modulo mod\nmultiply a by a modulo mod\nreturn res\nn = long long\nread n\ninv[1] = 1\nfor i=2 to N exclusive inv[i] = (MOD-MOD/i)*inv[MOD modulo i] modulo MOD\nd=powmod(2, n)\nans = d*(d+1) modulo mod * inv[2] modulo mod\nprint ans
const long long INF = (1ll << 62) - 1;\nconst long long M = 1e9 + 7;\nlong long modularExponentiation(long long x, long long y) {\n\tint res = 1;\n\twhile (y > 0) {\n\t\tif (y & 1) res = (res * x) % M;\n\t\ty = y >> 1;\n\t\tx = (x * x) % M;\n\t}\n\treturn res;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tlong long ans = modularExponentiation(2, n);\n\tans = (ans + (ans * ans)) / 2;\n\tcout << ans % M << endl;\n}	create constant long long INF with INF = (1ll bitshift left 62) - 1\ncreate constant long long M with M = 1e9 + 7\ndeclare modularExponentiation with long longs x, y as arguments, returning long long\ncreate integer res with res = 1\nwhile y is greater than 0\nif y bitwise and 1, set res to ( res * x ) % M\nset y to y bitshift right 1\nset x to ( x * x ) % M\nreturn res from function\ncreate long long n\nread n\ncreate long long ans with ans = result of run modularExponentiation with 2, n as arguments\nset ans to ( ans + ( ans * ans )) / 2\nprint ans % M print newline
int main() {\n\tint n, a, b, c;\n\tcin >> n >> a >> b >> c;\n\tint ans = 0;\n\tfor (int i = 0; i <= 4000; i++) {\n\t\tfor (int k = 0; k <= 4000; k++) {\n\t\t\tint sum = a * i + b * k;\n\t\t\tif (sum > n) continue;\n\t\t\tif ((n - sum) % c == 0) { ans = max(ans, (i + k + (n - sum) / c)); }\n\t\t}\n\t}\n\tcout << ans << '\n';\n}	n, a, b, c = int\nread n then a then b then c\nans = int with ans = 0\nfor i = 0 to 4000 inclusive\nfor k = 0 to 4000 inclusive\nsum = int with sum = a * i + b * k\nif sum is greater than n then continue inner loop\nif (n - sum) mod c equals 0 then set ans to max of ans and (i + k + (n - sum) / c)\nprint ans
int a[3] = {0};\nint dp[10000];\nint main() {\n\tint n;\n\tcin >> n >> a[0] >> a[1] >> a[2];\n\tmemset(dp, -100, sizeof(dp));\n\tdp[0] = 0;\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n\t}\n\tcout << dp[n] << endl;\n\treturn 0;\n}	a = int array of size 3 with all values set to 0\ndp = int array of size 10000\nn = int\nread n then a[0] then a[1] then a[2]\nset all values of dp to -100\nset dp[0] to 0\nfor i = 0 to 3\nfor j = a[i] to n inclusive set dp[j] to max of dp[j] and dp[j - a[i]] + 1\nprint dp[n]
int n, a, b, c;\nint main() {\n\tcin >> n;\n\tint w[5];\n\tfor (int i = 1; i <= 3; i++) cin >> w[i];\n\tint e[5000];\n\tmemset(e, -40, sizeof(e));\n\te[0] = 0;\n\tfor (int i = 1; i <= 3; i++) {\n\t\tfor (int j = w[i]; j <= n; j++) { e[j] = max(e[j - w[i]] + 1, e[j]); }\n\t}\n\tcout << e[n] << endl;\n}	create ints n, a, b and c\nread n\ndeclare integer array w with size 5\nloop i from 1 to 3 inclusive, read input to w[i]\nlet e be int array with size 5000\nset sizeof(e) bytes at the pointer e to -40\nassign 0 to e[0]\nloop i from 1 to 3 inclusive\nfor j = w[i] to n inclusive, assign max of e[j - w[i]] + 1 and e[j] to e[j]\nprint e[n]
int a[4];\nint dp[4001];\nint main() {\n\tint n;\n\tcin >> n >> a[1] >> a[2] >> a[3];\n\tmemset(dp, -42, sizeof(dp));\n\tdp[0] = 0;\n\tfor (int i = 1; i <= 3; i++) {\n\t\tfor (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n\t}\n\tcout << dp[n] << endl;\n}	integers = a array that is size 4\nintegers = dp array size 4001\nintegers = n\nread n,a[1],a[2],a[3]\ncreate memset dp with a size of dp\nset dp[0] to 0\nfor i = 1 to less than or equal to 3 do the following\nfor j = a[i] to less than or equal to n then dp[j] = the maximum out of dp[j] and dp[j-a[i]+1\noutput dp[n]
int a[3] = {0};\nint dp[10000];\nint main() {\n\tint n;\n\tcin >> n >> a[0] >> a[1] >> a[2];\n\tmemset(dp, -9999, sizeof(dp));\n\tdp[0] = 0;\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n\t}\n\tcout << dp[n] << endl;\n\treturn 0;\n}	let a be int array with size 3 fileld with 0\ndeclare integer array dp with size 10000\ndeclare integer variable n\nread input to n, a[0], a[1] and a[2]\nset sizeof(dp) bytes at the pointer dp to -9999\nset dp[0] to 0\nloop i from 0 to 3 exclusive\nloop j from a[i] to n inclusive incrementing j, change dp[j] to max of dp[j] and dp[j - a[i]] + 1\nprint dp[n]
int main() {\n\tint n, a, b, c;\n\tcin >> n >> a >> b >> c;\n\tint mx = -1;\n\tfor (int i = n / a; i >= 0; --i) {\n\t\tfor (int j = n / b; j >= 0; --j) {\n\t\t\tint x = n - (i * a + j * b);\n\t\t\tif (x % c == 0 and x >= 0) { mx = max(mx, i + j + x / c); }\n\t\t}\n\t}\n\tcout << mx << endl;\n}	n, a, b, c = integers\nread n, a, b, c\nmx = integer with mx = -1\nfor i = n / a down to 0\nfor j = n / b down to 0\nx = integer with x = n - (i * a + j * b)\nif x modulo c is 0 and x >= 0, mx = max of mx and i + j + x / c\nprint mx
"int main() {\n\tint n, a, b, c;\n\tcin >> n >> a >> b >> c;\n\tint res = 0;\n\tfor (int i = 0; i <= n / a; i++) {\n\t\tfor (int j = 0; j <= n / b; j++) {\n\t\t\tint k = n - i * a - j * b;\n\t\t\tif (k >= 0 && k % c == 0) res = max(res, i + j + k / c);\n\t\t}\n\t}\n\tcout << res << ""\n"";\n}"	n, a, b, c =integers\nRead n, a, b, c\nres = integer with 0\nfor i = 0 to n / a exclusive\nfor i = 0 to n / b exclusive\nset k to n - i * a - j * b\nif k is greater than 0 and k modulo c is 0, then set res to maximum value of res and i + j + k / c\nprint res and a new line
int main() {\n\tint n, a, b, c, max = 0;\n\tcin >> n >> a >> b >> c;\n\tfor (int x = 0; a * x <= n; x++) {\n\t\tfor (int y = 0; (y * b) + (a * x) <= n; y++) {\n\t\t\tint z = (n - a * x - b * y) / c;\n\t\t\tif (a * x + b * y + z * c == n) {\n\t\t\t\tif (x + y + z > max) max = x + y + z;\n\t\t\t}\n\t\t}\n\t}\n\tcout << max << endl;\n\treturn 0;\n}	create integers n, a ,b, c, max with max = 0\nread n read a read b read c\nfor x = 0 to a * x is less than or equal to n, incrementing x\nfor y = 0 to ( y * b ) + ( a * x ) is less than or equal to n, incrementing y\ncreate integer z with z = (n - a * x - b * y) / c\nif a * x + b * y + z * c is n\nif x + y + z is greater than max, set max to x + y + z\nprint max print newline
int main() {\n\tint n, a, b, c;\n\tcin >> n >> a >> b >> c;\n\tint x, y, z, p = 0, i;\n\ti = min(a, min(b, c));\n\ti = n / i;\n\tfor (x = i; x >= 0; x--) {\n\t\tfor (y = 0; y <= i; y++) {\n\t\t\tz = abs((n - (a * x + b * y)) / c);\n\t\t\tif ((a * x + b * y + c * z) == n) { p = max(p, x + y + z); }\n\t\t}\n\t}\n\tcout << p << endl;\n}	let n, a, b, c be integers\nread n, a, b, c\nlet x, y, z, p , i be integers with p = 0\ni is equal to minimum of a , minimum of b and c\ni is equal to n / i\nfor x is equal to i , x >= 0 , decrease x by 1\nfor y = 0 to i inclusive\nz is equal to absolute value of (n - (a * x + b * y)) / c\nif a * x + b * y + c * z is equal to n , p = maximum of p and x + y + z\nprint p and newline
int arr[5], n;\nint dp[4004], mn;\nint fun(int rem) {\n\tif (rem == 0) return 0;\n\tif (rem < mn) return -11111111;\n\tif (dp[rem] != -1) return dp[rem];\n\tint ret = -11111111;\n\tfor (int i = 0; i < 3; i++) { ret = max(ret, 1 + fun(rem - arr[i])); }\n\treturn dp[rem] = ret;\n}\nint main() {\n\tmemset(dp, -1, sizeof dp);\n\tcin >> n;\n\tmn = 100000000;\n\tfor (int i = 0; i < 3; i++) {\n\t\tcin >> arr[i];\n\t\tmn = min(arr[i], mn);\n\t}\n\tcout << fun(n) << endl;\n}	arr = integer array of size 5, n = integer\ndp = integer array of size 4004, mn = integer\nin the function fun that takes integer rem and returns integer\nif rem is 0, return 0\nif rem < mn, return -11111111\nif dp[rem] is not -1, return dp[rem]\nret = integer with ret = -11111111\nfor i = 0 to 3, ret = max(ret, 1 + fun(rem - arr[i]))\nreturn dp[rem] = ret\nset all contents of dp to -1\nread n\nmn = 100000000\nfor i = 0 to 2\nread arr[i]\nmn = min of arr[i] and mn\nprint fun(n)
long long n, a, b, c;\nlong long dp[5006][5005];\nlong long result(long long total, long long cnt) {\n\tif (total == 0) return cnt;\n\tlong long d = 0, e = 0, f = 0;\n\tif (dp[total][cnt] != -1) return dp[total][cnt];\n\tif (a <= total) d = result(total - a, cnt + 1);\n\tif (b <= total) e = result(total - b, cnt + 1);\n\tif (c <= total) f = result(total - c, cnt + 1);\n\treturn dp[total][cnt] = max(d, max(e, f));\n}\nint main() {\n\tmemset(dp, -1, sizeof dp);\n\tcin >> n >> a >> b >> c;\n\tlong long ans = result(n, 0);\n\tcout << ans << endl;\n}	create long longs n, a, b and c\nlet dp be 2d long long array with size 5006 by 5005\nlong long function result with long long arguments total and cnt\nif total = 0 return cnt\ndeclare long long variables d, e and f = 0\nif dp[total][cnt] is not -1m return dp[total][cnt]\nif a <= total, assign result(total - a, cnt + 1) to d\nif b <= total, assign result(total - b, cnt + 1) to e\nif c <= total, assign result(total - c, cnt + 1) to f\nreturn dp[total][cnt] = max of d and max(e, f)\nset value of sizeofdp bytes at the pointer dp to -1\nread input to n, a, b and c\ndeclare long long variable ans = result(n, 0)\nprint ans
int main() {\n\tint n, a[3];\n\tcin >> n >> a[0] >> a[1] >> a[2];\n\tsort(a, a + 3);\n\tint i = 0, j = 0, k = 0, ans = -1;\n\tfor (i = 0; i * a[2] < n + 1; i++) {\n\t\tfor (j = 0; i * a[2] + j * a[1] < n + 1; j++) {\n\t\t\tif ((n - i * a[2] - j * a[1]) % a[0] == 0) { ans = max(ans, i + j + (n - i * a[2] - j * a[1]) / a[0]); }\n\t\t}\n\t}\n\tcout << ans << endl;\n}	create integer n, create integer array a with size 3\nread n read a[0] read a[1] read a[2]\nsort elements from a to a + 3\ncreate integers i, j, k, ans with i = 0, j = 0, k = 0, ans = -1\nfor i = 0 to a * a[2] is less than n + 1, incrementing i\nfor j = 0 to i * a[2] + j * a[1] is less than n + 1, incrementing j\nif (n - i * a[2] - j * a[1]) % a[0] is 0, set ans to maximum of ans and i + j + (n - i * a[2] - j * a[1]) / a[0])\nprint ans print newline
"const int N = 4005;\nconst int inf = 1e9;\nconst long long INF = 1e18;\nconst double PI = acos(-1.0);\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint n, a, b, c;\nint dp[N];\nint main() {\n\tcin >> n >> a >> b >> c;\n\tfor (int i = 0; i <= n; i++) dp[i] = -inf;\n\tdp[0] = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a <= i) dp[i] = max(dp[i], dp[i - a] + 1);\n\t\tif (b <= i) dp[i] = max(dp[i], dp[i - b] + 1);\n\t\tif (c <= i) dp[i] = max(dp[i], dp[i - c] + 1);\n\t}\n\tcout << dp[n] << ""\n"";\n\treturn 0;\n}"	"declare const int N = 4005\ndeclare const int inf = 1e9\ncreate const long long INF = 1e18\ndeclare const double PI = acos(-1.0)\ndeclare const double EPS = 1e-8\ncreate const int MOD = 1000000007\ndeclare integer variables n, a, b and c\ndeclare int array dp with size N\nread n, a, b and c\nloop i from 0 to n inclusive, assign -inf to dp[i]\nassign 0 to dp[0]\nfor i = 1 to n inclusive\nif a <= i, set dp[i] to max of dp[i] and dp[i - a] + 1\nif b <= i, assign max of dp[i] and dp[i - b] + 1 to dp[i]\nif c <= i, change dp[i] to max of dp[i] and dp[i - c] + 1\nprint dp[n] and ""\n"""
const int N = 1e5 + 7;\nint arr[N];\nint main() {\n\tint n, a, b, c;\n\tcin >> n >> a >> b >> c;\n\tmemset(arr, (int)(0), sizeof(arr));\n\tarr[a] = arr[b] = arr[c] = 1;\n\tfor (int i = (int)(1); i <= (int)(n); i++) {\n\t\tif (i >= a and arr[i - a]) arr[i] = max(arr[i], arr[i - a] + 1);\n\t\tif (i >= b and arr[i - b]) arr[i] = max(arr[i], arr[i - b] + 1);\n\t\tif (i >= c and arr[i - c]) arr[i] = max(arr[i], arr[i - c] + 1);\n\t}\n\tcout << arr[n] << endl;\n}	N = constant integer with N = 1e5 + 7\narr = array of size N\nn, a, b, c = integers\nread n, a, b, c\nset all contents of arr to 0 after casting to integer\narr[a] = arr[b] = arr[c] = 1\nfor i = (cast to integer)(1) to (cast to integer)(n)\nif i >= a and arr[i - a], arr[i] = max(arr[i], arr[i - a] + 1)\nif i >= b and arr[i - b], arr[i] = max(arr[i], arr[i - b] + 1)\nif i >= c and arr[i - c], arr[i] = max(arr[i], arr[i - c] + 1)\nprint arr[n]
int p[3];\nbool dp[4000 + 10][4000 + 10];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < 3; i++) cin >> p[i];\n\tint minp = min(min(p[0], p[1]), p[2]), maxp = max(max(p[0], p[1]), p[2]);\n\tdp[0][0] = true;\n\tfor (int i = minp; i <= n; i++)\n\t\tfor (int k = 1; k <= i / minp; k++)\n\t\t\tfor (int j = 0; j < 3; j++)\n\t\t\t\tif (i >= p[j]) dp[i][k] |= dp[i - p[j]][k - 1];\n\tfor (int i = n / minp; i >= 1; i--)\n\t\tif (dp[n][i]) {\n\t\t\tcout << i << endl;\n\t\t\tbreak;\n\t\t}\n}	p = array of 3 integers\ndp = 2d array of size [4010][4010]\nn = integer\nread n\nfor i = 0 to 2, read p[i]\nminp, maxp = integers with minp = min(min(p[0], p[1]), p[2]), maxp = max(max(p[0], p[1]), p[2])\ndp[0][0] = true\nfor i = minp to n\nfor k = 1 to i / minp\nfor j = 0 to 2\nif i >= p[j], dp[i][k] = dp[i][k] binary or dp[i - p[j]][k - 1]\nfor i = n / minp down to 1\nif dp[n][i]\nprint i\nbreak loop
int a, b, c;\nint memo[4001];\nint solve(int i) {\n\tif (i == 0) return 0;\n\tif (memo[i] != -1) return memo[i];\n\tint opt1 = -1e9, opt2 = -1e9, opt3 = -1e9;\n\tif (i >= a) { opt1 = solve(i - a) + 1; }\n\tif (i >= b) { opt2 = solve(i - b) + 1; }\n\tif (i >= c) { opt3 = solve(i - c) + 1; }\n\treturn memo[i] = max(opt1, max(opt2, opt3));\n}\nint main() {\n\tmemset(memo, -1, sizeof memo);\n\tint n;\n\tcin >> n >> a >> b >> c;\n\tcout << solve(n) << endl;\n\treturn 0;\n}	create integers a, b and c\ndeclare int array memo with size 4001\nfunction solve with int argument i that returns integer\nif i = 0, return 0\nif memo[i] != - 1, return memo[i]\ncreate integers opt1, opt2 and opt3 = -1e9\nif i >= a, change opt1 to solve(i - a) + 1\nif i >= b, change opt2 to solve(i - b) + 1\nif i >= c, change opt3 to solve(i - c) + 1\nreturn memo[i] = max of opt1 and (max of opt2 and opt3)\nset first sizeof memo bytes at the pointer memo to -1\ndeclare integer variable n\nread n, a, b and c\nprint result of solve(n)
int cut_ribbon(int n, int a, int b, int c) {\n\tint arr[n + 1];\n\tmemset(arr, 0, sizeof(arr));\n\tif (a <= n) { arr[a] = 1; }\n\tif (b <= n) { arr[b] = 1; }\n\tif (c <= n) { arr[c] = 1; }\n\tfor (int i = 0; i <= n; i++) {\n\t\tif (i > a && arr[i - a] != 0) { arr[i] = max(arr[i], arr[i - a] + 1); }\n\t\tif (i > b && arr[i - b] != 0) { arr[i] = max(arr[i], arr[i - b] + 1); }\n\t\tif (i > c && arr[i - c] != 0) { arr[i] = max(arr[i], arr[i - c] + 1); }\n\t}\n\treturn arr[n];\n}\nint main() {\n\tint n, a, b, c;\n\tcin >> n >> a >> b >> c;\n\tcout << cut_ribbon(n, a, b, c) << endl;\n\treturn 0;\n}	declare cut_ribbon with integers n, a, b, c as arguments\ncreate integer array arr with size n + 1\nset bytes from arr to size of arr to value 0\nif a is less than or equal to n, set arr[a] to 1\nif b is less than or equal to n, set arr[b] to 1\nif c is less than or equal to n, set arr[c] to 1\nfor i = 0 to n inclusive\nif i is greater than a and arr[i-a] is not 0, set arr[i] to maximum of arr[i] and arr[i-a]+1\nif i is greater than b and arr[i-b] is not 0, set arr[i] to maximum of arr[i] and arr[i-b]+1\nif i is greater than c and arr[i-c] is not 0, set arr[i] to maximum of arr[i] and arr[i-c] + 1\nreturn arr[n] from function\ncreate integers n, a, b, c\nread n read a read b read c\nprint result of run cut_ribbon with n, a, b, c as arguments, print newline
"int main() {\n\tint x, y, r, ans;\n\tcin >> x >> y >> r;\n\tif (2 * r > min(x, y))\n\t\tcout << ""Second"" << endl;\n\telse\n\t\tcout << ""First"" << endl;\n\treturn 0;\n}"	x, y, r, ans = integers\nread x, y, r\nif 2 * r > min(x, y)\nprint Second\nelse\nprint First
"int main() {\n\tint l, b, r;\n\tcin >> l >> b >> r;\n\tint d = 2 * r, plates = 0;\n\tif (min(l, b) < d)\n\t\tcout << ""Second"" << endl;\n\telse\n\t\tcout << ""First"" << endl;\n}"	l, b, r = integers\nread l, b, r\nd, plates = integers with d = 2 * r, plates = 0\nif min(l, b) < d\nprint Second\nelse\nprint First
"int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tif (a >= 2 * c && b >= 2 * c)\n\t\tcout << ""First"";\n\telse\n\t\tcout << ""Second"";\n\tcout << endl;\n\treturn 0;\n}"	"a, b, c = int\nread a then b then c\nif a and b are both greater or equal to 2 * c\nprint ""First""\nelse\nprint ""Second""\nprint newline"
"const int MAXN = 100000 + 7;\nconst int mod = 23333333;\nint a, b, r;\nint main() {\n\tcin >> a >> b >> r;\n\tif (a < 2 * r || b < 2 * r)\n\t\tcout << ""Second"" << endl;\n\telse\n\t\tcout << ""First"" << endl;\n\treturn 0;\n}"	"create constant integer MAXN with MAXN = 100000 + 7\ncreate constant integer mod with mod = 23333333\ncreate integers a, b, r\nread a read b read r\nif a is less than 2 * r or b is less than 2 * r\nprint ""Second"" print newline\nelse\nprint ""First"" print newline"
"string str[30100];\nint a, b, r;\nint main() {\n\tcin >> a >> b >> r;\n\tr *= 2;\n\tif (r <= a && r <= b)\n\t\tputs(""First"");\n\telse\n\t\tputs(""Second"");\n}"	"str=array of 30100 strings\na,b,r=int\nread a,b,r\nmultiply r by 2\nif r <= a and r <= b\nprint ""First""\nelse\nprint ""Second"""
"const int pi = 3.14;\nint main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tif (2 * r > min(a, b)) {\n\t\tcout << ""Second"" << endl;\n\t} else {\n\t\tint cnt = 0;\n\t\tint ans = max(a, b);\n\t\tint res = min(a, b);\n\t\twhile (1) {\n\t\t\tans = max(ans, res);\n\t\t\tres = min(ans, res);\n\t\t\tcnt += res / (2 * r);\n\t\t\tans -= (res / (2 * r)) * 2 * r;\n\t\t\tint minn = min(ans, res);\n\t\t\tif (minn < 2 * r) break;\n\t\t}\n\t\tif (cnt >= 1)\n\t\t\tcout << ""First"" << endl;\n\t\telse\n\t\t\tcout << ""Second"" << endl;\n\t}\n\treturn 0;\n}"	integers = t integer pi = 3.14\nintegers = a,b,r\nread a,b,r\nif 2 * r is greater than min(a, b then do the following\noutput Second\nelse\nintegers = cnt = 0\nintegers = ans = max(a,b)\nintegers = res = min(a,b)\nif 1 is true do the following\nset ans to maximum of ans and res\nset res to minimum and ans and res\ncnt equals cnt plus res / (2 * r)\nsubtract (res / (2 * r)) * 2 * r from ans\nintegers = minn = minimum of ans or res\nif minn is less than 2 * r then do the following break\nif cnt is greater than or equal to 1 then do the following\noutput First\nelse\noutput Second
"int main() {\n\tlong long int n, k, l;\n\tcin >> n >> k >> l;\n\tif (2 * l <= min(n, k))\n\t\tcout << ""First"" << endl;\n\telse\n\t\tcout << ""Second"" << endl;\n\treturn 0;\n}"	n,k,l = long long integers\ninput n,k,l\nif 2 * l is less than or equal to minimum of n and k then do the following\noutput First\nelse\noutput Second
"int a, b, r;\nint main() {\n\tcin >> a >> b >> r;\n\tif (a < 2 * r || b < 2 * r)\n\t\tcout << ""Second\n"";\n\telse\n\t\tcout << ""First\n"";\n\treturn 0;\n}"	a, b, r = integers\nRead a, b, r\nif a is less than 2 * r OR b is less than 2 * r\nprint Second and a new line\nelse do the following\nprint First and a new line
"int main() {\n\tint n1, n2, r;\n\tcin >> n1 >> n2 >> r;\n\tint r2 = r + r;\n\tif (n1 >= r2 && n2 >= r2)\n\t\tcout << ""First\n"";\n\telse\n\t\tcout << ""Second\n"";\n\treturn 0;\n}"	"create integers n1, n2, r\nread n1 read n2 read r\ncreate integer r2 with r2 = r + r\nif n1 is greater than or equal to r2 and n2 is greater than or equal to r2\nprint ""First\n""\nelse\nprint ""Second\n"""
"int main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tr *= 2;\n\tif (a < r || b < r) {\n\t\tcout << ""Second"" << endl;\n\t} else {\n\t\tcout << ""First"" << endl;\n\t}\n\treturn 0;\n}"	"a, b, r = int\nread a then b then r\nset r to r * 2\nif a or b is less than r\nprint ""Second""\nelse\nprint ""First"""
"int main() {\n\tint a, b, r, m;\n\tcin >> a >> b >> r;\n\tif (a > b)\n\t\tm = b;\n\telse\n\t\tm = a;\n\tif (m >= 2 * r)\n\t\tcout << ""First"" << endl;\n\telse\n\t\tcout << ""Second"" << endl;\n\treturn 0;\n}"	"create integers a, b, r, m\nread a read b read r\nif a is greater than b\nset m to b\nelse\nset m to a\nif m is greater than or equal to 2 * r\nprint ""First"" print newline\nelse\nprint ""Second"" print newline"
"int main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tif (min(a, b) >= 2 * r) {\n\t\tcout << ""First"" << endl;\n\t} else\n\t\tcout << ""Second"" << endl;\n\treturn 0;\n}"	a, b, r =integers\nRead a, b, r\nif minimum value of a and b is greater than or equal to 2 * r\nprint First and a new line\nelse do the following\nprint Second and a new line
"int main() {\n\tint min, height, width, radius;\n\twhile (cin >> height >> width >> radius) {\n\t\tif (height < width)\n\t\t\tmin = height;\n\t\telse\n\t\t\tmin = width;\n\t\tradius = radius * 2;\n\t\tif (min >= radius)\n\t\t\tcout << ""First"" << endl;\n\t\telse\n\t\t\tcout << ""Second"" << endl;\n\t}\n\treturn 0;\n}"	create int min, height, width, radius\nwhile read height, width, radius\nif heigth less than width\nset min to height\nelse\nmin = width\nassign radius * 2 to radius\nif min >= radius\nprint First\nelse\nprint Second
"int main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tif (2 * r <= a && 2 * r <= b)\n\t\tcout << ""First\n"";\n\telse\n\t\tcout << ""Second\n"";\n\treturn 0;\n}"	define ints a, b, and r\nread a, b, r\nif 2 r <= a and 2 r <= b\nprint First and newline\nelse...\nprint Second followed by newline
"int main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tr *= 2;\n\tif (r > min(a, b))\n\t\tcout << ""Second"" << '\n';\n\telse\n\t\tcout << ""First"" << '\n';\n}"	integers = a,b,r\nread a,b,r\nmultiply r by 2\nif r is greater than minimum of a or b then proceed with the following\noutput Second\nelse\noutput First
"int main() {\n\tint n, a, b, c;\n\tcin >> a >> b >> c;\n\tif (a < c * 2 || b < c * 2)\n\t\tcout << ""Second"" << endl;\n\telse\n\t\tcout << ""First"" << endl;\n}"	"define ints n, a, b, c\nread a, b, c\nif a < c * 2 or b < c * 2\nprint ""Second"" and newline\notherwise\nprint ""First"" and a newline"
"int main() {\n\tint n, m, r;\n\twhile (cin >> n >> m >> r) {\n\t\tif (r * 2 <= n && r * 2 <= m)\n\t\t\tcout << ""First"" << endl;\n\t\telse\n\t\t\tcout << ""Second"" << endl;\n\t}\n}"	n, m, r = integers\nwhile read n, m, r\nif r * 2 <= n and r * 2 <= m\nprint First\nelse\nprint Second
"int a, b, r;\nint main() {\n\tcin >> a >> b >> r;\n\tif (a < r * 2 || b < r * 2)\n\t\tcout << ""Second"" << endl;\n\telse\n\t\tcout << ""First"" << endl;\n\treturn 0;\n}"	a, b, r = integers\nRead a, b, r\nif a is less than r * 2 OR b is less than r * 2\nprint Second and a new line\nelse do the following\nprint First and a new line
"int main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tif (a >= b) {\n\t\tif (2 * r <= b)\n\t\t\tcout << ""First\n"";\n\t\telse\n\t\t\tcout << ""Second\n"";\n\t} else {\n\t\tif (2 * r <= a)\n\t\t\tcout << ""First\n"";\n\t\telse\n\t\t\tcout << ""Second\n"";\n\t}\n\treturn 0;\n}"	"create integers a, b, r\nread a read b read r\nif a is greater than or equal to b\nif ( 2 * r is less than or equal to b )\nprint ""First\n""\nelse\nprint ""Second\n""\nelse\nif ( 2 * r is less than or equal to a )\nprint ""First\n""\nelse\nprint ""Second\n"""
"int main() {\n\tint x, y, r;\n\tcin >> x >> y >> r;\n\tif (x < r * 2 || y < r * 2)\n\t\tcout << ""Second\n"";\n\telse\n\t\tcout << ""First\n"";\n\treturn 0;\n}"	x, y, r = integers\nread x, y, r\nif x < r * 2 or y < r * 2\nprint Second\nelse\nprint First
"long long int mod = 1000000007;\nint main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tif (2 * r > min(a, b)) {\n\t\tcout << ""Second"" << endl;\n\t} else {\n\t\tcout << ""First"" << endl;\n\t}\n\treturn 0;\n}"	create long long int mod = 1000000007\nlet a, b and r be integers\nread a, b and r\nif 2 * r is greater than min(a, b)\nprint Second\nelse\nprint First
"int main() {\n\tint a, b, r;\n\tcin >> a >> b >> r;\n\tif (2 * r <= min(a, b))\n\t\tcout << ""First"" << endl;\n\telse\n\t\tcout << ""Second"" << endl;\n\treturn 0;\n}"	a, b, r = integers\nread a, b, r\nif 2 * r <= min(a, b)\nprint First\nelse\nprint Second
int main() {\n\tlong long k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tlong long z = k + b;\n\tint g = n;\n\twhile (z < t && g > 0) {\n\t\tg--;\n\t\tz = z * k + b;\n\t}\n\tif (z == t) { g--; }\n\tcout << g << endl;\n}	let k, b, n, t be long integers\nread k, b, n, t\nlet the value of long integer z is equal to k + b\nlet g be a integer with value g is equal to n\nwhile (z is less than t and g is greater than 0)\ndecrease g by 1\nlet the value of z is equal to z * k + b\nif (z is equal to t) , decrease g by 1\nprint g and newline
int main() {\n\tlong long u = 1;\n\tlong long k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tif (k == 1) {\n\t\tlong long x = 1;\n\t\tfor (long long i = 1; i <= n; i++) x += b;\n\t\tlong long r = t;\n\t\tlong long ans = 0;\n\t\twhile (r < x) {\n\t\t\tans++;\n\t\t\tr += b;\n\t\t}\n\t\tcout << ans << endl;\n\t\treturn 0;\n\t}\n\tlong long r = 0;\n\twhile (u * (k - 1 + b) <= (k * t - t + b)) {\n\t\tu *= k;\n\t\tr++;\n\t}\n\tcout << max(n - r + 1, 0LL) << endl;\n}	create long long u = 1\ncreate long long k, b, n and t\nread k, b, n and t\nif k = 1\ncreate long long x = 1\nfor i = 1 to n inclusive\ncreate long long variable r = t\ncreate long long variable ans = 0\nwhile r is less than x\nincrease ans by one\nincrease r by b\nprint ans\ncreate long long r = 0\nwhile u * (k - 1 + b) <= (k * t - t + b)\nmultiply u by k\nincrease r by one\nprint max of n - r + 1 and 0LL
int main() {\n\tlong long k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tlong long x = 1, cnt = -1;\n\tfor (long long i = 1; i <= n; ++i) {\n\t\tx = k * x + b;\n\t\tif (x > t) {\n\t\t\tcnt = i - 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (cnt == -1)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << n - cnt << endl;\n\treturn 0;\n}	l, b, n, t = long long\nread k, b, n, t\nset x = 1 and cnt = -1\nfor i = 1 to n inclusive\nset x = k * x + b\nif x is greater than t\nset cnt = i - 1\nstop the loop\nif cnt is equal to -1\nprint 0\notherwise\nprint n - cnt
int main() {\n\tlong long k, b, n, z;\n\tcin >> k >> b >> n >> z;\n\tint x = 1;\n\twhile (n && k * x + b <= z) {\n\t\tx = k * x + b;\n\t\tn--;\n\t}\n\tcout << n << endl;\n\treturn 0;\n}	create long long k, b, n, z\nread k, b, n and z\nset x = 1\nwhile n and k*x+b equal to or greater than z\nassign k*x+b to x\ndecrement n\nprint n and a new line
int k, b, n, t, ans;\nlong long m = 1;\nint main() {\n\tcin >> k >> b >> n >> t;\n\twhile (m <= t) m = m * k + b, ans++;\n\tif (n >= ans)\n\t\tcout << n - ans + 1 << endl;\n\telse\n\t\tcout << 0 << endl;\n\treturn 0;\n}	k, b, n, t, ans = integers\nassign 1 to m\nread k, b, n, t\nwhile m equal to or greater than t, assign m*k+b to m, increment ans\nif n >= ans\nprint n - ans + 1\notherwise\nprint 0 and a new line
int main() {\n\tdouble k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tint x = 0;\n\tdouble dub = (t * (k - 1) + b) / (b + k - 1);\n\tif (k == 1) {\n\t\tdub = (t - 1) / b;\n\t\tx = (int)dub;\n\t\tif (x > n) { x = n; }\n\t} else {\n\t\tfor (int i = 1; i <= n + 1; i++) {\n\t\t\tif (pow(k, i) >= (int)dub + 1) {\n\t\t\t\tx = i - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i == n + 1) { x = n; }\n\t\t}\n\t}\n\tint ans = n - x;\n\tcout << ans << endl;\n\treturn 0;\n}	declare double variables k, b, n and t\nread k, b, n and t\ndeclare integer x = 0\ndeclare double variable dub = (t *(k - 1) + b) / (b + k - 1)\nif k = 1\ndub = (t - 1) / b\nset value of x to dub casted to integer\nif x is greater than n\nelse\nfor i = 1 to n + 1 inclusive\nif pow(k, i) >= dub + 1\nset value of x to i - 1\nstop the loop\nif i = n + 1, assign value of n to x\ncreate integer ans = n - x\nprint ans
int main() {\n\tlong long c1, c2, x, k, i, b, n, t, cnt = 0;\n\tcin >> k >> b >> n >> t;\n\tc1 = b + t * (k - 1);\n\tc2 = b + k - 1;\n\tcnt = 1;\n\tx = n;\n\tif (k != 1) {\n\t\tfor (i = n; i >= 0; i--) {\n\t\t\tif (c1 >= cnt * c2)\n\t\t\t\tx = i;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t\tcnt *= k;\n\t\t}\n\t\tcout << x << endl;\n\t} else {\n\t\tfor (i = 0; i <= n; i++) {\n\t\t\tif (i * b >= 1 + n * b - t) break;\n\t\t}\n\t\tcout << i << endl;\n\t}\n\treturn 0;\n}	let c1, c2, x, k, i, b, n, t, cnt be long long with cnt = 0\nread k, b, n, t\nset c1 = b + t * (k - 1)\nset c2 = b + k - 1\nset cnt = 1\nset x = n\nif k not equal to 1 do the following\nfor i = n iterate while i is less than or equal to 0 having i decrease by 1 after each iteration\nif c1 is greater or equal to cnt * c2 do the following\nset x = i\nelse do the following\nbreak out of the iteration loop\nset cnt = cnt * k\nprint x and one newline\nelse do the following\nfor i = 0 to n inclusive\nif i * b is greater or equal to 1 + n * b - t break out of the iteration loop\nprint i and one newline
long long solve(long long k, long long b, long long n, long long t) {\n\tif (k == 1) {\n\t\tlong long low = -1, high = n;\n\t\twhile (high - low > 1) {\n\t\t\tlong long mid = (low + high) / 2;\n\t\t\tif (1 - t + b * (n - mid) <= 0) {\n\t\t\t\thigh = mid;\n\t\t\t} else {\n\t\t\t\tlow = mid;\n\t\t\t}\n\t\t}\n\t\treturn high;\n\t}\n\tlong long answ = n;\n\t__float128 pow = 1;\n\twhile (answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0) {\n\t\tpow *= k;\n\t\tansw--;\n\t}\n\treturn answ;\n}\nint main() {\n\tlong long k, b, n, t;\n\twhile (cin >> k >> b >> n >> t) { cout << solve(k, b, n, t) << endl; }\n\treturn 0;\n}	in the function solve that takes long long k, b, n, t and returns long long\nif k is 1\nlow, high = long long with low = -1, high = n\nwhile high - low > 1\nmid = long long with mid = (low + high) / 2\nif 1 - t + b * (n - mid) <= 0\nhigh = mid\nelse\nlow = mid\nreturn high\nansw = long long with answ = n\npow = __float128 with pow = 1\nwhile answ > 0 and (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0\npow = pow * k\ndecrement answ\nreturn answ\nk, b, n, t = long long\nwhile read k, b, n, t, print solve(k, b, n, t)
int main() {\n\tlong long int k, b, n, t, i, j, m = 0, ans, r, x = 1, xx = 0;\n\tcin >> k >> b >> n >> t;\n\tfor (i = 1;; i++) {\n\t\tr = (x * k) + b;\n\t\tif (r <= t)\n\t\t\tm++;\n\t\telse\n\t\t\tbreak;\n\t\tx = r;\n\t}\n\tans = n - m;\n\tans = max(xx, ans);\n\tcout << ans << endl;\n}	k, b, n, t, i, j, m, ans, r, x, xx = long long int with m = 0, x = 1, xx = 0\nread k, b, n, t\nfor i = 1 increment i\nr = (x * k) + b\nif r <= t\nincrement m\nelse\nbreak loop\nx = r\nans = n - m\nans = max of xx and ans\nprint ans
int main() {\n\tlong long int k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tlong long int num = 1;\n\tlong long int index = 0;\n\twhile (num <= t) {\n\t\tnum = k * num + b;\n\t\tindex++;\n\t}\n\tindex--;\n\tcout << max(0ll, n - index) << '\n';\n}	create long long integers k, b, n and t\nread k, b, n and t\ndeclare long long integer variable num = 1\ndeclare long long integer variable index = 0\nwhile num <= t\nnum = k * num + b\nincrement index\ndecrease index\nprint max of 0ll and n - index and '\n'
"const int M = 100 + 10;\nint main() {\n\tlong long int k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tif (k == 1) {\n\t\tlong long int z = 1 + n * b;\n\t\tif (z <= t) {\n\t\t\tcout << ""0"" << endl;\n\t\t} else {\n\t\t\tlong long int res = z - t;\n\t\t\tlong long int ans = res / b + (res % b != 0);\n\t\t\tcout << ans << endl;\n\t\t}\n\t} else {\n\t\tlong long int num1 = t * (k - 1) + b;\n\t\tlong long int num2 = k - 1 + b;\n\t\tlong long int num3 = num1 / num2;\n\t\tlong long int num = 1;\n\t\tint tm = 0;\n\t\twhile (num * k <= num3) {\n\t\t\tnum = num * k;\n\t\t\ttm++;\n\t\t}\n\t\tint m = n - tm;\n\t\tm = max(m, 0);\n\t\tcout << m << endl;\n\t}\n\treturn 0;\n}"	set constant integer M = 100 + 10\ncreate long long integer k, b, n, t\nread k, b, n, t\nif k = 1\nset z = 1 + n*b\nif z is equal to or less than t\nprint 0\notherwise\nset res = z - t\nans = res / b + (res modulo b different from 0)\nprint and and a new line\notherwise\nset long long integer num1 = t * (k - 1) + b\nnum2= k - 1 + b\nset num3 = num1/num2\nset num1 equal to 1\nset integer tm = 0\nwhile num*k is equal to or less than num3\nset num = num * k\nincrement tm\nset m = n - tm\nm = max between m and 0\nprint m
long long k, b, n, t, x = 1, ans;\nint main() {\n\tcin >> k >> b >> n >> t;\n\twhile (x <= t) x = x * k + b, ans++;\n\tcout << max(0ll, n - ans + 1) << endl;\n\treturn 0;\n}	create long long ans, set k, b, n, t, x to 1\nread k, b, n and t\nwhile x <=t, set x=x * k + b, increment ans\nprint max between 011 and n - ans + 1
int main() {\n\tlong long k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tlong long cnt = 1;\n\twhile (cnt <= t) {\n\t\tcnt = cnt * k + b;\n\t\tn--;\n\t}\n\tcout << max(0LL, n + 1) << endl;\n\treturn 0;\n}	k, b, n, t = long longs\nread k, b, n and t\ndeclare cnt as long long set to 1\nwhile c less than or equal to t\nset cnt to cnt * k + b\ndecrement n\nprint max(0LL, n + 1)
"long long bigmod(long long a, long long b, long long m) {\n\tif (b == 0) return 1 % m;\n\tlong long x = bigmod(a, b / 2, m);\n\tx = (x % m * x % m) % m;\n\tif (b % 2) x = (x % m * a % m) % m;\n\treturn x % m;\n}\nlong long po(long long a, long long b) {\n\tif (a == 1) return 1;\n\tlong long r = 1;\n\twhile (b--) r *= a;\n\treturn r;\n}\nint main() {\n\tlong long k, b, n, t, s = 0;\n\tcin >> k >> b >> n >> t;\n\tfor (int i = 0; i <= n; i++) {\n\t\tlong long v = s + po(k, i);\n\t\tif (v >= t) {\n\t\t\tif (v > t)\n\t\t\t\tcout << n - i + 1 << endl;\n\t\t\telse\n\t\t\t\tcout << n - i << endl;\n\t\t\treturn 0;\n\t\t}\n\t\ts += b * po(k, i);\n\t}\n\tputs(""0"");\n}"	"long long function bigmod with long long arguments a, b and m\nif b = 0\nx = bigmod of a, b / 2 and m\nx = (x % m * x % m) % m\nif b % 2) x = (x % m * a % m\nreturn x % m\nlong long function po with long long arguments a and b\nreturn 1 if a = 1\ndeclare long long r = 1\ndecrement b and loop, while b > 0; multiply r by a in that loop\nreturn r\ndeclare long long variables k, b, n, t and s where s = 0\nread k, b, n and t\nfor i = 0 to n inclusive\nassign value of s + po(k, i) to new long long v\nif v >= t\nif v is greater than t\nprint n - i + 1\nelse\nprint n - i\nincrease s by b * po(k, i)\nprint ""0"""
int main() {\n\tlong long k, b, n, t;\n\tcin >> k >> b >> n >> t;\n\tlong long sum = 1;\n\tint cnt = 0;\n\twhile (sum <= t) {\n\t\tsum = sum * k + b;\n\t\tcnt++;\n\t}\n\tif (cnt > n)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << n - cnt + 1 << endl;\n\treturn 0;\n}	k, b, n, t =integers\nRead k, b, n, t\nsum=integer with 1\ncnt=integer with 0\nwhile sum is less than or equal to t\nset sum to sum * k + b\nincrement cnt\nif cnt is greater than n\nprint 0 and a new line\nelse do the following\nprint n - cnt + 1 and a new line
long long solve(long long k, long long b, long long n, long long t) {\n\tif (k == 1) {\n\t\tlong long low = -1, high = n;\n\t\twhile (high - low > 1) {\n\t\t\tlong long mid = (low + high) / 2;\n\t\t\tif (1 - t + b * (n - mid) <= 0) {\n\t\t\t\thigh = mid;\n\t\t\t} else {\n\t\t\t\tlow = mid;\n\t\t\t}\n\t\t}\n\t\treturn high;\n\t}\n\tlong long answ = n;\n\t__float128 pow = 1;\n\twhile (answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0) {\n\t\tpow *= k;\n\t\tansw--;\n\t}\n\treturn answ;\n}\nint main() {\n\tlong long k, b, n, t;\n\twhile (cin >> k >> b >> n >> t) { cout << solve(k, b, n, t) << endl; }\n\treturn 0;\n}	long long function solve with long long arguments k, b, n and t\nif k = 1\ndeclare long longs low = -1 and high = n\nwhile high - low is greater than 1\ndeclare long long variable mid = (low + high) / 2\nif 1 - t + b * (n - mid) <= 0\nassign value of mid to high\nelse\nassign value of mid to low\nreturn high\ndeclare long long variable answ = n\ndeclare __float128 variable pow = 1\nwhile answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0\nmultiply pow by k\ndecrease answ\nreturn answ\ndeclare long long variables k, b, n and t\nwhile car read k, b, n and t, print solve(k, b, n, t)
"map<string, int> point, num_diff, num;\nstring s;\nstring name[56];\nbool cmp(string s1, string s2) {\n\tif (point[s1] != point[s2]) return point[s1] > point[s2];\n\tif (num_diff[s1] != num_diff[s2]) return num_diff[s1] > num_diff[s2];\n\treturn num[s1] > num[s2];\n}\nstring s1, s2;\nint n;\nint num1, num2;\nchar c;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> name[i]; }\n\tfor (int i = 1; i <= (n * (n - 1)) >> 1; i++) {\n\t\tcin >> s >> num1 >> c >> num2;\n\t\ts1 = s.substr(0, s.find(""-""));\n\t\ts2 = s.substr(s.find(""-"") + 1);\n\t\tif (num1 > num2) { point[s1] += 3; }\n\t\tif (num1 < num2) { point[s2] += 3; }\n\t\tif (num1 == num2) {\n\t\t\tpoint[s1]++;\n\t\t\tpoint[s2]++;\n\t\t}\n\t\tnum[s1] += num1;\n\t\tnum[s2] += num2;\n\t\tnum_diff[s1] += num1 - num2;\n\t\tnum_diff[s2] += num2 - num1;\n\t}\n\tsort(name + 1, name + n + 1, cmp);\n\tsort(name + 1, name + (n / 2 + 1));\n\tfor (int i = 1; i <= (n >> 1); i++) { cout << name[i] << endl; }\n\treturn 0;\n}"	point, num_diff and num are maps from string to int\ndeclare string variable s\nname is an array of strings with size 56\nboolean function cmp with string arguments s1 and s2\nif point[s1] != point[s2] return point[s1] > point[s2]\nif num_diff[s1] != num_diff[s2] return num_diff[s1] > num_diff[s2]\nreturn num[s1] > num[s2]\nlet s1 and s2 be strings\ndeclare integer variable n\nnum1 and num2 are integers\nc = character\nread n\nfor i = 1 to n inclusive read name[i]\nfor integer i = 1 to (n * (n - 1)) >> 1 inclusive\nread s, num1, c and num2\ns1 = substring of s from the start to the first character '-'\ns2 = substring of s from the first character '-' to the end\nif num1 is greater than num2, add 3 to point[s1]\nif num1 is less than num2, add 3 to point[s2]\nif num1 = num2\nincrease point[s1]\nincrease point[s2]\nincrease num[s1] by num1\nincrease num[s2] by num2\nincrease num_diff[s1] by num1 - num2\nincrease num_diff[s2] by num2 - num1\nsort name from name + 1 to name + n + 1 using comparator cmp\nsort name from name + 1 to name + (n / 2 + 1) using comparator cmp\nfor integer i = 1 to (n >> 1) inclusive print name[i] and a new line
"map<string, int> scored, conceed, points;\nvector<string> vec, a;\nbool cmp(string a, string b) {\n\tif (points[b] > points[a])\n\t\treturn 1;\n\telse if (points[b] < points[a])\n\t\treturn 0;\n\telse {\n\t\tint dif1 = scored[a] - conceed[a];\n\t\tint dif2 = scored[b] - conceed[b];\n\t\tif (dif1 < dif2)\n\t\t\treturn 1;\n\t\telse if (dif1 > dif2)\n\t\t\treturn 0;\n\t\telse {\n\t\t\tif (scored[a] > scored[b])\n\t\t\t\treturn 0;\n\t\t\telse if (scored[a] < scored[b])\n\t\t\t\treturn 1;\n\t\t}\n\t}\n}\nint main() {\n\tint n = 0;\n\tstring st;\n\tcin >> n;\n\tint m = n, k = n / 2;\n\twhile (m--) {\n\t\tcin >> st;\n\t\tvec.push_back(st);\n\t}\n\tn = (n * n - 1) / 2;\n\tst = """";\n\tgetchar();\n\twhile (n--) {\n\t\tint i;\n\t\tstring team1 = """", team2 = """";\n\t\tgetline(cin, st);\n\t\tfor (i = 0; i < st.size(); i++) {\n\t\t\tif (st[i] == '-') {\n\t\t\t\ti++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tteam1 += st[i];\n\t\t}\n\t\tfor (; i < st.size(); i++) {\n\t\t\tif (st[i] == ' ') {\n\t\t\t\ti++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tteam2 += st[i];\n\t\t}\n\t\tint j = 1, sum1 = 0;\n\t\tfor (; i < st.size(); i++) {\n\t\t\tif (st[i] == ':') {\n\t\t\t\ti++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint c = st[i] - 48;\n\t\t\tsum1 = (sum1 * j) + c;\n\t\t\tj *= 10;\n\t\t}\n\t\tscored[team1] += sum1;\n\t\tconceed[team2] += sum1;\n\t\tint sum2 = 0;\n\t\tj = 1;\n\t\tfor (; i < st.size(); i++) {\n\t\t\tint c = st[i] - 48;\n\t\t\tsum2 = (sum2 * j) + c;\n\t\t\tj *= 10;\n\t\t}\n\t\tscored[team2] += sum2;\n\t\tconceed[team1] += sum2;\n\t\tif (sum1 > sum2)\n\t\t\tpoints[team1] += 3;\n\t\telse if (sum1 < sum2)\n\t\t\tpoints[team2] += 3;\n\t\telse {\n\t\t\tpoints[team1]++;\n\t\t\tpoints[team2]++;\n\t\t}\n\t}\n\tsort(vec.begin(), vec.end(), cmp);\n\tfor (int i = vec.size() - 1; i >= k; i--) a.push_back(vec[i]);\n\tsort(a.begin(), a.end());\n\tfor (int i = 0; i < a.size(); i++) cout << a[i] << endl;\n}"	"scored, conceed, points are maps of string to int\nvec and a are vectors of strings\nboolean function cmp with string arguments a and b\nif points[b] is greater than points[a]\nreturn 1\nelse if points[b] is less than points[a]\nelse\ndif1 is an integer = scored[a] - conceed[a]\ndif2 is an integer = scored[b] - conceed[b]\nif dif1 is less than dif2\nreturn 1\nelse if dif1 is greater than dif2\nelse\nif scored[a] is greater than scored[b]\nelse if scored[a] is less than scored[b]\nreturn 1\nset integer n to 0\nst = string\nread n\nm and k are integers with m = n and k = n / 2\nwhile m--\nread st\npush st into vec\nn = (n * n - 1) / 2\nst = """"\nread character from the input\nwhile n--\nlet i be integer\nteam1 and team2 are empty strings\nread line from input into st\nfor i = 0 to length of st exclusive\nif st[i] is equal to '-'\nincrease i by one\nbreak the loop\nincrease team1 by st[i]\nloop through i while i < length of st, incrementing i\nif st[i] is equal to ' '\nincrease i\nstop the loop\nincrease team2 by st[i]\nlet j and sum1 be integers with j = 1 and sum1 = 0\nloop through i while i < length of st, incrementing i\nif st[i] is equal to ':'\nincrease i by one\nbreak the loop\ncreate integer c with value st[i] - 48\nsum1 = (sum1 * j) + c\nmultiply j by 10\nincrease scored[team1] by sum1\nincrease conceed[team2] by sum1\ncreate integer sum2 with value 0\nset value of j to 1\nloop through i while i < length of st, incrementing i\ncreate integer c with value st[i] - 48\nsum2 = (sum2 * j) + c\nmultiply j by 10\nincrease scored[team2] by sum2\nincrease conceed[team1] by sum2\nif sum1 is greater than sum2\nincrease points[team1] by 3\nelse if sum1 is less than sum2\nincrease points[team2] by 3\nelse\nincrement points[team1]\nincrement points[team2]\nsort vec using cmp as comparator function\nfor i = length of vec - 1 to k inclusive, decrementing i, push i into vec\nsort a\nfor i = 0 to length of a exclusive print a[i]"
map<string, int> pt, sc, mi;\nstring name[50];\nbool cmp(string s1, string s2) {\n\tif (pt[s1] != pt[s2]) return pt[s1] > pt[s2];\n\tif (mi[s1] != mi[s2])\n\t\treturn mi[s1] > mi[s2];\n\telse\n\t\treturn sc[s1] > sc[s2];\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> name[i];\n\tcin.ignore();\n\tfor (int i = 0; i < n * (n - 1) / 2; i++) {\n\t\tstring A, B;\n\t\tgetline(cin, A, '-');\n\t\tgetline(cin, B, ' ');\n\t\tchar ch;\n\t\tint pA, pB;\n\t\tcin >> pA >> ch >> pB;\n\t\tcin.ignore();\n\t\tif (pA < pB) pt[B] += 3;\n\t\tif (pA > pB) pt[A] += 3;\n\t\tif (pA == pB) pt[A]++, pt[B]++;\n\t\tsc[A] += pA;\n\t\tmi[A] += pA - pB;\n\t\tsc[B] += pB;\n\t\tmi[B] += pB - pA;\n\t}\n\tsort(name, name + n, cmp);\n\tsort(name, name + n / 2);\n\tfor (int i = 0; i < n / 2; i++) cout << name[i] << endl;\n\treturn 0;\n}	create maps pt, sc, mi from string to integer\ncreate string array name with size 50\ndeclare cmp with strings s1, s2 as arguments, returning boolean\nif pt[s1] is not pt[s2], return pt[s1] is greater than pt[s2] from function\nif mi[s1] is not mi[s2]\nreturn mi[s1] is greater than mi[s2] from function\nelse\nreturn sc[s1] is greater than sc[s2] from function\ncreate integer n\nread n\nfor i = 0 to n exclusive, read name[i]\ndiscard characters from stdin\nfor i = 0 to n * (n-1) /2 exclusive\ncreate strings A, B\nread line from cin to A with '-' as delimiter\nread line from cin to B with ' ' as delimiter\ncreate character ch\ncreate integers pA, pB\nread pA read ch read pB\ndiscard characters from stdin\nif pA is less than pB, increment pt[B] by 3\nif pA is greater than pB, increment pt[A] by 3\nif pA is pB, increment pt[A], increment pt[B]\nincrement sc[A] by pA\nincrement mi[A] by pA - pB\nincrement sc[B] by pB\nincrement mi[B] by pB - pA\nsort elements from name to name + n using cmp function to compare\nsort elements from name to name + n / 2\nfor i = 0 to n / 2 exclusive, print name[i] print newline
int n, wp[55], dg[55], sg[55];\nstring name[55];\nbool cmp(int a, int b) {\n\tif (wp[a] != wp[b]) { return wp[a] > wp[b]; }\n\tif (dg[a] != dg[b]) { return dg[a] > dg[b]; }\n\treturn sg[a] > sg[b];\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> name[i]; }\n\tfor (int i = 0; i < n * (n - 1) / 2; i++) {\n\t\tstring s, a, b;\n\t\tint p, q;\n\t\tchar c;\n\t\tcin >> s >> p >> c >> q;\n\t\ta = s.substr(0, s.find('-'));\n\t\tb = s.substr(s.find('-') + 1);\n\t\tint a1 = find(name, name + n, a) - name, b1 = find(name, name + n, b) - name;\n\t\tif (p > q) {\n\t\t\twp[a1] += 3;\n\t\t} else if (q == p) {\n\t\t\twp[a1]++;\n\t\t\twp[b1]++;\n\t\t} else {\n\t\t\twp[b1] += 3;\n\t\t}\n\t\tdg[a1] += p - q;\n\t\tsg[a1] += p;\n\t\tdg[b1] += q - p;\n\t\tsg[b1] += q;\n\t}\n\tint a[55];\n\tfor (int i = 0; i < n; i++) { a[i] = i; }\n\tsort(a, a + n, cmp);\n\tstring ans[55];\n\tfor (int i = 0; i < n / 2; i++) { ans[i] = name[a[i]]; }\n\tsort(ans, ans + n / 2);\n\tfor (int i = 0; i < n / 2; i++) { cout << ans[i] << endl; }\n\treturn 0;\n}	n=int, wp, dg and sg=array of 55 int\nname=array of 55 string\nfunction cmp (get int a and b, return bool)\nif wp[a] is not wp[b] return wp[a] > wp[b]\nif dg[a] is not dg[b] return dg[a] > dg[b]\nreturn sg[a] > sg[b]\nread n\nfor i=0 to n exclusive read name[i]\nfor i=0 to n*(n-1)/2 exclusive\ns,a,b=string\np,q=int\nc=char\nread s,p,c,q\na=left portion of s before '-'\nb=right portion of s after '-'\na1=find(name, name+n, a)-name, b1=find(name, name+n, b)-name\nif p>q\nadd 3 to wp[a1]\nelse if q is p\nincrement wp[a1]\nincrement wp[b1]\nelse\nadd 3 to wp[b1]\nadd p-q to dg[a1]\nadd p to sg[a1]\nadd q-p to dg[b1]\nadd q to sg[b1]\na=array of 55 int\nfor i=0 to n exclusive a[i]=i\nsort first n items of a using function cmp\nans=array of 55 string\nfor i=0 to n/2 exclusive ans[i]=name[a[i]]\nsort first n/2 items of ans\nfor i=0 to n/2 exclusive print ans[i]
string nam[50];\nint n, wp[50], dg[50], sg[50];\nbool comp(int a, int b) {\n\tif (wp[a] != wp[b])\n\t\treturn wp[a] > wp[b];\n\telse if (dg[a] != dg[b])\n\t\treturn dg[a] > dg[b];\n\telse\n\t\treturn sg[a] > sg[b];\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < (int)(n); i++) cin >> nam[i];\n\tfor (int i = 0; i < (int)(n * (n - 1) / 2); i++) {\n\t\tstring tmp, a, b;\n\t\tint p, q;\n\t\tchar c;\n\t\tcin >> tmp >> p >> c >> q;\n\t\ta = tmp.substr(0, tmp.find('-'));\n\t\tb = tmp.substr(tmp.find('-') + 1);\n\t\tint ai = find(nam, nam + n, a) - nam, bi = find(nam, nam + n, b) - nam;\n\t\tif (p > q)\n\t\t\twp[ai] += 3;\n\t\telse if (p < q)\n\t\t\twp[bi] += 3;\n\t\telse\n\t\t\twp[ai]++, wp[bi]++;\n\t\tdg[ai] += p - q, sg[ai] += p, dg[bi] += q - p, sg[bi] += q;\n\t}\n\tint a[50];\n\tfor (int i = 0; i < (int)(n); i++) a[i] = i;\n\tsort(a, a + n, comp);\n\tstring names[50];\n\tfor (int i = 0; i < (int)(n / 2); i++) names[i] = nam[a[i]];\n\tsort(names, names + n / 2);\n\tfor (int i = 0; i < (int)(n / 2); i++) cout << names[i] << endl;\n\treturn 0;\n}	create string array nam of size 50\nlet int n and int arrays wp of size 50, dg of size 50, and sg of size 50\ndeclare comp taking in ints a and b and returning bool\nif wp[a] is not equal to wp[b]\nreturn wp[a] > wp[b]\nelse if dg[a] is not equal to dg[b]\nreturn the result of dg[a] > dg[b]\nelse do\nreturn sg[a] > sg[b]\nread n\nfor i = 0 to n exclusive, read nam[i]\nfor i = 0 to n * (n - 1) / 2 exclusive\ncreate strings tmp, a, and b\nmake ints p and q\ncreate char c\nread tmp, p, c, and q\nset a to tmp.substr(0, tmp.find('-'))\nset b to tmp.substr(tmp.find('-') + 1)\ncreate ints ai = find(nam, nam + n, a) - nam and bi = find(nam, nam + n, b) - nam\nif p is more than q\nset wp[ai] to wp[ai] + 3\nelse if p is less than q\nset wp[bi] to wp[bi] + 3\nelse\nadd 1 to wp[ai] and ap[bi]\nset dg[ai] to ad[ai] + p - q, add p to sg[ai], add q - p to dg[bi], and add q to sg[bi]\ncreate integer array a of size 50\nfor i = 0 to n exclusive, set a[i] to i\nsort a using a + n and comp\ncreate string array names of size 50\nfor i = 0 to n / 2 exclusive, set names[i] to nam[a[i]]\nsort names using names + n / 2\nfor i = 0 to n / 2 exclusive, print names[i]
"int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n\tint l = max(1, x - k), r = min(x + k, n), t;\n\tfor (int i = l; i <= r; i++) {\n\t\tt = k - abs(i - x);\n\t\tif (y - t > 0 && !v[i][y - t]) {\n\t\t\ta = i;\n\t\t\tb = y - t;\n\t\t\treturn 1;\n\t\t}\n\t\tif (y + t <= m && !v[i][y + t]) {\n\t\t\ta = i;\n\t\t\tb = y + t;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main() {\n\tcin >> n >> m >> k;\n\tfor (int i = 0; i < k; i++) {\n\t\tcin >> x >> y;\n\t\tfor (int j = -2; j <= 2; j++)\n\t\t\tfor (int k = -2; k <= 2; k++) {\n\t\t\t\tif (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n\t\t\t\td[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n\t\t\t}\n\t\twhile (!solve(x, y, d[x][y])) d[x][y]++;\n\t\tv[a][b] = 1;\n\t\tcout << a << "" "" << b << endl;\n\t}\n}"	"declare integers n, m, a, b and 2d array of integers v of size 2100 by 2100\ndeclare integers k, x, y and 2d array of integers d of size 2100 by 2100\nboolean function solve with integer arguments x, y and k\ncreate ingteger variables t, l = max of 1 and x - k; r = min of x + k and n\nfor integer i = l to r inclusive\nset t to k - abs(i - x)\nif y - t is greater than 0 && !v[i][y - t]\nset a to i\nset value of b to y - t\nreturn 1\nif y + t <= m && !v[i][y + t]\na = i\nb = y + t\nreturn 1\nread n, m and k\nfor i = 0 to k exclusive\nread x and y\nfor integer j = -2 to 2 inclusive\nfor integer k = -2 to 2 inclusive\nif x + j < 1 || x + j > n || y + k < 1 || y + k is greater than m, continue the loop\nd[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k))\nwhile solve(x, y, d[x][y]) is false, increment d[x][y]\nv[a][b] = 1\nprint a, "" "", b and a new line"
"int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n\tint l = max(1, x - k), r = min(x + k, n), t;\n\tfor (int i = l; i <= r; i++) {\n\t\tt = k - abs(i - x);\n\t\tif (y - t > 0 && !v[i][y - t]) {\n\t\t\ta = i;\n\t\t\tb = y - t;\n\t\t\treturn 1;\n\t\t}\n\t\tif (y + t <= m && !v[i][y + t]) {\n\t\t\ta = i;\n\t\t\tb = y + t;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main() {\n\tcin >> n >> m >> k;\n\tfor (int i = 0; i < k; i++) {\n\t\tcin >> x >> y;\n\t\tfor (int j = -2; j <= 2; j++)\n\t\t\tfor (int k = -2; k <= 2; k++) {\n\t\t\t\tif (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n\t\t\t\td[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n\t\t\t}\n\t\twhile (!solve(x, y, d[x][y])) d[x][y]++;\n\t\tv[a][b] = 1;\n\t\tcout << a << "" "" << b << endl;\n\t}\n}"	"create integers n, m, a, b, create 2d integer array v with size 2100 by 2100\ncreate integers k, x, y, create 2d integer array d with size 2100 by 2100\ndeclare solve with integers x, y, k as arguments, returning boolean\ncreate integers l, r, t with l = maximum of ( 1 and x - k ), r = minimum of ( x + k and n )\nfor i = l to r inclusive\nset t to k - absolute value of ( i - x )\nif y - t is greater than 0 and v[i][y-t] is false\nset a to i\nset b to y - t\nreturn 1 from function\nif y + t is less than or equal to m and v[i][y+t] is false\nset a to i\nset b to y + t\nreturn 1\nread n read m read k\nfor i = 0 to k exclusive\nread x read y\nfor j = -2 to 2 inclusive\nfor k = -2 to 2 inclusive\nif x + j is less than 1 or x + j is greater than n or y + k is less than 1 or y + k is greater than m, break current loop iteration\nset d[x][y] to maximum of ( d[x][y] and d[x+j][y+k] - absolute value of j - absolute value of k )\nwhile result of run solve with x, y, d[x][y] as arguments is false, increment d[x][y]\nset v[a][b] to 1\nprint a print "" "" print b print newline"
"int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n\tint l = max(1, x - k), r = min(x + k, n), t;\n\tfor (int i = l; i <= r; i++) {\n\t\tt = k - abs(i - x);\n\t\tif (y - t > 0 && !v[i][y - t]) {\n\t\t\ta = i;\n\t\t\tb = y - t;\n\t\t\treturn 1;\n\t\t}\n\t\tif (y + t <= m && !v[i][y + t]) {\n\t\t\ta = i;\n\t\t\tb = y + t;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main() {\n\tcin >> n >> m >> k;\n\tfor (int i = 0; i < k; i++) {\n\t\tcin >> x >> y;\n\t\tfor (int j = -2; j <= 2; j++)\n\t\t\tfor (int k = -2; k <= 2; k++) {\n\t\t\t\tif (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n\t\t\t\td[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n\t\t\t}\n\t\twhile (!solve(x, y, d[x][y])) d[x][y]++;\n\t\tv[a][b] = 1;\n\t\tcout << a << "" "" << b << endl;\n\t}\n}"	"create integers n, m, a and b, and 2d array of integers v 2100 by 2100\ncreate integers k, x and y, and 2d array of integers d 2100 by 2100\nboolean method solve with integer arguments x, y and k\ndeclare integers t, l = max of 1 and x - k and r = min of x + k and n\nfor integer i = l to r inclusive\nset value of t to k - abs(i - x)\nif y - t is greater than 0 and !v[i][y - t]\nset a to i\nset value of b to y - t\nreturn 1\nif y + t <= m and !v[i][y + t]\nassign value of i to the a\nset b to y + t\nreturn 1\nread n, m and k\nfor i = 0 to k exclusive\nread x and y\nfor integer j = -2 to 2 inclusive\nfor integer k = -2 to 2 inclusive\nif x + j < 1 or x + j > n or y + k < 1 or y + k > m, continue the loop\nset d[x][y] = max of d[x][y] and d[x + j][y + k] - abs(j) - abs(k))\nwhile solve(x, y, d[x][y]) is 0, increment d[x][y]\nset value of v[a][b] to 1\nprint a, "" "", b and a new line"
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	"a = array of pair of size 200020 of int and int\nn, k, c, x, y, m, z, ac, t, b, i = long long\nfor (read n, increment i, decrement n\nfor read k, c, x, y, m and t = 0, decrement k, z = max(z, t)\nif ac <= 200000, a[increment ac] = make_pair(pair of int to int (t, c), i)\nb = (c * x + y) modulo m\nif b < c and k, increment t\nc = b\nprint z\nif ac < 200001\nsort a and a + ac\nfor i = 0 to ac, print first.second of a[i],"" "", second of a[i] + 1"
"long long a1, a2, n, k, second = 0, ans = 0, ans1;\nvector<pair<long long, pair<long long, long long>>> h;\nvoid read(void) {\n\tcin >> n;\n\tfor (int i = 0, x, y, m; i < n; ++i) {\n\t\tcin >> k;\n\t\tsecond += k;\n\t\tcin >> a1;\n\t\tlong long t = a1;\n\t\tcin >> x >> y >> m;\n\t\th.push_back(make_pair(0, make_pair(a1, i + 1)));\n\t\tans1 = 0;\n\t\tfor (int j = 1; j < k; ++j) {\n\t\t\ta2 = (a1 * x + y) % m;\n\t\t\tif (a2 < a1) ans1++;\n\t\t\ta1 = a2;\n\t\t\tt = max(t, a1);\n\t\t\tif (h.size() <= 200000) h.push_back(make_pair(ans1, make_pair(a1, i + 1)));\n\t\t}\n\t\tans = max(ans, ans1);\n\t}\n\tsort(h.begin(), h.end());\n\tcout << ans << ""\n"";\n\tif (second <= 200000)\n\t\tfor (int i = 0; i < second; ++i) cout << h[i].second.first << "" "" << h[i].second.second << ""\n"";\n}\nint main() {\n\tread();\n\treturn 0;\n}"	a1, a2, n, k, second, ans, ans1 = long long with second = 0 and ans = 0\nh = pair of long long and pair of long long and long long vector\nin function read\nread n\nx, y, m = int then for i = 0 to n\nread k\nadd k to second\nread a1\nt = long long with t = a1\nread x then y then m\nappend make_pair of 0 and make_pair of a1 and i + 1 to h\nset ans1 to 0\nfor j = 1 to k\nset a2 to (a1 * x + y) mod m\nif a2 is less than a1 then increment ans1\nset a1 to a2\nset t to max of t and a1\nif size of h is less or equal to 200000 then append make_pair of ans1 and make_pair of a1 and i + 1 to h\nset ans to max of ans and ans1\nsort vector h\nprint ans\nif second is less or equal to 200000\nfor i = 0 to second print h[i].second.first and h[i].second.second\ncall read
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	a = pair of pair of int and int and int of size 200020\nn, k, c, x, y, m, z, ac, t, b, i = long long\nread n then loop n times decrementing n and incrementing i each time\nread k then c then x then y then m and set t to 0 then loop k times decrementing k and setting z to max of z and t each time\nif ac is less or equal to 200000 then set a[ac] to value of make_pair of pair of int and int of t and c and i then increment ac\nset b to (c * x + y) mod m\nif b is less than c and k is not 0 then increment t\nset c to b\nprint z\nif ac is less than 200001\ncall sort on a and a + ac\nfor i = 0 to ac print a[i].first.second and a[i].second + 1
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	let a = array of integers of length 200020, pair of integets\nlet n, k, c, x, y, m, z, ac, t, b, i be long integers\nfor read n, n is decreased by 1, i is increased by 1\nfor read the values k, c, x, y, m, t , t = 0 , k value is decreased by 1, z = maximum of z and t\nif ac <= 200000, a[ac++] = make_pair(pair<int, int>(t, c), i\nlet the value of b is equal to c * x + y modulo m\nif b is less than c and k, increase t by 1\nthe value of b is assigned to c\nprint z and newline\nif ac is less than 200001\nsort the values a and a + ac\nfor i = 0 to ac exclusive, print a[i].first.second and a[i].second + 1 and newline
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	"create pair array a with size 200020 with pair of ( pair of ( integer and integer) and integer )\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\nfor read n, decrement n, incrementing i\nfor read k read c read x read y read m, t = 0, deecrement k, setting z to maximum of z and t\nif ac is less than or equal to 200000, set a[increment ac] to make pair from ( pair of ( integer and integer ) initialized with ( t, c ), and integer )\nset b to (c * x + y) % m\nif b is less than c and k, increment t\nset c to b\nprint z print newline\nif ac is less than 200001\nsort elements from a to a + ac\nfor i = 0 to ac exclusive, print second element of first element of a[i] print "" "" print second element of a[i] + 1 print newline"
"int main() {\n\tlong long n, count = 0;\n\tcin >> n;\n\tconst int max_i = 2e5;\n\tint counter = 0;\n\ttuple<int, int, int> data[max_i + 9];\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long k, a0, x, y, m, t = 0, a = 0;\n\t\tcin >> k >> a0 >> x >> y >> m;\n\t\tfor (int j = 0; j < k; j++) {\n\t\t\tif (counter <= max_i) { data[counter++] = make_tuple(t, a0, i); }\n\t\t\ta = (a0 * x + y) % m;\n\t\t\tif (a < a0 && j != k - 1) { t++; }\n\t\t\ta0 = a;\n\t\t}\n\t\tcount = max(count, t);\n\t}\n\tcout << count << endl;\n\tif (counter <= max_i) {\n\t\tsort(data, data + counter);\n\t\tfor (int i = 0; i < counter; i++) { cout << get<1>(data[i]) << "" "" << get<2>(data[i]) + 1 << endl; }\n\t}\n}"	"create long longs n, count with count = 0\nread n\ncreate constant integer max_i with max_i = 2e5\ncreate integer counter with counter = 0\ncreate tuple array data with integer, integer, integer, with size max_i + 9\nfor i = 0 to n exclusive\ncreate long longs k, a0, x, y, m, t, a, with t = 0, a = 0\nread k read a0 read x read y read m\nfor j = 0 to k exclusive\nif counter is less than or equal to max_i, set data[increment counter] to make tuple from t, a0, i\nset a to (a0 * x + y) % m\nif a is less than a0 and j is not k - 1, increment t\nset a0 to a\nset count to maximum of count and t\nprint count print newline\nif counter is less than or equal to max_i\nsort elements from data to data + counter\nfor i = 0 to counter exclusive, print get element 1 from data[i] print "" "" print get element 2 from data[i] + 1 print newline"
"const int MAX = 2e5;\npair<pair<long long, long long>, long long> a[MAX + 9];\nlong long n, k, a0, x, y, m, ans, cnt, t, tmp;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> k >> a0 >> x >> y >> m, t = 0;\n\t\tfor (int j = 0; j < k; j++) {\n\t\t\tif (cnt <= MAX) a[cnt++] = {{t, a0}, i};\n\t\t\ttmp = (a0 * x + y) % m;\n\t\t\tif (tmp < a0 && j != k - 1) t++;\n\t\t\ta0 = tmp;\n\t\t}\n\t\tans = max(ans, t);\n\t}\n\tcout << ans << '\n';\n\tif (cnt <= MAX) {\n\t\tsort(a, a + cnt);\n\t\tfor (int i = 0; i < cnt; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << '\n';\n\t}\n}"	MAX = const int with MAX = 2e5\na = pair of pair of long long and long long and long long array of size MAX + 9\nn, k, a0, x, y, m, ans, cnt, t, tmp = long long\nread n\nfor i = 0 to n\nread k then a0 then x then y then m then set t to 0\nfor j = 0 to k\nif cnt is less or equal to MAX then set a[cnt] to {{t, a0}, i} then increment cnt\nset tmp to (a0 * x + y) mod m\nif tmp is less than a0 and j is not k - 1 increment t\nset a0 to tmp\nset ans to max of ans and t\nprint ans\nif cnt is less than MAX\ncall sort on a and a + cnt\nfor i = 0 to cnt print a[i].first.second and a[i].second + 1
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	"create pair a with pair of ( integer, integer), integer, with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\nfor read n to decrement n, incrementing i\nfor read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\nif ac is less than or equal to 200000, set a[increment ac] to create pair from ( pair of integer and integer initialized with ( t, c ) and i\nset b to (c * x + y) % m\nif b is less than c and k, increment t\nset c to b\nprint z print newline\nif ac is less than 200001\nsort elements from a to a + ac\nfor i = 0 to ac exclusive, print second element of first element of a[i] print "" "" print second element of a[i] + 1 print newline"
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	"create pair of ( pair of ( integer and integer ) and integer ) array a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\nfor read n to decrement n, incrementing i\nfor read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\nif ac is less than or equal to 200000, set a[increment ac] to make pair of ( pair of ( integer and integer) initialized with (t, c ) and i )\nset b to (c * x + y) % m\nif b is less than c and k, increment t\nset c to b\nprint z print newline\nif ac is less than 200001\nsort elements from a to a + ac\nfor i = 0 to ac exclusive, print second element of first element of a[i] print "" "" print second element of a[i] + 1 print newline"
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	"create pair of ( pair of ( integer, integer ), integer ) array a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\nfor read n to derement n, incrementing i\nfor read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\nif ac is less than or equal to 200000 set a[increment ac] to make pair from ( pair of (integer, integer ) initialized with (t, c ), i )\nset b to (c * x + y) % m\nif b is less than c and k, increment t\nset c to b\nprint z print newline\nif ac is less than 200001\nsort elements from a to a + ac\nfor i = 0 to ac exclusive, print second element of first element of a[i] print "" "" print second element of a[i] + 1 print newline"
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	"create pair array of pair of ( pair of ( integer, integer ), integer ) a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\nfor read n, decrement n, incrementing i\nfor read k read c read x read y read m, t = 0, to decrement k, setting z to maximum of z and t\nif ac is less than or equal to 200000, set a[increment ac] to make pair with ( (pair of integer, integer initialized with ( t, c ) ), i\nset b to (c * x + y) % m\nif b is less than c and k, increment t\nset c to b\nprint z print newline\nif ac is less than 200001\nsort elements from a to a + ac\nfor i = 0 to ac exclusive, print second element of first element of a[i] print "" "" print second element of a[i] + 1 print newline"
"pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n\tfor (cin >> n; n--; i++)\n\t\tfor (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n\t\t\tif (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n\t\t\tb = (c * x + y) % m;\n\t\t\tif (b < c && k) t++;\n\t\t\tc = b;\n\t\t}\n\tcout << z << endl;\n\tif (ac < 200001) {\n\t\tsort(a, a + ac);\n\t\tfor (int i = 0; i < ac; i++) cout << a[i].first.second << "" "" << a[i].second + 1 << endl;\n\t}\n}"	"create pair array a with size 200020 with pair of ( pair of (integer and integer) and integer )\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\nfor read n, decrement n, incrementing i\nfor read k read c read x read y read m, t = 0, decrement k, setting z to maximum of z and t\nif ac is less than or equal to 200000, set a[increment ac] to new pair from ( pair of ( integer and integer ) initialized with (t, c) and i )\nset b to (c * x + y) % m\nif b is less than c and k, increment t\nset c to b\nprint z print newline\nif ac is less than 200001\nsort elements from a to a + ac\nfor i = 0 to ac exclusive, print second element of first element of a[i] print "" "" print second element of a[i] + 1 print newline"
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tif (b > c) { swap(b, c); }\n\tcout << (2 * a + b - 1) * b + (c - b - 1) * (a + b - 1) << endl;\n\treturn 0;\n}	create integers a, b and c\nread input to a, b and c\nif b is greater than c, swap b and c\nprint (2 * a + b - 1) * b + (c - b - 1) * (a + b - 1)
const int oo = 1e9;\nint main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tint ans = b * c + (a - 1) * (b + c - 1);\n\tcout << ans << '\n';\n\treturn 0;\n}	oo = constant integer = 1e9\na, b, c = integer\nread a, b, c\nans = integer = b * c + (a - 1) * (b + c - 1)\nprint ans
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << a * b + b * c + c * a - (a + b + c) + 1 << endl;\n\treturn 0;\n}	a, b, c =integers\nRead a, b, c\nprint a * b + b * c + c * a - (a + b + c) + 1 and a new line
long long x, y, z;\nint main() {\n\tcin >> x >> y >> z;\n\tcout << x * y + y * z + x * z - x - z - y + 1 << endl;\n\treturn 0;\n}	declare long longs x, y and z\nread x, y and z\nprint x * y + y * z + x * z - x - z - y + 1
int gcd(int a, int b) {\n\treturn b ? gcd(b, a % b) : a;\n}\nint main() {\n\tint n, m, c;\n\tcin >> n >> m >> c;\n\tcout << n * m * c - (n - 1) * (m - 1) * (c - 1) << endl;\n}	let gcd be a function which accepts integers a and b\nreturn gcd(b, a modulo b) if b else a\nlet n, m, c be integers\nread n, m, c\nprint n * m * c - (n - 1) * (m - 1) * (c - 1) and newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << a * b + b * c + a * c - a - b - c + 1 << endl;\n\treturn 0;\n}	create integers a, b, c\nread a read b read c\nprint a * b + b * c + a * c - a - b - c + 1 print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << a * b + b * c + c * a - a - b - c + 1 << endl;\n\treturn 0;\n}	create integers a, b, c\nread a read b read c\nprint a * b + b * c + c * a - a - b - c + 1 print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << a * b + b * c + c * a - a - b - c + 1 << endl;\n\treturn 0;\n}	let a, b, c be int\nread a and b and c\nprint a * b + b * c + c * a - a - b - c + 1
int a, b, c;\nint main() {\n\tcin >> a >> b >> c;\n\tcout << a * b + b * c + c * a - a - b - c + 1 << endl;\n}	create integers a, b, c\nread a read b read c\nprint a * b + b * c + c * a - a - b - c + 1 print newline
int main() {\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tlong long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n\tcout << ans << endl;\n\treturn 0;\n}	create long longs a, b, c\nread a read b read c\ncreate long long ans with ans = (c + a - 1) * (b + a - 1) - a * (a - 1)\nprint ans print newline
const long long OO = 1e5 + 555;\nlong long rakm(char x) {\n\treturn x - 48;\n}\nchar _7rf(long long x) {\n\treturn x + 48;\n}\nbool odd(long long x) {\n\treturn x % 2;\n}\nbool even(long long x) {\n\treturn 1 - x % 2;\n}\nlong long factorial(long long x) {\n\tif (x == 0 || x == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn x * factorial(x - 1);\n\t}\n}\nlong long ss(long long x) {\n\tlong long sum = 0;\n\twhile (x > 0) {\n\t\tsum += x % 10;\n\t\tx /= 10;\n\t}\n\treturn sum;\n}\nlong long a3ks(long long x) {\n\tlong long b = 0, u = x;\n\twhile (u > 0) {\n\t\tb = (b * 10) + u % 10;\n\t\tu /= 10;\n\t}\n\treturn b;\n}\nbool prime(long long x) {\n\tfor (int i = 2; i < x; i++) {\n\t\tif (x % i == 0) { return 0; }\n\t}\n\treturn 1;\n}\nint main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) << endl;\n}	create constant long long OO with OO = 1e5 + 555\ndeclare rakm with character x as argument, returning long long\nreturn x - 48 from function\ndeclare _7rf with long long x as argument, returning character\nreturn x + 48 from function\ndeclare odd with long long x as argument, returning boolean\nreturn x % 2\ndeclare even with long long x as argument, returning boolean\nreturn 1 - x % 2\ndeclare factorial with long long x as argument, returning long long\nif x is 0 or x is 1\nreturn 1 from function\nelse\nreturn x * result of run factorial with x - 1 as argument\ndeclare ss with long long x as argument, returning long long\ncreate long long sum with sum = 0\nwhile x is greater than 0\nincrement sum by x % 10\nset x to x / 10\nreturn sum from function\ndeclare a3ks with long long x as argument, returning long long\ncreate long longs b, u, with b = 0, u = x\nwhile u is greater than 0\nset b to ( b * 10 ) + u % 10\nset u to u / 10\nreturn b from function\ndeclare prime with long long x as argument, returning boolean\nfor i = 2 to x exclusive\nif x % i is 0, return 0 from function\nreturn 1 from function\ncreate integers a, b, c\nread a read b read c\nprint (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) print newline
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << (a * b) + (b * c) + (c * a) - a - b - c + 1 << endl;\n\treturn 0;\n}	declare integer variables a, b and c\nread a, b and c\nprint (a * b) + (b * c) + (c * a) - a - b - c + 1
const int N = 1e5 + 100;\nint a, b, c;\nvector<int> v;\nint main() {\n\tcin >> a >> b >> c;\n\tcout << (a * b * c) - (a - 1) * (b - 1) * (c - 1) << endl;\n\treturn 0;\n}	declare constant int N = 1e5 + 100\ncreate ints a, b and c\ndeclare vector of integers called v\nread input to a, b and c\nprint (a * b * c) - (a - 1) * (b - 1) * (c - 1)
"const int MAX = 5e4 + 5;\nconst long long MAX2 = 11;\nconst int MOD = 1000000000 + 7;\nconst long long INF = 20000;\nconst int dr[] = {1, 0, -1, 0, 1, 1, -1, -1};\nconst int dc[] = {0, 1, 0, -1, 1, -1, 1, -1};\nconst double pi = acos(-1);\nint a, b, c;\nint main() {\n\tcin >> a >> b >> c;\n\tcout << a * b + (a + b - 1) * (c - 1) << ""\n"";\n\treturn 0;\n}"	"create constant integer MAX with MAX = 5e4 + 5\ncreate constant long long MAX2 with MAX2 = 11\ncreate constant integer MOD with MOD = 1000000000 + 7\ncreate constant long long INF with INF = 20000\ncreate constant integer array dr with dr = {1, 0, -1, 0, 1, 1, -1, -1}\ncreate constant integer array dc with dc = {0, 1, 0, -1, 1, -1, 1, -1}\ncreate constant double pi with pi = acosign of -1\ncreate integer a, b, c\nread a read b read c\nprint a * b + (a + b - 1) * (c - 1) print ""\n"""
const int N = 1e5 + 100;\nint a, b, c;\nvector<int> v;\nint main() {\n\tcin >> a >> b >> c;\n\tcout << (b * c) + (a - 1) * (b + c - 1) << endl;\n\treturn 0;\n}	N=100100\na,b,c=int\nv=vector of int\nread a,b,c\nprint (b*c)+(a-1)*(b+c-1)
int main() {\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tlong long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n\tcout << ans << endl;\n\treturn 0;\n}	a, b, c =integers\nRead a, b, c\nans = integer, set to (c + a - 1) * (b + a - 1) - a * (a - 1)\nprint ans and a new line
int main() {\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tcout << (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) << endl;\n\treturn 0;\n}	create long long a, b, c\nread a, b, c\nprint (a * b * c) - ((a - 1) * (b - 1) * (c - 1))
int main() {\n\tint a, b, c;\n\tcin >> a >> b >> c;\n\tcout << b * c + (a - 1) * (b + c - 1) << endl;\n}	a, b, c = integer\nread a, b, c\nprint the result of b * c + (a - 1) * (b + c - 1)
const int INF = 0x3f3f3f3f;\nconst long long INFLL = 0x3f3f3f3f3f3f3f3fLL;\nint main() {\n\tlong long a, b, c;\n\tcin >> a >> b >> c;\n\tlong long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n\tcout << ans << endl;\n\treturn 0;\n}	create constant integer INF with INF = 0x3f3f3f3f\ncreate constant long long INFLL with INFLL = 0x3f3f3f3f3f3f3f3fLL\ncreate long longs a, b, c\nread a read b read c\ncreate long long ans with ans = (c + a - 1) * (b + a - 1) - a * (a - 1)\nprint ans print newline
int main() {\n\tstring str, str2, s;\n\tint num, i;\n\twhile (cin >> num >> str) {\n\t\tsort(str.begin(), str.end());\n\t\tfor (i = 0; i < str.size(); i += num) { str2 += str[i]; }\n\t\tfor (i = 0; i < num; i++) { s += str2; }\n\t\tstr2 = s;\n\t\tsort(str2.begin(), str2.end());\n\t\tif (str2 != str) {\n\t\t\tcout << -1 << endl;\n\t\t\t;\n\t\t} else {\n\t\t\tcout << s << endl;\n\t\t}\n\t}\n\treturn 0;\n}	declare string variables str, str2 and s\ndeclare integer variables num and i\nread num and str and loop further\nsort str\nfor i from 0 to length of str exclusive adding num to i, append str[i] to str2\nfor i = 0 to num exclusive, append str2 to s\nassign s to str2\nsort str2\nif str2 != str\nprint -1\nelse\nprint s
"const double PI = acos(-1);\nconst int MAX = 2e9 + 7;\nconst long long MOD = 1e9 + 7;\nmap<char, int> m;\nvoid solve() {\n\tint k;\n\tcin >> k;\n\tstring s;\n\tcin >> s;\n\tint n = s.size();\n\tif (n % k != 0) {\n\t\tcout << -1 << endl;\n\t\treturn;\n\t}\n\tint need = n / k;\n\tfor (int i = 0; i < n; i++) { m[s[i]]++; }\n\tstring t = """";\n\tfor (int i = 97; i < 123; i++) {\n\t\tif (m[char(i)] % k == 0) {\n\t\t\tfor (int j = 0; j < m[char(i)] / k; j++) { t += char(i); }\n\t\t} else {\n\t\t\tcout << -1 << endl;\n\t\t\treturn;\n\t\t}\n\t}\n\tfor (int i = 0; i < k; i++) { cout << t; }\n\tcout << endl;\n}\nint main() {\n\tsolve();\n\treturn 0;\n}"	"create constant double PI with PI = acosign of -1\ncreate constant integer MAX with MAX = 2e9 + 7\ncreate constant long long MOD with MOD = 1e9 + 7\ncreate map m from character to integer\ndeclare solve with no arguments, returning void\ncreate integer k\nread k\ncreate string s\nread s\ncreate integer n with n = size of s\nif n % k is not 0\nprint -1 print newline\nreturn false from function\ncreate integer need with need = n / k\nfor i = 0 to n exclusive, increment m[s[i]]\ncreate string t with t = """"\nfor i = 97 to 123 exclusive\nif m[character casted i] % k is 0\nfor j = 0 to m[character casted i] / k exclusive, increment by character casted i\nelse\nprint -1 print newline\nreturn false from function\nfor i = 0 to k exclusive, print t\nprint newline\nrun solve"
int main() {\n\tint k;\n\tstring s;\n\tint c[26] = {0};\n\tcin >> k >> s;\n\tif (s.size() % k != 0) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < s.size(); ++i) { ++c[s[i] - 'a']; }\n\tfor (int i = 0; i < 26; ++i) {\n\t\tif (c[i] % k != 0) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tstring res;\n\tfor (int i = 0; i < 26; ++i) {\n\t\tfor (int j = 0; j < c[i] / k; ++j) { res += char('a' + i); }\n\t}\n\tfor (int i = 0; i < k; ++i) { cout << res; }\n\tcout << endl;\n\treturn 0;\n}	k = int\ns = string\nc = int array of size 26 with all values set to 0\nread k then s\nif size of s is not a multiple of k\nprint -1\nfor i = 0 to size of s increment c[s[i] - 'a']\nfor i = 0 to 26\nif c[i] is not a multiple of k\nprint -1\nres = string\nfor i = 0 to 26\nfor j = 0 to c[i] / k increment res by ('a' + i) as char\nfor i = 0 to k print res\nprint newline
int main() {\n\tint k;\n\tstring s;\n\tcin >> k >> s;\n\tint count[26] = {0};\n\tfor (int i = 0; i < s.length(); ++i) { count[s[i] - 'a'] += 1; }\n\tstring s1;\n\tint c = 0;\n\tfor (; c < 26; ++c) {\n\t\tif (count[c] % k != 0) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\ts1.append(count[c] / k, 'a' + c);\n\t\t}\n\t}\n\tif (c == 26) {\n\t\twhile (k--) { cout << s1; }\n\t\tcout << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}	k=int\ns=string\nread k,s\ncount=array of 26 int filled with 0\nfor i=0 to length of s exclusive increment count[s[i]-'a']\ns1=string\nc=0\nincrement c while c<26\nif count[c] modulo k not equal 0\nbreak\nelse\nappend count[c]/k copies of 'a'+c to s1\nif c is 26\nwhile decremented value of k not equal 0 print s1\nprint newline\nelse\nprint -1
"int main() {\n\tint count;\n\tcin >> count;\n\tstring s;\n\tcin >> s;\n\tint n = s.length();\n\tint a[26] = {0};\n\tfor (int i = 0; i < n; i++) { a[s[i] - 'a']++; }\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (a[i] % count != 0) {\n\t\t\tcout << ""-1"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tstring ans = """";\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (a[i]) {\n\t\t\tfor (int j = 0; j < a[i] / count; j++) {\n\t\t\t\tchar temp = i + 'a';\n\t\t\t\tans = ans + temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < count; i++) { cout << ans; }\n\tcout << endl;\n}"	"declare count as integer\nread count\ndeclare s as string\nread s\ndeclare n as integer = length of s\ndeclare integer array a size 26 = {0}\nfor i = 0 to n exclusive, increment a[s[i] - 'a']\nfor i = 0 to 26 exclusive\nif a[i] % count is not 0\nprint ""-1"" print newline\ndeclare string ans = """"\nfor i = 0 to 26 exclusive\nif a[i] is true\nfor j = 0 to a[i] / count exclusive\ndeclare temp with temp = i + 'a'\nlet ans be ans + temp\nfor i = 0 to count exclusive, print ans\nprint newline"
"int main() {\n\tint k;\n\tcin >> k;\n\tstring str;\n\tcin >> str;\n\tint n = str.length();\n\tmap<char, int> characters;\n\tmap<char, int>::iterator itr;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (characters.find(str[i]) != characters.end()) {\n\t\t\tcharacters[str[i]] += 1;\n\t\t} else {\n\t\t\tcharacters[str[i]] = 1;\n\t\t}\n\t}\n\tfor (itr = characters.begin(); itr != characters.end(); itr++) {\n\t\tif (itr->second < k) {\n\t\t\tcout << -1 << endl;\n\t\t\texit(0);\n\t\t}\n\t}\n\tstring new_str = """";\n\tfor (itr = characters.begin(); itr != characters.end(); itr++) {\n\t\tint repeat = itr->second / k;\n\t\tfor (int i = 0; i < repeat; i++) { new_str = new_str + itr->first; }\n\t}\n\tif (new_str.length() * k < n) {\n\t\tcout << -1 << endl;\n\t\texit(0);\n\t}\n\tfor (int i = 0; i < k; i++) { cout << new_str; }\n\tcout << endl;\n\treturn 0;\n}"	"create integers k\nread k\ncreate string str\nread str\ncreate integer n with n = length of str\ncreate map characters from character to integer\ncreate map iterator itr from character to integer\nfor i = 0 to n exclusive\nif first index of str[i] in characters is not end of characters\nincrement characters[str[i]] by 1\nelse\nset characters[str[i]] to 1\nfor itr = beginning of characters to itr is not end of characters, incrementing itr\nif second element of itr is less than k\nprint -1 print newline\nexit program with code 0\ncreate string new_str with new_str = """"\nfor itr = beginning of characters to itr is not end of characters, incrementing itr\ncreate integer repeat with repeat = second element of itr / k\nfor i = 0 to repeat exclusive, set new_str to new_str + first element of itr\nif length of new_str * k is less than n\nprint -1 print newline\nexit program with code 0\nfor i = 0 to k exclusive, print new_str\nprint newline"
"char inPutStr[1001];\nint strArr[26], k;\nchar subStr[1001];\nvoid makeAString() {\n\tint idx = 0;\n\tfor (int j = 0; j < 26; j++) {\n\t\twhile (strArr[j] != 0) {\n\t\t\tsubStr[idx] = j + 'a';\n\t\t\tidx++;\n\t\t\tstrArr[j] = strArr[j] - k;\n\t\t}\n\t}\n\tfor (int i = 0; i < k; i++) {\n\t\tfor (int j = 0; j < idx; j++) { cout << subStr[j]; }\n\t}\n\tcout << endl;\n}\nint main() {\n\tfor (int i = 0; i < 26; i++) { strArr[i] = 0; }\n\tcin >> k;\n\tcin >> inPutStr;\n\tfor (int i = 0; inPutStr[i]; i++) {\n\t\tint id = inPutStr[i] - 'a';\n\t\tstrArr[id] = strArr[id] + 1;\n\t}\n\tbool Result = true;\n\tfor (int i = 0; i < 26; i++) {\n\t\tif (strArr[i] % k != 0) {\n\t\t\tResult = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (Result) {\n\t\tmakeAString();\n\t} else\n\t\tcout << ""-1"" << endl;\n\treturn 0;\n}"	"declare an array of chars inPutStr with size 1001\ndeclare int k and an array of ints strArr with 26 elements\ncreate char array subStr with 1001 elements\nmakeAString is a void function\ncreate integer idx = 0\nfor j from 0 to 26 exclusive\nwhile strArr[j] != 0\nchange subStr[idx] to j + 'a'\nincrement idx by one\nassign strArr[j] - k to strArr[j]\nfor i from 0 to k exclusive\nfor j = 0 to idx exclusive, print subStr[j]\nprint new line\nfor i = 0 to 26 exclusive, set strArr[i] to 0\nread k\nread inPutStr\nfor i = 0 while inPutStr[i] != 0\ncreate integer id = inPutStr[i] - 'a'\nset strArr[id] to strArr[id] + 1\ndeclare bool Result = true\nfor i from 0 to 26 exclusive\nif strArr[i] % k != 0\nassign false to Result\nbreak the loop\nif Result is true\ncall makeAString()\nelse\nprint ""-1"""
"int main() {\n\tint T, i, j, count = 1, d, m = 0;\n\tchar s[1000], k[1000];\n\tcin >> T >> s;\n\tj = strlen(s);\n\tsort(s, s + j);\n\tfor (i = 0; i < j; i++) {\n\t\tif (s[i] == s[i + 1]) {\n\t\t\tcount += 1;\n\t\t} else {\n\t\t\tif (count % T == 0) {\n\t\t\t\td = count / T;\n\t\t\t\twhile (d--) {\n\t\t\t\t\tk[m] = s[i];\n\t\t\t\t\tm++;\n\t\t\t\t}\n\t\t\t\tcount = 1;\n\t\t\t} else {\n\t\t\t\tcout << ""-1"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tk[m] = '\0';\n\twhile (T--) {\n\t\tfor (i = 0; k[i] != '\0'; i++) { cout << k[i]; }\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"let T, i, j, count, d and m be integers with count = 1 and m = 0\ncreate an arrays of characters s and k with size 1000\nread T and s\nset j to length of s\nsort s\nfor i = 0 to j exclusive\nif s[i] = s[i + 1]\nadd 1 to count\nelse\nif count % T = 0\nassign count / T to d\nloop, decrementing d, while it is not 0\nset k[m] to s[i]\nincrement m\nset count to 1\nelse\nprint ""-1""\nset k[m] to '\0'\ndecrement T and loop further, while T is not 0\nfor i from 0 while k[i] != '\0' incrementing i, print k[i] in a loop\nprint new line"
"void solve(string str, int k) {\n\tint cnt[26];\n\tmemset(cnt, 0, sizeof(cnt));\n\tfor (int i = 0; i < str.length(); i++) cnt[str[i] - 'a']++;\n\tstring s1;\n\tint i = 0;\n\tfor (; i < 26; i++) {\n\t\tif (cnt[i] % k != 0)\n\t\t\tbreak;\n\t\telse {\n\t\t\ts1.append(cnt[i] / k, 'a' + i);\n\t\t}\n\t}\n\tif (i == 26) {\n\t\twhile (k--) { cout << s1; }\n\t\tcout << endl;\n\t} else {\n\t\tcout << ""-1"" << endl;\n\t}\n}\nint main() {\n\tint k;\n\tcin >> k;\n\tstring str;\n\tcin >> str;\n\tsolve(str, k);\n\treturn 0;\n}"	let solve be a void function which accepts string str , integer k\ncnt = array of integers of length 26\nmemset of cnt, 0, length of cnt\nfor i = 0 to length of str exclusive , increment cnt[str[i] - a] by 1\nlet s1 be a string\ninitialize integer i to 0\nfor i is less than 26 , increment i by 1\nif cnt[i] modulo k is not equal to 0\nstop\nelse do the following\nIt extends the string s1 by appending cnt[i] / k, 'a' + i\nif i is equal to 26\nwhile k is decremented by 1, print s1\nprint newline\nelse do the following\nprint -1 and newline\nlet k be a integer\nread k\nlet str be a string\nread str\nsolve the values str, k
"long long i, j, k, n, m, a[100009], ans, sz, c1, c2, x, ch[26], f, z;\nint main() {\n\tstring s;\n\tcin >> k >> s;\n\tsz = s.size();\n\tset<char> st;\n\tset<char>::iterator it;\n\tfor (i = 0; i < sz; i++) {\n\t\tst.insert(s[i]);\n\t\tch[s[i] - 'a']++;\n\t}\n\tvector<long long> v;\n\tfor (it = st.begin(); it != st.end(); it++) {\n\t\tchar c;\n\t\tc = *it;\n\t\tv.push_back(ch[c - 'a']);\n\t}\n\tsz = v.size();\n\tfor (i = 0; i < sz; i++) {\n\t\tif (v[i] % k != 0) {\n\t\t\tf = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (f) {\n\t\tcout << ""-1"" << endl;\n\t\treturn 0;\n\t} else {\n\t\tstring ss;\n\t\tfor (it = st.begin(); it != st.end(); it++) {\n\t\t\tchar c;\n\t\t\tc = *it;\n\t\t\tz = ch[c - 'a'] / k;\n\t\t\tfor (i = 0; i < z; i++) ss += c;\n\t\t}\n\t\tfor (i = 0; i < k; i++) cout << ss;\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"declare long longs i, j, k, n, m, ans, sz, c1, c2, x, f, z, declare long long arrays a with size 100009, ch with size 26\ndeclare string s\nread k, s\nlet sz be size of s\ndeclare character set st\ndeclare it as character set iterator\nfor i = 0 to sz exclusive\ninsert s[i] into st\nincrement ch[s[i] - 'a']\ndeclare long long vector v\nfor it = beginning of st to it is not end of st, incrementing it\ncreate character c\nset c to value of it\nadd ch[c-'a'] to end of v\nlet sz be size of v\nfor i = 0 to sz exclusive\nif v[i] % k is not 0\nlet f be 1\nbreak loop\nif f is true\nprint ""-1"" print newline\nelse\ndeclare ss as string\nfor it = beginning of st to it is not end of st, incrementing it\ndeclare character c\nlet c be value of it\nlet z be ch[c - 'a'] / k\nfor i = 0 to z exclusive, increment ss by c\nfor i = 0 to k exclusive, print ss\nprint newline"
"int main() {\n\tvector<int> v;\n\tvector<int> v1;\n\tvector<char> v2;\n\tint k, c = 0, temp, gh = 0;\n\tcin >> k;\n\tchar ch;\n\tstring s, ans;\n\tcin >> s;\n\tstring s1 = s;\n\tsort(s1.begin(), s1.end());\n\tfor (int i = 0; i < s1.size(); i++) {\n\t\tc = 0;\n\t\tif (s1[i] != s1[i + 1]) {\n\t\t\tch = s1[i];\n\t\t\tv2.push_back(ch);\n\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\tif (s[j] == ch) { c++; }\n\t\t\t}\n\t\t\tint temp = c;\n\t\t\tv.push_back(temp);\n\t\t}\n\t}\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif (v[i] % k == 0) {\n\t\t\tint f = v[i] / k;\n\t\t\tv1.push_back(f);\n\t\t} else {\n\t\t\tgh = -1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = 0; i < v1.size(); i++) {\n\t\tint m = v1[i];\n\t\tchar g = v2[i];\n\t\twhile (m > 0) {\n\t\t\tans += g;\n\t\t\tm--;\n\t\t}\n\t}\n\tstring sum = """";\n\tint our = k - 1;\n\twhile (our >= 0) {\n\t\tsum += ans;\n\t\tour--;\n\t}\n\tif (gh == -1) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << sum << endl;\n\t}\n\treturn 0;\n}"	"create integer vector v\ncreate integer vector v1\ncreate character vector v2\ncreate integers k, c, temp, gh with c = 0, gh = 0\nread k\ncreate character ch\ncreate strings s, ans\nread s\ncreate string s1 with s1 = s\nsort elements from beginning of s1 to end of s1\nfor i = 0 to size of s1 exclusive\nset c to 0\nif s1[i] is not s1[i+1]\nset ch to s1[i]\nadd character ch to end of v2\nfor j = 0 to size of s exclusive\nif s[j] is ch, increment c\ncreate integer temp with temp = c\nadd element temp to end of v\nfor i = 0 to size of v exclusive\nif v[i] % k is 0\ncreate integer f with f = v[i] / k\nadd element f to end of v1\nelse\nset gh to -1\nbreak loop\nfor i = 0 to size of v1 exclusive\ncreate integer m with m = v1[i]\ncreate character g with g = v2[i]\nwhile m is greater than 0\nincrement ans by g\ndecrement m\ncreate string sum with sum = """"\ncreate integer our with our = k - 1\nwhile our is greater than or equal to 0\nincrement sum by ans\ndecrement our\nif gh is -1\nprint -1 print newline\nelse\nprint sum print newline"
int main() {\n\tint i, Len, k, Arr[26] = {0};\n\tstring s, kString;\n\tcin >> k >> s;\n\tfor (i = 0; i < s.length(); i++) { Arr[s[i] - 'a']++; }\n\tfor (i = 0; i < 26; i++) {\n\t\tif (Arr[i] % k != 0)\n\t\t{\n\t\t\tbreak;\n\t\t} else {\n\t\t\tkString.append(Arr[i] / k, 'a' + i);\n\t\t}\n\t}\n\tif (i == 26) {\n\t\twhile (k--) { cout << kString; }\n\t\tcout << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}	create integers i, Len, k, create integer array Arr with size 26 with Arr = {0}\ncreate strings s, kString\nread k read s\nfor i = 0 to length of s exclusive, increment Arr[s[i] - 'a']\nfor i = 0 to 26 exclusive\nif Arr[i] % k is not 0\nbreak loop\nelse\nappend 'a' + i to kString (Arr[i] / k) times\nif i is 26\nwhile decrement k is true, print kString\nprint newline\nelse\nprint -1 print newline
"const double PI = acos(-1);\nconst int MAX = 2e9 + 7;\nconst long long MOD = 1e9 + 7;\nmap<char, int> m;\nvoid solve() {\n\tint k;\n\tcin >> k;\n\tstring s;\n\tcin >> s;\n\tint n = s.size();\n\tif (n % k != 0) {\n\t\tcout << -1 << endl;\n\t\treturn;\n\t}\n\tint need = n / k;\n\tfor (int i = 0; i < n; i++) { m[s[i]]++; }\n\tstring t = """";\n\tfor (int i = 97; i < 123; i++) {\n\t\tif (m[char(i)] % k == 0) {\n\t\t\tfor (int j = 0; j < m[char(i)] / k; j++) { t += char(i); }\n\t\t} else {\n\t\t\tcout << -1 << endl;\n\t\t\treturn;\n\t\t}\n\t}\n\tfor (int i = 0; i < k; i++) { cout << t; }\n\tcout << endl;\n}\nint main() {\n\tsolve();\n\treturn 0;\n}"	"create constant double PI = acos(-1)\nlet const integer MAX = 2e9 + 7\nlet const long long MOD = 1e9 + 7\ncreate map m of chars to ints\ndeclare solve\nlet int k\nread k\nlet string s\nread s\ncreate int n = s.size()\nif n modulo k is not equal to 0\nprint - 1\nterminate function\ncreate int need = n / k\nincrement all contents of m[s]\nlet string t = """"\nfor i = 97 to 123 exclusive\nif m[char(i)] modulo k is 0\nfor j = 0 to m[char(i)] / k exclusive, set t to t + char(i)\notherwise do\nprint -1\nend function\nfor i = 0 to k exclusive, print t\nprint new line\ncall solve"
"int cnt[30];\nint main() {\n\tint n, k;\n\tstring s;\n\tcin >> k >> s;\n\tn = s.length();\n\tfor (int i = 0; i < n; i++) { cnt[s[i] - 'a']++; }\n\tbool can = true;\n\tstring ss = """";\n\tfor (char x = 'a'; x <= 'z'; x++) {\n\t\tif (cnt[x - 'a'] % k != 0) {\n\t\t\tcan = false;\n\t\t} else {\n\t\t\tfor (int j = 0; j < cnt[x - 'a'] / k; j++) { ss += x; }\n\t\t}\n\t}\n\tif (can) {\n\t\tfor (int i = 0; i < k; i++) { cout << ss; }\n\t\tcout << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n}"	ctn = int array of length 30\nlet n, k be int\nlet s be a string\nread k and s\nset n to the lenght of s\nfor i = 0 to n exclusive increment cnt at s[i] - 'a'\nlet can = true be a boolean\nlet ss be a blank string\nfor x = 'a' to 'z' inclusive\nif cnt[x - 'a'] mod k is not 0\ncan is false\nelse\nfor j = 0 to cnt[x-'a']/k increment ss by x\nif can\nprint ss for k times\nprint new line\nelse\nprint -1 and new line
int main() {\n\tint k, i, j;\n\tstring s;\n\tint c[26] = {0};\n\tcin >> k >> s;\n\tif (s.size() % k != 0) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tfor (i = 0; i < s.size(); i++) { c[s[i] - 'a']++; }\n\tfor (i = 0; i < 26; i++) {\n\t\tif (c[i] % k != 0) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tstring result;\n\tfor (i = 0; i < 26; i++) {\n\t\tfor (j = 0; j < c[i] / k; j++) { result = result + char('a' + i); }\n\t}\n\tfor (i = 0; i < k; i++) { cout << result; }\n\tcout << endl;\n\treturn 0;\n}	create integers k, i and j\ndeclare string s\ncreate integer array c with size 26\nread input to k and s\nif length of s % k != 0\nprint -1 to the standart output\nfor i = 0 to length of s exclusive,\nfor i = 0 to 26 exclusive\nif c[i] % k != 0\nprint -1 to the standart output\ncreate string result\nfor i = 0 to 26 exclusive\nfor j from 0 to c[i] / k exclusive, append char('a' + i) to result\nfor i from 0 to k exclusive, print result to the standart output\nprint new line
"const int N = 100 + 5;\nconst int mod = 1000000000 + 7;\nbool ok(char a) {\n\tif (a >= 'a' && a <= 'z') return 1;\n\tif (a >= 'A' && a <= 'Z') return 1;\n\tif (a >= '0' && a <= '9') return 1;\n\tif (a == '_') return 1;\n\treturn 0;\n}\nint main() {\n\tchar a[N];\n\tcin >> a + 1;\n\tint len = strlen(a + 1);\n\tint op = 1;\n\tbool flag = 1;\n\tint cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0;\n\tfor (int i = 1; i <= len && flag; i++) {\n\t\tif (op == 1) {\n\t\t\tcnt1++;\n\t\t\tif (a[i] == '@') {\n\t\t\t\tcnt1--;\n\t\t\t\top = 2;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!ok(a[i])) { flag = 0; }\n\t\t\tif (cnt1 > 16) flag = 0;\n\t\t} else if (op == 2) {\n\t\t\tccnt++;\n\t\t\tif (cnt1 == 0 || cnt1 > 16) flag = 0;\n\t\t\tif (a[i] == '.') {\n\t\t\t\tif (cnt2 == 0 || cnt2 > 16) flag = 0;\n\t\t\t\tcnt2 = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (a[i] == '/') {\n\t\t\t\tccnt--;\n\t\t\t\top = 3;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!ok(a[i])) { flag = 0; }\n\t\t\tcnt2++;\n\t\t\tif (cnt2 > 16) flag = 0;\n\t\t} else {\n\t\t\tif (cnt2 == 0 || cnt2 > 16) flag = 0;\n\t\t\tif (ccnt == 0 || ccnt > 32) flag = 0;\n\t\t\tif (!ok(a[i])) flag = 0;\n\t\t\tcnt3++;\n\t\t\tif (cnt3 > 16) flag = 0;\n\t\t}\n\t}\n\tif (op == 1) flag = 0;\n\tif (op == 2 && (cnt2 == 0 || cnt2 > 16)) flag = 0;\n\tif (op == 3 && (cnt3 == 0 || cnt3 > 16)) flag = 0;\n\tif (flag)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create constant integer N with N = 100 + 5\ncreate contant integer mod with mod = 1000000000 + 7\ndeclare boolean ok with character a as argument, returning boolean\nif a is greater than or equal to 'a' and a is less than or equal to 'z', return 1 from function\nif a is greater than or equal to 'A' and a is less than or equal to 'Z', return 1 from function\nif a is greater than or equal to '0' and a is less than or equal to '9', return 1 from function\nif a is '_', return 1 from function\ncreate character array a with size N\nread a + 1\ncreate integer len with len = string length of (a + 1)\ncreate integer op with op = 1\ncreate boolean flag with flag = 1\ncreate integers cnt1, cnt2, ccnt, cnt3, with cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0\nfor i = 1 to len and flag inclusive\nif op is 1\nincrement cnt1\nif a[i] is '@'\ndecrement cnt1\nset op to 2\nbreak current loop iteration\nif result of run ok with a[i] as argument is false, set flag to 0\nif cnt1 is greater than 16, set flag to 0\nelse if op is 2\nincrement ccnt\nif cnt is 0 or cnt1 is greater than 16, set flag to 0\nif a[i] is '.'\nif cnt2 is 0 or cnt2 is greater than 16, set flag to 0\nset cnt2 to 0\nbreak current loop iteration\nif a[i] is '/'\ndecrement ccnt\nset op to 3\nbreak current loop iteration\nif result of run ok with a[i] as argument is false, set flag to 0\nincrement cnt2\nif cnt2 is greater than 16, set flag to 0\nelse\nif cnt2 is 0 or cnt2 is greater than 16, set flag to 0\nif ccnt is 0 or ccnt is greater than 32, set flag to 0\nif result of run ok with a[i] as argument is false, set flag to 0\nincrement cnt3\nif cnt3 is greater than 16, set flag to 0\nif op is 1, set flag to 0\nif op is 2 and ( cnt2 is 0 or cnt2 is greater than 16 ), set flag to 0\nif op is 3 and ( cnt3 is 0 or cnt3 is greater than 16 ), set flag to 0\nif flag is true\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"const int N = 100 + 5;\nconst int mod = 1000000000 + 7;\nbool ok(char a) {\n\tif (a >= 'a' && a <= 'z') return 1;\n\tif (a >= 'A' && a <= 'Z') return 1;\n\tif (a >= '0' && a <= '9') return 1;\n\tif (a == '_') return 1;\n\treturn 0;\n}\nint main() {\n\tchar a[N];\n\tcin >> a + 1;\n\tint len = strlen(a + 1);\n\tint op = 1;\n\tbool flag = 1;\n\tint cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0;\n\tfor (int i = 1; i <= len && flag; i++) {\n\t\tif (op == 1) {\n\t\t\tcnt1++;\n\t\t\tif (a[i] == '@') {\n\t\t\t\tcnt1--;\n\t\t\t\top = 2;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!ok(a[i])) { flag = 0; }\n\t\t\tif (cnt1 > 16) flag = 0;\n\t\t} else if (op == 2) {\n\t\t\tccnt++;\n\t\t\tif (cnt1 == 0 || cnt1 > 16) flag = 0;\n\t\t\tif (a[i] == '.') {\n\t\t\t\tif (cnt2 == 0 || cnt2 > 16) flag = 0;\n\t\t\t\tcnt2 = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (a[i] == '/') {\n\t\t\t\tccnt--;\n\t\t\t\top = 3;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!ok(a[i])) { flag = 0; }\n\t\t\tcnt2++;\n\t\t\tif (cnt2 > 16) flag = 0;\n\t\t} else {\n\t\t\tif (cnt2 == 0 || cnt2 > 16) flag = 0;\n\t\t\tif (ccnt == 0 || ccnt > 32) flag = 0;\n\t\t\tif (!ok(a[i])) flag = 0;\n\t\t\tcnt3++;\n\t\t\tif (cnt3 > 16) flag = 0;\n\t\t}\n\t}\n\tif (op == 1) flag = 0;\n\tif (op == 2 && (cnt2 == 0 || cnt2 > 16)) flag = 0;\n\tif (op == 3 && (cnt3 == 0 || cnt3 > 16)) flag = 0;\n\tif (flag)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create constant integer N = 100 + 5\ncreate constant integer mod = 1000000000 + 7\nbool function ok with char argument a\nif a is a letter character return 1\nif a is a capital letter character return 1\nif a is a digit return 1\nif a is '_' return 1\ndeclare array of characters of size N\nread a + 1\ncreate integer len with value = length of (a + 1)\nset integer op to 1\nset boolean flag to 1\nintegers cnt1 = 0, cnt2 = 0, ccnt = 0 and cnt3 = 0\nfor integer i = 1 to len and flag inclusive\nif op is equal to 1\nincrease cnt1\nif a[i] is '@'\ndecrement cnt1\nset value of op to 2\ngo to the start of the loop\nif ok(a[i]) is false, set flag to 0\nif cnt1 is greater than 16, set flag to 0\nelse if op is equal to 2\nincrement ccnt\nif cnt1 = 0 or cnt1 > 16, set flag to 0\nif a[i] is '.'\nif cnt2 = 0 or cnt2 > 16, set flag to 0\nset cnt2 to 0\ngo to the start of the loop\nif a[i] is '/'\ndecrement ccnt\nop = 3\ncontinue the loop\nif ok(a[i]) is false, set flag to 0\nincrease cnt2\nif cnt2 is greater than 16, set flag to 0\nelse\nif cnt2 = 0 or cnt2 is greater than 16, set flag to 0\nif ccnt = 0 or ccnt is greater than 32, set flag to 0\nif ok(a[i]) is false, set flag to 0\nincrease cnt3\nif cnt3 is greater than 16, set flag to 0\nif op is equal to 1, set flag to 0\nif op = 2 and (cnt2 = 0 or cnt2 is greater than 16), set flag to 0\nif op = 3 and (cnt3 = 0 or cnt3 is greater than 16), set flag to 0\nif flag is true\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"bool myCompare(const pair<string, int> &i, const pair<string, int> &j) {\n\treturn i.second < j.second;\n}\nstring s;\nint check() {\n\tint x = 0, y = 0, flag = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tif (flag == 0) {\n\t\t\tif (s[i] == '@') {\n\t\t\t\tif ((i - x) > 16 || (i - x) < 1 || (i + 1 == s.size())) return 0;\n\t\t\t\tx = i + 1;\n\t\t\t\ty = i + 1;\n\t\t\t\tflag = 1;\n\t\t\t} else if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '_') {\n\t\t\t\tcontinue;\n\t\t\t} else if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '_') {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else if (flag == 1) {\n\t\t\tif (s[i] == '/') {\n\t\t\t\tif ((i - x) > 32 || (i - x) < 1 || (i + 1 == s.size()) || s[i - 1] == '.') return 0;\n\t\t\t\tx = i + 1;\n\t\t\t\tflag = 2;\n\t\t\t} else if (s[i] == '.') {\n\t\t\t\tif ((i - y) > 16 || (i - y) < 1 || (i + 1 == s.size())) return 0;\n\t\t\t\ty = i + 1;\n\t\t\t} else if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '.' || s[i] == '_') {\n\t\t\t\tif (i + 1 == s.size()) {\n\t\t\t\t\tif ((i - x + 1) > 32 || (i - x + 1) < 1) return 0;\n\t\t\t\t\tif ((i - y + 1) > 16 || (i - y + 1) < 1) return 0;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t} else if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '.' || s[i] != '_') {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif (s[i] == '_' && i + 1 == s.size()) return 0;\n\t\t\tif (isalpha(s[i]) || isdigit(s[i]) || s[i] == '_') {\n\t\t\t\tif (i + 1 == s.size()) {\n\t\t\t\t\tif ((i - x + 1) > 16 || (i - x + 1) < 1) return 0;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '_') { return 0; }\n\t\t}\n\t}\n\tif (flag > 0)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nint main() {\n\tcin >> s;\n\tcout << (check() ? ""YES"" : ""NO"") << endl;\n\treturn 0;\n}"	"declare myCompare with constant pair address's i, j, from string to integer\nreturn second element of i is less than second element of j\ncreate string s\ndeclare check with no arguments, returning integer\ncreate integers x, y, 0, with x = 0, y = 0, flag = 0\nfor i = 0 to size of s\nif flag is 0\nif s[i] is '@'\nif i - x is greater than 16 or i - x is less than 1 or i + 1 is size of s, return 0 from function\nset x to i + 1\nset y to i + 1\nset flag to 1\nelse if s[i] is alphanumeric or s[i] is digit or s[i] is '_'\nbreak current loop iteration\nelse if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '_'\nelse if flag is 1\nif s[i] is '/'\nif i - x is greater than 32 or i - x is less than 1 or i + 1 is size of s or s[i-1] is '.', return 0 from function\nset x to i + 1\nset flag to 2\nelse if s[i] is '.'\nif i - y is greater than 16 or i - y is less than 1 or i + 1 is size of s, return 0 from function\nset y to i + 1\nelse if s[i] is alphanumeric or s[i] is digit or s[i] is '.' or s[i] is '_'\nif i + 1 is size of s\nif i - x + 1 is greater than 32 or i - x + 1 is less than 1, return 0 from function\nif i - y + 1 is greater than 16 or i - y + 1 is less than 1, return 0 from function\nbreak current loop iteration\nelse if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '.' or s[i] is not '_'\nelse\nif s[i] is '_' and i + 1 is size of s, return 0 from function\nif s[i] is alphanumeric or s[i] is digit or s[i] is '_'\nif i + 1 is size of s\nif i - x + 1 is greater than 16 or i - x + 1 is less than 1, return 0 from function\nbreak current loop iteration\nif s[i] is not alphanumeric or s[i] is not digit or s[i] is not '_', return 0 from function\nif flag is greater than 0\nreturn 1 from function\nelse\nread s\nprint ""YES"" if result of run check is true, else ""NO"" print newline"
"bool l(char c) {\n\tif (c >= 'a' && c <= 'z') { return true; }\n\tif (c >= 'A' && c <= 'Z') { return true; }\n\tif (c >= '0' && c <= '9') { return true; }\n\tif (c == '_') { return true; }\n\treturn false;\n}\nbool un(string s) {\n\tint n = s.size();\n\tif (n == 0 || n > 16) { return false; }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (!l(s[i])) { return false; }\n\t}\n\treturn true;\n}\nbool hn(string s) {\n\tint n = s.size(), i, nw = 0;\n\tif (n == 0 || n > 32) { return false; }\n\ts += '.';\n\tfor (i = 0; i < n + 1; i++) {\n\t\tif (s[i] == '.') {\n\t\t\tif (nw == 0 || nw > 16) { return false; }\n\t\t\tnw = 0;\n\t\t} else {\n\t\t\tif (!l(s[i])) { return false; }\n\t\t\tnw++;\n\t\t}\n\t}\n\treturn true;\n}\nbool r(string s) {\n\treturn un(s);\n}\nbool f(string s) {\n\tint n = s.size(), i, j;\n\tfor (i = 0; i < n; i++) {\n\t\tif (s[i] == '@') { break; }\n\t}\n\tif (i == n) { return false; }\n\tif (!un(s.substr(0, i))) { return false; }\n\tfor (j = i + 1; j < n; j++) {\n\t\tif (s[j] == '/') { break; }\n\t}\n\tif (!hn(s.substr(i + 1, j - i - 1))) { return false; }\n\tif (j != n && !r(s.substr(j + 1))) { return false; }\n\treturn true;\n}\nstring s;\nint main() {\n\tcin >> s;\n\tif (f(s)) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"boolean function l that takes character c as argument\nreturn true if c is a letter\nreturn true if c is a capital letter\nreturn true if c is a digit\nreturn true if c is an underscore\nreturn false\nfunction un with string argument s\nset value of int n to length s\nif n is 0 or n > 16 return false\nfor i = 0 to n exclusive\nif l(s at index i) is false return false\nreturn true\nfunction hn with string argument s\ndeclare integers n = size of s, i, nw = 0\nif n is 0 or n > 32 return false\nappen character '.' to s\nfor i = 0 to n + 1 exclusive\nif s[i] is character "".""\nif nw is equal to 0 or nw is greater than 16 return false\nnw = 0\nelse\nif l(s at index i) is false return false\nincrease nw\nreturn true\nboolean function r with string argument s\nreturn un(s)\nboolean function f with string argument s\nint n = length of s, i, j\nfor i = 0 to n exclusive\nif s at index i is ""@"" break the loop\nif i is equal to n return false\nif un(substring of s from 0 to i) is false return false\nfor j = from i + 1 to n exclusive\nif s[j] is ""/"" break the loop\nif hn(substring of s from i + 1 to j - i - 1) is false return false\nif j is not equal to n and r(substring of s from 0 to j +1) is false return false\nreturn true\nlet s be string\nread s\nif f(s)\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"int main() {\n\tint i, j, flag = 1, dot = 0;\n\tstring ch;\n\tcin >> ch;\n\tfor (i = 0; i < ch.length(); i++) {\n\t\tif (ch[i] == '@') {\n\t\t\tif (i > 16 || i < 1) {\n\t\t\t\tflag = 0;\n\t\t\t\tgoto print;\n\t\t\t}\n\t\t\tbreak;\n\t\t} else if ((ch[i] >= 'a' && ch[i] <= 'z') || (ch[i] >= 'A' && ch[i] <= 'Z'))\n\t\t\tcontinue;\n\t\telse if ((ch[i] >= '0' && ch[i] <= '9') || (ch[i] == '_'))\n\t\t\tcontinue;\n\t\telse {\n\t\t\tflag = 0;\n\t\t\tgoto print;\n\t\t}\n\t}\ndot:\n\tfor (j = i + 1; j < ch.length(); j++) {\n\t\tif (ch[j] == '.') {\n\t\t\tif (j - i > 17 || j - i < 2) {\n\t\t\t\tflag = 0;\n\t\t\t\tgoto print;\n\t\t\t}\n\t\t\ti = j;\n\t\t} else if ((ch[j] >= 'a' && ch[j] <= 'z') || (ch[j] >= 'A' && ch[j] <= 'Z'))\n\t\t\tcontinue;\n\t\telse if ((ch[j] >= '0' && ch[j] <= '9') || (ch[j] == '_'))\n\t\t\tcontinue;\n\t\telse if (ch[j] == '/') {\n\t\t\tif (j - i > 17 || j - i < 2) {\n\t\t\t\tflag = 0;\n\t\t\t\tgoto print;\n\t\t\t}\n\t\t\ti = j;\n\t\t} else {\n\t\t\tflag = 0;\n\t\t\tgoto print;\n\t\t}\n\t}\n\tif (j - i > 17 || j - i < 2) flag = 0;\nprint:\n\t(flag) ? (cout << ""YES\n"") : (cout << ""NO\n"");\n\treturn 0;\n}"	"create ints i, j, flag = 1, and dot = 0\nlet string ch\nread ch\nfor i = 0 to length of ch exclusive\nif ch[i] is equal to '@'\nif i is greater than 16 or i is less than 1\nset flag to 0\nmove to print\nbreak loop\nelse if ch[i] is greater than or equal to 'a' and ch[i] is less than or equal to 'z' or if ch[i] is greater than or equal to 'A' and ch[i] is less than or equal to 'Z'\ncontinue to next loop\nelse if ch[i] is greater than or equal to '0' and ch[i] is less than or equal to '9' and if ch[i] is equal to '_'\ncontinue to next loop iteration\nelse\nset flag to 0\ngo to print\nidentify dot\nfor j = i + 1 to length of ch exclusive\nif ch[j] is equal to '.'\nif j - 1 is greater than 17 or j - i is less than 2\nset flag to 0\ngo to print\nset i to j\nelse if ch[j] is greater than or equal to 'a' and ch[j] is less than or equal to 'z' or if ch[j] is greater than or equal to 'A' and ch[j] is less than or equal to 'Z'\ncontinue to next loop\nelse if ch[j] is greater than or equal to '0' and ch[j] is less than or equal to '9' or if ch[j] is equal to '_'\ncontinue to next loop\nelse if ch[j] is equal to '/'\nif j - 1 is greater than 17 or j - i is less than 2\nset flag to 0\ngo to print\nset i to j\notherwise\nset flag to 0\nmove to print\nif j - i is greater than 17 or j - i is less than 2, set flag to 0\nidentify print\nprint ""YES\n"" if flag is truthy or ""NO\n"" if not"
int main() {\n\tint n;\n\tcin >> n;\n\tcout << n;\n\tfor (int i = 1; i < n; i++) cout << ' ' << i;\n\tcout << '\n';\n}	declare integer n\nread n\nprint n\nfor i = 1 to n exclusive, print ' ' and i\nprint '\n'
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << n;\n\tfor (int i = 1; i < n; ++i) { cout << "" "" << i; }\n\tcout << endl;\n\treturn 0;\n}"	"create integer n\nread n\nprint n\nfor i = 1 to n exclusive, print "" "" print i\nprint newline"
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << n;\n\tfor (int i = 1; i < n; ++i) { cout << "" "" << i; }\n\tcout << endl;\n\treturn 0;\n}"	"create integer n\nread n\nprint n\nfor i = 1 to n exclusive, print "" "" print i\nprint newline"
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << n;\n\tfor (int i = 1; i < n; ++i) { cout << "" "" << i; }\n\tcout << endl;\n\treturn 0;\n}"	"declare integer variable n\nread n\nprint n\nfor integer i = 1 to n exclusive print "" "" and i\nprint new line"
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << n;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i != n) cout << "" "";\n\t\tcout << i;\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"n = integer\nread n\nprint n\nfor i = 1 to n exclusive\nif i is not n print "" ""\nprint i\nprint new line"
"int main() {\n\tint n;\n\tcin >> n;\n\tcout << n;\n\tfor (int i = 1; i <= n - 1; i++) cout << "" "" << i;\n\tcout << endl;\n\treturn 0;\n}"	let n be a integer\nread n\nprint n\nfor ( i= 1 to n-1 inclusive ), print space and i\nprint newline
int main() {\n\tint a;\n\twhile (cin >> a) {\n\t\tcout << a;\n\t\tfor (int i = 1; i < a; i++) cout << ' ' << i;\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	declare integer a\nloop while reading a\nprint a\nfor integer i = 1 to a exclusive, print ' ' and i\nprint new line
"void desperate_optimization(int precision) {\n\tcout.setf(ios::fixed);\n\tcout.setf(ios::showpoint);\n\tcout.precision(precision);\n}\nint main() {\n\tdesperate_optimization(10);\n\tint n;\n\tcin >> n;\n\tcout << n;\n\tfor (int i = 1; i < n; i++) cout << "" "" << i;\n\tcout << '\n';\n\treturn 0;\n}"	in the function desperate_optimization that takes integer precision\nprint floats with a fixed number of decimals\nprint floats with showpoint format\nprint precision with precision\ncall desperate_optimization on 10\nn = integer\nread n\nprint n\nfor i = 1 to n exclusive, print i\nprint new line
"int main() {\n\tint a;\n\tcin >> a;\n\tcout << a;\n\tif (a > 1) cout << "" "";\n\tfor (int i = 0; i < a - 1; i++) {\n\t\tcout << i + 1;\n\t\tif (i + 2 != a) cout << "" "";\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"a =integer\nRead a\nprint a\nif a is greater than 1, then print "" ""\nfor i = 0 to a - 1 exclusive\nprint i + 1\nif i + 2 is not equal to a, then print "" ""\nprint a new line"
int MOD;\nlong long mod_pow(long long a, long long b) {\n\tif (b == 0) return 1;\n\tif (b == 1) return a % MOD;\n\tif (b & 1) return ((a % MOD) * mod_pow(a, b - 1)) % MOD;\n\tlong long x = mod_pow(a, b >> 1);\n\treturn (x * x) % MOD;\n}\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tMOD = m;\n\tint r = mod_pow(3, n);\n\tif (r == 0) {\n\t\tcout << m - 1 << endl;\n\t} else {\n\t\tcout << r - 1 << endl;\n\t}\n\treturn 0;\n}	MOD = integer\nin function mod_pow with arguments of long long a and long long b and returns a long long\nif b is 0, then return 1\nif b is 1, then return a modulo MOD\nif the last bit in binary of b is 1, then return a modulo MOD * the result of calling mod_pow with arguments a, b - 1 and then modulo the result of that function by MOD\nx = long long = the result of calling mod_pow with arguments a, and the b with its elements shifted to the right by one bit\nreturn (x * x) modulo MOD\nn, m = integer\nread n, m\nMOD = m\nr = integer = the result of calling mod_pow with arguments 3, n\nif r is 0\nprint the result of m - 1\nelse\nprint the result of r - 1
long long power(long long x, int y, int m) {\n\tlong long res = 1;\n\twhile (y > 0) {\n\t\tif (y & 1) {\n\t\t\tres = res * x;\n\t\t\tres %= m;\n\t\t}\n\t\ty = y >> 1;\n\t\tx = x * x;\n\t\tx %= m;\n\t}\n\treturn res;\n}\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint ans = power((long long)3, n, m);\n\tif (ans == 0) {\n\t\tcout << m - 1 << endl;\n\t} else {\n\t\tcout << ans - 1 << endl;\n\t}\n\treturn 0;\n}	declare power with long longs x, integers y, m as arguments, returning long long\ncreate long long res with res = 1\nwhile y is greater than 0\nif y bitwise and 1\nset res to res * x\nset res to res % m\nset y to y bitwise right 1\nset x to x * x\nset x to x % m\nreturn res from function\ncreate integers n, m\nread n read m\ncreate integer ans with ans = result of run power with long long casted (3), n, m as arguments\nif ans is 0\nprint m - 1 print newline\nelse\nprint ans - 1 print newline
long long modl(long long n, long long k, long long p) {\n\tif (n == 0) return 0;\n\tif (k == 0)\n\t\treturn 1;\n\telse if (k % 2 == 0) {\n\t\treturn (modl(n, k / 2, p) * (modl(n, k / 2, p))) % p;\n\t} else\n\t\treturn (n * modl(n, k - 1, p)) % p;\n}\nint main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tlong long z = modl(3, n, m);\n\tif (z == 0)\n\t\tcout << m - 1 << endl;\n\telse\n\t\tcout << z - 1 << endl;\n\treturn 0;\n}	in function modl taking three long longs n, k and p and returning a long long\nif n is 0 return 0\nif k is 0\nreturn 1\nelse if k is even\nreturn (modl of n, k / 2 and p * (modl of n, k / 2 and p)) mod p\nelse\nreturn (n * modl of n, k - 1 and p) mod p\nn, m = long long\nread n then m\nz = long long with z = modl of 3, n and m\nif z is 0\nprint m - 1\nelse\nprint z - 1
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tlong long a = 3;\n\tint i = 1;\n\tint two = 0;\n\twhile (n > 0) {\n\t\tif (n % 2 == 1) i = i * a % m;\n\t\tn = n / 2;\n\t\ta = (a * a) % m;\n\t}\n\tcout << (i - 1 + m) % m << endl;\n\treturn 0;\n}	declare integers n and m\nread n and m\ncreate long long a = 3\ncreate integer i = 1\ncreate integer two = 0\nwhile n > 0\nif n is odd, assign i * a % m to i\nset n to n / 2\nchange a to a squared modulo m\nprint (i - 1 + m) % m
long long pow(long long a, long long b, long long m) {\n\tlong long res = 1;\n\twhile (b) {\n\t\tif (b & 1) { res = (res * a) % m; }\n\t\ta = (a * a) % m;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}\nint main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tcout << (pow(3, n, m) - 1 + m) % m << endl;\n\treturn 0;\n}	in function pow taking three long longs a, b and m and returning a long long\nres = long long with res = 1\nloop while b is not 0\nif b bitwise-and 1 is true then set res to (res * a) mod m\nset a to (a * a) mod m\nset b to b bithsift right by 1\nreturn res\nn, m = long long\nread n then m\nprint ((pow of 3, n and m) - 1 + m) mod m
"const int MAX = 3e4 + 5;\nconst long long MAX2 = 11;\nconst int MOD = 1000000000 + 7;\nconst long long INF = 20000;\nconst int dr[] = {1, 0, -1, 0, 1, 1, -1, -1};\nconst int dc[] = {0, 1, 0, -1, 1, -1, 1, -1};\nconst double pi = acos(-1);\nconst double eps = 1e-9;\nlong long n, m;\nlong long pw() {\n\tlong long ret = 1, x = 3;\n\twhile (n) {\n\t\tif (n & 1) ret = (ret * x) % m;\n\t\tx = (x * x) % m;\n\t\tn >>= 1;\n\t}\n\treturn ret;\n}\nint main() {\n\tcin >> n >> m;\n\tcout << (pw() + m - 1) % m << ""\n"";\n\treturn 0;\n}"	MAX = const integer with MAX = 3e4 + 5\nMAX2 = const long long with MAX2 = 11\nMOD = const integer with MOD = 1000000000 + 7\nINF = const long long with INF = 20000\ndr = const integer array with dr = {1, 0, -1, 0, 1, 1, -1, -1}\ndc = const integer array with dc = {0, 1, 0, -1, 1, -1, 1, -1}\npi = const double with pi = acos(-1)\neps = const double with eps = 1e-9\nn, m = long long\nin the function pw that returns long long\nret = long long with ret = 1, x = 3\nwhile n\nif n bitwise and 1, ret = (ret * x) modulo m\nx = (x * x) modulo m\nn = right shift n 1 place\nreturn ret\nread n, m\nprint (pw() + m - 1) modulo m
long long m;\nlong long pw(long long x, long long p) {\n\tif (!p) return 1 % m;\n\tlong long z = pw(x, p / 2);\n\tz *= z;\n\tz %= m;\n\tif (p % 2 == 0) return z;\n\tz *= x;\n\tz %= m;\n\treturn z;\n}\nint main() {\n\tlong long n;\n\tcin >> n >> m;\n\tlong long res = 2 * (pw(3, n) - 1) / (2);\n\tres %= m;\n\tres += m;\n\tres %= m;\n\tcout << res << endl;\n\treturn 0;\n}	m = long long\nin function pw taking two long longs x and p and returning a long long\nif p is 0 return 1 mod m\nz = long long with z = pw of x and p / 2\nset z to z * z\nset z to z mod m\nif p is even return z\nset z to z * x\nset z to z mod m\nreturn z\nn = long long\nraed n then m\nres = long long with res = 2 * ((pw of 3 and n) - 1) / 2\nset res to res mod m\nincrement res by m\nset res to res mod m\nprint res
long long power(long long x, long long y, long long MOD) {\n\tunsigned long long res = 1;\n\tx = x % MOD;\n\twhile (y > 0) {\n\t\tif (y & 1) { res = (res * x) % MOD; }\n\t\ty = y >> 1;\n\t\tx = (x * x) % MOD;\n\t}\n\treturn (long long)res;\n}\nlong long n, m, res;\nint main() {\n\tcin >> n >> m;\n\tres = power(3, n, m) - 1;\n\tcout << (res + m) % m << endl;\n\treturn 0;\n}	declare power taking in long long ints x, y, and MOD and returning long long int\ncreate unsigned long long int res = 1\nset x to x modulo MOD\nwhile y is more than 0\nif y & 1 is truthy, set res to (res * x) % MOD\nset y to y >> 1\nset x to (x * x) % MOD\nconvert res to long long int and return it\ncreate long long ints n, m, and res\nread n and m\nset res to power(3, n, m) - 1\nprint (res + m) % m
long long m, n;\nlong long pw(long long a, long long b) {\n\tlong long res = 1;\n\twhile (b) {\n\t\tif (b & 1) res = (res * a) % m;\n\t\ta = (a * a) % m;\n\t\tb /= 2;\n\t}\n\treturn res;\n}\nint main() {\n\tcin >> n >> m;\n\tlong long ans = (pw(3, n));\n\tans--;\n\tif (ans < 0) ans += m;\n\tcout << ans << endl;\n\treturn 0;\n}	declare long longs m and n\npw is a long long function with long long arguments a and b\ndeclare long long res with value 1\nwhile b is not 0\nif b & 1 is true, change res to (res * a) modulo m\nset a to a squared modulo m\nchange the value of b to b divided by 2\nreturn res\nread input to n and m\ndeclare long long variable with name ans and value = pw of 3 and n\ndecrement ans\nif ans is less than 0, add m to ans\nprint ans to the standard output
long long f(long long n, long long m) {\n\tif (n == 0) {\n\t\treturn 1 % m;\n\t} else if (n == 1) {\n\t\treturn 3 % m;\n\t}\n\tlong long tmp = f(n / 2, m);\n\tif (n % 2 == 0) {\n\t\treturn tmp * tmp % m;\n\t} else {\n\t\treturn (tmp * tmp % m) * 3 % m;\n\t}\n}\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tlong long fx = f(n, m);\n\tif (fx == 0) {\n\t\tcout << m - 1 << endl;\n\t} else {\n\t\tcout << fx - 1 << endl;\n\t}\n\treturn 0;\n}	declare f taking in long long integers n and m and returning long long int\nif n is equal to 0\nreturn the result of 1 % m\nelse if n is equal to 1\nreturn 3 % m\ncreate long long tmp = f(n / 2, m)\nif n modulo 2 is 0\nreturn the result of tmp * tmp % m\notherwise\nreturn (tmp * tmp % m) * 3 % m\ncreate ints n and m\nread n and m\ncreate long long int fx = f(n, m)\nif fx is 0\nprint m - 1\nelse\nprint fx - 1
long long m;\nint power(long long a, int n) {\n\tlong long res = 1;\n\twhile (n > 0) {\n\t\tif (n % 2 == 1) {\n\t\t\tres *= a;\n\t\t\tres %= m;\n\t\t}\n\t\ta *= a;\n\t\ta %= m;\n\t\tn /= 2;\n\t}\n\treturn res;\n}\nint main() {\n\tint n;\n\tcin >> n >> m;\n\tcout << ((power(3, n) - 1) % m + m) % m << endl;\n\treturn 0;\n}	m = long long\nin function power taking a long long a and an int n and returning an int\nres = long long with res = 1\nloop while n is greater than 0\nif n is uneven\nset res to res * a\nset res to res mod m\nset a to a * a\nset a to a mod m\nset n to n / 2\nreturn res\nn = int\nread n then m\nprint (((power of 3 and n) - 1) mod m + m) mod m
long long power(long long a, long long b, long long m) {\n\tlong long temp = a, ans = 1;\n\twhile (b) {\n\t\tif (b & 1) ans = (ans % m * temp % m) % m;\n\t\ttemp = (temp % m * temp % m) % m;\n\t\tb /= 2;\n\t}\n\treturn ans;\n}\nint main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tcout << (power(3, n, m) - 1 + m) % m << endl;\n}	declare power with long longs a, b, m as arguments, returning long long\ncreate long longs temp, ans with temp = a, ans = 1\nwhile b is true\nif b bitwise and 1 is true, set ans to (ans % m * temp % m) % m\nset temp to (temp % m * temp % m) % m\nset b to b / 2\nreturn ans from function\ncreate long longs n, m\nread n read m\nprint ( result of run power with 3, n, m as arguments - 1 + m ) % m print newline
"int main() {\n\tlong long ax, ay, bx, by, cx, cy;\n\tcin >> ax >> ay >> bx >> by >> cx >> cy;\n\tlong long ds = (bx * cy - by * cx) - (ax * cy - ay * cx) + (ax * by - ay * bx);\n\tif (ds == 0)\n\t\tcout << ""TOWARDS"";\n\telse if (ds < 0)\n\t\tcout << ""RIGHT"";\n\telse\n\t\tcout << ""LEFT"";\n\tcout << '\n';\n}"	"create long longs ax, ay, bx, by, cx, cy\nread ax read ay read bx read by read cx read cy\ncreate long long ds with ds = (bx * cy - by * cx) - (ax * cy - ay * cx) + (ax * by - ay * bx)\nif ds is 0\nprint ""TOWARDS""\nelse if ds is less than 0\nprint ""RIGHT""\nelse\nprint ""LEFT""\nprint '\n'"
"void solve() {\n\tlong long a1, a2, b1, b2, c1, c2;\n\tcin >> a1 >> a2 >> b1 >> b2 >> c1 >> c2;\n\tlong long d = (b1 - a1) * (c2 - a2) - (b2 - a2) * (c1 - a1);\n\tif (d == 0) {\n\t\tcout << ""TOWARDS"" << endl;\n\t} else if (d > 0) {\n\t\tcout << ""LEFT"" << endl;\n\t} else {\n\t\tcout << ""RIGHT"" << endl;\n\t}\n}\nint main() {\n\tcout << setprecision(12) << fixed;\n\tsolve();\n\treturn 0;\n}"	"function solve (no args, no return value)\na1,a2,b1,b2,c1,c2=long long\nread a1,a2,b1,b2,c1,c2\nd=(b1-a1)*(c2-a2)-(b2-a2)*(c1-a1)\nif d is 0\nprint ""TOWARDS""\nelse if d > 0\nprint ""LEFT""\nelse\nprint ""RIGHT""\nset output precision to 12 digits\nsolve()"
"long long fp(long long n, long long p) {\n\tif (p == 0) return 1;\n\tif (p == 1) return n;\n\tlong long res = fp(n, p / 2);\n\tres = ((res) * (res));\n\tif (p % 2) res = (res * n);\n\treturn res;\n}\nint main() {\n\tpair<int, int> arr[5];\n\tint a, b, c;\n\tdouble s = -1, ss = -1;\n\tbool f = 0;\n\tfor (int i = 0; i < 3; i++) {\n\t\tcin >> arr[i].first >> arr[i].second;\n\t\tif (i == 1) {\n\t\t\tif ((arr[i].first - arr[i - 1].first) != 0) s = (arr[i].second - arr[i - 1].second) / (arr[i].first - arr[i - 1].first);\n\t\t} else if (i == 2) {\n\t\t\tif ((arr[i].first - arr[i - 1].first) != 0) ss = (arr[i].second - arr[i - 1].second) / (arr[i].first - arr[i - 1].first);\n\t\t\tif (s == ss) f = 1;\n\t\t}\n\t}\n\tif (f) return cout << ""TOWARDS"" << '\n', 0;\n\tif (arr[0].second > arr[1].second) {\n\t\tif (arr[2].first > arr[1].first)\n\t\t\treturn cout << ""LEFT"" << '\n', 0;\n\t\telse\n\t\t\treturn cout << ""RIGHT"" << '\n', 0;\n\t} else if (arr[0].second < arr[1].second) {\n\t\tif (arr[2].first < arr[1].first)\n\t\t\treturn cout << ""LEFT"" << '\n', 0;\n\t\telse\n\t\t\treturn cout << ""RIGHT"" << '\n', 0;\n\t} else if (arr[0].second == arr[1].second && arr[0].first < arr[1].first) {\n\t\tif (arr[2].second > arr[1].second)\n\t\t\treturn cout << ""LEFT"" << '\n', 0;\n\t\telse\n\t\t\treturn cout << ""RIGHT"" << '\n', 0;\n\t} else if (arr[0].second == arr[1].second && arr[0].first > arr[1].first) {\n\t\tif (arr[2].second < arr[1].second)\n\t\t\treturn cout << ""LEFT"" << '\n', 0;\n\t\telse\n\t\t\treturn cout << ""RIGHT"" << '\n', 0;\n\t}\n\treturn 0;\n}"	"declare fp with long longs n, p as arguments, returning long long\nif p is 0, return 1 from function\nif p is 1, return n from function\ncreate long long res with res = result of run fp with n, p / 2 as arguments\nset res to res * res\nif p % 2, set res to res * n\nreturn res from function\ncreate pair of integer, integer array arr with size 5\ncreate integers a, b, c\ncreate soubles s, ss, with s = -1, ss = -1\ncreate boolean f with f = 0\nfor i = 0 to 3 exclusive\nread first element of arr[i] read second element of arr[i]\nif i is 1\nif ((first element of arr[i] - first element of arr[i - 1]) is not 0) set s to (second element of arr[i] - second element of arr[i - 1]) / (first element of arr[i] - first element of arr[i - 1])\nelse if i is 2\nif ((first element of arr[i] - first element of arr[i - 1]) is not 0) set ss to (second element of arr[i] - second element of arr[i - 1]) / (first element of arr[i] - first element of arr[i - 1])\nif s is ss, set f to 1\nif f is true, return print ""TOWARDS"" print '\n', 0 from function\nif second element of arr[0] is greater than second element of arr[1]\nif first element of arr[2] is greater than first element of arr[1]\nreturn print ""LEFT"" print '\n', 0 from function\nelse\nreturn print ""RIGHT"" print '\n', 0 from function\nelse if second element of arr[0] is less than second element of arr[1]\nif first element of arr[2] is less than first element of arr[1]\nreturn print ""LEFT"" print '\n', 0 from function\nelse\nreturn print ""RIGHT"" print '\n', 0 from function\nelse if second element of arr[0] is second element of arr[1] and first element of arr[0] is less than first element of arr[1]\nif second element of arr[2] is greater than second element of arr[1]\nreturn print ""LEFT"" print '\n', 0 from function\nelse\nreturn print ""RIGHT"" print '\n', 0 from function\nelse if second element of arr[0] is second element of arr[1] and first element of arr[0] is greater than first element of arr[1]\nif second element of arr[2] is less than second element of arr[1]\nreturn print ""LEFT"" print '\n', 0 from function\nelse\nreturn print ""RIGHT"" print '\n', 0 from function"
"int main() {\n\tlong long int x1, x2, x3, y1, y2, y3;\n\tcin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n\tif ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n\t\tcout << ""TOWARDS"" << endl;\n\t} else if ((x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) > 0) {\n\t\tcout << ""RIGHT"" << endl;\n\t} else {\n\t\tcout << ""LEFT"" << endl;\n\t}\n\treturn 0;\n}"	x1, x2, x3, y1, y2, y3 =integers\nRead x1, x2, x3, y1, y2, y3\nif (y2 - y1) * (x3 - x2) is equal to (y3 - y2) * (x2 - x1)\nprint TOWARDS and a new line\nelse if (x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) is greater than 0\nprint RIGHT and a new line\nelse do the following\nprint LEFT and a new line
"int main() {\n\tlong long xa, ya, xb, yb, xc, yc;\n\tcin >> xa >> ya >> xb >> yb >> xc >> yc;\n\tlong long cp = (xb - xa) * (yc - ya) - (yb - ya) * (xc - xa);\n\tif (cp > 0)\n\t\tcout << ""LEFT\n"";\n\telse if (cp < 0)\n\t\tcout << ""RIGHT\n"";\n\telse\n\t\tcout << ""TOWARDS\n"";\n\treturn 0;\n}"	"create long long integers xa, ya, xb, yb, xc, and yc\nread xa, ya, xb, yb, xc, and yc\ncreate long long integer cp = (xb - xa) * (yc - ya) - (yb - ya) * (xc - xa)\nif cp is greater than 0\nprint ""LEFT\n""\nelse if cp is less than 0\nprint ""RIGHT\n""\nelse\nprint ""TOWARDS\n"""
"int main() {\n\tlong long int x1, x2, x3, y1, y2, y3;\n\tcin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n\tif ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n\t\tcout << ""TOWARDS"" << endl;\n\t} else if ((x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) > 0) {\n\t\tcout << ""RIGHT"" << endl;\n\t} else {\n\t\tcout << ""LEFT"" << endl;\n\t}\n\treturn 0;\n}"	"create long long integers x1, x2, x3, y1, y2, y3\nread x1 read y1 read x2 read y2 read x3 read y3\nif (y2 - y1) * (x3 - x2) is (y3 - y2) * (x2 - x1)\nprint ""TOWARDS"" print newline\nelse if (x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) is greater than 0\nprint ""RIGHT"" print newline\nelse\nprint ""LEFT"" print newline"
"int main() {\n\tlong long x1, y1, x2, y2, x3, y3;\n\tcin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n\tlong long vx1 = x2 - x1, vy1 = y2 - y1, vx2 = x3 - x2, vy2 = y3 - y2;\n\tlong long cha = vx1 * vy2 - vx2 * vy1;\n\tif (cha > 0) { cout << ""LEFT"" << endl; }\n\tif (cha < 0) { cout << ""RIGHT"" << endl; }\n\tif (cha == 0) { cout << ""TOWARDS"" << endl; }\n\treturn 0;\n}"	x1, y1, x2, y2, x3, y3 = long longs\nread x1, y1, x2, y2, x3, y3\nvx1 = long long = x2 - x1, vy1 = long long = y2 - y1, vx2 = long long = x3 - x2, vy2 = long long = y3 - y2\ncha = long long = vx1 * vy2 - vx2 * vy1\nif cha > 0, then print LEFT\nif cha < 0, then print RIGHT\nif cha is 0, then print TOWARDS
"int main() {\n\tint f = 0;\n\tlong long x1, x2, x3, y1, y2, y3;\n\tcin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n\tlong long temp = (x2 - x1) * (y3 - y2) - (y2 - y1) * (x3 - x2);\n\tif (temp == 0)\n\t\tf = 0;\n\telse if (temp > 0)\n\t\tf = 1;\n\telse\n\t\tf = 2;\n\tif (f == 0)\n\t\tputs(""TOWARDS"");\n\telse if (f == 2)\n\t\tputs(""RIGHT"");\n\telse\n\t\tputs(""LEFT"");\n\treturn 0;\n}"	f = integer = 0\nx1, x2, x3, y1, y, 2, y3 = long longs\nread x1, y1, x2, y2, x3, y3\ntemp = long long = (x2 - x1) * (y3 - y2) - (y2 - y1) * (x3 - x2)\nif temp is 0\nf = 0\nelse if temp > 0\nf = 1\nelse\nf = 2\nif f is 0\nprint TOWARDS\nelse if f is 2\nprint RIGHT\nelse\nprint LEFT
"int main() {\n\tlong long x[4], y[4];\n\tfor (int i = 1; i <= (3); i++) cin >> x[i] >> y[i];\n\tlong long a1 = y[1] - y[2];\n\tlong long b1 = x[2] - x[1];\n\tlong long c1 = x[1] * y[2] - x[2] * y[1];\n\tlong long a2 = y[2] - y[3];\n\tlong long b2 = x[3] - x[2];\n\tlong long c2 = x[2] * y[3] - x[3] * y[2];\n\tif (a1 * b2 == a2 * b1 && b1 * c2 == b2 * c1) {\n\t\tcout << ""TOWARDS\n"";\n\t} else {\n\t\tif (a1 * b2 > a2 * b1)\n\t\t\tcout << ""LEFT\n"";\n\t\telse\n\t\t\tcout << ""RIGHT\n"";\n\t}\n\treturn 0;\n}"	let x = array of long integers of length 4, y = array of long integers of length 4\nfor i = 1 to 3 inclusive , read x[i] and y[i]\nlet a1 be a long integer with a1 = y[1] - y[2]\nlet b1 be a long integer with b1 = x[2] - x[1]\nlet c1 be a long integer with c1 = x[1] * y[2] - x[2] * y[1]\nlet a2 be a long integer with a2 = y[2] - y[3]\nlet b2 be a long integer with b2 = x[3] - x[2]\nlet c2 be a long integer with c2 = x[2] * y[3] - x[3] * y[2]\nif a1 * b2 is equal to a2 * b1 and b1 * c2 is equal to b2 * c1\nprint TOWARDS and newline\nelse do the following\nif a1 * b2 is greater than a2 * b1\nprint LEFT and newline\nelse do the following\nprint RIGHT and newline
"long long cross(long long x0, long long y0, long long x1, long long y1) {\n\treturn y1 * x0 - y0 * x1;\n}\nint main() {\n\tvector<long long> X(3), Y(3);\n\tfor (long long i = 0; i < 3; ++i) cin >> X[i] >> Y[i];\n\tlong long c = cross(X[1] - X[0], Y[1] - Y[0], X[2] - X[1], Y[2] - Y[1]);\n\tif (c == 0)\n\t\tcout << ""TOWARDS\n"";\n\telse if (c < 0)\n\t\tcout << ""RIGHT\n"";\n\telse\n\t\tcout << ""LEFT\n"";\n\treturn 0;\n}"	"declare cross with long longs x0, y0, x1, y1 as arguments, returning long long\nreturn y1 * x0 - y0 * x1 from function\ncreate long long vectors X, Y with X initialized with 3, Y initialized with 3\nfor i = 0 to 3 exclusive, read X[i] read Y[i]\ncreate long long c with c = result of run cross with X[1] - X[0], Y[1] - Y[0], X[2] - X[1], Y[2] - Y[1] as arguments\nif c is 0\nprint ""TOWARDS\n""\nelse if c is less than 0\nprint ""RIGHT\n""\nelse\nprint ""LEFT\n"""
"int main() {\n\tint x1, y1, x2, y2, x3, y3;\n\tcin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n\tif ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n\t\tcout << ""TOWARDS"" << endl;\n\t} else if (y1 == y2) {\n\t\tif (x2 > x1) {\n\t\t\tif (y3 > y2)\n\t\t\t\tcout << ""LEFT"" << endl;\n\t\t\telse\n\t\t\t\tcout << ""RIGHT"" << endl;\n\t\t} else {\n\t\t\tif (y3 < y2)\n\t\t\t\tcout << ""LEFT"" << endl;\n\t\t\telse\n\t\t\t\tcout << ""RIGHT"" << endl;\n\t\t}\n\t} else if (x1 == x2) {\n\t\tif (y1 < y2) {\n\t\t\tif (x3 > x2)\n\t\t\t\tcout << ""RIGHT"" << endl;\n\t\t\telse\n\t\t\t\tcout << ""LEFT"" << endl;\n\t\t} else {\n\t\t\tif (x3 < x2)\n\t\t\t\tcout << ""RIGHT"" << endl;\n\t\t\telse\n\t\t\t\tcout << ""LEFT"" << endl;\n\t\t}\n\t} else if (x1 < x2 && y1 < y2) {\n\t\tif (x3 < x2)\n\t\t\tcout << ""LEFT"" << endl;\n\t\telse\n\t\t\tcout << ""RIGHT"" << endl;\n\t} else if (x1 > x2 && y1 > y2) {\n\t\tif (x3 > x2)\n\t\t\tcout << ""LEFT"" << endl;\n\t\telse\n\t\t\tcout << ""RIGHT"" << endl;\n\t} else if (x1 < x2 && y1 > y2) {\n\t\tif (x3 > x2)\n\t\t\tcout << ""LEFT"" << endl;\n\t\telse\n\t\t\tcout << ""RIGHT"" << endl;\n\t} else {\n\t\tif (x3 < x2)\n\t\t\tcout << ""LEFT"" << endl;\n\t\telse\n\t\t\tcout << ""RIGHT"" << endl;\n\t}\n\treturn 0;\n}"	x1, y1, x2, y2, x3, y3 =integers\nRead x1, y1, x2, y2, x3, y3\nif (y2 - y1) * (x3 - x2) is equal to (y3 - y2) * (x2 - x1)\nprint TOWARDS and a new line\nelse if y1 is equal to y2\nif x2 is greater than x1\nif y3 is greater than y2\nprint LEFT and a new line\nelse do the following\nprint RIGHT and a new line\nelse do the following\nif y3 is less than y2\nprint LEFT and a new line\nelse do the following\nprint RIGHT and a new line\nelse if x1 is equal to x2\nif y1 is less than y2\nif x3 is greater than x2\nprint RIGHT and a new line\nelse do the following\nprint LEFT and a new line\nelse do the following\nif x3 is less than x2\nprint RIGHT and a new line\nelse do the following\nprint LEFT and a new line\nelse if x1 is less than x2 and y1 is less than y2\nif x3 is less than x2\nprint LEFT and a new line\nelse do the following\nprint RIGHT and a new line\nelse if x1 is greater than x2 and y1 is greater than y2\nif x3 is greater than x2\nprint LEFT and a new line\nelse do the following\nprint RIGHT and a new line\nelse if x1 is less than x2 and y1 is greater than y2\nif x3 is greater than x2\nprint LEFT and a new line\nelse do the following\nprint RIGHT and a new line\nelse do the following\nif x3 is less than x2\nprint LEFT and a new line\nelse do the following\nprint RIGHT and a new line
int main() {\n\tint n, m;\n\tstring st;\n\tcin >> n >> m;\n\tint res[m];\n\tfor (int i = 0; i < m; i++) { res[i] = 0; }\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> st;\n\t\tif (st.find('1') == string::npos) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tint cur[3 * m];\n\t\tint curAns[m];\n\t\tfor (int j = 0; j < 3 * m; j++) { cur[j] = st[j % m] - '0'; }\n\t\tint counter = 0;\n\t\tfor (int a = m - 1; a >= 0; a--) {\n\t\t\tif (cur[a] == 1)\n\t\t\t\tbreak;\n\t\t\telse\n\t\t\t\tcounter++;\n\t\t}\n\t\tfor (int k = m; k < 2 * m; k++) {\n\t\t\tif (cur[k] == 1) {\n\t\t\t\tcurAns[k % m] = 0;\n\t\t\t\tcounter = 0;\n\t\t\t} else\n\t\t\t\tcurAns[k % m] = ++counter;\n\t\t}\n\t\tcounter = 0;\n\t\tfor (int a = 2 * m; a < 3 * m; a++) {\n\t\t\tif (cur[a] == 1)\n\t\t\t\tbreak;\n\t\t\telse\n\t\t\t\tcounter++;\n\t\t}\n\t\tfor (int k = 2 * m - 1; k >= m; k--) {\n\t\t\tif (cur[k] == 1) {\n\t\t\t\tcurAns[k % m] = 0;\n\t\t\t\tcounter = 0;\n\t\t\t} else {\n\t\t\t\tcounter++;\n\t\t\t\tcurAns[k % m] = min(curAns[k % m], counter);\n\t\t\t}\n\t\t}\n\t\tfor (int j = 0; j < m; j++) { res[j] += curAns[j]; }\n\t}\n\tint min = INT_MAX;\n\tfor (int i = 0; i < m; i++) {\n\t\tif (min > res[i]) min = res[i];\n\t}\n\tcout << min << endl;\n\treturn 0;\n}	"let n and m be integers\ndeclare string called st\nread n and m\nres is an integer array with size m\nfill res with 0\nfor i = 0 to n exclusive\nread st\nif there is no character ""1"" in st\nprint -1 and a new line\ncur is an integer array with 3 * m elements\ncurAns is an array of integers with size m\nfor j = 0 to 3 * m exclusive set cur[j] to st[j % m] - '0'\ndeclare integer called counter = 0\nfor a = m - 1 to 0 inclusive counting down\nif cur[a] = 1\nbreak the loop\nelse\nincrease counter\nfor k = m to 2 * m exclusive\nif cur[k] = 1\ncurAns[k % m] = 0\nset counter to 0\nelse\nincrement counter and set curAns[k % m] = counter\nassign value of 0 to counter\nfor a = 2 * m to 3 * m exclusive\nif cur[a] = 1\nstop the loop\nelse\nincrement counter\nfor integer k = 2 * m - 1 to m inclusive counting down\nif cur[k] = 1\ncurAns[k % m] = 0\nset value of counter to 0\nelse\nincrement counter\ncurAns[k % m] = min of curAns[k % m] and counter\nfor integer j = 0 to m exclusive increase res[j] by curAns[j]\ndeclare integer variable called min = INT_MAX\nfor integer i = 0 to m exclusive\nif min is greater than res[i], set min to res[i]\nprint min and a new line"
"const int INF = 1 << 29;\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tstring a[n];\n\tfor (int i = 0; i < (n); i++) cin >> a[i];\n\tint ans[m];\n\tfor (int i = 0; i < (m); i++) ans[i] = 0;\n\tint chk;\n\tfor (int i = 0; i < (n); i++) {\n\t\tchk = 0;\n\t\tfor (int j = 0; j < (m); j++) { chk += (a[i][j] == '1'); }\n\t\tif (chk == 0) {\n\t\t\tcout << ""-1\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor (int i = 0; i < (n); i++) {\n\t\tint last;\n\t\tbool found = 0;\n\t\tfor (int j = m - 1; j >= 0; --j) {\n\t\t\tif (a[i][j] == '1') {\n\t\t\t\tlast = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint curr[m];\n\t\tfor (int j = 0; j < (m); j++) curr[j] = INT_MAX;\n\t\tfor (int j = 0; j < (m); j++) {\n\t\t\tif (a[i][j] == '1') {\n\t\t\t\tlast = j;\n\t\t\t\tfound = 1;\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\tcurr[j] = min(curr[j], (m - last) + j);\n\t\t\t} else {\n\t\t\t\tcurr[j] = min(curr[j], abs(j - last));\n\t\t\t}\n\t\t}\n\t\tfound = 0;\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tif (a[i][j] == '1') {\n\t\t\t\tlast = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int j = m - 1; j >= 0; --j) {\n\t\t\tif (a[i][j] == '1') {\n\t\t\t\tlast = j;\n\t\t\t\tfound = 1;\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\tcurr[j] = min(curr[j], (last + 1) + (m - 1 - j));\n\t\t\t} else {\n\t\t\t\tcurr[j] = min(curr[j], abs(j - last));\n\t\t\t}\n\t\t}\n\t\tfor (int j = 0; j < (m); j++) ans[j] += curr[j];\n\t}\n\tint res = INT_MAX;\n\tfor (int i = 0; i < (m); i++) res = min(res, ans[i]);\n\tcout << res << endl;\n\treturn 0;\n}"	"integer constant INF = 1 << 29\ndeclare integer variables n and m\nread n and m\na is an array of strings with size n\nread n elements into a\nans is an array of integers with size m\nset m elements of ans to 0\nchk is integer\nfor i = 0 to n exclusive\nset value of chk to 0\nfor integer j = 0 to m exclusive, increment chk by 1 if a[i][j] = '1'\nif chk = 0\nprint ""-1\n""\nfor i = 0 to n exclusive\ndeclare integer called last\ndeclare boolean variable called found = 0\nfor j = m - 1 to 0 inclusive counting down\nif a[i][j] = '1'\nset value of last to j\nstop the loop\n, curr is an array of integers with size m\nfor j = 0 to m exclusive, curr[j] = INT_MAX\nfor j = 0 to m exclusive\nif a[i][j] = '1'\nset value of last to j\nfound = 1\nif found is 0\ncurr[j] = min(curr[j], (m - last) + j)\nelse\ncurr[j] = min of curr[j] and abs(j - last)\nfound = 0\nfor j = 0 to m exclusive\nif a[i][j] = '1'\nlast = j\nbreak the loop\nfor integer j = m - 1 to 0 inclusive counting down\nif a[i][j] = '1'\nset value of last to j\nassign value of 1 to found\nif found is 0\ncurr[j] = min(curr[j], (last + 1) + (m - 1 - j))\nelse\ncurr[j] = min(curr[j], abs(j - last))\nfor integer j = 0 to m exclusive increment ans[j] by curr[j]\nres is integer = INT_MAX\nfor i = 0 to m exclusive, set res to min(res, ans[i])\nprint res and a new line"
"const int maxn = 2e5 + 10;\nint n, m;\nstring s[110];\nint l[110][10010];\nint r[110][10010];\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; ++i) cin >> s[i];\n\tbool bad = false;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint last = -1;\n\t\tfor (int j = 0; j < m; ++j)\n\t\t\tif (s[i][j] == '0')\n\t\t\t\tl[i][j] = (last == -1 ? -1 : j - last);\n\t\t\telse\n\t\t\t\tl[i][j] = 0, last = j;\n\t\tif (last < 0) bad = true;\n\t\tlast = -1;\n\t\tfor (int j = m - 1; j >= 0; --j)\n\t\t\tif (s[i][j] == '0')\n\t\t\t\tr[i][j] = (last == -1 ? -1 : last - j);\n\t\t\telse\n\t\t\t\tr[i][j] = 0, last = j;\n\t\tfor (int j = 0; j < m; ++j)\n\t\t\tif (l[i][j] < 0) l[i][j] = j + l[i][m - 1] + 1;\n\t\tfor (int j = m - 1; j >= 0; --j)\n\t\t\tif (r[i][j] < 0) r[i][j] = (m - 1) - j + r[i][0] + 1;\n\t}\n\tif (bad) {\n\t\tcout << -1 << ""\n"";\n\t\treturn 0;\n\t}\n\tlong long ans = n * m + 1;\n\tfor (int j = 0; j < m; ++j) {\n\t\tlong long cur = 0;\n\t\tfor (int i = 0; i < n; ++i) cur += min(l[i][j], r[i][j]);\n\t\tans = min(ans, cur);\n\t}\n\tcout << ans << ""\n"";\n}"	"create constant integer maxn with maxn = 2e5 + 10\ncreate integers n, m\ncreate string array s with size 110\ncreate 2d integer array l with size 110 by 10010\ncreate 2d integer array r with size 110 by 10010\nread n read m\nfor i = 0 to n exclusive, read s[i]\ncreate boolean bad with bad = false\nfor i = 0 to n exclusive\ncreate integer last with last = -1\nfor j = 0 to m exclusive\nif s[i][j] is '0'\nset l[i][j] to -1 if last is -1, else j - last\nelse\nset l[i][j] to 0, set last to j\nif last is less than 0, set bad to true\nset last to -1\nfor j = m - 1 to 0 inclusive, decrementing j\nif s[i][j] is '0'\nset r[i][j] to -1 if last is -1, else last - j\nelse\nset r[i][j] to 0, set last to j\nfor j = 0 to m exclusive\nif l[i][j] is less than 0, set l[i][j] to j + l[i][m-1] + 1\nfor j = m - 1 to 0 inclusive, decrementing j\nif r[i][j] is less than 0, set r[i][j] to (m - 1) - j + r[i][0] + 1\nif bad is true\nprint -1 print ""\n""\ncreate long long ans with ans = n * m + 1\nfor j = 0 to m exclusive\ncreate long long cur with cur = 0\nfor i = 0 to n exclusive, increment cur by minimum of l[i][j] and r[i][j]\nset ans to minimum of ans and cur\nprint ans print ""\n"""
const int maxn = 11000;\nint INF = 1 << 30;\nint m, n;\nint da[110][maxn];\nint joo[110][maxn];\nint main() {\n\tcin >> m >> n;\n\tstring s;\n\tfor (int i = 0; i < m; i++) {\n\t\tcin >> s;\n\t\tfor (int j = 0; j < n; j++) da[i][j] = (s[j] == '1' ? 1 : 0);\n\t}\n\tint t, jj;\n\tfor (int i = 0; i < m; i++) {\n\t\tt = INF;\n\t\tfor (int j = 0; j < n * 2; j++) {\n\t\t\tjj = j % n;\n\t\t\tif (da[i][jj] == 1) t = 0;\n\t\t\tjoo[i][jj] = t++;\n\t\t}\n\t\tt = INF;\n\t\tfor (int j = n * 2; j >= 0; j--) {\n\t\t\tjj = j % n;\n\t\t\tif (da[i][jj] == 1) t = 0;\n\t\t\tjoo[i][jj] = min(joo[i][jj], t++);\n\t\t}\n\t}\n\tlong long mi = INF, sum;\n\tfor (int j = 0; j < n; j++) {\n\t\tsum = 0;\n\t\tfor (int i = 0; i < m; i++) { sum += joo[i][j]; }\n\t\tmi = min(sum, mi);\n\t}\n\tif (mi >= INF)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << mi << endl;\n\treturn 0;\n}	assign value 11000 to constant integer maxn\ncreate integer INF = 1 << 30\nlet m and n be integers\nda is an 2d array of integers with size 110 by maxn\njoo is an 2d array of integers with size 110 by maxn\nread m and n\ncreate string s\nfor i = 0 to m exclusive\nread s\nfor integer j = 0 to n exclusive set da[i][j] to 1 if s[j] = '1', 0 if it is not\ndeclare integers t and jj\nfor i = 0 to m exclusive\nt = INF\nfor j = 0 while j < n * 2\njj = j % n\nif da[i][jj] = 1, set t to 0\nset joo[i][jj] = t and increment t\nt = INF\nfor integer j = n * 2 to 0 inclusive counting down\njj = j % n\nif da[i][jj] = 1, set t to 0\njoo[i][jj] = min of joo[i][jj] and t\ndeclare long longs mi = INF and sum\nfor integer j = 0 to n exclusive\nassign value of 0 to sum\nfor integer i = 0 to m exclusive add joo[i][j] to sum\nset mi to min of sum and mi\nif mi >= INF\nprint -1 and a new line\nelse\nprint mi and a new line
int dist[2][10004];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring str;\n\t\tcin >> str;\n\t\tint firstone = -1;\n\t\tint ff = 0;\n\t\twhile (ff < m && str[ff] != '1') ff++;\n\t\tif (ff == m) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tfirstone = ff;\n\t\tdist[0][ff] = 0;\n\t\tint j = (ff + 1) % m;\n\t\twhile (true) {\n\t\t\tif (str[j] == '1') {\n\t\t\t\tdist[0][j] = 0;\n\t\t\t\tint k = j;\n\t\t\t\twhile (dist[0][k] < dist[0][(k - 1 + m) % m]) {\n\t\t\t\t\tk = (k - 1 + m) % m;\n\t\t\t\t\tdist[0][k] = dist[0][(k + 1) % m] + 1;\n\t\t\t\t}\n\t\t\t\tif (j == firstone) break;\n\t\t\t} else {\n\t\t\t\tdist[0][j] = dist[0][(j + m - 1) % m] + 1;\n\t\t\t}\n\t\t\tj = (j + 1) % m;\n\t\t}\n\t\tfor (int z = 0; z < m; z++) {\n\t\t\tdist[1][z] += dist[0][z];\n\t\t\tdist[0][z] = 0;\n\t\t}\n\t}\n\tint minn = dist[1][0];\n\tfor (int h = 1; h < m; h++) {\n\t\tif (dist[1][h] < minn) { minn = dist[1][h]; }\n\t}\n\tcout << minn << endl;\n\treturn 0;\n}	dist = array of 2 by 10004 int\nn, m = int\nread n and m\nfor i = 0 to n exclusive\nstr = string\nread str\nfirstone = -1\nff = 0\nwhile ff < m and str[ff] is not '1' increment ff\nif ff is m\nprint -1\nfirstone = ff\ndist[0][ff] = 0\nj = ff+1 modulo m\nwhile true\nif str[j] is '1'\ndist[0][j] = 0\nk = j\nwhile dist[0][k] < dist[0][k-1+m modulo m\nk = k-1+m modulo m\ndist[0][k] = dist[0][k+1 modulo m]+1\nif j is firstone break\nelse\ndist[0][j] = dist[0][j+m-1 modulo m]+1\nj = j+1 modulo m\nfor z = 0 to m exclusive\nincrement dist[1][z] by dist[0][z]\ndist[0][z] = 0\nminn = dist[1][0]\nfor h = 1 to m exclusive\nif dist[1][h] < minn minn = dist[1][h]\nprint minn
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tchar a[n][m];\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < m; ++j) { cin >> a[i][j]; }\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (!count(a[i], a[i] + m, '1')) {\n\t\t\tcout << -1 << '\n';\n\t\t\treturn 0;\n\t\t}\n\t}\n\tint nearest[n][m], l[n][m], r[n][m];\n\tfor (int i = 0; i < n; ++i) {\n\t\tint lst = -1;\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tif (a[i][j] == '1') lst = j;\n\t\t}\n\t\tbool c = true;\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tlst = (a[i][j] == '1' ? j : lst);\n\t\t\tc &= a[i][j] == '0';\n\t\t\tl[i][j] = (c ? m - lst + j : abs(j - lst));\n\t\t}\n\t\tlst = -1;\n\t\tc = true;\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tif (a[i][j] == '1') {\n\t\t\t\tlst = j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int j = m - 1; j >= 0; --j) {\n\t\t\tlst = (a[i][j] == '1' ? j : lst);\n\t\t\tc &= a[i][j] == '0';\n\t\t\tr[i][j] = (c ? lst + 1 + m - (j + 1) : abs(j - lst));\n\t\t}\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < m; ++j) { nearest[i][j] = min(r[i][j], l[i][j]); }\n\t}\n\tint ans = 0x3f3f3f3f;\n\tfor (int j = 0; j < m; ++j) {\n\t\tint cur = 0;\n\t\tfor (int i = 0; i < n; ++i) { cur += nearest[i][j]; }\n\t\tans = min(ans, cur);\n\t}\n\tcout << ans << '\n';\n}	create integers n, m\nread n read m\ncreate 2d character array a of size n by m\nfor i = 0 to n exclusive\nfor j = 0 to m exclusive, read a[i][j]\nfor i = 0 to n exclusive\nif not count of '1' from a[i] to a[i] + m\nprint -1 print '\n'\ncreate 2d integer arrays nearest, l, r, with nearest size n by m, l size n by m, r size n by m\nfor i = 0 to n exclusive\ncreate integer lst with lst = -1\nfor j = 0 to m exclusive\nif a[i][j] is '1', set lst to j\ncreate boolean c with c = true\nfor j = 0 to m exclusive\nset lst to j if a[i][j] is '1', else lst\nset c to (c bitwise and a[i][j]) is 0\nset l[i][j] to m - lst + j if c is true, else absolute value of j - lst\nset lst to -1\nset c to true\nfor j = 0 to m exclusive\nif a[i][j] is '1'\nset lst to j\nbreak loop\nfor j = m - 1 to 0 inclusive, decrementing j\nset lst to j if a[i][j] is '1', else lst\nset c to (c bitwise and a[i][j]) is 0\nset r[i][j] to lst + 1 + m - ( j + 1 ) if c is true, else absolute value of j - lst\nfor i = 0 to n exclusive\nfor j = 0 to m exclusive, set nearest[i][j] to minimum of r[i][j] and l[i][j]\ncreate integer ans with ans = 0x3f3f3f3f\nfor j = 0 to m exclusive\ncreate integer cur with cur = 0\nfor i = 0 to n exclusive, increment cur by nearest[i][j]\nset ans to minimum of ans and cur\nprint ans print '\n'
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 1) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << ""2 1"";\n\t\tfor (int i = 3; i < n; i += 2) { cout << "" "" << i + 1 << "" "" << i; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"declare integer n\nread n\nif n is odd\nprint -1\nelse\nprint ""2 1""\nfor integer i = 3 to n exclusive with increment step 2, print "" "", i + 1, "" "" and i\nprint new line"
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 1) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << ""2 1"";\n\t\tfor (int i = 3; i < n; i += 2) { cout << "" "" << i + 1 << "" "" << i; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"create int n\nread n\nif n mod 2 = 1\nprint -1\notherwise\nprint 2 1\nfor i=3 to n exclusive, print "" "", i+1,"" "", i\nprint a new line"
"int main() {\n\tint t, i;\n\tcin >> t;\n\tif (t % 2 == 1) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << ""2 1"";\n\t\tfor (i = 3; i < t; i += 2) { cout << "" "" << i + 1 << "" "" << i; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"create int t and i\nread t\nif t mod 2 = 1\nprint -1\nelse\nprint 2 1\nfor i=3 to t exclusive, print "" "", i + 1, "" "", i\nprint a new line"
"int num[101];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) num[i] = i + 1;\n\tif (n % 2)\n\t\tcout << -1 << endl;\n\telse {\n\t\tfor (int i = 1; i < n; i += 2) { swap(num[i - 1], num[i]); }\n\t\tfor (int i = 0; i < n - 1; i++) cout << num[i] << "" "";\n\t\tcout << num[n - 1] << endl;\n\t}\n}"	"let num be integer array with size 101\ndeclare integer variable n\nread n\nfor integer i = 0 to n exclusive, set num[i] to i + 1\nif n is even\nprint -1\nelse\nfor i = 1 to n exclusive swap num[i - 1] and num[i]\nfor integer i = 0 to n - 1 exclusive print num[i] and "" ""\nprint num[n - 1]"
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n % 2 == 1)\n\t\tcout << -1 << endl;\n\telse {\n\t\tfor (long long i = 1; i <= n; i++) {\n\t\t\tif (i % 2 == 1)\n\t\t\t\tcout << i + 1;\n\t\t\telse\n\t\t\t\tcout << i - 1;\n\t\t\tif (i == n)\n\t\t\t\tcout << endl;\n\t\t\telse\n\t\t\t\tcout << "" "";\n\t\t}\n\t}\n}"	"n = long long\nread n\nif n is uneven\nprint -1\nelse\ni = 1 to n inclusive\nif i is uneven\nprint i + 1\nelse\nprint i - 1\nif i equals n\nprint newline\nelse\nprint "" """
"int main() {\n\tint n;\n\tcin >> n;\n\tif (n % 2 == 1)\n\t\tcout << -1 << endl;\n\telse {\n\t\tint temp = 2;\n\t\tint count = 0;\n\t\twhile (temp != n - 1) {\n\t\t\tcout << temp << "" "";\n\t\t\tcount++;\n\t\t\tif (count % 2 == 1)\n\t\t\t\ttemp -= 1;\n\t\t\telse\n\t\t\t\ttemp += 3;\n\t\t}\n\t\tcout << temp << endl;\n\t}\n}"	"n = integer\nread n\nif n modulo 2 is 1\nprint -1\nelse\ntemp = integer with temp = 2\ncount = integer with count = 0\nwhile not temp is n - 1\nprint temp,"" ""\nincrement count\nif count modulo 2 is 1\ntemp = temp - 1\nelse\ntemp = temp + 3\nprint temp"
int main() {\n\tint a, b;\n\tcin >> a;\n\tif (a % 2 != 0)\n\t\tcout << -1 << endl;\n\telse {\n\t\tfor (b = 2; b <= a - 2; b += 2) cout << b << ' ' << b - 1 << ' ';\n\t\tcout << a << ' ' << a - 1 << endl;\n\t}\n\treturn 0;\n}	a, b = integer\nread a\nif a modulo not 2 is 0\nprint -1\nelse\nfor b = 2 to a - 2 inclusive with b = b + 2 then print b,' ', b - 1\nprint a,' ',a - 1
"int main() {\n\tint p;\n\tcin >> p;\n\tif (p % 2 == 1)\n\t\tcout << ""-1\n"";\n\telse {\n\t\tcout << ""2 1"";\n\t\tfor (int i = 4; i <= p; i += 2) cout << "" "" << i << "" "" << i - 1;\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	p = integer\nread p\nif p modulo 2 is 1\nprint -1\nelse\nprint 2 1\nfor i = 4 to p inclusive with i = i + 2 then print i, i - 1\nprint new line
void fastIo() {}\nint main() {\n\tfastIo();\n\tint n;\n\tcin >> n;\n\tmap<pair<int, int>, int> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tm[make_pair(x, y)]++;\n\t}\n\tmap<pair<int, int>, int>::iterator it = m.begin();\n\tint cnt = 1;\n\twhile (it != m.end()) {\n\t\tif (it->second > cnt) cnt = it->second;\n\t\tit++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	declare fastIo with no arguments, returning void\nrun fastIo\ncreate integer n\nread n\ncreate pair of ( pair of ( integer and integer ) and integer ) m\nfor i = 0 to n exclusive\ncreate integers x, y\nread x read y\nincrement m[ new pair with x and y ]\ncreate map iterator it from pair of integer and integer to integer with it = beginning of m\ncreate integer cnt with cnt = 1\nwhile it is not end of m\nif second element of it is greater than cnt, set cnt to second element of it\nincrement it\nprint cnt print newline
const int N = 1e5 + 5;\nint n, res = 1, Max = 1;\npair<int, int> a[N];\nvoid Input() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n\tsort(a + 1, a + n + 1);\n}\nvoid Solve() {\n\tint curr = 1;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (a[i].first == a[i - 1].first && a[i].second == a[i - 1].second)\n\t\t\tcurr++, res = max(res, curr);\n\t\telse\n\t\t\tcurr = 1;\n\t}\n\tcout << res << '\n';\n}\nint main() {\n\tInput();\n\tSolve();\n\treturn 0;\n}	create constant int N = 1e5 + 5\ncreate integers n, res and Max with res and Max = 1\na is an array of int/int pairs with N elements\nvoid function Input\nread n\nfor i from 1 to n inclusive incrementing i, read a[i].first and a[i].second\nsort a from index 1 to n + 1\nSolve is a void function\ndeclare integer curr = 1\nloop i from 2 to n inclusive\nif a[i].first = a[i - 1].first and a[i].second = a[i - 1].second\nincrement curr and set res to max of res and curr\nelse\nchange curr to 1\nprint res and '\n'\ncall function Input\ncall function Solve
int main() {\n\tint n, temp[24][60] = {0}, maxi = 0, h, m;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> h >> m;\n\t\ttemp[h][m]++;\n\t\tif (temp[h][m] > maxi) maxi = temp[h][m];\n\t}\n\tcout << maxi << endl;\n\treturn 0;\n}	n, temp = integer 2d array of size [24][60], maxi, h, m = integers with temp = {0}, maxi = 0\nread n\nwhile n\nread h, m\nincrement temp[h][m]\nif temp[h][m] > maxi, maxi = temp[h][m]\nprint maxi
int main() {\n\tint n, h, m, t = -1, c = 0, res = 1;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> h >> m;\n\t\tint t0 = h * 60 + m;\n\t\tc = t0 == t ? c + 1 : 1;\n\t\tif (c > res) res = c;\n\t\tt = t0;\n\t}\n\tcout << res << endl;\n\treturn 0;\n}	n, h, m, t , c, rest = integer with t = -1, c = 0, res = 1\nread n\nfor i = 0 to n exclusive\nread h and m\nt0 = integer with t0 = h * 60 + m\nc = if t0 is t, c + 1 else 1\nif c > res, res = c\nt = t0\nprint res
int main() {\n\tint n, i, j;\n\tint h[100000], m[100000], count[100000];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> h[i] >> m[i]; }\n\tfor (i = 0; i < n; i++) count[i] = 1;\n\tfor (i = 0, j = 0; i < n - 1; i++) {\n\t\tif (h[i] == h[i + 1] && m[i] == m[i + 1]) {\n\t\t\tcount[j]++;\n\t\t} else if (count[j] != 1)\n\t\t\tj++;\n\t}\n\tint ans = count[0];\n\tfor (i = 0; i < n; i++) {\n\t\tif (count[i] > ans) ans = count[i];\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create integers n, i, j\ncreate integer arrays h, m, count with h size 100000, m size 100000, count size 100000\nread n\nfor i = 0 to n exclusive, read h[i] read m[i]\nfor i = 0 to n exclusive, set count[i] to 1\nfor i = 0, j = 0 to i is less than n - 1, incrementing i\nif h[i] is h[i+1] and m[i] is m[i+1]\nincrement count[j]\nelse if count[j] is not 1\nincrement j\ncreate integer ans with ans = count[0]\nfor i = 0 to n exclusive\nif count[i] is greater than ans, set ans to count[i]\nprint ans print newline
"int main() {\n\tint n, i, x[100010], y[100010], c = 0;\n\tvector<int> v;\n\tcin >> n;\n\tmap<pair<int, int>, int> mp;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> x[i] >> y[i];\n\t\tmp[make_pair(x[i], y[i])]++;\n\t}\n\tfor (i = 0; i < n; i++) { v.push_back(mp[make_pair(x[i], y[i])]); }\n\tsort(v.begin(), v.end());\n\tif (v[v.size() - 1] == 0)\n\t\tcout << ""1"" << endl;\n\telse\n\t\tcout << v[v.size() - 1] << endl;\n\treturn 0;\n}"	"n, i, c = int with c = 0 and x, y = int array of size 100010 each\nv = int vector\nread n\nmp = map of pair of int and int and int\nfor i = 0 to n\nread x[i] then y[i]\nincrement mp[make_pair of x[i] and y[i]]\nfor i = 0 to n append mp[make_pair of x[i] and y[i]] to v\nsort v\nif last element of v is 0\nprint ""1""\nelse\nprint last element of v"
int main() {\n\tint n, a, b, c = -1, d = -1, co = 0, m = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a >> b;\n\t\tif (a == c && b == d) {\n\t\t\tco++;\n\t\t\tm = max(m, co);\n\t\t} else\n\t\t\tco = 1;\n\t\tc = a;\n\t\td = b;\n\t}\n\tif (m == 0)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << m << endl;\n\treturn 0;\n}	n, a, b, c , d , co, m = integers with c = -1, d = -1, co = 0, m = 0\nread n\nfor i = 0 to n exclusive\nread a and b\nif a is c and b is d\nincrement co\nm = max of m and co\nelse\nco = 1\nc = a\nd = b\nif m is 0\nprint 1\nelse\nprint m
int main() {\n\tint n, h, m, a[100][100];\n\twhile (cin >> n) {\n\t\tint maxa = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> h >> m;\n\t\t\ta[h][m]++;\n\t\t\tif (a[h][m] > maxa) maxa = a[h][m];\n\t\t}\n\t\tcout << maxa << endl;\n\t}\n\treturn 0;\n}	let n, h, m, a = two dimensional array of int with lengths 100, 100\nwhile reading new values for n\nlet maxa = int = 0\nfor i = 0 to n exclusive\nread h, m\nincrement a[h][m]\nif a[h][m] > maxa, maxa = a[h][m]\nprint maxa
"int main() {\n\tint n, i;\n\tcin >> n;\n\tint a[n + 2], b[n + 2];\n\tint m = 0;\n\tint c[24][60] = {0};\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i] >> b[i];\n\t\tc[a[i]][b[i]]++;\n\t}\n\tfor (i = 0; i < n; i++) { m = max(m, c[a[i]][b[i]]); }\n\tcout << m << ""\n"";\n\treturn 0;\n}"	"create integers n, i\nread n\ncreate integer arrays a, b, with a size n + 2, b size n + 2\ncreate integer m with m = 0\ncreate 2d integer array c with size 24 by 60, with c = {0}\nfor i = 0 to n exclusive\nread a[i] read b[i]\nincrement c[a[i]][b[i]]\nfor i = 0 to n exclusive, set m to maximum of m and c[a[i]][b[i]]\nprint m print ""\n"""
int main() {\n\tint n, hh = -1, mm = -1, h, m, res = 0, k = 1;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> h >> m;\n\t\tif (h == hh && m == mm) {\n\t\t\tk++;\n\t\t} else {\n\t\t\thh = h;\n\t\t\tmm = m;\n\t\t\tres = res > k ? res : k;\n\t\t\tk = 1;\n\t\t}\n\t}\n\tcout << (res > k ? res : k) << endl;\n\treturn 0;\n}	n, hh, mm, h, m, res, k = integers with hh and mm value of -1, res value of 0 and k value of 1\nread n\nfor i = 0 to n exclusive\nread h and m\nif h equals hh and m equals mm\nadd 1 to k\nelse\nset hh to h\nset mm to m\nif res is greater than k then set res to res otherwise set res to k\nset k to 1\nif res is greater than k then print res otherwise print k
const int N = 1e5 + 5;\nint n, res = 1, Max = 1;\npair<int, int> a[N];\nvoid Input() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n\tsort(a + 1, a + n + 1);\n}\nvoid Solve() {\n\tint curr = 1;\n\tfor (int i = 2; i <= n; i++) {\n\t\tif (a[i].first == a[i - 1].first && a[i].second == a[i - 1].second)\n\t\t\tcurr++, res = max(res, curr);\n\t\telse\n\t\t\tcurr = 1;\n\t}\n\tcout << res << '\n';\n}\nint main() {\n\tInput();\n\tSolve();\n\treturn 0;\n}	declare const int N = 1e5 + 5\nlet n, res and Max be ints with res and Max = 1\ncreate an array of int/int pairs called a with N elements\nfunction Input\nread n\nloop i from 1 to n inclusive, read a[i].first and a[i].second\nsort a from index 1 to n + 1\nvoid function Solve\ndeclare int variable curr = 1\nfor i = 2 to n inclusive\nif a[i].first = a[i - 1].first and a[i].second = a[i - 1].second\nincrement curr by one and set res to max of res and curr\nelse\nassign 1 to curr\nprint res and '\n'\ncall function Input\ncall function Solve
"int main() {\n\tint n, ele1, ele2;\n\tcin >> n;\n\tint arr[24 * 60] = {};\n\twhile (n--) {\n\t\tcin >> ele1 >> ele2;\n\t\tarr[ele1 * 60 + ele2]++;\n\t}\n\tint max = 0;\n\tfor (int i = 0; i < 24 * 60; i++) {\n\t\tif (arr[i] > max) { max = arr[i]; }\n\t}\n\tcout << max << ""\n"";\n}"	n, ele1, ele2 = integers\nread n\narr = integer array of size[24 * 60] with arr[24 * 60] = {}\nwhile decrement n\nread ele1 and ele2\nincrement arr[ele1 * 60 + ele2]\nmax = integer with max = 0\nfor i = 0 to 24 * 60 exclusive\nif arr[i] > max, max = arr[i]\nprint max
int main() {\n\tint t;\n\tcin >> t;\n\tint arr[t][2];\n\tfor (int i = 0; i < t; i++) cin >> arr[i][0] >> arr[i][1];\n\tint count = 0, temp = 1;\n\tfor (int i = 1; i < t; i++) {\n\t\tif (temp > count) count = temp;\n\t\tif (arr[i - 1][0] == arr[i][0] && arr[i - 1][1] == arr[i][1])\n\t\t\ttemp++;\n\t\telse\n\t\t\ttemp = 1;\n\t}\n\tif (temp > count) count = temp;\n\tcout << count << endl;\n}	integers = t\nread t\nintegers array = arr[t][2]\nread arr[i][0],arr[i][1]\nset int count to 0, temp to 1\nfor i = 1 to less than t do the following\nset if (temp > count) count equals temp\nif arr[i - 1][0] is arr[i][0] && arr[i - 1][1] equals arr[i][1] then do next\nadd one to temp\nelse\nset temp to 1\nset if (temp > count) count equals temp\noutput count
int main() {\n\tint n;\n\tcin >> n;\n\tint ans = 1, cnt = 1, ph = 99, pm = 99;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint h, m;\n\t\tcin >> h >> m;\n\t\tif (h == ph && m == pm) {\n\t\t\t++cnt;\n\t\t\tif (ans < cnt) ans = cnt;\n\t\t} else {\n\t\t\tcnt = 1;\n\t\t}\n\t\tph = h;\n\t\tpm = m;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integers ans, cnt, ph, pm, with ans = 1, cnt = 1, ph = 99, pm = 99\nfor i = 0 to n exclusive\ncreate integers h, m\nread h read m\nif h is ph and m is pm\nincrement cnt\nif ans is less than cnt, set ans to cnt\nelse\nset cnt to 1\nset ph to h\nset pm to m\nprint ans print newline
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int Arr[n + 2], Sum = 0;\n\tfor (int i = 1; i <= n; i++) cin >> Arr[i], Sum += Arr[i];\n\tlong long int s, t;\n\tcin >> s >> t;\n\tlong long int Cnt = 0;\n\tif (s > t) swap(s, t);\n\tfor (int i = s; i < t; i++) Cnt += Arr[i];\n\tcout << min(Cnt, Sum - Cnt) << ""\n"";\n\treturn 0;\n}"	let n be a long integer\nread n\nlet Arr , Sum be long integers with Sum = 0, Arr = array of long integers of length n + 2\nfor i = 1 to n inclusive , read Arr[i] , increment Sum by Arr[i]\nlet s, t be long integers\nread s, t\nlet Cnt be a long integer with Cnt = 0\nif s is greater than t , swap s, t\nfor i = s to t exclusive , increment Cnt by Arr[i]\nprint minimum of Cnt, Sum - Cnt and newline
int main() {\n\tint a, i, b = 0, c = 0, s, t, n, l1 = 0, l2 = 0, arr[105];\n\tcin >> n;\n\tfor (a = 1; a <= n; a++) { cin >> arr[a]; }\n\tcin >> s;\n\tcin >> t;\n\tif (s > t) {\n\t\tb = t;\n\t\tc = s;\n\t} else {\n\t\tb = s;\n\t\tc = t;\n\t}\n\tfor (a = b; a < c; a++) { l1 = l1 + arr[a]; }\n\tfor (a = c; a != b; a++) {\n\t\tl2 = l2 + arr[a];\n\t\tif (a == n) a = 0;\n\t}\n\tif (l1 <= l2)\n\t\tcout << l1 << endl;\n\telse\n\t\tcout << l2 << endl;\n\treturn 0;\n}	a,i,s,t,n=int, b,c,l1,l2=0, arr=array of 105 int\nread n\nfor a=1 to n inclusive read arr[a]\nread s\nread t\nif s>t\nb=t\nc=s\nelse\nb=s\nc=t\nfor a=b to c exclusive add arr[a] to l1\nincrement a from c while a is not b\nadd arr[a] to l2\nif a is n a=0\nif l1 <= l2\nprint l1\nelse\nprint l2
int d[100 + 7][100 + 7], n, x;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++) d[i][j] = INT_MAX / 10;\n\tfor (int i = 1; i <= n; i++) d[i][i] = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> x;\n\t\tint j = i + 1;\n\t\tif (j > n) j -= n;\n\t\td[i][j] = x;\n\t\td[j][i] = x;\n\t}\n\tfor (int k = 1; k <= n; k++)\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tif (d[i][k] + d[k][j] < d[i][j]) d[i][j] = d[i][k] + d[k][j];\n\tint s, t;\n\tcin >> s >> t;\n\tcout << d[s][t] << endl;\n}	let d, n, x be integers with d = 2d array of integers with 107 rows and 107 columns respectively\nread n\nfor i = 1 to n inclusive\nfor j = 1 to n inclusive , d[i][j] is equal to INT_MAX / 10\nfor i = 1 to n inclusive , d[i][i] is equal to 0\nfor i = 1 to n inclusive\nread x\nlet j be a integer with j = i + 1\nif j is greater than n ,decrement j by n\nd[i][j] is equal to x\nd[j][i] is equal to x\nfor k = 1 to n inclusive\nfor i = 1 to n inclusive\nfor j = 1 to n inclusive\nif d[i][k] + d[k][j] is less than d[i][j] , d[i][j] is equal to d[i][k] + d[k][j]\nlet s, t be integers\nread s, t\nprint d[s][t] and newline
int K, A[105], X, Y, M, N;\nint main() {\n\tcin >> K;\n\tfor (int i = 1; i <= K; i++) {\n\t\tcin >> A[i];\n\t\tN += A[i];\n\t}\n\tcin >> X >> Y;\n\tfor (int i = min(X, Y); i < max(X, Y); i++) { M += A[i]; }\n\tcout << min(M, N - M) << '\n';\n}	create ints K, X, Y, M, and N and int array A of size 105\nread K\nfor i = 1 to K\nread A[i]\nset N to N + A[i]\nread X and Y\nfor i = min(X, Y) to max(X, Y), set M to M + A[i]\nprint the min of M and N - M
int arr[1000];\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint total = 0;\n\t\tmemset(arr, 0, sizeof(arr));\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> arr[i];\n\t\t\ttotal += arr[i];\n\t\t}\n\t\tint s, t;\n\t\tcin >> s >> t;\n\t\tint tmp;\n\t\tif (s > t) {\n\t\t\ttmp = s;\n\t\t\ts = t;\n\t\t\tt = tmp;\n\t\t}\n\t\ts--;\n\t\tt--;\n\t\tint a1 = 0, a2 = 0;\n\t\tfor (int i = s; i < t; i++) { a1 += arr[i]; }\n\t\ta2 = total - a1;\n\t\tcout << min(a2, a1) << endl;\n\t}\n}	let int array arr of size 1000\nlet int n\nwhile cin >> n is truthy\nlet int total = 0\nset every index of arr to 0\nfor i = 0 to n exclusive\nread arr[i]\nset total to total + arr[i]\nlet ints s and t\nread s and t\ncreate int tmp\nif s is greater than t\nset tmp to s\nset s to t\nset t to tmp\ndecrease s by 1\nreduce t by 1\nlet ints a1 = 0 and a2 = 0\nfor i = s to t exclusive, set a1 to a1 + arr[i]\nset a2 to total - a1\nprint the min of a2 and a1
int main() {\n\tint n, sum = 0, sum1 = 0, a, b;\n\tcin >> n;\n\tint x[n];\n\tfor (int i = 0; i < n; i++) { cin >> x[i]; }\n\tcin >> a >> b;\n\tfor (int i = min(a - 1, b - 1); i < max(b - 1, a - 1); i++) { sum += x[i]; }\n\tfor (int i = min(a - 1, b - 1) - 1; i >= 0; i--) sum1 += x[i];\n\tfor (int i = n - 1; i >= max(b - 1, a - 1); i--) sum1 += x[i];\n\tcout << min(sum, sum1) << endl;\n}	n, sum, sum1, a, b = int with sum = 0 and sum1 = 0\nread n\nx = int array of size n\nread n values into x\nread a then b\nfor i = min of a - 1, b - 1 to max of b - 1, a- 1 increment sum by x[i]\nfor i = min of a - 1, b - 1 to 0 inclusive decrementing i increment sum1 by x[i]\nfor i = n - 1 to max of b - 1, a - 1 decrementing i increment sum1 by x[i]\nprint min of sum, sum1
int main() {\n\tint n;\n\tcin >> n;\n\tint d[n + 10];\n\td[0] = 0;\n\tfor (int i = 1; i <= n; i++) { cin >> d[i]; }\n\tint s[n + 15];\n\ts[0] = 0;\n\tfor (int i = 1; i <= n + 1; i++) { s[i] = s[i - 1] + d[i - 1]; }\n\tint sr, t;\n\tcin >> sr >> t;\n\tif (sr > t) swap(sr, t);\n\tint ans = s[t] - s[sr];\n\tans = min(ans, s[sr] + s[n + 1] - s[t]);\n\tcout << ans << endl;\n\treturn 0;\n}	create integer n\nread n\ncreate integer array d with size n + 10\nset d[0] to 0\nfor i = 1 to n inclusive, read d[i]\ncreate integer array s with size n + 15\nset s[0] to 0\nfor i = 1 to n + 1 inclusive, set s[i] to s[i-1] + d[i-1]\ncreate integers sr, t\nread sr read t\nif sr is greater than t, swap values between sr and t\ncreate integer ans with ans = s[t] - s[sr]\nset ans to minimum of ( ans and s[sr] + s[n + 1] - s[t] )\nprint ans print newline
int n, m, dist[100015], x, y, prefs[100015], ans, ans1;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> dist[i]; }\n\tprefs[0] = dist[0];\n\tfor (int i = 1; i < n; i++) { prefs[i] = dist[i] + prefs[i - 1]; }\n\tcin >> x >> y;\n\tx--;\n\ty--;\n\tif (x > y) { swap(x, y); }\n\tans = prefs[y - 1];\n\tans -= prefs[x - 1];\n\tans1 = prefs[n - 1] - ans;\n\tcout << min(ans, ans1) << endl;\n\treturn 0;\n}	create integers n, m, x, y, ans, ans1, create integer arrays dist, prefs with dist size 100015, prefs size 100015\nread n\nfor i = 0 to n exclusive, read dist[i]\nset prefs[0] to dist[0]\nfor i = 1 to n exclusive, set prefs[i] to dist[i] + prefs[i - 1]\nread x read y\ndecrement x\ndecrement y\nif x is greater than y, swap values between x and y\nset ans to prefs[y-1]\ndecrement ans by prefs[x-1]\nset ans1 to prefs[n-1] - ans\nprint minimum of ans and ans1 print newline
int n, s, t, line[101] = {}, ans = 0, tmp = 0;\nint main() {\n\tint i;\n\tcin >> n;\n\tfor (i = 1; i <= n; ++i) cin >> line[i];\n\tcin >> s >> t;\n\ti = s;\n\twhile (i != t) {\n\t\ttmp += line[i];\n\t\t++i;\n\t\tif (i > n) i = 1;\n\t}\n\twhile (i != s) {\n\t\tans += line[i];\n\t\t++i;\n\t\tif (i > n) i = 1;\n\t}\n\tif (tmp < ans) ans = tmp;\n\tcout << ans << endl;\n\treturn 0;\n}	declare n, s, t, ans = 0, tmp = 0 as integers, declare line as integer array with size 101 = {}\ndeclare integer i\nread n\nfor i = 1 to n inclusive, read line[i]\nread s read t\nlet i be s\nwhile i is not t\nincrement tmp by line[i]\nincrement i\nif i is greater than n, let i be 1\nwhile i is not s\nincrement ans by line[i]\nincrement i\nif i is greater than n, let i be 1\nif tmp is less than ans, let ans be tmp\nprint ans and newline
int n, i, s1, s2, s, t, a[105];\nint main() {\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tcin >> s >> t;\n\tif (s > t) swap(s, t);\n\tfor (i = s; i < t; i++) s1 += a[i];\n\tfor (i = 1; i < s; i++) s2 += a[i];\n\tfor (i = n; i >= t; i--) s2 += a[i];\n\tcout << min(s1, s2) << endl;\n\treturn 0;\n}	n, i, s1, s2, s, t, a = integers with a = array of size 105\nread n\nfor i = 1 to n, read a[i]\nread s, t\nif s > t, swap s and t\nfor i = s to t exclusive, s1 = s1 + a[i]\nfor i = 1 to s exclusive, s2 = s2 + a[i]\nfor i = n to t, s2 = s2 + a[i]\nprint min of s1 and s2
int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; ++i) cin >> arr[i];\n\tint a, b;\n\tcin >> a >> b;\n\tint x = max(a, b);\n\tint y = min(a, b);\n\tint d1 = 0;\n\tfor (int i = x - 1; i < n + (y - 1); i++) { d1 += arr[i % n]; }\n\tint d2 = 0;\n\tfor (int i = x - 2; i >= y - 1; i--) { d2 += arr[i % n]; }\n\tcout << min(d1, d2) << endl;\n}	n = int\nread n\narr = int array of size n\nread n values into arr\na, b = int\nread a then b\nx = int with x = max of a and b\ny = int with y = min of a and b\nd1 = int with d1 = 0\nfor i = x - 1 to n + y - 1 increment d1 by arr[i mod n]\nd2 = int with d2 = 0\nfor i = x - 2 to y - 1 inclusive decrementing i increment d2 by arr[i mod n]\nprint min of d1 and d2
int main() {\n\tint NumberOfStations;\n\tint From, To;\n\tint SumOfDistance = 0;\n\tcin >> NumberOfStations;\n\tvector<int> StaionsDistance(NumberOfStations);\n\tfor (int Index = 0; Index < NumberOfStations; Index++) {\n\t\tcin >> StaionsDistance[Index];\n\t\tSumOfDistance += StaionsDistance[Index];\n\t}\n\tcin >> From >> To;\n\tint Start, End;\n\tif (From < To) {\n\t\tStart = From;\n\t\tEnd = To;\n\t} else {\n\t\tStart = To;\n\t\tEnd = From;\n\t}\n\tint TheOtherDestance = 0;\n\tfor (; Start < End; Start++) TheOtherDestance += StaionsDistance[Start - 1];\n\tcout << min(TheOtherDestance, (SumOfDistance - TheOtherDestance)) << endl;\n\treturn 0;\n}	declare NumberOfStations as integer\ndeclare integers From, To\ndeclare integer SumOfDistance = 0\nread NumberOfStations\ndeclare integer vector StationsDistance initialized with NumberOfStations\nfor Index = 0 to NumberOfStations exclusive\nread StationsDistance[Index]\nincrement SumOfDistance by StationsDistance[Index]\nread From and To\ndeclare integers Start, End\nif From is less than To\nlet Start be From\nlet End be To\nelse\nlet Start be To\nlet End be From\ndeclare TheOtherDestance as integer = 0\nfor Start is less than End, incrementing Start, increment TheOtherDestance by StaionsDistance[Start - 1]\nprint minimum of TheOtherDestance and ( SumOfDistance - TheOtherDestance), newline
int main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int d[n];\n\tfor (int i = 0; i < n; i++) { cin >> d[i]; }\n\tlong long int s, t;\n\tcin >> s >> t;\n\tif (s > t) {\n\t\tlong long int temp = s;\n\t\ts = t;\n\t\tt = temp;\n\t}\n\tlong long int dist1 = 0, dist2 = 0;\n\tfor (int i = s - 1; i < t - 1; i++) { dist1 += d[i]; }\n\tbool flag = true;\n\tfor (int i = t - 1; i != s - 1; i++) {\n\t\tif (i % n == 0 && flag) {\n\t\t\ti = -1;\n\t\t\tflag = false;\n\t\t\tcontinue;\n\t\t}\n\t\tdist2 += d[i];\n\t}\n\tif (dist2 > dist1)\n\t\tcout << dist1 << endl;\n\telse\n\t\tcout << dist2 << endl;\n\treturn 0;\n}	n = long long int\nread n\nd = long long int array of size n\nread n values into d\ns, t = long long int\nread s then t\nif s is greater than t\ntemp = long long int with temp = s\nset s to t\nset t to temp\ndist1, dist2 = long long int with dist1 = 0 and dist2 = 0\nfor i = s - 1 to t - 1 increment dist1 by d[i]\nflag = bool with flag = true\nfor i = t - 1 to s - 1\nif i is a multiple of n and flag is true\nset i to -1\nset flag to false\ncontinue\nincrement dist2 by d[i]\nif dist2 > dist1\nprint dist1\nelse\nprint dist2
int main() {\n\tint n, d[255], s, t;\n\tint res1 = 0, res2 = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> d[i]; }\n\tfor (int i = n + 1; i <= 2 * n; i++) { d[i] = d[i - n]; }\n\tcin >> s >> t;\n\tif (s > t) swap(s, t);\n\tfor (int i = s; i < t; i++) { res1 += d[i]; }\n\tfor (int i = t; i < n + s; i++) { res2 += d[i]; }\n\tcout << min(res1, res2) << endl;\n}	let n, d with 255 elements, s, and t be integers\nlet res1 and res2 be integers with value 0\nread n\nread n values into array i\niterate and set 2 * n values into array d with element i - n\nread s and t\nif s is more than t, swap s and t\nfor i from s to t exclusive, add d at element i to res1\nfor i from t to n + s exclusive, add d at element i to res2\nprint min of res1 and res2
"int main() {\n\tint n, s, t, sum = 0, m1 = 0;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tsum += arr[i];\n\t}\n\tcin >> s >> t;\n\ts--;\n\tt--;\n\tint l = min(s, t);\n\tint h = max(s, t);\n\tfor (int i = l; i < h; i++) { m1 += arr[i]; }\n\tcout << min(m1, sum - m1) << ""\n"";\n}"	n, s, t, sum, m1 = int with sum = 0 and m1 = 0\nread n\narr = int array of size n\nfor i = 0 to n\nread arr[i]\nincrement sum by arr[i]\nread s then t\ndecrement s\ndecrement t\nl = int with l = min of s and t\nh = int with h = max of s and t\nfor i = l to j increment m1 by arr[i]\nprint min of m1 and sum - m1
int main() {\n\tint n, m, u, v, x, y;\n\tcin >> n;\n\tint a[105] = {0};\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\tcin >> u >> v;\n\tif (u > v) { swap(u, v); }\n\tint m1 = 0, m2 = 0;\n\tfor (int i = u; i < v; i++) { m1 += a[i]; }\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (i < u || i >= v) { m2 += a[i]; }\n\t}\n\tif (u == v) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << min(m1, m2) << endl;\n\t}\n\treturn 0;\n}	declare integer variables n, m, u, v, x and y\nread user input to n\na is a new array of integers with size 105\nstart for loop from i = 1 to n inclusive, reading user input to a[i] on each loop\nread u and v from the user input\nif u is greater than v, swap u and v\ndeclare int variables m1 and m2 = 0\nfor integer i = u to v exclusive, change m1 to m1 + a[i]\nstart for loop from i = 1 to n inclusive\nif i < u or i >= v, add a[i] to m2\nif u = v\nprint 0\nelse\nprint min of m1 and m2 to the standard output
int main() {\n\tint n, arr[103], s, t, len1 = 0, len2 = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tcin >> s >> t;\n\tif (s > t) swap(s, t);\n\tfor (int i = s - 1; i < t - 1; i++) len1 += arr[i];\n\tint f = n - t + s;\n\tint tt = t - 1;\n\twhile (f--) {\n\t\tif (tt % n == 0) tt = 0;\n\t\tlen2 += arr[tt];\n\t\ttt++;\n\t}\n\tcout << min(len1, len2) << endl;\n\treturn 0;\n}	n, s, t, len1, len2 = int with len1 = 0 and len2 = 0 and arr = int array of size 103\nread n\nread n values into arr\nread s then t\nif s is greater then t then swap s and t\nfor i = s - 1 to t - 1 increment len1 by arr[i]\nf = int with f = n - t + s\ntt = int with tt = t - 1\nloop f times\nif tt is even set tt to 0\nincrement len2 by arr[tt]\nincrement tt\nprint min of len1 and len2
long long int choose(long long int n, long long int m) {\n\tlong long int ans = 0;\n\tlong long int num = 1;\n\tlong long int den = 1;\n\tfor (long long int i = 0; i < m; i++) {\n\t\tnum *= (n - i);\n\t\tnum = num / (i + 1);\n\t}\n\treturn num;\n}\nbool isPrime(int n) {\n\tif (n <= 1) return false;\n\tif (n <= 3) return true;\n\tif (n % 2 == 0 || n % 3 == 0) return false;\n\tfor (int i = 5; i * i <= n; i = i + 6) {\n\t\tif (n % i == 0 || n % (i + 2) == 0) return false;\n\t}\n\treturn true;\n}\nlong long int gcd(long long int a, long long int b) {\n\tif (a == 0) {\n\t\treturn b;\n\t} else {\n\t\treturn gcd(b % a, a);\n\t}\n}\nint main() {\n\tlong long int i, j, k, n, m, t, c;\n\tcin >> n;\n\tvector<long long int> d(n);\n\tfor (i = 0; i < n; i++) { cin >> d[i]; };\n\tlong long int s;\n\tcin >> s >> t;\n\tif (s > t) {\n\t\tm = s;\n\t\ts = t;\n\t\tt = m;\n\t}\n\tlong long int ans1 = 0, ans2 = 0;\n\tfor (i = s - 1; i < t - 1; i++) { ans1 += d[i]; }\n\ti = t - 1;\n\twhile (i != s - 1) {\n\t\tans2 += d[i];\n\t\ti++;\n\t\tif (i == n) i = 0;\n\t}\n\tcout << min(ans1, ans2) << endl;\n\treturn 0;\n}	in function choose with arguments of long long integer n and long long integer m and returns a long long integer\nans = long long integer = 0\nnum = long long integer = 1\nden = long long integer = 1\nfor i = 0 to m exclusive\nnum = num * (n - i)\nnum = num / (i + 1)\nreturn num\nin function isPrime with argument integer n and returns a boolean\nif n <= 1, then return false\nif n <= 3, then return true\nif n is even and n modulo 3 is 0, then return false\nfor i = 5, where i is squared to n inclusive and i = i + 6\nif n modulo i is 0 or n modulo the result of i + 2 is 0, then return false\nreturn true\nin function gcd with arguments of long long integer a and long long integer b and returns a long long integer\nif a is 0\nreturn b\nelse\nreturn the result of calling gcd with arguments of b modulo a and a\ni, j, k, n, m, t, c = long long integers\nread n\nd = long long integer vector of size n\nfor i = 0 to n exclusive, read d[i]\ns = long long integer\nread s, t\nif s > t\nm = s\ns = t\nt = m\nans1 = long long integer = 0, ans2 = long long integer = 0\nfor i = s - 1 to t - 1 exclusive, then ans1 = ans1 + d[i]\ni = t - 1\nwhile i is not s - 1\nans2 = ans2 + d[i]\nincrease i by 1\nif i is n, then i = 0\nprint the lower value between ans1 and ans2
int main() {\n\tlong long ar[100000], i, x, j, y, tn = 1, ans = 0;\n\tint n, m;\n\tlong long tc;\n\tcin >> n;\n\tvector<long long> v, v1;\n\tv.push_back(0);\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tv1 = v;\n\tfor (i = 1; i < v.size(); i++) v[i] += v[i - 1];\n\tcin >> x >> y;\n\tif (x > y) swap(x, y);\n\tif (x == y) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tint t1 = v[y - 1] - v[x - 1];\n\tint t2 = v[v.size() - 1] - v[y] + v1[y] + v[x - 1];\n\tcout << min(t1, t2) << endl;\n\treturn 0;\n}	declare long longs i, x, j, y, tn = 1, ans = 0, long long array ar size 100000\ndeclare n, m as integers\ndeclare tc as long long\nread n\ndeclare v, v1 as long long vectors\nadd 0 to end of v\nfor i = 0 to n exclusive\nread x\nadd x to end of v\nlet v1 be v\nfor i = 1 to size of v exclusive, increment v[i] by v[i-1]\nread x read y\nif x is greater than y, swap values between x and y\nif x is y\nprint 0, newline\ndeclare integer t1 = v[y - 1] - v[x - 1]\ndeclare integer t2 = v[size of v - 1] - v[y] + v1[y] + v[x - 1]\nprint minimum of t1 and t2, newline
int N;\nint x, s, t;\nvector<int> d;\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; ++i) cin >> x, d.push_back(x);\n\tcin >> s >> t;\n\tif ((--s) > (--t)) swap(s, t);\n\tint d1 = 0;\n\tfor (int i = s; i < t; ++i) d1 += d[i];\n\tint d2 = 0;\n\tfor (int i = t; i < N; ++i) d2 += d[i];\n\tfor (int i = 0; i < s; ++i) d2 += d[i];\n\tcout << min(d1, d2) << endl;\n\treturn 0;\n}	let N be int\nlet x, s and t = int\nlet d be vector of int\nread N\nread x and d.push_back of x N times exclusive\nread s and t\nif decremented s is greater than decremented t then swap s and t\nlet d1 be integer set to 0\nadd d of i to d1 i times from s to t exclusive\nlet d2 be integer set to 0\nadd d of i to d2 i times from t to N exclusive\nadd d of i to d2 i times from 0 to s exclusive\nprint min of d1 and d2
string s;\nint i, j, arr[10000];\nint main() {\n\tint a, b, c, d, t, cnt = 0, cn = 0;\n\tcin >> t;\n\tfor (int k = 1; k <= t; k++) { cin >> arr[k]; }\n\tcin >> a >> b;\n\tif (a > b) { swap(a, b); }\n\tfor (i = a; i < b; i++) { cnt += arr[i]; }\n\tfor (i = b;; i++) {\n\t\tif (i == a) break;\n\t\tcn += arr[i];\n\t\tif (i == t) { i = 0; }\n\t}\n\tif (cnt > cn)\n\t\tcout << cn << endl;\n\telse {\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}	create string s\ncreate integers i and j, and an array of integers arr with 10000 elements\ncreate integers a, b, c, d, t, cnt and cn where cnt and cn = 0\nread from the input to t\nin a for loop, change k from 1 to t inclusive, reading variable arr[k] from the input\nread variables a and b from the input\nif a is greater than b, swap a and b\nin the for loop, change i from a to b exclusive, increasing cnt by arr[i]\nstart for loop with i = b, incrementing i by 1\nif i = a, stop the loop\nchange cn to cn + arr[i]\nif i = t, set i to 0\nif cnt is greater than cn\nprint cn to the standard output\nelse\nprint cnt
int main() {\n\tint n, arr[100], s, t;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tcin >> s >> t;\n\tint m1 = min(s, t);\n\tint m2 = max(s, t);\n\tm1--;\n\tm2--;\n\tint R1 = 0, R2 = 0;\n\tfor (int i = m1; i < m2; i++) R1 += arr[i];\n\tfor (int i = m2; i < n; i++) R2 += arr[i];\n\tfor (int i = 0; i < m1; i++) R2 += arr[i];\n\tint R = min(R2, R1);\n\tcout << R << endl;\n\treturn 0;\n}	n, s, t = integers, arr = integer array of size 100\nread n\nfor i = 0 to n exclusive\nread s, t\nm1 = integer = lower value between s, t\nm2 = integer = bigger value between s, t\ndecrease m1 by 1\ndecrease m2 by 1\nR1 = integer = 0, R2 = integer = 0\nfor i = m1 to m2, then R1 = R1 + arr[i]\nfor i = m2 to mn, then R2 = R1 + arr[i]\nfor i = 0 to m1, then R2 = R2 + arr[i]\nR = integer = lower value between R2 and R1\nprint R
int arr[10005];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> arr[i + 1]; }\n\tint s, t;\n\tcin >> s >> t;\n\tif (s > t) { swap(s, t); }\n\tint aa = 0;\n\tfor (int i = s; i < t; i++) { aa += arr[i]; }\n\tint bb = 0;\n\tfor (int i = 1; i < s; i++) { bb += arr[i]; }\n\tfor (int i = t; i <= n; i++) { bb += arr[i]; }\n\tcout << min(aa, bb) << endl;\n}	declare array of integers arr with size 10005\ncreate int n\nread n\nfor i = 0 to i = n - 1 read arr[i + 1]\nlet s and t be integers\nread s and t\nif s is greater than t then swap s and t\ncreate integer aa and set it to 0\nfor i = s to i = t exclusive set aa to aa + arr[i]\ncreate integer bb = 0\nfor i = 1 to i = t exclusive assign bb + arr[i] to bb\nfor i = t to i = n do bb = bb + arr[i]\nprint min of aa and bb
const int maxn = 105;\nint n, d[maxn], s, t;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> d[i];\n\tcin >> s >> t;\n\tint clock = 0, revert = 0, i;\n\tint front = min(s, t), tail = max(s, t);\n\tfor (i = front; i < tail; i++) { clock += d[i]; }\n\tfor (i = tail; i != front; i++) {\n\t\tif (i > n) i %= n;\n\t\tif (i == front) break;\n\t\trevert += d[i];\n\t}\n\tcout << min(clock, revert) << endl;\n}	create constant integer maxn with maxn = 105\ncreate integers n, s, t, create integer array d with size maxn\nread n\nfor i = 1 to n inclusive, read d[i]\nread s read t\ncreate integers clock, revert, i with clock = 0, revert = 0\ncreate integers front, tail, with front = minimum of s and t, tail = maximum of s and t\nfor i = front to tail exclusive, increment clock by d[i]\nfor i = tail to i is not front, incrementing i\nif i is greater than n, set i to i % n\nif i is front, break loop\nincrement revert by d[i]\nprint minimum of clock and revert print newline
int main() {\n\tint n, d[100], s, t, sum = 0, res = 0, mini = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> d[i];\n\t\tsum += d[i];\n\t}\n\tcin >> s >> t;\n\tfor (int i = min(s - 1, t - 1); i < max(t - 1, s - 1); i++) { res += d[i]; }\n\tmini = min(res, sum - res);\n\tcout << mini << endl;\n\treturn 0;\n}	declare int variables n, s, t, sum, res and mini with sum, res and mini = 0, and an array of integers d with 100 elements\nread n\nfor integer i = 0 to n exclusive\nread d[i]\nincrease sum by d[i]\nread input to s and t\nfor i from min of s - 1 and t - 1 to max of t - 1 and s - 1 exclusive, add d[i] to res\nchange mini to min of res and sum - res\nprint mini
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> x;\n\tfor (int i = 0; i < n; i++) {\n\t\tint m;\n\t\tcin >> m;\n\t\tx.push_back(m);\n\t}\n\tint s, t;\n\tcin >> s >> t;\n\tint count1 = 0, count2 = 0;\n\ts = s + n;\n\tfor (int i = s - 1;; i++) {\n\t\tif (i % n == t - 1)\n\t\t\tbreak;\n\t\telse\n\t\t\tcount1 = count1 + x[i % n];\n\t}\n\ts--;\n\tfor (int i = s - 1;; i--) {\n\t\tif (i % n == t - 1) {\n\t\t\tcount2 = count2 + x[i % n];\n\t\t\tbreak;\n\t\t} else\n\t\t\tcount2 = count2 + x[i % n];\n\t}\n\tif (count1 <= count2) {\n\t\tcout << count1 << endl;\n\t} else\n\t\tcout << count2 << endl;\n\treturn 0;\n}	create int n\nread n\ncreate int vector x\nfor i = 0 to n exclusive\nlet int m\nread m\nadd m to the end of x\nlet ints s and t\nread s and t\ncreate ints count1 = 0 and count2 = 0\nset s to s + n\nfor i = s - 1 to infinity\nif i modulo n is equal to t - 1\nbreak loop\notherwise\nset count1 to count1 + x[i % n]\ndecrease s by 1\nfor i = s - 1 to infinity decreasing by 1 each time\nif i modulo n is equal to t - 1\nset count2 to count2 + x[i % n]\nbreak loop\notherwise do\nset count2 to count2 + x[i % n]\nif count1 is less than or equal to count2\nprint count1\notherwise do\nprint count2
int main() {\n\tint n, ans1 = 0, ans2 = 0, d[105], f, t, tot = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> d[i];\n\t\ttot += d[i];\n\t}\n\tcin >> f >> t;\n\tif (f > t) swap(f, t);\n\tfor (int i = f; i < t; i++) ans1 += d[i];\n\tans2 = tot - ans1;\n\tcout << min(ans1, ans2) << '\n';\n}	create ints n, ans1 = 0, ans2 = 0, f, t, and tot = 0 and int array d of size 105\nread n\nfor i = 1 to n\nread d[i]\nset tot to tot + d[i]\nread f and t\nif f is greater than t, swap the values of f and t\nfor i = f to t exclusive, set ans1 to ans1 + d[i]\nset ans2 to tot - ans1\nprint the min of ans1 and ans2
const long long int MOD = 1000000007;\nlong long int N, M, K, H, W, L, R;\nint main() {\n\tcin >> N;\n\tvector<int> v(N + 1);\n\tfor (int i = 1; i <= N; i++) cin >> v[i];\n\tM = accumulate(v.begin(), v.end(), 0);\n\tfor (int i = 1; i <= N; i++) v[i] += v[i - 1];\n\tcin >> L >> R;\n\tif (L > R) swap(L, R);\n\tcout << min(v[R - 1] - v[L - 1], (int)M - v[R - 1] + v[L - 1]) << endl;\n\treturn 0;\n}	mod = long long = 1000000007\nN, M, K, H, W, L, R = long long integer\nread N\nv = integer vector of size N + 1\nfor i = 1 to N inclusive, then read v[i]\nM = sum of all values of v\nfor i = 1 to N inclusive, v[i] = v[i] + v[i - 1]\nread L, R\nif L > R swap the values of L, R\nprint the result of the lower value between v[R - 1] - v[L - 1] and M in integer form - v[R - 1] + v[L - 1]
"int main() {\n\tchar c[4][4];\n\tfor (int i = 0; i < 4; i++) {\n\t\tfor (int j = 0; j < 4; j++) { cin >> c[i][j]; }\n\t}\n\tint x = 0, y = 0, z = 0, v = 0;\n\twhile (true) {\n\t\tfor (int j = z; j < z + 2; j++) {\n\t\t\tif (c[v][j] == '#') x++;\n\t\t\tif (c[v][j] == '.') y++;\n\t\t\tif (c[v + 1][j] == '#') x++;\n\t\t\tif (c[v + 1][j] == '.') y++;\n\t\t}\n\t\tif (x > y || y > x) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tx = 0;\n\t\ty = 0;\n\t\tz++;\n\t\tif (z == 3) {\n\t\t\tv++;\n\t\t\tz = 0;\n\t\t}\n\t\tif (v == 3) { break; }\n\t}\n\tcout << ""NO"" << endl;\n}"	"create character array c with size 4 by 4\nfor i = 0 to 4 exclusive\nfor j = 0 to 4 exclusive read c[i][j]\ndeclare integers x, y, z and v = 0\nin the infinite loop\nfor j = z to z + 2 exclusive\nif c[v][j] = '#' increment x\nif c[v][j] = '.' increment y\nif c[v + 1][j] = '#' increment x\nif c[v + 1][j] = '.' increment y\nif x > y or y is greater than x\nprint ""YES""\nset x to 0\nset y to 0\nincrease z by one\nif z = 3\nincrease v by one\nset z to 0\nif v = 3, break the loop\nprint ""NO"""
"bool a[4][4];\nbool f() {\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tbool bol = a[i][j];\n\t\t\tif (a[i + 1][j] == bol && a[i + 1][j + 1] == bol && a[i][j + 1] == bol) { return true; }\n\t\t}\n\t}\n\treturn false;\n}\nint main() {\n\tchar h;\n\tfor (int i = 0; i < 4; i++) {\n\t\tfor (int j = 0; j < 4; j++) {\n\t\t\th = getchar();\n\t\t\tif (h == '#')\n\t\t\t\ta[i][j] = true;\n\t\t\telse\n\t\t\t\ta[i][j] = false;\n\t\t}\n\t\th = getchar();\n\t}\n\tfor (int i = 0; i < 4; i++) {\n\t\tfor (int j = 0; j < 4; j++) {\n\t\t\ta[i][j] = (a[i][j] == true ? false : true);\n\t\t\tif (f() == true) {\n\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\ta[i][j] = (a[i][j] == true ? false : true);\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create 2d boolean array a with size 4 by 4\ndeclare f with no arguments, returning boolean\nfor i = 0 to 3 exclusive\nfor j = 0 to 3 exclusive\ncreate boolean bol with bol = a[i][j]\nif a[i+1][j] is bol and a[i+1][j+1] is bol and a[i][j+1] is bol, return true from function\nreturn false from function\ncreate character h\nfor i = 0 to 4 exclusive\nfor j = 0 to 4 exclusive\nset h to read character\nif h is '#'\nset a[i][j] to true\nelse\nset a[i][j] to false\nset h to read character\nfor i = 0 to 4 exclusive\nfor j = 0 to 4 exclusive\nset a[i][j] to false if a[i][j] is true, else true\nif result of run f is true\nprint ""YES"" print newline\nset a[i][j] to false if a[i][j] is true, else true\nprint ""NO"" print newline"
"int main() {\n\tvector<string> vs(4);\n\tfor (size_t i = 0; i < 4; ++i) { cin >> vs[i]; }\n\tbool pass = false;\n\tfor (size_t top = 0; top <= 2 && !pass; ++top) {\n\t\tfor (size_t left = 0; left <= 2; ++left) {\n\t\t\tint dot = 0;\n\t\t\tfor (size_t r = 0; r < 2; ++r) {\n\t\t\t\tfor (size_t c = 0; c < 2; ++c) {\n\t\t\t\t\tif (vs[top + r][left + c] == '.') { dot += 1; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dot != 2) {\n\t\t\t\tpass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcout << (pass ? ""YES"" : ""NO"") << endl;\n\treturn 0;\n}"	"create string vector vs initialized with 4\nfor i = 0 to 4 exclusive, read vs[i]\ncreate boolean pass with pass = false\nfor top = 0 to top is less than or equal to 2 and not pass, incrementing top\nfor left = 0 to 2 inclusive\ncreate integer dot with dot = 0\nfor r = 0 to 2 exclusive\nfor c = 0 to 2 exclusive\nif vs[top+r][left+c] is '.', increment dot by 1\nif dot is not 2\nset pass to true\nbreak loop\nprint ""YES"" if pass is true, else ""NO"", print newline"
"void compute() {\n\tchar a[4][4];\n\tfor (int i = 0; i < 4; i++)\n\t\tfor (int j = 0; j < 4; j++) cin >> a[i][j];\n\tfor (int i = 0; i < 4; i++) {\n\t\tfor (int j = 0; j < 4; j++) {\n\t\t\tif (j <= 2 && i <= 2) {\n\t\t\t\tint hutch = 0, dots = 0;\n\t\t\t\tfor (int k = 0; k < 2; k++) {\n\t\t\t\t\tfor (int l = 0; l < 2; l++)\n\t\t\t\t\t\tif (a[i + k][j + l] == '#')\n\t\t\t\t\t\t\t++hutch;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t++dots;\n\t\t\t\t}\n\t\t\t\tif (hutch >= 3 || dots >= 3) {\n\t\t\t\t\tcout << ""YES\n"";\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO\n"";\n}\nint main() {\n\tcompute();\n\treturn 0;\n}"	"declare compute\ncreate 2d character array a with size 4 by 4\nfor i = 0 to 4 exclusive\nfor j = 0 to 4 exclusive, read a[i][j]\nfor i = 0 to 4 exclusive\nfor j = 0 to 4 exclusive\nif j is less than or equal to 2 and i is less than or equal to 2\ncreate integers hutch, dots with hutch = 0, dots = 0\nfor k = 0 to 2 exclusive\nfor l = 0 to 2 exclusive\nif a[i + k][j + l] is '#'\nincrement hutch\nelse\nincrement dots\nif hutch is greater than or equal to 3 or dots is greater than or equal to 3\nprint ""YES\n""\nreturn from function\nprint ""NO\n""\nrun compute"
"int main() {\n\tstring s[5];\n\tfor (int i = 0; i < 4; i++) cin >> s[i];\n\tfor (int x = 1; x < 4; x++)\n\t\tfor (int y = 1; y < 4; y++) {\n\t\t\tint cnt = 0;\n\t\t\tfor (int i = 0; i < 2; i++)\n\t\t\t\tfor (int j = 0; j < 2; j++)\n\t\t\t\t\tif (s[x - i][y - j] != s[x][y]) cnt++;\n\t\t\tif (cnt ^ 2) return cout << ""YES\n"", 0;\n\t\t}\n\tcout << ""NO\n"";\n\treturn 0;\n}"	let s = array of strings of length 5\nfor (i = 0 to 4 exclusive), read ith element of array s\nfor ( x = 1 to 4 exclusive )\nfor ( y = 1 to 4 exclusive )\nlet cnt be a integer with value assigned as 0\nfor i=0 to 2 (exclusive)\nfor j=0 to 2 (exclusive)\nif (s[x - i][y - j] is not equal to s[x][y]), increase cnt value by 1\ncheck if (cnt power 2), then return print YES and newline\nprint NO and newline
"const long long mod = 10e9 + 7;\nconst double eps = 1e-11;\nconst double PI = 2 * acos(0.0);\nint main() {\n\tchar arr[4][4];\n\tfor (int i = 0; i < 4; i++) {\n\t\tfor (int j = 0; j < 4; j++) { cin >> arr[i][j]; }\n\t}\n\tfor (int i = 0; i < 4; i++) {\n\t\tfor (int j = 0; j < 4; j++) {\n\t\t\tif (arr[i][j] == '.' or arr[i][j] == '#') {\n\t\t\t\tif (arr[i][j - 1] == '#' and j - 1 >= 0) {\n\t\t\t\t\tif (arr[i - 1][j] == '#' and i - 1 >= 0) {\n\t\t\t\t\t\tif (arr[i - 1][j - 1] == '#' and i - 1 >= 0 and j - 1 >= 0) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arr[i][j + 1] == '#' and j + 1 < 4) {\n\t\t\t\t\tif (arr[i - 1][j] == '#' and i - 1 >= 0) {\n\t\t\t\t\t\tif (arr[i - 1][j + 1] == '#' and j + 1 < 4 and i - 1 >= 0) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arr[i][j - 1] == '#' and j - 1 >= 0) {\n\t\t\t\t\tif (arr[i + 1][j] == '#' and i + 1 < 4) {\n\t\t\t\t\t\tif (arr[i + 1][j - 1] == '#' and i + 1 < 4 and j - 1 >= 0) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arr[i][j + 1] == '#' and j + 1 < 4) {\n\t\t\t\t\tif (arr[i + 1][j] == '#' and i + 1 < 4) {\n\t\t\t\t\t\tif (arr[i + 1][j + 1] == '#' and i + 1 < 4 and j + 1 < 4) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arr[i][j - 1] == '.' and j - 1 >= 0) {\n\t\t\t\t\tif (arr[i - 1][j] == '.' and i - 1 >= 0) {\n\t\t\t\t\t\tif (arr[i - 1][j - 1] == '.' and i - 1 >= 0 and j - 1 >= 0) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arr[i][j + 1] == '.' and j + 1 < 4) {\n\t\t\t\t\tif (arr[i - 1][j] == '.' and i - 1 >= 0) {\n\t\t\t\t\t\tif (arr[i - 1][j + 1] == '.' and i - 1 >= 0 and j + 1 < 4) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arr[i][j - 1] == '.' and j - 1 >= 0) {\n\t\t\t\t\tif (arr[i + 1][j] == '.' and i + 1 < 4) {\n\t\t\t\t\t\tif (arr[i + 1][j - 1] == '.' and i + 1 < 4 and j - 1 >= 0) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arr[i][j + 1] == '.' and j + 1 < 4) {\n\t\t\t\t\tif (arr[i + 1][j] == '.' and i + 1 < 4) {\n\t\t\t\t\t\tif (arr[i + 1][j + 1] == '.' and i + 1 < 4 and j + 1 < 4) {\n\t\t\t\t\t\t\tputs(""YES"");\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tputs(""NO"");\n}"	"create constant long long mod with mod = 10e9 + 7\ncreate constant double eps with eps = 1e-11\ncreate constant double PI with PI = 2 * acosign of 0.0\ncreate 2d character array arr of size 4 by 4\nfor i = 0 to 4 exclusive\nfor j = 0 to 4 exclusive, read arr[i][j]\nfor i = 0 to 4 exclusive\nfor j = 0 to 4 exclusive\nif arr[i][j] is '.' or arr[i][j] is '#'\nif arr[i][j-1] is '#' and j - 1 is greater than or eqaul to 0\nif arr[i-1][j] is '#' and i - 1 is greater than or equal to 0\nif arr[i-1][j-1] is '#' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0\nprint ""YES""\nif arr[i][j+1] is '#' and j + 1 is less than 4\nif arr[i-1][j] is '#' and i - 1 is greater than or equal to 0\nif arr[i-1][j+1] is '#' and j+1 is less than 4 and i - 1 is greater than or equal to 0\nprint ""YES""\nif arr[i][j-1] is '#' and j - 1 is greater than or equal to 0\nif arr[i+1][j] is '#' and i + 1 is less than 4\nif arr[i+1][j-1] is '#' and i + 1 is less than 4 and j - 1 is greater than or equal to 0\nprint ""YES""\nif arr[i][j+1] is '#' and j + 1 is less than 4\nif arr[i+1][j] is '#' and i + 1 is less than 4\nif arr[i+1][j+1] is '#' and i + 1 is less than 4 and j + 1 is less than 4\nprint ""YES""\nif arr[i][j-1] is '.' and j - 1 is greater than or equal to 0\nif arr[i-1][j] is '.' and i - 1 is greater than or equal to 0\nif arr[i-1][j-1] is '.' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0\nprint ""YES""\nif arr[i][j+1] is '.' and j + 1 is less than 4\nif arr[i-1][j] is '.' and i -1 is greater than or equal to 0\nif arr[i-1][j+1] is '.' and i - 1 is greater than or equal to 0 and j + 1 is less than 4\nprint ""YES""\nif arr[i][j-1] is '.' and j - 1 is greater than or equal to 0\nif arr[i+1][j] is '.' and i + 1 is less than 4\nif arr[i+1][j-1] is '.' and i + 1 is less than 4 and j - 1 is greater than or equal to 0\nprint ""YES""\nif arr[i][j+1] is '.' and j + 1 is less than 4\nif arr[i+4][j] is '.' and i + 1 is less than 4\nif arr[i+1][j+1] is '.' and i + 1 is less than 4 and j + 1 is less than 4\nprint ""YES""\nprint ""NO"""
"int main() {\n\tstring grid[4];\n\tcin >> grid[0] >> grid[1] >> grid[2] >> grid[3];\n\tbool found = false;\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tint c1 = 0, c2 = 0;\n\t\t\tfor (int i1 = i; i1 <= i + 1; i1++) {\n\t\t\t\tfor (int j1 = j; j1 <= j + 1; j1++) {\n\t\t\t\t\tif (grid[i1][j1] == '.')\n\t\t\t\t\t\tc1++;\n\t\t\t\t\telse\n\t\t\t\t\t\tc2++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (c1 != 2) { found = true; }\n\t\t}\n\t}\n\tcout << (found ? ""YES"" : ""NO"") << endl;\n\treturn 0;\n}"	let grid = array of strings of length 4\nread the 0th element of grid, 1st element of grid,2nd element of grid and 3rd element of grid\nboolean found is equal to false\nfor i= 0 to 3 exclusive\nfor j= 0 to 3 exclusive\nlet the integers c1, c2 are assigned as c1 is equal to 0 and c2 is equal to 0 respectively\nfor (int i1 = i to i+1 inclusive)\nfor (int j1 = j to j+1 inclusive)\nif ( the 2d array grid[i1][j1] is equal to .)\nincrease c1 by 1\nelse do the following\nincrease c2 by 1\nif (c1 is not equal to 2), found is equal to true\nprint YES if found else print NO
"char a[6][6];\nint nCount(int x, int y, char c) {\n\tint res = 0;\n\tif (a[x + 1][y] == c) { res++; }\n\tif (a[x][y + 1] == c) { res++; }\n\tif (a[x + 1][y + 1] == c) { res++; }\n\treturn res;\n}\nint main() {\n\tchar z;\n\tfor (int i = 1; i <= 4; i++) {\n\t\tfor (int j = 1; j <= 4; j++) {\n\t\t\tcin >> z;\n\t\t\ta[i][j] = z;\n\t\t}\n\t}\n\tfor (int i = 1; i <= 4; i++) {\n\t\tfor (int j = 1; j <= 4; j++) {\n\t\t\tif (a[i][j] == '#') {\n\t\t\t\tif (nCount(i, j, '#') >= 2 || nCount(i, j, '.') >= 3) {\n\t\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (nCount(i, j, '.') >= 2 || nCount(i, j, '#') >= 3) {\n\t\t\t\t\tcout << ""YES"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare character array a with size 6 by 6\nint function nCount with integer arguments x and y and character argument c\ncreate integer res = 0\nincrement res if a[x + 1][y] = c\nincrement res if a[x][y + 1] = c\nincrement res if a[x + 1][y + 1] = c\nreturn res\ndeclare character z\nfor integer i = 1 to 4 inclusive\nfor integer j = 1 to 4 inclusive\nread z\na[i][j] = z\nfor i = 1 to 4 inclusive\nfor j = 1 to 4 inclusive\nif a[i][j] = '#'\nif nCount(i, j, '#') >= 2 || nCount(i, j, '.') >= 3\nprint ""YES""\nelse\nif nCount(i, j, '.') >= 2 || nCount(i, j, '#') >= 3\nprint ""YES""\nprint ""NO"""
"char m[4][4];\nbool check(int i, int j) {\n\tint cnt = 0, cnt2 = 0;\n\tfor (int k = i; k < i + 2; k++) {\n\t\tfor (int d = j; d < j + 2; d++) {\n\t\t\tif (m[k][d] == '#')\n\t\t\t\t++cnt;\n\t\t\telse\n\t\t\t\t++cnt2;\n\t\t}\n\t}\n\tif (cnt == 3 || cnt == 4 || cnt2 == 3 || cnt2 == 4) return true;\n\treturn false;\n}\nint main() {\n\tfor (int i = 0; i < 4; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tfor (int j = 0; j < 4; j++) { m[i][j] = s[j]; }\n\t}\n\tbool sol = false;\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tif (check(i, j)) sol = true;\n\t\t}\n\t}\n\tif (sol) {\n\t\tcout << ""YES\n"";\n\t} else {\n\t\tcout << ""NO\n"";\n\t}\n\treturn 0;\n}"	"create character array m with 4 by 4 elements\nfunction check with integer arguments i and j that returns boolean\ndeclare integers cnt and cnt2 = 0\nfor k = i to i + 2 exclusive\nfor d = j to j + 2 exclusive\nif m[k][d] is '#'\nincrement cnt\nelse\nincrement cnt2\nreturn true if cnt = 3 || cnt = 4 || cnt2 = 3 || cnt2 = 4\nreturn false\nfor integer i = 0 to 4 exclusive\ndeclare string variable s\nread s\nfor integer j = 0 to 4 exclusive, set m[i][j] to s[j]\ndeclare boolean variable sol = false\nfor integer i = 0 to 3 exclusive\nfor j = 0 to 3 exclusive\nif check(i, j) is true, set sol to true\nif sol is true\nprint ""YES\n""\nelse\nprint ""NO\n"""
int num[225];\nint main() {\n\tint n, m, i, j, k;\n\tcin >> n >> k;\n\tnum['a'] = k;\n\tfor (i = 1; i < k; i++) num['a' + i]++;\n\tif (k > n)\n\t\tcout << -1 << endl;\n\telse if (n == 1)\n\t\tcout << 'a' << endl;\n\telse if (k == 1 && n > 1) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tint f = 1;\n\t\tfor (i = 1; i <= n - (k - 2); i++) {\n\t\t\tif (i % 2)\n\t\t\t\tcout << 'a';\n\t\t\telse\n\t\t\t\tcout << 'b';\n\t\t}\n\t\tfor (i = 1; i <= k - 2; i++) { cout << (char)('b' + i); }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	num = array of 225 integers\nn, m, i, j, k = integers\nread n and k\nset a index of num to k\nfor i = 1 to k exclusive increment num['a' + i]\nif k > n\nprint -1\nelse if n is 1\nprint a\nelse if k is 1 and n > 1\nprint -1\nelse\nset f to 1\nfor i = 1 to n - (k - 2) inclusive\nif i modulo 2\nprint a\nelse\nprint b\nfor i = 1 to k - 2 inclusive print (char)('b' + i)\nprint a new line
"int main() {\n\tint n, k, sig = 0;\n\tstring s;\n\tcin >> n >> k;\n\tif (k == 1 && n > 1)\n\t\tcout << ""-1\n"";\n\telse if (k > n)\n\t\tcout << ""-1\n"";\n\telse if (n == 1 && k == 1)\n\t\tcout << ""a\n"";\n\telse {\n\t\tint i, j = n - k + 1;\n\t\tif ((j & 1) == 0) { j--, sig = 1; }\n\t\tfor (i = 0; i <= j; i += 2) s += ""ab"";\n\t\tif (sig) { s += ""a"", i = j + 2; }\n\t\tchar c = 'b';\n\t\tfor (; i < n; i++) s += (char)(c + 1), c = s[i];\n\t\tcout << s << endl;\n\t}\n\treturn 0;\n}"	"create integers n, k, sig with sig = 0\ncreate string s\nread n read k\nif k is 1 and n is greater than 1\nprint ""-1\n""\nelse if k is greater than n\nprint ""-1\n""\nelse if n is 1 and k is 1\nprint ""a\n""\nelse\ncreate integers i, j with j = n - k + 1\nif ( j bitwise and 1 ) is 0, decrement j, set sig to 1\nfor i = 0 to j inclusive, increment i by 2, increment s by ""ab""\nif sig is true, increment s by ""a"", set a to j + 2\ncreate character c with c = 'b'\nfor i is less than n, incrementing i, increment s by character casted ( c + 1 ), set c to s[i]\nprint s print newline"
int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tif (n < k || (k == 1 && n != 1))\n\t\tcout << -1 << endl;\n\telse if (k == 1 && n == 1)\n\t\tcout << 'a' << endl;\n\telse {\n\t\tfor (int i = 1; i <= n - (k - 2); i++) {\n\t\t\tif (i & 1)\n\t\t\t\tcout << 'a';\n\t\t\telse\n\t\t\t\tcout << 'b';\n\t\t}\n\t\tint x = n - (k - 2);\n\t\tchar ch = 'c';\n\t\tfor (int i = 1; i <= k - 2; i++) { cout << ch++; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	create integers n and k\nread n and k\nif n < k or (k = 1 and n != 1)\nprint -1\nelse if k = 1 and n = 1\nprint 'a'\nelse\nfor i = 1 to n - (k - 2) inclusive\nif i & 1\nprint 'a'\nelse\nprint 'b'\ndeclare integer variable x = n - (k - 2)\ndeclare character ch = 'c'\nfor i = 1 to k - 2 inclusive print ch and increment it\nprint new line
int main() {\n\tint n, k, zzz;\n\tcin >> n >> k;\n\tif (n < k || (k == 1 && n != 1))\n\t\tcout << -1 << endl;\n\telse if (k == 1 && n == 1)\n\t\tcout << 'a' << endl;\n\telse {\n\t\tfor (int i = 1; i <= n - (k - 2); i++) {\n\t\t\tif (i & 1)\n\t\t\t\tcout << 'a';\n\t\t\telse\n\t\t\t\tcout << 'b';\n\t\t}\n\t\tint x = n - (k - 2);\n\t\tchar ch = 'c';\n\t\tfor (int i = 1; i <= k - 2; i++) { cout << ch++; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	create n, k and zzz\nread n, k\nif n<k or k=1 and n is different from 1\nprint -1\nelse if k=1 and n=1\nprint a and a new line\nelse\nfor i=1 to n - k -2 inclusive\nif i is odd\nprint a\nels\nprint b and a new line\nset x to n - k - 2\nassign c to ch\nfor i=1 to k inclusive, print increment ch\nprint a new line
"int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tif (k > n || (k == 1 && n > 1))\n\t\tcout << -1 << endl;\n\telse if (k == 1) {\n\t\tcout << 'a' << endl;\n\t} else {\n\t\tlong long x = n - (k - 2);\n\t\tstring str = """";\n\t\tlong long i = 0;\n\t\twhile (i < x) {\n\t\t\tif (i % 2 == 0)\n\t\t\t\tstr += ""a"";\n\t\t\telse\n\t\t\t\tstr += ""b"";\n\t\t\ti++;\n\t\t}\n\t\tfor (long long i = 2; i < k; i++) {\n\t\t\tchar ch = (i + 'a');\n\t\t\tstr += ch;\n\t\t}\n\t\tcout << str << endl;\n\t}\n\treturn 0;\n}"	"declare long long variables n and k\nread n and k\nif k > n || (k = 1 && n > 1)\nprint -1\nelse if k = 1\nprint 'a'\nelse\ndeclare long long x = n - (k - 2)\ndeclare string str = "" ""\ndeclare long long variable i = 0\nwhile i is less than x\nif i is even\nappend ""a"" to str\nelse\nappend ""b"" to str\nincrease i\nfor long long i = 2 to k exclusive\ndeclare character ch = (i + 'a')\nappend ch to str\nprint str"
int n, k;\nint main() {\n\tcin >> n >> k;\n\tif (k > n) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (k == 1) {\n\t\tif (n == 1)\n\t\t\tcout << 'a' << endl;\n\t\telse\n\t\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (k == 2) {\n\t\tfor (int i = 0; i < n; i++) { cout << char('a' + (i & 1)); }\n\t\tcout << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < n - k + 2; i++) { cout << char('a' + (i & 1)); }\n\tfor (int i = 0; i < k - 2; i++) { cout << char('c' + i); }\n\tcout << endl;\n}	let n, k be ints\nread n, k\nif k is less than n do the following\nprint -1 and one newline\nif ke equals 1 do the following\nif n equals 1 do the following\nprint a and one newline\nelse\nprint -1 and one newline\nif k equals 2 do the following\nfor int = 0 to n exclusive print char('a' + (i & 1))\nprint one newline\nfor i = 0 to n - k + 2 exclusive print char('a' + (i & 1))\nfor i = 0 to k - 2 exclusive print char('c' + i)\nprint one newline
"int main() {\n\tint i, j, k, l, n, m;\n\tcin >> n >> m;\n\tk = m;\n\tif (n < m || (m == 1 && n > 1)) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tmap<int, char> mm;\n\tchar h = 'a';\n\tfor (i = 0; i < 26; i++) {\n\t\tmm[i] = h;\n\t\th++;\n\t}\n\tstring st = """";\n\tif (n == m) {\n\t\tfor (i = 0; i < n; i++) { st += mm[i]; }\n\t\tcout << st << endl;\n\t\treturn 0;\n\t}\n\tfor (i = 0; i < n - (m - 2); i++) {\n\t\tif (i % 2 == 0)\n\t\t\tst += mm[0];\n\t\telse\n\t\t\tst += mm[1];\n\t}\n\tfor (i = 0; i < m - 2; i++) { st += mm[i + 2]; }\n\tcout << st << endl;\n\treturn 0;\n}"	"declare integer variables i, j, k, l, n and m\nread n and m\nk = m\nif n < m or (m = 1 and n is greater than 1)\nprint -1\ncreate a map from integers to characters called mm\ncreate character h = 'a'\nfor i = 0 to 26 exclusive\nset value of mm[i] to h\nincrease h by one\ndeclare string variable st = "" ""\nif n = m\nfor i = 0 to n exclusive, apped mm[i] to st\nprint st\nfor i = 0 to n - (m - 2) exclusive\nif i is even\nappend mm[0] to st\nelse\nappend mm[1] to st\nfor i = 0 to m - 2 exclusive, append mm[i + 2] to st\nprint st"
"int main() {\n\tint a, b;\n\twhile (cin >> a >> b) {\n\t\tint i;\n\t\tif (a == 1) {\n\t\t\tif (b > 1) {\n\t\t\t\tcout << ""-1"" << endl;\n\t\t\t} else {\n\t\t\t\tcout << 'a' << endl;\n\t\t\t}\n\t\t} else {\n\t\t\tchar q = 'c';\n\t\t\tint pl = 0;\n\t\t\tif (b > a || (b == 1 && a > 1)) {\n\t\t\t\tcout << ""-1"" << endl;\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < a - (b - 2); i++) {\n\t\t\t\t\tif (pl % 2 == 0) {\n\t\t\t\t\t\tpl++;\n\t\t\t\t\t\tcout << 'a';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpl++;\n\t\t\t\t\t\tcout << 'b';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < b - 2; i++) { cout << q++; }\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"	"declare integers a and b\nwhile read a and b\ndeclare integer i\nif a = 1\nif b is greater than 1\nprint ""-1""\nelse\nprint ""a""\nelse\ndeclare character variable q = 'c'\ndeclare integer pl = 0\nif b > a or (b = 1 and a > 1)\nprint ""-1""\nelse\nfor i = 0 to a - (b - 2) exclusive\nif pl is even\nincrease pl by one\nprint 'a'\nelse\nincrement pl\nprint 'b'\nfor i = 0 to b - 2 exclusive\nprint new line"
"int main() {\n\tstring s, s1;\n\tint n, k;\n\tcin >> n >> k;\n\tif (k > n || (k == 1 && n > 1)) return cout << ""-1"" << endl, 0;\n\tif (k == 1) return cout << ""a"" << endl, 0;\n\tfor (int i = 1; i <= k - 2; i++) s += 'b' + i;\n\tfor (int i = 1; i <= n - k + 2; i++) s1 += i % 2 ? 'a' : 'b';\n\tcout << s1 << s << endl;\n}"	let s, s1 be strings\nlet n,k be integers\nread n,k\nif (k is greater than n or (k is equal to 1 and n is greater than 1)) , and print -1 and endline , return 0\nif (k is equal to 1) print a and endline, return 0\nfor( i=1 to k - 2 inclusive), s is equal to s + b + i\nfor( i=1 to n- k +2 inclusive), s1 = s1 + (if i modulus 2 ) ? a else b\nprint s1 and s and newline
"char xx[1000002];\nint main() {\n\tint n, k;\n\twhile (cin >> n >> k) {\n\t\tif (n < k || (n >= 2 && k < 2))\n\t\t\tcout << ""-1"" << endl;\n\t\telse {\n\t\t\tint a = k - 2;\n\t\t\tint t = 0;\n\t\t\tmemset(xx, 0, sizeof(xx));\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (i < n - (k - 2)) {\n\t\t\t\t\tif (i % 2 == 0)\n\t\t\t\t\t\txx[i] = 'a';\n\t\t\t\t\telse\n\t\t\t\t\t\txx[i] = 'b';\n\t\t\t\t} else {\n\t\t\t\t\tif (i < n) {\n\t\t\t\t\t\txx[i] = 99 + t;\n\t\t\t\t\t\tt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << xx << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	let xx be a char array of length 1000002\nn, k = integers\nwhile n and k are read\nif n is equal to or greater than 2 and k is less than 2, or n is less than k\nprint -1 and a new line\notherwise\nset integer a equal to k - 2\nset t = 0\nset all contents of xx to 0\nfor i = 0 to n exclusive\nif i is less than n - (k - 2)\nif i modulo 2 equal to 0\nset xx[i] = a\notherwise\nset xx[i] equal to b\notherwise\nif i is less than n\nset xx[i] = 99 + t\nincrement t\nprint xx and a new line
"int main() {\n\tint n, k;\n\tcin >> n >> k;\n\tif (n < k || (k == 1 && n != 1))\n\t\tcout << -1 << endl;\n\telse {\n\t\tif (n >= 2) {\n\t\t\tfor (int i = 1; i <= n - k; i++)\n\t\t\t\tif (i % 2 == 0)\n\t\t\t\t\tcout << ""b"";\n\t\t\t\telse\n\t\t\t\t\tcout << ""a"";\n\t\t\tif ((n - k) % 2 == 0) {\n\t\t\t\tcout << ""ab"";\n\t\t\t\tfor (int i = 3; i <= k; i++) cout << char(i + 'a' - 1);\n\t\t\t} else {\n\t\t\t\tcout << ""ba"";\n\t\t\t\tfor (int i = 3; i <= k; i++) cout << char(i + 'a' - 1);\n\t\t\t}\n\t\t\tcout << endl;\n\t\t} else\n\t\t\tcout << ""a"" << endl;\n\t}\n\treturn 0;\n}"	create integers n and k\nread n, k\nif n<k or k equal to 1 and n different from 1\nprint -1\notherwise\nif n equal to or greater than 2\nfor i=1 to n inclusive\nif 1 modulo 2 equal to 0\nprint b\nother\nprint a\nif n-k mod 2 = 0\nprint ab\nfor i=3 to k inclusive, print i + a - 1\nelse\nprint ba\nfor i = 3 to k inclusive, print i + a - 1\nprint a new line\notherwise\nprint a and a new line
"long long a[10001], b, d, sum, i, n, resh, ans1, ans2, ans3, ans4, j, k;\nstring s, s1;\nchar c[10001];\nint main() {\n\tcin >> n >> k;\n\tif (n < k or (k == 1 and n > 1)) return cout << -1 << ""\n"", 0;\n\tif (n == 1) return cout << ""a\n"", 0;\n\tfor (int i = 0; i < (n - (k - 2)) / 2; ++i) cout << ""ab"";\n\tif ((n - (k - 2)) % 2) cout << ""a"";\n\tfor (int i = 0; i < k - 2; ++i) cout << char(i + 'c');\n\tcout << ""\n"";\n\treturn 0;\n}"	"let b, d, sum, i, n , resh, ans1, ans2, ans3, ans4, j and k be long longs and a be long long array with length 10001\ncreate strings s and s1\ncreate char array c with length 10001\nread n and k\nif (n is smaller than k) or (k is equal to 1 and n is greater than 1) return 0 and print -1\nif n is equal to 1 return 0 and print a and newline\nfor i=0 to (n - (k - 2)) / 2 exclusive print ""ab""\nif (n - (k - 2) mod 2) print ""a""\nfor i=0 to k-2 exclusive print char(i + 'c')\nprint newline"
char ab[2] = {'a', 'b'};\nint main() {\n\tint n, k;\n\tcin >> n >> k;\n\tif ((k == 1 && n != 1) || (k > n)) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tint frst = n - k + 2;\n\tbool flag = 0;\n\tint i = 0;\n\tfor (; i < frst && i < n; i++) {\n\t\tcout << ab[flag];\n\t\tflag = (!flag & 1);\n\t}\n\tchar c = 'c';\n\tfor (; i < n; i++) {\n\t\tcout << c;\n\t\tc++;\n\t}\n\tcout << endl;\n\treturn 0;\n}	create character array ab with size 2, with ab = {'a', 'b'}\ncreate integers n, k\nread n read k\nif ( k is 1 and n is not 1 ) or ( k is greater than n )\nprint -1 print newline\ncreate integer frst with frst = n - k + 2\ncreate boolean flag with flag = 0\ncreate integer i with i = 0\nfor i is less than frst and i is less than n, incrementing i\nprint ab[flag]\nset flag to ( not flag bitwise and 1 )\ncreate character c with c = 'c'\nfor i is less than n, incrementing i\nprint c\nincrement c\nprint newline
"int n, k;\nint main() {\n\tcin >> n >> k;\n\tif (n * (n - 1) / 2 <= k) {\n\t\tcout << ""no solution\n"";\n\t} else\n\t\tfor (; n--;) cout << ""0 "" << n << ""\n"";\n}"	"create integers n and k\nread n and k\nif n * (n - 1) / 2 <= k\nprint ""no solution\n""\nelse\nprint ""0 "", n and ""\n"
int main() {\n\tint n, k;\n\twhile (cin >> n >> k) {\n\t\tlong long temp = 0;\n\t\tlong long a;\n\t\tint j = 1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tcin >> a;\n\t\t\tif (temp - (i - 1) * (n - i) * a < k) {\n\t\t\t\tcout << j << endl;\n\t\t\t\ti--, n--;\n\t\t\t} else\n\t\t\t\ttemp += (i - 1) * a;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn 0;\n}	declare integers n and k\nwhile reading n and k\ncreate long long temp = 0\ndeclare long long variable a\ndeclare integer j = 1\nfor i = 1 to n inclusive\nread a\nif temp - (i - 1) * (n - i) * a is less than k\nprint j\ndecrease i and n\nelse\nincrease temp by (i - 1) * a\nincrease j
int main() {\n\tlong long int n, i, k, x = 1, b = 0;\n\tcin >> n >> k;\n\tlong long int a[n];\n\tfor (i = 0; i < n; i++) cin >> a[i];\n\tfor (i = 1; i < n; i++) {\n\t\tif (b - x * a[i] * (n - i - 1) < k)\n\t\t\tcout << i + 1 << endl;\n\t\telse {\n\t\t\tb += x * a[i];\n\t\t\tx++;\n\t\t}\n\t}\n\treturn 0;\n}	create long long integers n, i, k, x, b, with x = 1 to b = 0\nread n read k\ncreate long long integer array a with size n\nfor i = 0 to n exclusive, read a[i]\nfor i = 1 to n exclusive\nif b - x * a[i] * ( n - i - 1 ) is less than k\nprint i + 1 print newline\nelse\nincrement by by x * a[i]\nincrement x
int main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tlong long sum = 0;\n\tlong long pos = 1;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\tlong long d = sum - (pos - 1) * (n - i) * x;\n\t\tif (d < k)\n\t\t\tcout << i << '\n';\n\t\telse {\n\t\t\tsum += x * (pos - 1);\n\t\t\tpos++;\n\t\t}\n\t}\n\treturn 0;\n}	create long longs n, k\nread n readk\ncreate long long sum with sum = 0\ncreate long long pos with pos = 1\nfor i = 1 to n inclusive\ncreate long long x\nread x\ncreate long long d with d = sum - ( pos - 1 ) * ( n - i ) * x\nif d is less than k\nprint i print '\n'\nelse\nincrement sum by x * (pos-1)\nincrement pos
int main() {\n\tlong long n, k, sum = 0, cur = 0;\n\tcin >> n >> k;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tif (i > 1 && sum - (i - cur - 1) * (n - i) * a < k) {\n\t\t\tcout << i << endl;\n\t\t\tcur++;\n\t\t} else\n\t\t\tsum += a * (i - cur - 1);\n\t}\n}	create long longs n, k, sum, cur with sum = 0, cur = 0\nread n read k\nfor i = 1 to n inclusive\ncreate integer a\nread a\nif i is greater than 1 and sum - (i-cur-1)*(n-1)*a is less than k\nprint i print newline\nincrement cur\nelse\nincrement sum by a * (i - cur - 1)
int main() {\n\tint n, k;\n\twhile (cin >> n >> k) {\n\t\tlong long temp = 0;\n\t\tlong long a;\n\t\tint j = 1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tcin >> a;\n\t\t\tif (temp - (i - 1) * (n - i) * a < k) {\n\t\t\t\tcout << j << endl;\n\t\t\t\ti--, n--;\n\t\t\t} else\n\t\t\t\ttemp += (i - 1) * a;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn 0;\n}	let n,k be integers\nwhile ( read the values of n and k )\nlet temp be a long integer with value as 0\nlet a be a long integer\nlet j be a integer with value as 1\nfor integer i = 1 to n inclusive\nread a\nif (temp - (i - 1) * (n - i) * a is less than k)\nprint j and newline\ndecrease the value of i by 1, decrease the value of n by 1\nelse do the following\ntemp is equal to temp + (i - 1) * a\nincrease j value by 1
int main() {\n\tint T = 1;\n\twhile (T--) {\n\t\tint n, k;\n\t\tcin >> n >> k;\n\t\tvector<long long int> arr(n + 1);\n\t\tarr[0] = 0;\n\t\tfor (int i = 0; i < n; i++) { cin >> arr[i + 1]; }\n\t\tlong long int c = 1;\n\t\tint p_i = 1;\n\t\tlong long int cur_d = 0, prev_d = 0, di = 0;\n\t\tfor (int i = 2; i <= n; i++) {\n\t\t\tcur_d = prev_d + 1LL * arr[p_i] * (c - 1);\n\t\t\tdi = cur_d - 1LL * (n - i) * (c)*arr[i];\n\t\t\tif (di < k) {\n\t\t\t\tcout << i << '\n';\n\t\t\t} else {\n\t\t\t\tc++;\n\t\t\t\tp_i = i;\n\t\t\t\tprev_d = cur_d;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	create integer T with T = 1\nwhile decrement T is true\ncreate integers n, k\nread n read k\ncreate long long integer vector arr initialized with n + 1\nset arr[0] to 0\nfor i = 0 to n exclusive, read arr[i+1]\ncreate long long integer c with c = 1\ncreate integer p_1 with p_1 = 1\ncreate long long integers cur_d, prev_d, di, with cur_d = 0, prev_d = 0, di = 0\nfor i = 2 to n inclusive\nset cur_d to prev_d + 1LL * arr[p_i] * (c - 1)\nset di to cur_d - 1LL * (n - i) * (c)*arr[i]\nif di is less than k\nprint i print '\n'\nelse\nincrement c\nset p_i to i\nset prev_d to cur_d
vector<long long> v;\nint main() {\n\tlong long n, k, a, s = 0, j = 2, p, i;\n\tcin >> n >> k;\n\tlong long m = n;\n\tcin >> a;\n\tfor (i = 2; i <= n; i++) {\n\t\tcin >> a;\n\t\tp = s - (j - 1) * (m - j) * a;\n\t\tif (p < k) {\n\t\t\tv.push_back(i);\n\t\t\tm = m - 1;\n\t\t} else {\n\t\t\ts = s + (j - 1) * a;\n\t\t\tj = j + 1;\n\t\t}\n\t}\n\tfor (i = 0; i < v.size(); i++) cout << v[i] << endl;\n\treturn 0;\n}	create long long vector v\ncreate long longs n, k, a, s, j, p, i with s = 0, j = 2\nread n read k\ncreate long long m with m = n\nread a\nfor i = 2 to n inclusive\nread a\nset p to s - (j - 1) * (m - j) * a\nif p is less than k\nadd element i to end of v\nset m to m - 1\nelse\nset s to s + ( j - 1 ) * a\nset j to j + 1\nfor i = 0 to size of v exclusive, print v[i] print newline
long long n, k, a, sum, l;\nint main() {\n\tcin >> n >> k;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\tif (i != 1) {\n\t\t\tif (sum - (n - i) * (i - 1) * a < k) {\n\t\t\t\tcout << i + l << endl;\n\t\t\t\ti--;\n\t\t\t\tn--;\n\t\t\t\tl++;\n\t\t\t} else\n\t\t\t\tsum += a * (i - 1);\n\t\t}\n\t}\n}	create long longs n, k, a, sum and l\nread n and k\nfor long long i = 1 to n inclusive\nread a\nif i != 1\nif sum - (n - i) * (i - 1) * a is less than k\nprint i + l\ndecrease i\ndecrease n by one\nincrement l\nelse\nincrease sum by a * (i - 1)
"void prn(int pos) {\n\tcout << pos << ""\n"";\n}\nint main() {\n\tlong long n, k;\n\tcin >> n >> k;\n\tlong long sz = n;\n\tint pos = 1;\n\tlong long ai;\n\tcin >> ai;\n\tlong long sum = 0;\n\tfor (int i = 2; i <= sz; ++i) {\n\t\t++pos;\n\t\tcin >> ai;\n\t\tlong long d = sum - (n - pos) * (pos - 1) * ai;\n\t\tif (d < k) {\n\t\t\tprn(i);\n\t\t\t--pos;\n\t\t\t--n;\n\t\t} else {\n\t\t\tsum += ai * (pos - 1);\n\t\t}\n\t}\n\treturn 0;\n}"	"declare prn with integer pos as argument, returning void\nprint pos print ""\n""\ncreate long longs n, k\nread n read k\ncreate long long sz with sz = n\ncreate integer pos with pos = 1\ncreate long long ai\nread ai\ncreate long long sum with sum = 0\nfor i = 2 to sz inclusive\nincrement pos\nread ai\ncreate long long d with d = sum - (n - pos) * (pos - 1) * ai\nif d is less than k\nrun prn with i as argument\ndecrement pos\ndecrement n\nelse\nincrement sum by ai * ( pos - 1 )"
long long n, k, a, sum, l;\nint main() {\n\tcin >> n >> k;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\tif (i != 1) {\n\t\t\tif (sum - (n - i) * (i - 1) * a < k) {\n\t\t\t\tcout << i + l << endl;\n\t\t\t\ti--;\n\t\t\t\tn--;\n\t\t\t\tl++;\n\t\t\t} else\n\t\t\t\tsum += a * (i - 1);\n\t\t}\n\t}\n}	create long longs n, k, a, sum, l\nread n read k\nfor i = 1 to n inclusive\nread a\nif i is not 1\nif sum - ( n - 1 ) * ( i - 1 ) * a is less than k\nprint i + l print newline\ndecrement i\ndecrement n\nincrement l\nelse\nincrement sum by a * ( i - 1 )
int Get() {\n\tchar c;\n\twhile (c = getchar(), (c < '0' || c > '9') && (c != '-'))\n\t\t;\n\tbool Flag = (c == '-');\n\tif (Flag) c = getchar();\n\tint X = 0;\n\twhile (c >= '0' && c <= '9') {\n\t\tX = X * 10 + c - 48;\n\t\tc = getchar();\n\t}\n\treturn Flag ? -X : X;\n}\nvoid Output(int X) {\n\tif (X < 0) {\n\t\tputchar('-');\n\t\tX = -X;\n\t}\n\tint Len = 0, Data[10];\n\twhile (X) {\n\t\tData[Len++] = X % 10;\n\t\tX /= 10;\n\t}\n\tif (!Len) Data[Len++] = 0;\n\twhile (Len--) putchar(Data[Len] + 48);\n\tputchar('\n');\n}\nint main() {\n\tint N = Get();\n\tlong long K = Get(), Sum = 0;\n\tint Top = 0, Total = N, Number = 0;\n\tfor (int i = 0; i < N; i++) {\n\t\tlong long X = Get();\n\t\tif (Sum - X * Number * (Total - Number - 1) < K) {\n\t\t\tOutput(i + 1);\n\t\t\tTotal--;\n\t\t} else {\n\t\t\tSum += Number * X;\n\t\t\tNumber++;\n\t\t}\n\t}\n\treturn 0;\n}	integer function Get\ndeclare character c\nread c from the input, then loop, while c is not a digit or '-'\ncreate boolean Flag = true if c = '-', or false otherwise\nif Flag is true, read c from the input\ncreate int X = 0\nwhile c >= '0' && c <= '9'\nset X to X * 10 + c - 48\nread c from the input\nreturn -X if Flag if set, else return X\nfunction Output with int argument X\nif X is less than 0\nprint '-'\ninvert the sign of X\ndeclare int Len = 0 and int array Data with size 10\nwhile X is not 0\nset Data[Len] to X % 10 and increment Len\ndivide X by 10\nif Len is false, change Data[Len] to 0 and increment Len\ndecrement Len and loop further, while Len != 0, printing Data[Len] + 48 on each iteration\nprint '\n'\ndeclare integer N = Get()\ncreate long longs Sum = 0 and K = Get()\ndeclare integers Top and Number = 0 and Total = N\nfor integer i = 0 to N exclusive\ndeclare long long X = Get()\nif Sum - X * Number * (Total - Number - 1) < K\ncall Output of i + 1\ndecrement Total\nelse\nincrease Sum by Number * X\nincrement Number
"int main() {\n\tint n, a, b, c, d, w, h, x1 = 2e9, y1 = 2e9, x2 = 0, y2 = 0, area = 0;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> a >> b >> c >> d;\n\t\tw = c - a;\n\t\th = d - b;\n\t\tarea += w * h;\n\t\tx1 = min(x1, a);\n\t\ty1 = min(y1, b);\n\t\tx2 = max(x2, c);\n\t\ty2 = max(y2, d);\n\t}\n\tw = x2 - x1;\n\th = y2 - y1;\n\tcout << (w == h && area == w * h ? ""YES"" : ""NO"") << endl;\n\treturn 0;\n}"	integers = n,a,b,c,d,w,h,x1 = 2e9,y1 = 2e9,x2 = 0,y2 = 0,area = 0\nread n\nif n is true do the following\nread a,b,c,d\nset w to c - a\nset h to d - b\narea equals area plus w * h\nset x1 to min(x1, a)\nset y1 to min(y1, b)\nset x2 to max(x2, c)\nset y2 to max(y2, d)\nset w to x2 - x1\nset h to y2 - y1\nif w= h and area = w*h print YES else NO)
"int main() {\n\tint n;\n\tcin >> n;\n\tint x0, y0, x1, y1, a = 0;\n\tx0 = y0 = 1e9 + 87;\n\tx1 = y1 = -9e8;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint l, b, r, u;\n\t\tcin >> l >> b >> r >> u;\n\t\ta += (r - l) * (u - b);\n\t\tx0 = min(x0, l);\n\t\tx1 = max(x1, r);\n\t\ty0 = min(y0, b);\n\t\ty1 = max(y1, u);\n\t}\n\tx1 -= x0;\n\ty1 -= y0;\n\tcout << (x1 == y1 && x1 * y1 == a ? ""YES\n"" : ""NO\n"");\n}"	"declare integer variable n\nread n\ndeclare integers x0, y0, x1, y1 and a with a = 0\nchange x0 and y0 to 1e9 + 87\nchange x1 and y1 to -9e8\nfor integer i = 0 to n exclusive\ndeclare ints l, b, r and u\nread l, b, r and u\nadd (r - l) * (u - b) to a\nchange x0 to min of x0 and l\nchange x1 to max of x1 and r\nchange y0 to min of y0 and b\nchange y1 to max of y1 and u\nsubtract x0 from x1\ndecrease y1 by y0\nprint ""YES\n"" if x1 = y1 and x1 * y1 = a, or ""NO\n"" otherwise"
"int n;\nint main() {\n\tcin >> n;\n\tint xmin = 1000000000, xmax = -1, ymin = 1000000000, ymax = -1;\n\tint act = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint a, b, c, d;\n\t\tcin >> a >> b >> c >> d;\n\t\txmin = min(xmin, a);\n\t\txmin = min(xmin, c);\n\t\txmax = max(xmax, a);\n\t\txmax = max(xmax, c);\n\t\tymin = min(ymin, b);\n\t\tymin = min(ymin, d);\n\t\tymax = max(ymax, b);\n\t\tymax = max(ymax, d);\n\t\tact += (abs(a - c) * abs(b - d));\n\t}\n\tif (ymax - ymin == xmax - xmin && act == ((ymax - ymin) * (xmax - xmin)))\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"declare integer n\nread n\ncreate integers xmin and ymin = 1000000000 and xmax and ymax = - 1\ncreate integer act = 0\nfor i = 1 to n inclusive\ncreate ints a, b, c and d\nread a, b, c and d\nset xmin to min of xmin and a\nset xmin to min of xmin and c\nset xmax to min of xmax and a\nset xmax to max of xmax and a\nset ymin to min of ymin and b\nset ymin to min of ymin and d\nset ymax to max of ymax and b\nset ymax to max of ymax and d\nadd abs(a - c) * abs(b - d) to act\nif ymax - ymin = xmax - xmin and act = ((ymax - ymin) * (xmax - xmin))\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int main() {\n\tint n;\n\tcin >> n;\n\tlong long int x1, y1, x2, y2, sum = 0;\n\tlong long int minmum = INT_MIN, maxmum = INT_MIN, p = INT_MAX, q = INT_MAX;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\tmaxmum = max(maxmum, max(x2, x1));\n\t\tminmum = max(minmum, max(y2, y1));\n\t\tp = min(p, min(y2, y1));\n\t\tq = min(q, min(x2, x1));\n\t\tsum += fabs(x2 - x1) * fabs(y2 - y1);\n\t}\n\tif (sum == ((minmum - p) * (maxmum - q)) && (maxmum - q) == (minmum - p))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"declare integer variable n\nread n\nx1, y1, x2, y2 and sum are long long ints where sum = 0\ndeclare long long int minmum = INT_MIN, maxmum = INT_MIN, p = INT_MAX and q = INT_MAX\nfor i = 0 to n exclusive\nread input to x1, y1, x2 and y2\nchange maxmum to max of maxmum and max(x2 and x1)\nchange minmum to max of minmum and max(y2 and y1)\nassign min of p and min(y2 and y1) to p\nset q to min of q and min(x2 and x1)\nadd fabs(x2 - x1) * fabs(y2 - y1) to sum\nif sum = ((minmum - p) * (maxmum - q)) and (maxmum - q) == (minmum - p)\nprint ""YES""\nelse\nprint ""NO\n"""
"int main() {\n\tint i, n, x1, x2, y1, y2, mx = 99999, my = 99999, Mx = -1, My = -1, R = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\tR += (x2 - x1) * (y2 - y1);\n\t\tif (Mx < x2) Mx = x2;\n\t\tif (My < y2) My = y2;\n\t\tif (mx > x1) mx = x1;\n\t\tif (my > y1) my = y1;\n\t}\n\tif ((Mx - mx) * (My - my) == R && Mx - mx == My - my)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	integers = i,n,x1,x2,y1,y2,mx = 99999,my = 99999,Mx = -1,My = -1,R = 0\nread n\nfor = 0 to less than n do the following\nread x1,y1,x2,y2\nR equals R plus (x2 - x1) * (y2 - y1)\nif Mx is less than x2 then do the following Mx = x2\nif My is less than y2 then do the following My = y2\nif mx is greater than x1 then do the following mx = x1\nif my is greater than y1 then do the following my = y1\nif is R and Mx - mx equals My -my then do the following\noutput YES\nelse\noutput NO
"int main() {\n\tint n;\n\tint S[10];\n\twhile (cin >> n) {\n\t\tmemset(S, 0, sizeof(S));\n\t\tint maxx = 0, maxy = 0;\n\t\tint minx = 10000000, miny = 10000000;\n\t\tint C = 0;\n\t\tint x1, x2, y1, y2;\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\t\tS[i] = (x2 - x1) * (y2 - y1);\n\t\t\tC += S[i];\n\t\t\tif (x1 < minx) minx = x1;\n\t\t\tif (x2 > maxx) maxx = x2;\n\t\t\tif (y1 < miny) miny = y1;\n\t\t\tif (y2 > maxy) maxy = y2;\n\t\t}\n\t\tif (C == (maxx - minx) * (maxy - miny) && (maxx - minx) == (maxy - miny))\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	n = integer\nS = integer array of size 10\nwhile read n\nset all contents of S to 0\nmaxx, maxy = integers with maxx = 0, maxy = 0\nminx, miny = integers with minx = 10000000, miny = 10000000\nC = integer with C = 0\nx1, x2, y1, y2 = integers\nfor i = 1 to n\nread x1, x2, y1, y2\nS[i] = (x2 - x1) * (y2 - y1)\nC = C + S[i]\nif x1 < minx, minx = x1\nif x2 > maxx, maxx = x2\nif y1 < miny, miny = y1\nif y2 > maxy, maxy = y2\nif C is (maxx - minx) * (maxy - miny) and (maxx - minx) is (maxy - miny)\nprint YES\nelse\nprint NO
"int main() {\n\tcout.setf(ios::fixed);\n\tcout.precision(20);\n\tint n, x1, y1, x2, y2;\n\tint xl = 2139062143, xr = -2139062143, yl = 2139062143, yr = -2139062143;\n\tcin >> n;\n\tlong long area = 0;\n\twhile (n--) {\n\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\txl = min(xl, x1);\n\t\txr = (xr > x2 ? xr : x2);\n\t\tyl = min(yl, y1);\n\t\tyr = (yr > y2 ? yr : y2);\n\t\tarea += 1LL * (x2 - x1) * (y2 - y1);\n\t}\n\tif (xr - xl == yr - yl && area == 1LL * (xr - xl) * (yr - yl))\n\t\tputs(""YES"");\n\telse\n\t\tputs(""NO"");\n\treturn 0;\n}"	"change output format flag to ios::fixed\nchange output precision to 20\ndeclare ints n, x1, y1, x2 and y2\ndeclare int variables xl and yl = 2139062143 and xr and yr = -2139062143\nread input to n\ndeclare long long area = 0\nloop, decrementing n, while it is not 0\nread x1, y1, x2 and y2\nset xl to min of xl and x1\nchange xr to xr if xr > x2, else to x2\nset yl to min of yl and y1\nchange yr to yr if yr > y2, else to y2\nadd 1LL * (x2 - x1) * (y2 - y1) to area\nif xr - xl = yr - yl and area = 1LL * (xr - xl) * (yr - yl)\nprint ""YES"" to stdout\nelse\nprint ""NO"" to stdout"
"int main() {\n\tint n;\n\tcin >> n;\n\tint x0, y0, x1, y1, a = 0;\n\tx0 = y0 = 1e9 + 87;\n\tx1 = y1 = -9e8;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint l, b, r, u;\n\t\tcin >> l >> b >> r >> u;\n\t\ta += (r - l) * (u - b);\n\t\tx0 = min(x0, l);\n\t\tx1 = max(x1, r);\n\t\ty0 = min(y0, b);\n\t\ty1 = max(y1, u);\n\t}\n\tx1 -= x0;\n\ty1 -= y0;\n\tcout << (x1 == y1 && x1 * y1 == a ? ""YES\n"" : ""NO\n"");\n}"	"let n be a integer\nread n\ncreate ints x0, y0, x1, y1, a with a = 0\nset x0 and y0 to 1e9 + 87\nassign -9e8 to y1 and x1\nfor n iterations\ncreate integers l, b, r, u\nread l, b, r and u\nadd a to (r - l) * (u - b) and assign the result to a\nset x0 to min(x0, l)\nassign the greater of x1 and r to x1\nset y0 to min(y0, b)\nset y1 to max of y1 and u\nx1 = x1 - x0\nset y1 to y1 - y0\nprint (x1 == y1 && x1 * y1 == a ? ""YES\n"" : ""NO\n"")"
"int main() {\n\tint mn = 50000, mn2 = mn;\n\tint N, mx = -1, mx2 = mx, Ar = 0;\n\tcin >> N;\n\tfor (int i = 1; i <= N; ++i) {\n\t\tint a, b, x, y;\n\t\tcin >> a >> b >> x >> y;\n\t\tAr += (x - a) * (y - b);\n\t\tmn = min(mn, min(a, x));\n\t\tmn2 = min(mn2, min(b, y));\n\t\tmx = max(mx, max(a, x));\n\t\tmx2 = max(mx2, max(b, y));\n\t}\n\tif (mx - mn == mx2 - mn2 && Ar == (mx - mn) * (mx2 - mn2))\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	mn, mn2 = integers with mn = 50000, mn2 = mn\nN, mx, mx2, Ar = integers with mx = -1, mx2 = mx, Ar = 0\nread N\nfor i = 1 to N\na, b, x, y = integers\nread a, b, x, y\nAr = Ar + (x - a) * (y - b)\nmn = min of mn and min(a, x)\nmn2 = min of mn2 and min(b, y)\nmx = max of mx and max(a, x)\nmx2 = max of mx2 and max(b, y)\nif (mx - mn is mx2 - mn2 and Ar is (mx - mn) * (mx2 - mn2))\nprint YES\nelse\nprint NO
int main() {\n\tlong long n;\n\tcin >> n;\n\twhile (n % 3 == 0) n /= 3;\n\tcout << n / 3 + 1 << endl;\n\treturn 0;\n}	create long long n\nread n\nwhile n % 3 is 0, set n to n / 3\nprint n / 3 + 1 print newline
int main() {\n\tunsigned long long n, t, coi = 1;\n\tcin >> n;\n\twhile (n % 3 == 0) n /= 3;\n\tcout << (n - 1) / 3 + 1 << '\n';\n}	create unsigned long long n, t, coi with coi = 1\nread n\nwhile n % 3 is 0, set n to n / 3\nprint ( n - 1 ) / 3 + 1 print '\n'
long long n, ans = 0;\nint main() {\n\tcin >> n;\n\twhile (n % 3 == 0) n /= 3;\n\tans = n / 3 + 1;\n\tcout << ans << endl;\n\treturn 0;\n}	n, ans = long long with ans = 0\nread n\nwhile n modulo 3 is 0, n = n / 3\nans = n / 3 + 1\nprint ans
long long cil(long long x, long long y) {\n\tif (x % y == 0)\n\t\treturn x / y;\n\telse\n\t\treturn x / y + 1;\n}\nint main() {\n\tlong long n, i, j = 0;\n\tcin >> n;\n\ti = n;\n\twhile (n % 3 == 0 && n > 0) {\n\t\tj++;\n\t\tn /= 3;\n\t}\n\tlong long l = pow(3, j + 1);\n\tcout << cil(i, l) << endl;\n}	in function cil taking two long longs x and y and returning a long long\nif x is a multiple if y\nreturn x / y\nelse\nreturn x / y + 1\nn, i, j = long long with j = 0\nread n\nset i to n\nloop while n is a multiple of 3 and greater than 0\nincrement j\nset n to n / 3\nl = long long with l = pow of 3 and j + 1\nprint cil of i and l
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long sum, x = 3;\n\twhile (n % x == 0) { x *= 3; }\n\tsum = n / x + 1;\n\tcout << sum << endl;\n\treturn 0;\n}	let n be a long integer\nread n\nlet sum , x be long integers with x = 3\nwhile n modulo x is equal to 0 , x is equal to x * 3\nn / x + 1 is assigned to sum\nprint sum and newline
int main() {\n\tlong long i, j, k, n;\n\tcin >> n;\n\tfor (i = 1, j = 3; i <= 35; i++, j *= 3) {\n\t\tif (n % j != 0) break;\n\t}\n\tcout << (n / j) + 1 << endl;\n}	define integers i, j, k, and n\nread n\ndefine j and set to 3; for i from 1 to 35, set j to itself * 3\nif n modulo j isn't 0, then break out\nprint n / j + 1 and a newline
FILE *stream;\nint main() {\n\tlong long n;\n\tcin >> n;\n\tlong long x = 1;\n\twhile (n % x == 0) { x *= 3; }\n\tcout << (n / x) + 1 << endl;\n}	create FILE pointer stream\ncreate long long n\nread n\ncreate long long x with x = 1\nwhile n % x is 0, set x to x * 3\nprint ( n / x ) + 1 print newline
int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\twhile (n % 3 == 0) n /= 3;\n\t\tcout << n / 3 + 1 << endl;\n\t}\n\treturn 0;\n}	n =integer\nwhile reading values n\nwhile n modulo 3 is 0, then set n to n / 3\nprint n / 3 + 1 and a new line
int dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nint main() {\n\tlong long int n;\n\tcin >> n;\n\tlong long int x = 1, ans = 1;\n\twhile (x < n) {\n\t\tif (n % x != 0) ans = max(ans, n / x + 1);\n\t\tx = x * 3;\n\t}\n\tcout << ans << '\n';\n}	set first 4 elements of dx to 0, 0, -1, 1\nassign 1, -1, 0, 0 to first 4 elements of dy\ncreate long long int n\nread n\nset x and ans to 1\nwhile x less than n\nif n mod x different from 0, set ans = max of ans and n/x +1\nset x = x*3\nprint ans and a newline
int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tlong long a;\n\t\tlong long t = 3;\n\t\twhile (!(n % t)) t *= 3;\n\t\tcout << n / t + 1 << endl;\n\t}\n\treturn 0;\n}	create long long n\nread n and loop further\ndeclare long long a\ndeclare long long t = 3\nwhile n % t = 0, multiply t by 3\nprint n / t + 1
int main() {\n\tlong long n, a;\n\twhile (cin >> n) {\n\t\ta = 3;\n\t\twhile (n % a == 0) a *= 3;\n\t\tcout << n / a + 1 << endl;\n\t}\n\treturn 0;\n}	create long longs n and a\nread n and keep looping\nset a to 3\nwhile n modulo a is 0\nprint n / a + 1
long long cil(long long x, long long y) {\n\tif (x % y == 0)\n\t\treturn x / y;\n\telse\n\t\treturn x / y + 1;\n}\nint main() {\n\tlong long n, i, j = 0;\n\tcin >> n;\n\ti = n;\n\twhile (n % 3 == 0 && n > 0) {\n\t\tj++;\n\t\tn /= 3;\n\t}\n\tlong long l = pow(3, j + 1);\n\tcout << cil(i, l) << endl;\n}	cil is a long long function with long long arguments x and y\nif x % y is equal to 0\nreturn x / y\nelse\nreturn x / y + 1\ndeclare long long variables n, i and j with j = 0\nread input to n\nchange i to n\nwhile n % 3 is 0 and n > 0\nincrement j\ndivide n by 3\ncreate long long l = 3 raised to power j + 1\nprint cil(i, l)
int main() {\n\tlong long n, m, i, j, k;\n\tcin >> n;\n\tk = 3;\n\twhile (1) {\n\t\tif (n % k != 0) {\n\t\t\tm = (n / k) + 1;\n\t\t\tbreak;\n\t\t}\n\t\tk *= 3;\n\t}\n\tcout << m << endl;\n}	create long longs n, m, i, j, k\nread n\nset k to 3\nwhile 1 is true\nif n % k is not 0\nset m to ( n / k ) + 1\nbreak loop\nset value of k to 3\nprint m print newline
const int maxn = 100001;\nlong long n;\nint main() {\n\tcin >> n;\n\twhile (n % 3 == 0) n /= 3;\n\tcout << n / 3 + 1 << endl;\n}	declare const int maxn = 100001\ndeclare long long n\nread n\nwhile n modulo 3 = 0, divide n by 3\nprint n / 3 + 1
bool power_of_two(int n) {\n\tint m;\n\tm = n - 1;\n\tif (!n & m)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nint main() {\n\tint n, m, a, mn = 10000;\n\tcin >> n >> m;\n\tvector<int> v;\n\tfor (int i = 0; i < m; i++) {\n\t\tcin >> a;\n\t\tv.push_back(a);\n\t}\n\tsort(v.begin(), v.end());\n\tfor (int i = n - 1; i < m; i++) { mn = min(mn, v[i] - v[i - n + 1]); }\n\tcout << mn << endl;\n}	in function power_of_two taking int n and returning bool\nm = int\nset m to n - 1\nif not n bitwise-and m\nreturn true\nelse\nreturn false\nn, m, a, mn = int with mn = 10000\nread n then m\nv = int vector\nfor i = 0 to m\nread a\nappend a to v\nsort v\nfor i = n - 1 to m set mn to min of mn and v[i] - v[i - n + 1]\nprint mn
int main() {\n\tint n, m, a[1000], i, ans = INT_MAX;\n\tcin >> n >> m;\n\tfor (i = 0; i < m; i++) cin >> a[i];\n\tsort(a, a + m);\n\tfor (i = 0; i <= m - n; i++) ans = min(ans, a[i + n - 1] - a[i]);\n\tcout << ans << endl;\n}	let integers n, m, i, and ans = INT_MAX and int array a of size 1000\nread n and m\nfor i = 0 to m exclusive, read a[i]\nsort array a\nfor i = 0 to m - n, set ans to the min of ans and a[i + n - 1] - a[i]\nprint ans
int main() {\n\tint n, m, f[1000];\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; ++i) { cin >> f[i]; }\n\tsort(f, f + m);\n\tint least = f[n - 1] - f[0];\n\tfor (int i = 1; i <= m - n; ++i) {\n\t\tif (f[i + n - 1] - f[i] < least) { least = f[i + n - 1] - f[i]; }\n\t}\n\tcout << least << endl;\n\treturn 0;\n}	let n, m, and f with 1000 indices be int\nread n and m\nread f of i i times from 0 to m exclusive\nsort f and f plus m\nlet least be f[n - 1] - f[0]\nfor i from to 1 m - n inclusive\nif f[i + n - 1] - f[i] < least set least to least = f[i + n - 1] - f[i]\nprint least
int dx[] = {1, 0, -1, 0, 1, 1, -1, -1};\nint dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\nvoid fast() {}\nconst long long md = 1e9 + 7;\nint main() {\n\tfast();\n\tlong long n, m;\n\tcin >> n >> m;\n\tlong long a[m + 5];\n\tfor (int i = 0; i < m; i++) cin >> a[i];\n\tsort(a, a + m);\n\tlong long ans = LLONG_MAX;\n\tfor (int i = 0; i <= m - n; i++) { ans = min(ans, a[i + (n - 1)] - a[i]); }\n\tcout << ans << endl;\n\treturn 0;\n}	create integers array dx initialized with 1, 0, -1, 0, 1, 1, -1, -1\ncreate integers array dy initialized with 0, 1, 0, -1, 1, -1, 1, -1\nin the function fast\ndeclare const long long md = 1e9 + 7\ncall fast()\ncreate long longs n and m\nread n and m\ndeclare an array of long longs a with m + 5 elements\nread a from the input m times\nsort first m elements of a\ndeclare long long variable ans = LLONG_MAX\nfor i from 0 to m - n inclusive, change ans to min of ans and a[i + (n - 1)] - a[i]\nprint ans
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint arr[100000];\n\tfor (int i = 0; i < m; ++i) { cin >> arr[i]; }\n\tsort(arr, arr + m);\n\tint mindiff = INT_MAX;\n\tfor (int i = 0; i < m - (n - 1); i++) {\n\t\tint diff = arr[i + n - 1] - arr[i];\n\t\tif (diff < mindiff) { mindiff = diff; }\n\t}\n\tcout << mindiff << endl;\n\treturn 0;\n}	n, m = integers\nread n, m\narr = integer array of size 100000\nfor i = 0 to m exclusive, read arr[i]\nsort arr and arr + m\nmindiff = integer with mindiff = INT_MAX\nfor i = 0 to m - (n - 1) exclusive\ndiff = integer with diff = arr[i + n - 1] - arr[i]\nif diff < mindiff, mindiff = diff\nprint mindiff
int main() {\n\tint n, m, i, j, total = 0, val, diff, mini = 10000;\n\tvector<int> v;\n\tcin >> n >> m;\n\tfor (i = 0; i < m; i++) {\n\t\tcin >> val;\n\t\tv.push_back(val);\n\t}\n\tsort(v.begin(), v.end());\n\tfor (i = 0; i <= m - n; i++) {\n\t\tval = abs(v[i] - v[i + n - 1]);\n\t\tmini = min(mini, val);\n\t}\n\tcout << mini << endl;\n}	create new variables n, m, i, j, total, val, diff and mini be ints with total = 0 and mini = 10000\ndeclare new vector of integers called v\nread variables n and m from the input\nfor i = 0 to m exclusive\nread val\npush val to the end of v\nsort v\nstart for loop from i = 0 to m - n inclusive incrementing i\nchange val to abs(v[i] - v[i + n - 1])\nchange mini to min of mini and val\nprint mini
int main() {\n\tint n, m, f[1000];\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; ++i) { cin >> f[i]; }\n\tsort(f, f + m);\n\tint least = f[n - 1] - f[0];\n\tfor (int i = 1; i <= m - n; ++i) {\n\t\tif (f[i + n - 1] - f[i] < least) { least = f[i + n - 1] - f[i]; }\n\t}\n\tcout << least << endl;\n\treturn 0;\n}	create integers n and m, and an array of integers f with size 1000\nread input to n and m\nfor integer i = 0 to m exclusive, read input to f[i]\nsort m elements of f\ncreate integer least = f[n - 1] - f[0]\nfor i from 1 to m - n inclusive\nif f[i + n - 1] - f[i] is less than least, assign f[i + n - 1] - f[i] to least\nprint least
int main() {\n\tint n, m, a[60], mn = 1005;\n\tcin >> n;\n\tcin >> m;\n\tfor (int i = 0; i < m; i++) { cin >> a[i]; }\n\tsort(a, a + m);\n\tfor (int i = 0; i < m - n + 1; i++) {\n\t\tint d = a[i + n - 1] - a[i];\n\t\tif (d < mn) mn = d;\n\t}\n\tcout << mn << endl;\n\treturn 0;\n}	let n,m,mn be integers wtih mn = 1005 and a be an integer array of size 60\ninput n\ninput m\ninput m number of items into a\ncall sort with parameters a, a+m\nfor i = 0 to m-n\nset integer d to a[i + n - 1] - a[i]\nif d < mn set mn = d\nprint mn
int main() {\n\tint x, y;\n\tcin >> x >> y;\n\tint m[y];\n\tint arr[y];\n\tfor (int i = 0; i < y; i++) { cin >> arr[i]; }\n\tsort(arr, arr + y);\n\tint k = 0;\n\tfor (int i = 0; i < y - x + 1; i++) {\n\t\tm[k] = arr[x - 1 + i] - arr[i];\n\t\tk++;\n\t}\n\tint min = 99999;\n\tfor (int j = 0; j < k; j++) {\n\t\tif (min > m[j]) min = m[j];\n\t}\n\tcout << min << endl;\n\treturn 0;\n}	declare x, y as integers\nread x, y\ndeclare integer array m size y\ndeclare integer array arr size y\nfor i = 0 to y exclusive, read arr[i]\nsort elements from arr to arr + y\ndeclare integer k with k = 0\nfor i = 0 to y - x + 1 exclusive\nlet m[k] be arr[x-1+i] - arr[i]\nincrement k\nlet integer min be 99999\nfor j = 0 to k exclusive\nif min is greater than m[j], let min be m[j]\nprint min, newline
int main() {\n\tint i, a, b, j, s, c[1000], d[1000];\n\tcin >> a >> b;\n\tfor (i = 0; i < b; i++) { cin >> c[i]; }\n\tsort(c, c + b);\n\tfor (i = 0, j = 0; i < b - a + 1; i++, j++) { d[j] = c[i + a - 1] - c[i]; }\n\tsort(d, d + b - a + 1);\n\tcout << d[0] << endl;\n}	let i, a, b, j, s, c, d be integers with c = array of integers of length 1000, d = array of integers of length 1000\nread a, b\nfor i = 0 to b exclusive , read c[i]\nsort the values c and c + b\nfor i = 0, j = 0, i is less than b - a + 1, increment i , j by 1, d[j] is equal to c[i + a - 1] - c[i]\nsort the values d, d + b - a + 1\nprint d[0] and newline
int A[100010];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; i++) cin >> A[i];\n\tsort(A, A + m);\n\tint high = n - 1, low = 0;\n\tint mini = A[high] - A[low];\n\twhile (high < m) {\n\t\tlow++;\n\t\thigh++;\n\t\tif (high < m) mini = min(mini, A[high] - A[low]);\n\t}\n\tcout << mini << '\n';\n}	create int array A of size 1000100\nlet ints n and m\nread n and m\nfor i = 0 to m exclusive, read A[i]\nsort A\ncreate ints high = n - 1 and low = 0\nlet int mini = A[high] - A[low]\nwhile high is less than m\nincrement low\nincrement high\nif high is less than m, set mini to the min of mini and A[high] - A[low]\nprint mini
int main() {\n\tint num, buy;\n\tvector<int> v;\n\tcin >> num >> buy;\n\tfor (int i = 0; i < buy; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tsort(v.begin(), v.end());\n\tint max = 0, min = 0, differ = 1000000;\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif ((i + num) > v.size())\n\t\t\tbreak;\n\t\telse {\n\t\t\tmin = min_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n\t\t\tmax = max_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n\t\t\tif ((v.at(max) - v.at(min)) < differ) { differ = v.at(max) - v.at(min); }\n\t\t}\n\t}\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tint total = count(v.begin(), v.end(), v.at(i));\n\t\tif (total >= num) {\n\t\t\tdiffer = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << differ << endl;\n}	create ints num and buy\ncreate int vector v\nread num and buy\nfor i = 0 to buy exclusive\nlet int x\nread x\nappend x to vector v\nsort vector v\nlet ints max = 0, min = 0, and differ = 1000000\nfor i = 0 to size of v exclusive\nif i + num is greater than the size of v\nbreak loop\notherwise do\nset min to the min value in v\nset max to the max value in v\nif v.at(max) - v.at(min) is less than differ, set differ to v.at(max) - v.at(min)\nfor i = 0 to size of v exclusive\nlet int total = count(v.begin(), v.end(), v.at(i));\nif total is greater than or equal to num\nset differ to 0\nbreak loop\nprint differ
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint a[m];\n\tfor (int i = 0; i < m; i++) cin >> a[i];\n\tsort(a, a + m);\n\tint min = 1000000;\n\tfor (int i = 0; i < m - n + 1; i++) {\n\t\tif ((a[i + n - 1] - a[i]) < min) { min = a[i + n - 1] - a[i]; }\n\t}\n\tif (min == 1000000)\n\t\tcout << ""0\n"";\n\telse\n\t\tcout << min << ""\n"";\n}"	let n,m be integers\nread n and m\na = array of integers of length m\nfor i = 0 to m exclusive , read a[i]\nsort the values a and a + m\nlet min be a integer with min = 1000000\nfor i = 0 to m - n + 1 exclusive\nif a[i + n - 1] - a[i] is less than min , the value of min is equal to a[i + n - 1] - a[i]\nif min is equal to 1000000\nprint 0 and newline\nelse do the following\nprint min and newline
int main() {\n\tcout.precision(10);\n\tcout << fixed;\n\tint n, m;\n\tcin >> n >> m;\n\tvector<int> v(m);\n\tfor (int i = 0; i < m; i++) cin >> v[i];\n\tsort(v.begin(), v.end());\n\tvector<int> diff;\n\tfor (int i = 0; i < m - n + 1; i++) { diff.push_back(abs(v[i] - v[n + i - 1])); }\n\tcout << *min_element(diff.begin(), diff.end()) << endl;\n}	set precision to 10\nprint fixed\nn, m = integers\nread n, m\nv = vector of integer with v = m\nfor i = 0 to m exclusive, print v[i]\nsort v.begin() and v.end()\ndiff = vector of integer\nfor i = 0 to m - n + 1 exclusive, append (abs(v[i] - v[n + i - 1])) in diff\nprint pointer min_element(diff.begin(), diff.end())
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint arr[m];\n\tfor (int i = 0; i < m; ++i) cin >> arr[i];\n\tsort(arr, arr + m);\n\tint mn = 1e9;\n\tfor (int i = 0; i <= m - n; ++i) mn = min(mn, arr[i + n - 1] - arr[i]);\n\tcout << mn << endl;\n}	declare int variables n and m\nread n and m from the input\narr is a new array ofintegers with m elements\nin the for loop, change i from 0 to m exclusive, reading variable arr[i] from the input\nsort arr from index 0 to m exclusive\ndeclare integer mn = 1e9\nfor i = 0 to m - n inclusive, change mn to min of mn and arr[i + n - 1] - arr[i]\nprint mn to the standard output
int main() {\n\tint num, buy;\n\tvector<int> v;\n\tcin >> num >> buy;\n\tfor (int i = 0; i < buy; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tsort(v.begin(), v.end());\n\tint max = 0, min = 0, differ = 1000000;\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tif ((i + num) > v.size())\n\t\t\tbreak;\n\t\telse {\n\t\t\tmin = min_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n\t\t\tmax = max_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n\t\t\tif ((v.at(max) - v.at(min)) < differ) { differ = v.at(max) - v.at(min); }\n\t\t}\n\t}\n\tfor (int i = 0; i < v.size(); i++) {\n\t\tint total = count(v.begin(), v.end(), v.at(i));\n\t\tif (total >= num) {\n\t\t\tdiffer = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << differ << endl;\n}	numbuy=int\nv=vector of int\nread num,buy\nfor i=0 to buy exclusive\nx=int\nread x\nadd x at end of v\nsort v\nmax,min=0, differ=1000000\nfor i=0 to size of v exclusive\nif i+num > size of v\nbreak\nelse\nmin=min_element(first item of v+i, first item of v+i+num) - first item of v\nmax=max_element(first item of v+i, first item of v+i+num) - first item of v\nif pos of max in v - pos of min in v < differ differ = pos of max in v - pos of min in v\nfor i=0 to size of v exclusive\ntotal=count(occurrences of i in v)\nif total >= num\ndiffer=0\nbreak\nprint differ
"int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint a[m];\n\tfor (int i = 0; i < m; i++) { cin >> a[i]; }\n\tsort(a, a + m);\n\tint i = 0, j = n - 1;\n\tint psum = a[j] - a[i];\n\twhile (j < m) {\n\t\tint sum = a[j] - a[i];\n\t\tif (sum <= psum) psum = sum;\n\t\ti++;\n\t\tj++;\n\t}\n\tcout << psum << ""\n"";\n}"	"declare integers n, m\nread n, m\ndeclare integer array a size m\nfor i = 0 to m exclusive, read a[i]\nsort from a to a + m\ndeclare integers i = 0, j = n - 1\ndeclare psum = a[j]-a[i] as integer\nwhile j is less than m\ndeclare sum = a[j]-a[i] as integer\nif sum is less than or equal to psum, let psum = sum\nincrement i\nincrement j\nprint psum, ""\n"""
int main() {\n\tint noOfStudents, noOfprizes, minimum = 100000;\n\tcin >> noOfStudents >> noOfprizes;\n\tint a[noOfprizes];\n\tfor (int i = 0; i < noOfprizes; i++) { cin >> a[i]; }\n\tsort(a, a + noOfprizes);\n\tfor (int i = 0; i + noOfStudents - 1 < noOfprizes; i++) { minimum = min(a[i + noOfStudents - 1] - a[i], minimum); }\n\tcout << minimum << endl;\n\treturn 0;\n}	noOfStudents, noOfprizes, minimum = int with minimum = 100000\nread noOfStudents then noOfprizes\na = int array of size noOfprizes\nread noOfprizes values into a\nsort a\nfor i = 0 to noOfprizes - noOfStudents + 1 set minimum to min of a[i + noOfStudents - 1] - a[i], minimum\nprint minimum
long long ans = 1000000;\nint main() {\n\tlong long int n, m;\n\tcin >> n >> m;\n\tlong long int a[m + 2];\n\tfor (int i = 0; i < m; i++) cin >> a[i];\n\tsort(a, a + m);\n\tlong long int k = m - n;\n\tfor (int i = 0; i <= k; i++) { ans = min(ans, a[i + (n - 1)] - a[i]); }\n\tcout << ans << endl;\n\treturn 0;\n}	create long long ans = 1000000\ndeclare long long int variables n and m\nread input to n and m\ndeclare long long int array a with m + 2 elements\nfor integer i = 0 to m exclusive, read a[i]\nsort m elements of a\ndeclare long long int k = m - n\nfor i from 0 to k inclusive, assign min of ans and a[i + (n - 1)] - a[i] to ans\nprint ans
int main() {\n\tint n, m;\n\twhile (cin >> n >> m) {\n\t\tint a[55];\n\t\tfor (int i = 0; i < m; i++) cin >> a[i];\n\t\tsort(a, a + m);\n\t\tint min2 = 999999999, t;\n\t\tfor (int i = n - 1; i < m; i++) {\n\t\t\tt = a[i] - a[i - n + 1];\n\t\t\tif (min2 > t) min2 = t;\n\t\t}\n\t\tcout << min2 << endl;\n\t}\n}	n,m=int\nwhile read n, m\na=array of 55 int\nfor i=0 to m exclusive read a[i]\nsort first m items of a\nmin2=999999999, t=int\nfor i=n-1 to m exclusive\nt=a[i]-a[i-n+1]\nif min2>t min2=t\nprint min2
int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tvector<long long> a(m, 0);\n\tfor (long long i = 0; i < m; i++) { cin >> a[i]; }\n\tsort(a.begin(), a.end());\n\tlong long l, r;\n\tl = r = 0;\n\tr = n - 1;\n\tlong long mn = a[m - 1] - a[0];\n\twhile (r != m) {\n\t\tmn = min(mn, a[r] - a[l]);\n\t\tl++;\n\t\tr++;\n\t}\n\tcout << mn << endl;\n\treturn 0;\n}	create long longs n, m\nread n read m\ncreate long long vector a initialized with ( m, 0 )\nfor i = 0 to m exclusive, read a[i]\nsort elements from beginning of a to end of a\ncreate long longs l, r\nset l to r to 0\nset r to n - 1\ncreate long long mn with mn = a[m - 1] - a[0]\nwhile r is not m\nset mn to minimum of ( mn and a[r] - a[l] )\nincrement l\nincrement r\nprint mn print newline
int main() {\n\tint n, m;\n\tcin >> n >> m;\n\tvector<int> arr;\n\twhile (m > 0) {\n\t\tint i;\n\t\tcin >> i;\n\t\tarr.push_back(i);\n\t\tm--;\n\t}\n\tsort(arr.begin(), arr.end());\n\tint distance = 1e9;\n\tfor (int i = 0; i < arr.size() - n + 1; i++) {\n\t\tif (arr[i + n - 1] - arr[i] < distance) { distance = arr[i + n - 1] - arr[i]; }\n\t}\n\tcout << distance << endl;\n\treturn 0;\n}	let n, m be integers\nread n and m\narr = vector\nwhile m is greater than 0\nlet i be int\nread i\npush_back i onto r\ndecrement m\nsort with functions arr.begin and arr.end\nlet distance be integer with value 1e9\nfor i from 0 to arr size minus n + 1 exclusive\nif arr[i + n - 1] - arr[i] < distance then set distance to arr[i + n - 1] - arr[i]\nprint distance
"int main() {\n\tint k, d, i;\n\tcin >> k >> d;\n\tif (d == 0) {\n\t\tif (k == 1) {\n\t\t\tcout << 0 << endl;\n\t\t} else {\n\t\t\tcout << ""No solution\n"";\n\t\t}\n\t} else {\n\t\tcout << d;\n\t\tfor (i = 1; i < k; i++) { cout << 0; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"declare integers k, d and i\nread k and d\nif d = 0\nif k = 1\nprint 0 and a new line\nelse\nprint ""No solution\n""\nelse\nprint d\nfor i = 1 to k exclusive, print 0\nprint new line"
"int main() {\n\tint k, d;\n\tcin >> k >> d;\n\tif (d == 0 && k > 1) {\n\t\tcout << ""No solution\n"";\n\t\treturn 0;\n\t}\n\tcout << d;\n\tk--;\n\twhile (k--) cout << 0;\n\tcout << endl;\n}"	"create integers k, d\nread k read d\nif d is 0 and k is greater than 1\nprint ""No solution\n""\nprint d\ndecrement k\nwhile decrement k is true, print 0\nprint newline"
"int main() {\n\tint k, d;\n\tcin >> k >> d;\n\tif (d == 0) {\n\t\tif (k == 1)\n\t\t\tcout << ""0"" << endl;\n\t\telse\n\t\t\tcout << ""No solution"" << endl;\n\t} else {\n\t\tcout << d;\n\t\tfor (int i = 0; i < k - 1; ++i) { cout << ""0""; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"k and d = integers\nread k and d\nif d = 0\nif k = 1\nprint ""0"" and a new line\nelse\nprint ""No solution"" and a new line\nelse\nprint d\nprint ""0"" k - 1 times\nprint new line"
"int main() {\n\tint k;\n\tchar d;\n\tcin >> k >> d;\n\tif (d == '0' && k > 1) {\n\t\tcout << ""No solution"" << endl;\n\t\treturn 0;\n\t}\n\tstring temp;\n\ttemp.push_back(d);\n\tfor (int i = 1; i < k; i++) temp.push_back('0');\n\tcout << temp << endl;\n\treturn 0;\n}"	let k be a integer\nlet d be a character\nread the values k and d\nif (d is equal to 0 and k is greater than 1)\nprint No solution and newline\nlet temp be a string\npush temp vector to back when element d is given( temp.push_back(d))\nfor (int i is equal to 1, i is less than k; increment i value by 1) ,temp.push_back('0')\nprint temp and newline
"int main() {\n\tint k, d;\n\tcin >> k >> d;\n\tif (k == 1 && d == 0) {\n\t\tcout << ""0"" << endl;\n\t} else if (k > 1 && d == 0) {\n\t\tcout << ""No solution"" << endl;\n\t} else {\n\t\tcout << d;\n\t\tfor (int i = 0; i < k - 1; i++) { cout << ""0""; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"create integers k, d\nread k read d\nif k is 1 and d is 0\nprint ""0"" print newline\nelse if k is greater than 1 and d is 0\nprint ""No solution"" print newline\nelse\nprint d\nfor i = 0 to k - 1 exclusive, print ""0""\nprint newline"
"int main() {\n\tint k, d;\n\tcin >> k >> d;\n\tif (d == 0 && k > 1) {\n\t\tcout << ""No solution"" << endl;\n\t} else {\n\t\tcout << d;\n\t\tfor (int i = 1; i < k; i++) cout << 0;\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	k, d=integers\nRead k and d\nif d is equal to 0 and k is greater than 1\nprint No solution and a new line\nelse do the following\nprint d\nfor i = 1 to k, exclusive, print 0\nprint a new line
"int main() {\n\tint k, d;\n\tcin >> k >> d;\n\tif (d == 0 && k > 1) {\n\t\tcout << ""No solution"" << endl;\n\t\treturn 0;\n\t}\n\tcout << d;\n\tfor (int i = 1; i < k; i++) { cout << 0; }\n\tcout << endl;\n}"	k, d =integers\nRead k, d\nif d is equal to 0 and k is greater than 1\nprint No solution and a new line\nprint d\nfor j = 1 to k exclusive, print 0\nprint a new line
"int main() {\n\tint k, d, i, j;\n\tcin >> k >> d;\n\tif (d == 0) {\n\t\tif (k > 1)\n\t\t\tcout << ""No solution"" << endl;\n\t\telse\n\t\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tcout << d;\n\tfor (i = 1; i < k; i++) cout << 0;\n\tcout << endl;\n}"	k, d, i, j =integers\nRead k and d\nif d is equal to 0\nif k is greater than 1\nprint No solution and a new line\nelse do the following\nprint 0 and a new line\nprint d\nfor i = 0 to k exclusive, print 0\nprint a new line
"int main() {\n\tint k, d;\n\tcin >> k >> d;\n\tif (k > 1 && d == 0) {\n\t\tcout << ""No solution\n"";\n\t\treturn 0;\n\t}\n\tcout << d;\n\tfor (int i = 1; i < k; i++) { cout << 0; }\n\tcout << endl;\n}"	k, d = integers\nread k and d\nif k is greater than 1 and d is 0\nprint No solution\nprint d\nfor i=1 to k exclusive print 0\nprint new line
"int main() {\n\tlong long k, d;\n\tcin >> k >> d;\n\tif (d == 0 && k > 1) {\n\t\tcout << ""No solution"" << endl;\n\t} else {\n\t\tcout << d;\n\t\tk--;\n\t\twhile (k) {\n\t\t\tcout << 0;\n\t\t\tk--;\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	d = large long\nread k and d\nif d = 0 and k > 1\nprint No Solution\nelse\nprint d\nincrement k\nwhile k > -\nprint 0\ndecrement k\nprint newline
"void desperate_optimization(int precision) {\n\tcout.setf(ios::fixed);\n\tcout.setf(ios::showpoint);\n\tcout.precision(precision);\n}\nint main() {\n\tdesperate_optimization(10);\n\tint n, k;\n\tcin >> n >> k;\n\tif (k == 0 && n != 1) {\n\t\tcout << ""No solution"" << '\n';\n\t\treturn 0;\n\t}\n\tif (k == 0)\n\t\tcout << 0 << '\n';\n\telse {\n\t\tcout << k;\n\t\tfor (int i = 1; i < n; i++) cout << 0;\n\t\tcout << '\n';\n\t}\n\treturn 0;\n}"	"declare desperate_optimization with integer precision as argument, returning void\nset cout stream flag ios::fixed\nset cout stream flag ios::showpoint\nset cout floating point precision to precision\nrun desperate_optimization with 10 as argument\ncreate integers n, k\nread n read k\nif k is 0 and n is not 1\nprint ""No solution"" print '\n'\nif k is 0\nprint 0 print '\n\nelse\nprint k\nfor i = 1 to n exclusive, print 0\nprint '\n'"
"int k, d;\nint main() {\n\tcin >> k >> d;\n\tif (d == 0 && k > 1) {\n\t\tcout << ""No solution"" << endl;\n\t\treturn 0;\n\t}\n\tcout << d;\n\tk--;\n\twhile (k--) cout << 0;\n\tcout << endl;\n\treturn 0;\n}"	"create integers k, d\nread k read d\nif d is 0 and k is greater than 1\nprint ""No solution"" print newline\nprint d\ndecrement k\nwhile decrement k is true, print 0\nprint newline"
"int main() {\n\tint k, q = 1;\n\tchar d;\n\tstring s = """";\n\tcin >> k >> d;\n\tif (d - '0' == 0) {\n\t\tif (k == 1)\n\t\t\tcout << 0 << endl;\n\t\telse\n\t\t\tcout << ""No solution"" << endl;\n\t} else {\n\t\ts += d;\n\t\tfor (int i = 1; i < k; i++) s += ""0"";\n\t\tcout << s << endl;\n\t}\n\treturn 0;\n}"	"create integers k, q, with q = 1\ncreate character d\ncreate string s with s = """"\nread k read d\nif d - '0' is 0\nif k is 1\nprint 0 print newline\nelse\nprint ""No solution"" print newline\nelse\nincrement s by d\nfor i = 1 to k exclusive, increment s by ""0""\nprint s print newline"
"int main() {\n\tint k, d;\n\tcin >> k >> d;\n\tif (k > 1 && !d) {\n\t\tcout << ""No solution"" << endl;\n\t\treturn 0;\n\t}\n\tcout << d;\n\tk--;\n\twhile (k--) cout << 0;\n\tcout << endl;\n\treturn 0;\n}"	"declare integers k and d\nread k and d\nif k is greater than 1 and d is 0\nprint ""No solution"" and a new line\nprint d\ndecrease k by one\nprint 0 in the loop while decrementing k\nprint new line"
const int Mod = 1e9 + 7;\nint n, p;\nlong long choose[30000 + 25][600], ans = 1;\nmap<int, int> Pedy;\nint main() {\n\tcin >> n;\n\tchoose[0][0] = 1;\n\tfor (int i = 1; i < 30000 + 25; i++) {\n\t\tchoose[i][0] = 1;\n\t\tfor (int j = 1; j <= n; j++) choose[i][j] = (choose[i - 1][j - 1] + choose[i - 1][j]) % Mod;\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> p;\n\t\tfor (int j = 2; j * j <= p; j++)\n\t\t\tif (p % j == 0) {\n\t\t\t\twhile (not(p % j)) {\n\t\t\t\t\tp /= j;\n\t\t\t\t\tPedy[j]++;\n\t\t\t\t}\n\t\t\t}\n\t\tif (p > 1) Pedy[p]++;\n\t}\n\tfor (map<int, int>::iterator it = Pedy.begin(); it != Pedy.end(); it++) {\n\t\tp = it->second;\n\t\tans = (ans * choose[p + n - 1][n - 1]) % Mod;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	Mod = const int with Mod = 1e9 + 7\nn, p = integers\nchoose, ans = long long with choose = 2d array of 30025 rows and 600 columns, ans = 1\nPedy = map from int to int\nread n\nindex 0, 0 of choose = 1\nfor i = 1 to 30024\nindex i and 0 of choose = 1\nfor j = 1 to n index i and j of choose = (choose[i - 1][j - 1] + choose[i - 1][j]) modulo Mod\nfor i = 0 to n exclusive\nread p\nfor j = 2 to j * j <= p\nif p modulo j is 0\nwhile not(p modulo j)\np = p / j\nincrement Pedy[j]\nif p > 1, increment Pedy[p]\nfor it = Pedy.begin() to it is not Pedy.end()\np = second in it\nans = (ans * choose[p + n - 1][n - 1]) modulo Mod\nprint ans
map<long long, long long> me;\nlong long fine[100000 + 5];\nvoid pre() {\n\tfor (long long i = 2; i <= 100000; i++) {\n\t\tif (fine[i] == 0) {\n\t\t\tfor (long long j = 2 * i; j <= 100000; j += i) { fine[j] = 1; }\n\t\t}\n\t}\n}\nlong long fact[100000], invfact[100000];\nlong long pow(long long a, long long b, long long m) {\n\tlong long ans = 1;\n\twhile (b) {\n\t\tif (b & 1) ans = (ans * a) % m;\n\t\tb /= 2;\n\t\ta = (a * a) % m;\n\t}\n\treturn ans;\n}\nlong long modinv(long long k) {\n\treturn pow(k, 1000000007 - 2, 1000000007);\n}\nvoid precompute() {\n\tfact[0] = fact[1] = 1;\n\tfor (long long i = 2; i < 100000; i++) {\n\t\tfact[i] = fact[i - 1] * i;\n\t\tfact[i] %= 1000000007;\n\t}\n\tinvfact[100000 - 1] = modinv(fact[100000 - 1]);\n\tfor (long long i = 100000 - 2; i >= 0; i--) {\n\t\tinvfact[i] = invfact[i + 1] * (i + 1);\n\t\tinvfact[i] %= 1000000007;\n\t}\n}\nlong long nCr(long long x, long long y) {\n\tif (y > x) return 0;\n\tlong long num = fact[x];\n\tnum *= invfact[y];\n\tnum %= 1000000007;\n\tnum *= invfact[x - y];\n\tnum %= 1000000007;\n\treturn num;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tprecompute();\n\tpre();\n\tfor (long long i = 1; i <= n; i++) {\n\t\tlong long temp;\n\t\tcin >> temp;\n\t\tfor (long long j = 2; j <= 100000; j++) {\n\t\t\tlong long cur = 0;\n\t\t\tif (temp <= 1) break;\n\t\t\twhile (temp % j == 0 && temp > 1) {\n\t\t\t\tcur++;\n\t\t\t\ttemp /= j;\n\t\t\t}\n\t\t\tif (cur != 0) me[j] += cur;\n\t\t}\n\t\tif (temp != 1) me[temp] += 1;\n\t}\n\tmap<long long, long long>::iterator it;\n\tlong long ans = 1;\n\tfor (it = me.begin(); it != me.end(); it++) {\n\t\tlong long temp = it->second;\n\t\tans *= nCr(temp + n - 1, temp);\n\t\tans %= 1000000007;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	me is a map of long long to long long\ncreate long long array fine with 100000 + 5 elements\npre is a void function\nfor long long i = 2 to 100000 inclusive\nif fine[i] is equal to 0\nfor j from 2 * i to 100000 inclusive increasing j by i, assign 1 to fine[j]\ncreate an arrays of long longs fact and invfact with 100000 elements each\npow is a long long function with long long arguments a, b and m\ndeclare long long variable ans = 1\nwhile b is not 1\nif b & 1 is not 0, assign (ans * a) % m to ans\ndivide b by 2\nchange a to (a * a) % m\nreturn ans\nlong long function modinv with long long argument k\nreturn pow(k, 1000000007 - 2, 1000000007)\ndefine function precompute\nset fact[0] to set fact[1] to 1\nfor i from 2 to 100000 exclusive\nassign fact[i - 1] * i to fact[i]\nfact[i] %= 1000000007\nset invfact[100000 - 1] to modinv(fact[100000 - 1])\nfor i from 100000-2 to 0 inclusive decrementing i\nchange invfact[i] to invfact[i + 1] * (i + 1)\ninvfact[i] %= 1000000007\nfunction nCr with long long arguments x and y that returns long long\nif y is greater than x, return 0\nset long long num to fact[x]\nmultiply num by invfact[y]\nnum % =1000000007\nmultiply num by invfact[x - y]\nnum % =1000000007\nreturn num\ncreate long long n\nread n\ncall precompute()\ncall pre()\nloop i from 1 to n inclusive\ncreate long long temp\nread temp\nfor j = 2 to 100000 inclusive\ncreate long long cur = 0\nif temp <= 1, stop the loop\nwhile temp modulo j = 0 && temp > 1\nincrement cur\ndivide temp by j\nif cur != 0, increase me[j] by cur\nif temp != 1, increase me[temp] by 1\ncreate map iterator it\ndeclare long long ans = 1\nmove it through me in a loop\ndeclare long long variable temp = it->second\nmultiply ans by nCr(temp + n - 1, temp)\nans % =1000000007\nprint ans
int main() {\n\tint n, my[105] = {0}, l, r, a, b, sum = 0;\n\tcin >> n;\n\tcin >> l >> r;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tcin >> a >> b;\n\t\tfor (int j = a + 1; j <= b; j++) my[j] = 1;\n\t}\n\tfor (int i = l + 1; i <= r; i++)\n\t\tif (my[i] == 0) sum++;\n\tcout << sum << endl;\n\treturn 0;\n}	n, l, r, a, b, sum = int with sum = 0 and my = int array of size 105 with all values set to 0\nread n\nread l then r\nfor i = 0 to n - 1\nread a then b\nfor j = a + 1 to b inclusive set m[j] to 1\nfor i = l + 1 to r inclusive\nif m[i] is 0 increment sum\nprint sum
int arrx[101];\nint main() {\n\tint n;\n\tcin >> n;\n\tint l, r;\n\tcin >> l >> r;\n\tfor (int i = 1; i < n; i++) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tfor (int j = a; j < b; j++) arrx[j] = 1;\n\t}\n\tint total = 0;\n\tfor (int i = l; i < r; i++) { total += arrx[i] ? 0 : 1; }\n\tcout << total << endl;\n}	create integer array arrx with size 101\ncreate integer n\nread n\ncreate integers l, r\nread l read r\nfor i = 1 to n exclusive\ncreate integers a, b\nread a read b\nfor j = a to b exclusive, set arrx[j] to 1\ncreate integer total with total = 0\nfor i = l to r exclusive, increment total by 0 if arrx[i] is true, else 1\nprint total print newline
const int N = 100 + 5;\nbool mark[N];\nint main() {\n\tint n, st, en;\n\tcin >> n >> st >> en;\n\tfor (int i = 1; i < n; i++) {\n\t\tint l, r;\n\t\tcin >> l >> r;\n\t\tfor (int j = l; j < r; j++) mark[j] = true;\n\t}\n\tint ans = 0;\n\tfor (int i = st; i < en; i++) ans += !mark[i];\n\tcout << ans << endl;\n\treturn 0;\n}	declare constant integer N = 100 + 5\ndeclare boolean array mark with N elements\ndeclare int variables n, st and en\nread input to n, st and en\nfor i = 1 to n exclusive\ncreate integers l and r\nread l and r\nfor j from l to r exclusive, set mark[j] to true\ncreate int ans = 0\nfor i = st to en exclusive, increase ans by !mark[i]\nprint ans
const int N = 105;\nbool mm[N];\nint main() {\n\tint n;\n\tcin >> n;\n\tint k1, k2;\n\tcin >> k1 >> k2;\n\tmemset(mm, false, sizeof(mm));\n\tfor (int i = int(k1); i < int(k2); ++i) mm[i] = true;\n\tfor (int i = int(0); i < int(n - 1); ++i) {\n\t\tcin >> k1 >> k2;\n\t\tfor (int j = int(k1); j < int(k2); ++j) mm[j] = false;\n\t}\n\tint ans = 0;\n\tfor (int i = int(0); i < int(101); ++i)\n\t\tif (mm[i]) ans++;\n\tcout << ans << endl;\n\treturn 0;\n}	N=105\nmm = array of N bool\nn=int\nread n\nk1,k2=int\nread k1,k2\nfill mm with false\nfor i=k1 to k2 exclusive mm[i]=true\nfor i=0 to n-1 exclusive\nread k1,k2\nfor j=k1 to k2 exclusive mm[j]=false\nans=0\nfor i=0 to 101 exclusive\nif mm[i] increment ans\nprint ans
int arr[1000];\nint main() {\n\tint n;\n\tcin >> n;\n\tint l, r;\n\tcin >> l >> r;\n\tn--;\n\twhile (n--) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tfor (int i = x; i < y; i++) arr[i]++;\n\t}\n\tint ans = 0;\n\tfor (int i = l; i < r; i++)\n\t\tif (arr[i] == 0) ans++;\n\tcout << ans << endl;\n\treturn 0;\n}	create int arr[1000]\nlet n be int\nread n\ncreate int l and r\nread l, r\ndecrement n\nwhile decrement n\ncreate integers x and y\nread x, y\nfor i=x to y exclusive, increment arr[i]\nassign 0 to ans\nfor i=l to r exclusive\nif arr[i] =0, add 1 to ans\nprint ans
int n, l, r, a[200], x, y, ans = 0, z, w;\nint main() {\n\tcin >> n;\n\tcin >> x >> y;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tcin >> l >> r;\n\t\tfor (int j = l; j < r; j++) a[j] = 1;\n\t}\n\tfor (int i = x; i < y; i++) {\n\t\tif (!a[i]) ans++;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create int n, l, r, a[200], x, y, ans, z, w, set ans to 0\nread n\nread x and y\nfor i=0 to n-1 exclusive\nread l and r\nfor j= l to r exclusive, set a[j] to 1\nfor i=x to y exclusive\nif a[i] is 0, increment ans\nprint ans
int main() {\n\tint n;\n\tint l, r;\n\tint vis[101];\n\twhile (cin >> n) {\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tcin >> l >> r;\n\t\tfor (int i = l + 1; i <= r; i++) { vis[i] = 1; }\n\t\tint x, y;\n\t\tfor (int i = 1; i <= n - 1; i++) {\n\t\t\tcin >> x >> y;\n\t\t\tfor (int j = x + 1; j <= y; j++) { vis[j] = 0; }\n\t\t}\n\t\tint cnt = 0;\n\t\tfor (int i = l + 1; i <= r; i++) { cnt += vis[i]; }\n\t\tcout << cnt << endl;\n\t}\n}	n=int\nl,r=int\nvis=array of 101 int\nwhile read n\nfill vis with 0\nread l,r\nfor i=l+1 to r inclusive vis[i]=1\nx,y=int\nfor i=1 to n-1 inclusive\nread x,y\nfor j=x+1 to y inclusive vis[j]=0\ncnt=0\nfor i=l+1 to r inclusive add vis[i] to cnt\nprint cnt
int minel(vector<int> v, int x) {\n\tint l = 11111111;\n\tfor (int i = 0; i <= x; i++) {\n\t\tif (v[i] < l) { l = v[i]; }\n\t}\n\treturn l;\n}\nint main() {\n\tint n, s, e, p;\n\tcin >> n >> s >> e;\n\tint arr[100] = {0};\n\tint sum = 0;\n\tint l = -111;\n\tfor (int i = 1; i < n; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tif (e <= y) {\n\t\t\tp = e;\n\t\t} else {\n\t\t\tp = y;\n\t\t}\n\t\tfor (int i = x; i < p; i++) { arr[i] = arr[i] + 1; }\n\t}\n\tfor (int i = s; i < e; i++) {\n\t\tif (arr[i] == 0) { sum++; }\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	in int function miniel which takes an int vecotr v and an int x\nlet l = int = 11111111\nfor i = 0 to x inclusive\nif v at i < l then set l = v at 1\nreturn l\nlet n, s, e, p be integers\nread n, s, e\nlet arr be an integer array of length 100, with arr[0] = 0\nsum = int = 0\nl = int = -111\nfor i = 1 to n\nlet x, y be int\nread x and y\nif e <= y\nset p to e\nelse\nset p to y\nfor i = x to p, set arr[i] to arr[i] + 1\nfor i = s to e\nif arr at i is 0 then increment sum\nprint sum and new line
int n, a, b, c, d, ans;\nint dryer[101];\nint main() {\n\tcin >> n >> a >> b;\n\twhile (--n) {\n\t\tcin >> c >> d;\n\t\tfor (int i = c; i < d; i++) { dryer[i] = 1; }\n\t}\n\tfor (int i = a; i < b; i++) {\n\t\tif (dryer[i] == 0) { ans++; }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create int n, a, b, c, d, ans\ncreate int array dryer of length 101\nread n, a and b\nwhile pre decrement n\nread c and d\nfor i=c to d exclusive, set dryer[i] to 1\nfor i=a to b exclusive\nif dryer[i] equal to 0, increment ans\nprint ans
const int maxn = 100 + 10;\nbool mark[maxn];\nint main() {\n\tint n;\n\tcin >> n;\n\tint L, R;\n\tfor (int i = 0; i < n; i++) {\n\t\tint l, r;\n\t\tcin >> l >> r;\n\t\tif (i > 0)\n\t\t\tfor (int j = l; j < r; j++) mark[j] = true;\n\t\telse\n\t\t\tL = l, R = r;\n\t}\n\tint ans = 0;\n\tfor (int i = 0; i < maxn; i++)\n\t\tif (!mark[i] && L <= i && i < R) ans++;\n\tcout << ans << endl;\n\treturn 0;\n}	create const int maxn = 100 + 10\nlet bool array mark size of maxn\nlet int n\nread n\nmake ints L and R\nfor i = 0 to n exclusive\nlet ints l and r\nread l and r\nif i is greater than 0\nfor j = l to r exclusive, set mark[j] to true\nelse\nset L to l and R to r\nmake integer ans = 0\nfor i = 0 to maxn exclusive\nif !mark[i] is truthy and L is less than or equal to i and i is less than R, increment ans\nprint ans
int main() {\n\tint b, a, n, i, c, d, m, j;\n\tint v[110];\n\twhile (cin >> n >> c >> d) {\n\t\tm = 0;\n\t\tfor (i = 0; i < 101; i++) v[i] = 0;\n\t\tfor (i = 0; i < n - 1; i++) {\n\t\t\tcin >> a >> b;\n\t\t\tfor (j = a + 1; j <= b; j++) v[j] = -1;\n\t\t}\n\t\tfor (i = c + 1; i <= d; i++)\n\t\t\tif (v[i] == 0) m++;\n\t\tcout << m << endl;\n\t}\n\treturn 0;\n}	b, a, n, i, c, d, m, j = integers\nv = integer array of size 110\nwhile read n, c, d\nm = 0\nfor i = 0 to 100, v[i] = 0\nfor i = 0 to n - 1 exclusive\nread a, b\nfor j = a + 1 to b, v[j] = -1\nfor i = c + 1 to d\nif v[i] is 0, increment m\nprint m
const int N = 1e5 + 11;\nbool use[N];\nint main() {\n\tint n;\n\tcin >> n;\n\tint l, r;\n\tcin >> l >> r;\n\tfor (int i = 1; i < n; i++) {\n\t\tint l, r;\n\t\tcin >> l >> r;\n\t\tfor (int j = l; j < r; j++) use[j] = 1;\n\t}\n\tint ans = 0;\n\tfor (int i = l; i < r; i++)\n\t\tif (use[i] == 0) ans++;\n\tcout << ans << endl;\n}	N=100011\nuse=array of N bool\nn=int\nread n\nl,r=int\nread l,r\nfor i=1 to n exclusive\nl,r=int\nread l,r\nfor j=l to r exclusive use[j]=1\nans=0\nfor i=l to r exclusive\nif use[i] is 0 increment ans\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tint i;\n\tvector<int> x(n);\n\tvector<int> y(n);\n\tvector<int> z(101, 1);\n\tfor (i = 0; i < n; i++) { cin >> x[i] >> y[i]; }\n\tint k;\n\tfor (i = 1; i < n; i++) {\n\t\tfor (k = x[i]; k < y[i]; k++) { z[k] = 0; }\n\t}\n\tint ct = 0;\n\tfor (i = x[0]; i < y[0]; i++) {\n\t\tif (z[i] == 1) { ct++; }\n\t}\n\tcout << ct << endl;\n\treturn 0;\n}	n = int\nread n\ni = int\nx = int vector of size n\ny = int vector of size n\nz = int vector of size 101 with all values set to 1\nread n values into x then y\nk = int\nfor i = 1 to n\nfor j = x[i] to y[i] set z[k] to 0\nct = int with ct = 0\nfor i = x[0] to y[0]\nif z[i] is 1 increment ct\nprint ct
"int main() {\n\tint n;\n\tcin >> n;\n\tint x, y;\n\tcin >> x >> y;\n\tint d = y - x;\n\tint a[d];\n\tfor (int i = 0; i < d; i++) a[i] = 1;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tint m, n;\n\t\tcin >> m >> n;\n\t\tn--;\n\t\tfor (int p = m; p <= n; p++) {\n\t\t\tif (p >= y || p < x) continue;\n\t\t\ta[p - x] = 0;\n\t\t}\n\t}\n\tint sum = 0;\n\tfor (int j = 0; j < d; j++) sum += a[j];\n\tcout << sum << ""\n"";\n\treturn 0;\n}"	let n be a integer\nread n\nlet x, y be integers\nread x, y\nlet d be a integer with d = y - x\na = array of integers of length d\nfor i = 0 to d exclusive , the value of a[i] is equal to 1\nfor i = 0 to n - 1 exclusive\nlet m, n be integers\nread m, n\ndecrement n by 1\nfor p = m to n inclusive\nif p >= y or p is less than x, proceed to next\nthe value of a[p - x] is equal to 0\nlet sum be a integer with sum = 0\nfor j = 0 to d exclusive, increment sum by a[j]\nprint sum and newline
int v[105];\nint main() {\n\tlong long n, sum = 0;\n\tcin >> n;\n\tint x, y;\n\tcin >> x >> y;\n\tfor (int i = 2; i <= n; ++i) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tfor (int j = a + 1; j <= b; ++j) v[j] = 1;\n\t}\n\tfor (int i = x + 1; i <= y; ++i) sum += 1 - v[i];\n\tcout << sum << '\n';\n\treturn 0;\n}	create int array v[105]\ncreate long long n and sum, set sum to 0\nread n\nlet x and y be int\nread x, y\nfor i=2 to n inclusive\ncreate int a and b\nread a and b\nfor j= a+1 to b inclusive, set v[j] to 1\nfor i=x+1 to y inclusive, assign sum + 1 - v[i] to sum\nprint sum and a newline
int a[105];\nint n, x, y, i, l, r;\nint sum, j;\nint main() {\n\tcin >> n;\n\tcin >> x >> y;\n\tfor (i = 1; i < n; i++) {\n\t\tcin >> l >> r;\n\t\tfor (j = l; j < r; j++) { a[j] = 1; }\n\t}\n\tsum = 0;\n\tfor (i = x; i < y; i++) {\n\t\tif (a[i] == 0) sum++;\n\t}\n\tcout << sum << endl;\n}	create int array a of length 105\ncreate integers n, x, y, i, l, r\nlet sum and j be integers\nread n\nread x and y\nfor i=1 to n exclusive\nread l and r\nfor j=l to r exclusive, set a[j] to 1\nassign 0 to sum\nfor i=x to y exclusive\nif a[i] equal to 0, sum = sum +1\nprint sum
int main() {\n\tint n, i, j, sum = 0, alexeyI, alexeyJ;\n\tint dryer[101];\n\tfill_n(dryer, 101, 1);\n\tcin >> n;\n\tcin >> alexeyI >> alexeyJ;\n\tfor (int l = 0; l < n - 1; l++) {\n\t\tcin >> i >> j;\n\t\tfor (int k = i; k < j; k++) { dryer[k] = 0; }\n\t}\n\tfor (int k = alexeyI; k < alexeyJ; k++) { sum += dryer[k]; }\n\tcout << sum << endl;\n\treturn 0;\n}	n, i, j, sum, alexeyI and alexeyJ are integers with sum = 0\ncreate int array dryer with size 101\ncall fill_n(dryer, 101, 1)\nread n\nread input to alexeyI and alexeyJ\nfor integer l = 0 to n - 1 exclusive\nread i and j\nfor k from i to j exclusive, set dryer[k] to 0\nfor k from alexeyI to alexeyJ exclusive, add dryer[k] to sum\nprint sum
int arr[1000];\nint main() {\n\tint n;\n\tcin >> n;\n\tint l, r;\n\tcin >> l >> r;\n\tn--;\n\twhile (n--) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tfor (int i = y; i > x; i--) arr[i]++;\n\t}\n\tint ans = 0;\n\tfor (int i = r; i > l; i--)\n\t\tif (arr[i] == 0) ans++;\n\tcout << ans << endl;\n\treturn 0;\n}	create int array arr with size 1000\ndeclare integer variable n\nread n\ncreate integers l and r\nread l and r\ndecrement n by one\nwhile n != 0, decrement it and continue the loop\ncreate ints x and y\nread input to x and y\nfor i = y to x exclusive counting down, increment arr[i] by one\ndeclare int variable ans = 0\nfor i = r to l exclusive counting down\nif arr[i] is equal to 0, increment ans by one\nprint ans
"void File() {\n\tfreopen(""output.txt"", ""w"", stdout);\n\tfreopen(""input.txt"", ""r"", stdin);\n}\nvoid fast() {}\nconst double pi = 2 * acos(0.0);\nconst int nn = 2e5 + 5;\nconst int oo = 0x3f3f3f3f;\nint main() {\n\tfast();\n\tint n, b, e, ans = 0;\n\tint arr[nn] = {};\n\tcin >> n;\n\tcin >> b >> e;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tfor (int j = x; j < y; j++) arr[j]++;\n\t}\n\tfor (int i = b; i < e; i++)\n\t\tif (!arr[i]) ans++;\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	"in function File\ncall freopen of ""output.txt"", ""w"" and stdout\ncall freopen of ""input.txt"", ""r"" and stdin\ndefine empty function fast\npi = const double with pi = 2 * acos of 0.0\nnn = const int with nn = 2e5 + 5\noo = const int with oo = 0x3f3f3f3f\ncall fast\nn, b, e, ans = int with ans = 0\narr = int array of size nn\nread n\nread b then e\nfor i = 0 to n - 1\nx, y = int\nread x then y\nfor j = x to y increment arr[j]\nfor i = b to e\nif arr8i] is 0 increment ans\nprint ans"
"long long A, B, ans = -0x7fffffff;\nlong long bxb, bex, bob, bpb;\nint main() {\n\tcin >> A >> B;\n\tif (B == 0) {\n\t\tcout << A * A << endl;\n\t\tfor (int i = 0; i < A; i++) cout << ""o"";\n\t\tcout << endl;\n\t\treturn 0;\n\t}\n\tif (B == 1) {\n\t\tcout << A * A - 1 << endl;\n\t\tfor (int i = 0; i < A; i++) cout << ""o"";\n\t\tcout << ""x"" << endl;\n\t\treturn 0;\n\t}\n\tif (A == 0) {\n\t\tcout << -B * B << endl;\n\t\tfor (int i = 0; i < B; i++) cout << ""x"";\n\t\tcout << endl;\n\t\treturn 0;\n\t}\n\tfor (int xb = 2; xb <= min(B, A + 1); xb++) {\n\t\tint ob = xb - 1;\n\t\tlong long score = ob - 1;\n\t\tscore += (A - (ob - 1)) * (A - (ob - 1));\n\t\t;\n\t\tlong long pb = B / xb;\n\t\tlong long ex = B % xb;\n\t\tscore -= (xb - ex) * pb * pb;\n\t\tscore -= ex * (pb + 1) * (pb + 1);\n\t\tif (score > ans) {\n\t\t\tans = score;\n\t\t\tbxb = xb;\n\t\t\tbex = ex;\n\t\t\tbob = ob;\n\t\t\tbpb = pb;\n\t\t}\n\t}\n\tcout << ans << endl;\n\tfor (int i = 0; i < bxb; i++) {\n\t\tfor (int j = 0; j < bpb; j++) cout << ""x"";\n\t\tif (i < bex) cout << ""x"";\n\t\tif (i == 0)\n\t\t\tfor (int j = 0; j < A - (bob - 1); j++) cout << ""o"";\n\t\telse if (i + 1 < bxb)\n\t\t\tcout << ""o"";\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"create long longs A, B, ans with ans = -0x7fffffff\ncreate long longs bxb, bex, bob, bpb\nread A read B\nif B is 0\nprint A * A print newline\nfor i = 0 to A exclusive print ""o""\nprint newline\nif B is 1\nprint A * A - 1 print newline\nfor i = 0 to A exclusive, print ""o""\nprint ""x"" print newline\nif A is 0\nprint -B * B print newline\nfor i = 0 to B exclusive, print ""x'\nprint newline\nfor xb = 2 to minimum of (B and A + 1) inclusive\ncreate integer ob with ob = xb - 1\ncreate long long score with score = ob - 1\nincrement score by (A - (ob - 1)) * (A - (ob - 1))\nend statement\ncreate long long pb with pb = B / xb\ncreate long long ex with ex = B % xb\ndecrement score by ( xb - ex ) * pb * pb\ndecrement score by ex * ( pb + 1 ) * ( pb + 1 )\nif score is greater than ans\nset ans to score\nset bxb to xb\nset bex to ex\nset bob to ob\nset bpb to pb\nprint ans print newline\nfor i = 0 to bxb exclusive\nfor j = 0 to bpb exclusive, print ""x""\nif i is less than bex, print ""x""\nif i is 0\nfor j = 0 to A - ( bob - 1 ) exclusive, print ""o""\nelse if i + 1 is less than bxb\nprint ""o""\nprint newline"
int co, cx;\nconst long long inf = -1e16;\ninline long long gox(int num) {\n\tif (num > cx) return inf;\n\tint ex = cx % num;\n\tint anch = cx / num;\n\tlong long ans = 1LL * (anch + 1) * (anch + 1) * ex;\n\tans += 1LL * anch * anch * (num - ex);\n\treturn -ans;\n}\ninline long long goo(int num) {\n\tif (num > co) return inf;\n\tint juntos = co - num + 1;\n\tlong long ans = 1LL * juntos * juntos;\n\tans += num - 1;\n\treturn ans;\n}\ninline void build(int x, int o) {\n\tstring s;\n\tint xx = cx / x;\n\tbool flag = (x > o);\n\tbool fst = true;\n\tint ex = cx % x;\n\tint prim = co - o + 1;\n\twhile (x || o) {\n\t\tif (flag) {\n\t\t\tfor (int i = int(0); i < int(xx); ++i) s.push_back('x');\n\t\t\tif (ex > 0) s.push_back('x'), ex--;\n\t\t\tx--;\n\t\t} else {\n\t\t\tif (fst) {\n\t\t\t\tfor (int i = int(0); i < int(prim); ++i) s.push_back('o');\n\t\t\t\tfst = false;\n\t\t\t} else\n\t\t\t\ts.push_back('o');\n\t\t\to--;\n\t\t}\n\t\tflag = (!flag);\n\t}\n\tcout << s << endl;\n}\nint main() {\n\tcin >> co >> cx;\n\tif (co == 0 || cx == 0) {\n\t\tif (co > 0) {\n\t\t\tcout << 1LL * co * co << endl;\n\t\t\tfor (int i = int(0); i < int(co); ++i) cout << 'o';\n\t\t\tcout << endl;\n\t\t}\n\t\tif (cx > 0) {\n\t\t\tcout << -1LL * cx * cx << endl;\n\t\t\tfor (int i = int(0); i < int(cx); ++i) cout << 'x';\n\t\t\tcout << endl;\n\t\t}\n\t\treturn 0;\n\t}\n\tint lim = min(co, cx);\n\tlong long ans = LLONG_MIN;\n\tpair<int, int> pos;\n\tfor (int i = int(1); i < int(lim + 1); ++i) {\n\t\tif (ans < gox(i) + goo(i)) {\n\t\t\tans = gox(i) + goo(i);\n\t\t\tpos = {i, i};\n\t\t}\n\t}\n\tfor (int i = int(2); i < int(cx + 1); ++i) {\n\t\tif (ans < gox(i) + goo(i - 1)) {\n\t\t\tans = gox(i) + goo(i - 1);\n\t\t\tpos = {i, i - 1};\n\t\t}\n\t}\n\tfor (int i = int(2); i < int(co + 1); ++i) {\n\t\tif (ans < gox(i - 1) + goo(i)) {\n\t\t\tans = gox(i - 1) + goo(i);\n\t\t\tpos = {i - 1, i};\n\t\t}\n\t}\n\tcout << ans << endl;\n\tbuild(pos.first, pos.second);\n\treturn 0;\n}	declare integer variables co and cx\ncreate const long long inf = -1e16\ninlined long long function gox with int argument num\nreturn inf if num is greater than cx\ndeclare int ex = cx % num\ndeclare int variable anch = cx / num\ndeclare long long variable ans = 1LL * (anch + 1) * (anch + 1) * ex\nincrease ans by 1LL * anch * anch * (num - ex)\nreturn -ans\ninlined long long function goo with int argument num\nif num is greater than co\ndeclare int variable juntos = co - num + 1\ncreate long long ans = 1LL * juntos * juntos\nincrease ans by num - 1\nreturn ans\ninlined void function build with int arguments x and o\ncreate string s\ndeclare integer xx = cx / x\ncreate bool flag = true if x > o, else false\ndeclare bool variable fst = true\ncreate integer ex = cx % x\ndeclare integer prim = co - o + 1\nwhile either x or o is true\nif flag is true\npush 'x' into s xx times\nif ex is greater than 0, push 'x' into s and decrement ex\ndecrement x\nelse\nif fst is true\npush 'o' into s prim times\nset fst to false\nelse\npush 'o' into s\ndecrement o\ninvert the value of flag\nprint s\nread co and cx\nif co is 0 or cx is 0\nif co is greater than 0\nprint 1LL * co * co\nprint 'o' co times\nprint a new line\nif cx is greater than 0\nprint - 1LL * cx * cx\nprint 'x' cx times\nprint\ndeclare int lim = min of co and cx\ncreate long long ans = LLONG_MIN\npos is a pair of integers\nfor integer i = 1 to lim + 1 exclusive\nif ans is less than gox(i) + goo(i)\nassign gox(i) + goo(i) to ans\npos = {i, i}\nfor i = 2 to cx + 1 exclusive\nif ans is less than gox(i) + goo(i - 1)\nchange ans to gox(i) + goo(i - 1)\npos = {i, i - 1}\nfor i = 2 to co + 1 exclusive\nif ans is less than gox(i - 1) + goo(i)\nset ans to gox(i - 1) + goo(i)\npos = {i - 1, i}\nprint ans\ncall build with arguments pos.first and pos.second
int main() {\n\tlong long a, b;\n\tcin >> a >> b;\n\tif (a == 0) {\n\t\tcout << -1 * b * b << endl;\n\t\tfor (int(i) = (0); (i) < (b); ++(i)) cout << 'x';\n\t\tcout << endl;\n\t} else if (b == 0) {\n\t\tcout << a * a << endl;\n\t\tfor (int(i) = (0); (i) < (a); ++(i)) cout << 'o';\n\t\tcout << endl;\n\t} else if (b == 1) {\n\t\tcout << a * a - 1 << endl;\n\t\tfor (int(i) = (0); (i) < (a); ++(i)) cout << 'o';\n\t\tcout << 'x';\n\t\tcout << endl;\n\t} else {\n\t\tlong long ret = LLONG_MIN;\n\t\tlong long foo = 0;\n\t\tfor (long long j = 1; j <= min(b - 1, a); j++) {\n\t\t\tlong long pos = (a - j + 1) * (a - j + 1) + (j - 1);\n\t\t\tlong long q = b / (j + 1), r = b % (j + 1);\n\t\t\tlong long neg = r * (q + 1) * (q + 1) + (j + 1 - r) * q * q;\n\t\t\tif (pos - neg > ret) {\n\t\t\t\tret = pos - neg;\n\t\t\t\tfoo = j + 1;\n\t\t\t}\n\t\t}\n\t\tcout << ret << endl;\n\t\tlong long q = b / foo, r = b % foo;\n\t\tlong long g = (a - (foo - 1) + 1);\n\t\tfor (int(j) = (1); (j) < (foo + 1); ++(j)) {\n\t\t\tfor (int(i) = (0); (i) < (q); ++(i)) cout << 'x';\n\t\t\tif (j <= r) cout << 'x';\n\t\t\tif (j != foo) {\n\t\t\t\tif (j == 1)\n\t\t\t\t\tfor (int(i) = (0); (i) < (g); ++(i)) cout << 'o';\n\t\t\t\telse\n\t\t\t\t\tcout << 'o';\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	create long long a and b\nread a,b\nif a equal to 0\nprint -1 * b * b\nfor i=0 to b exclusive, print x\nprint a newline\nelse if b = 0\nprint a * a\nfor i=0 to a exclusive, print o\nprint a newline\nelse if b equal to 1\nprint a*a -1\nfor i=0 to a exclusive, print o\nprint x\nprint a newline\nelse\nser ret to LLONG_MIN\nset foo=0\nfor j=1 to min of b-1 and a\nassign (a - j + 1) * (a - j + 1) + (j - 1) to pos\nset q = b / (j + 1) and r to b % (j + 1)\nset neg = r * (q + 1) * (q + 1) + (j + 1 - r) * q * q\nif pos - neg greater than ret\nret = pos - neg\nassign j + 1 to foo\nprint ret\nset q = b / foo, r = b % foo\nassign (a - (foo - 1) + 1) to g\nfor j=1 to foo + 1 exclusive\nfor i=0 to q exclusive, print x\nif <= r, print x\nif j different from foo\nif j equal to 1\nfor i=0 to g exclusive, print o\nelse\nprint o\nprint a newline
"vector<int> v;\nint main() {\n\tint n, p, k;\n\tcin >> n >> p >> k;\n\tfor (int x = p - k; x <= p + k; x++) {\n\t\tif (x < 1) continue;\n\t\tif (x > n) continue;\n\t\tv.push_back(x);\n\t}\n\tif (v[0] != 1) cout << ""<< "";\n\tfor (int(i) = (0); (i) < (((int)v.size())); ++(i)) {\n\t\tif (v[i] == p) cout << ""("";\n\t\tcout << v[i];\n\t\tif (v[i] == p) cout << "")"";\n\t\tif (i == ((int)v.size()) - 1) {\n\t\t\tif (v[i] < n)\n\t\t\t\tcout << "" >>"" << endl;\n\t\t\telse\n\t\t\t\tcout << endl;\n\t\t} else\n\t\t\tcout << "" "";\n\t}\n\treturn 0;\n}"	"create integer vector v\ncreate integers n, p, k\nread n read p read k\nfor x = p - k to p + k inclusive\nif x is less than 1, break current loop iteration\nif x is greater than n, break current loop iteration\nadd element x to end of v\nif v[0] is not 1, print ""<< ""\nfor i = 0 to integer casted size of v exclusive\nif v[i] is p, print ""(""\nprint v[i]\nif v[i] is p, print "")""\nif i is integer casted size of v - 1\nif v[i] is less than n\nprint "" >>"" print newline\nelse\nprint newline\nelse\nprint "" """
"queue<int> q;\nbool p[10000] = {};\nint pe;\nvoid print(int c, int a, int b) {\n\tif (a < c || a > b || p[a] || a > pe || a < 1) return;\n\tp[a] = true;\n\tprint(c, a - 1, b);\n\tq.push(a);\n\tprint(c, a + 1, b);\n}\nint main() {\n\tint n, k;\n\tcin >> pe >> n >> k;\n\tif (n - k > 1) { cout << ""<< ""; }\n\tprint(n - k, n, n + k);\n\twhile (!q.empty()) {\n\t\tif (q.size() != 1 && q.front() != n)\n\t\t\tcout << q.front() << "" "";\n\t\telse if (q.front() == n) {\n\t\t\tcout << ""("" << q.front();\n\t\t\tif (q.size() != 1) {\n\t\t\t\tcout << "") "";\n\t\t\t} else\n\t\t\t\tcout << "")"";\n\t\t} else\n\t\t\tcout << q.front();\n\t\tq.pop();\n\t}\n\tif (n + k < pe) { cout << "" >>""; }\n\tcout << endl;\n}"	"create integer queue q\ncreate boolean array p with size 10000 with p = {}\ncreate integer pe\ndeclare print with integers c, a, b as arguments, returning void\nif a is less than c or a is greater than b or p[a] or a is greater than pe or a is less than 1, return from function\nset p[a] to true\nrun print with c, a - 1, b as arguments\nadd element a to end of q\nrun print with c, a + 1, b as arguments\ncreate integers n, k\nread pe read n read k\nif n - k is greater than 1, print ""<< ""\nrun print with n - k, n, n + k as arguments\nwhile q is not empty\nif size of q is not 1 and front of q is not n\nprint front of q print "" ""\nelse if front of q is n\nprint ""("" print front of q\nif size of q is not 1\nprint "") ""\nelse\nprint "")""\nelse\nprint front of q\nremove element from end of q\nif n + k is less than pe, print "" >>""\nprint newline"
"void desperate_optimization(int precision) {\n\tcout.setf(ios::fixed);\n\tcout.setf(ios::showpoint);\n\tcout.precision(precision);\n}\nint main() {\n\tdesperate_optimization(10);\n\tint n, p, k;\n\tcin >> n >> p >> k;\n\tif (p - k > 1) cout << ""<< "";\n\tfor (int i = max(1, p - k); i < p; i++) { cout << i << "" ""; }\n\tcout << ""("" << p << "")"";\n\tfor (int i = p + 1; i <= min(n, p + k); i++) { cout << "" "" << i; }\n\tif (p + k < n) cout << "" >>"";\n\tcout << '\n';\n\treturn 0;\n}"	"in the function desperate_optimization\nset format flag ios::fixed of the output\nset format flag ios::showpoint of the output\nset output precision to precision\ncall desperate_optimization(10)\nlet n, p and k be integers\nread n, p and k\nif p - k is greater than 1\nfor i = max of 1 and p - k to p exclusive, print i and "" ""\nprint ""("", p and "")""\nfor i = p + 1 to min of n and p + k inclusive, print "" "" and i\nif p + k is less than n, print "" >>""\nprint '\n'"
"int main() {\n\tint n, p, k;\n\tbool start = 1, end = 0;\n\tcin >> n >> p >> k;\n\tfor (int i = p - k; i <= p + k; i++) {\n\t\tif (start) {\n\t\t\tif (i <= 1) {\n\t\t\t\tif (p == 1)\n\t\t\t\t\tcout << ""("" << 1 << "")"";\n\t\t\t\telse\n\t\t\t\t\tcout << 1;\n\t\t\t\ti = 1;\n\t\t\t} else\n\t\t\t\tcout << ""<< "" << i;\n\t\t\tstart = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tif (i >= n) {\n\t\t\tend = 1;\n\t\t\tif (p == n)\n\t\t\t\tcout << "" ("" << n << "")"";\n\t\t\telse\n\t\t\t\tcout << "" "" << n;\n\t\t\tbreak;\n\t\t}\n\t\tif (i == p)\n\t\t\tcout << "" ("" << i << "")"";\n\t\telse {\n\t\t\tcout << "" "" << i;\n\t\t}\n\t}\n\tif (!end) cout << "" >>"";\n\tcout << '\n';\n}"	"create integers n, p, k\ncreate booleans start, end with start = 1, end = 0\nread n read p read k\nfor i = p - k to p + k inclusive\nif start is true\nif i is less than or equal to 1\nif p is 1\nprint ""("" print 1 print "")""\nelse\nprint 1\nset i to 1\nelse\nprint ""<< "" print i\nset start to 0\nbreak current loop iteration\nif i is greater than or equal to n\nset end to 1\nif p is n\nprint "" ("" print n print "")""\nelse\nprint "" "" print n\nbreak loop\nif i is p\nprint "" ("" print i print "")""\nelse\nprint "" "" print i\nif not end print "" >>""\nprint '\n'"
"const double pi = 3.14159265359;\nconst long long MOD = 1000 * 1000 * 1000 + 7;\nconst int N = 200 * 1000 + 10;\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tint aa = a * a, bb = b * b;\n\tvector<int> as;\n\tvector<int> bs;\n\tfor (int i = 1; i < aa; i++) {\n\t\tint sq = sqrt(aa - i * i);\n\t\tif (sq * sq + i * i == aa) as.push_back(i);\n\t}\n\tfor (int i = 1; i < bb; i++) {\n\t\tint sq = sqrt(bb - i * i);\n\t\tif (sq * sq + i * i == bb) bs.push_back(i);\n\t}\n\tfor (int i = 0; i < as.size(); i++) {\n\t\tfor (int j = 0; j < bs.size(); j++) {\n\t\t\tint xa = as[i];\n\t\t\tint ya = sqrt(aa - xa * xa);\n\t\t\tint xb = bs[j];\n\t\t\tint yb = sqrt(bb - xb * xb);\n\t\t\tif ((xb - xa) * (xb - xa) + (ya + yb) * (ya + yb) == aa + bb && xb != xa) {\n\t\t\t\tcout << ""YES\n"";\n\t\t\t\tcout << xa << "" "" << ya << '\n';\n\t\t\t\tcout << xb << "" "" << -yb << '\n';\n\t\t\t\tcout << 0 << "" "" << 0 << '\n';\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NO\n"";\n}"	"pi = const double with pi = 3.14159265359\nMOD = const long long with MOD = 1000 * 1000 * 1000 + 7\nN = const int with N = 200 * 1000 + 10\na, b = int\nread a then b\naa, bb = int with aa = a * a and bb = b * b\nas = int vector\nbs = int vector\nfor i = 1 to aa\nint sq = sqrt of aa - i * -\nif sq * sq + i * i is aa then append i to as\nfor i = 1 to bb\nsq = int with sq = sqrt of bb - i * i\nif sq * sq + i * i is bb then append i to bs\nfor i = 0 to size of as\nfor j = 0 to size of bs\nxa = int with xa = as[i]\nya = int with ya = sqrt of aa - xa * xa\nxb = int with xb = bs[j]\nyb = int with yb = sqrt of bb - xb * xb\nif (xb - xa) * (xb - xa) + (ya + yb) * (ya + yb) is aa + bb and xb is not xa\nprint ""YES""\nprint xa and ya\nprint xb and -yb\nprint 0 and 0\nprint ""NO"""
"int main() {\n\tint n, v;\n\tcin >> n >> v;\n\tdouble a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tdouble minvalue = INT_MAX;\n\tdouble b[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> b[i];\n\t\tminvalue = min(minvalue, b[i]);\n\t}\n\tdouble l = 0;\n\tdouble r = 1e18;\n\tdouble answer = 0;\n\tfor (int i = 1; i <= 100; i++) {\n\t\tdouble mid = (l + (r - l) / 2);\n\t\tdouble sum = 0;\n\t\tint flag = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tdouble value = a[i] * mid;\n\t\t\tif (value > b[i]) {\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t} else\n\t\t\t\tsum += (a[i] * mid);\n\t\t}\n\t\tif (flag == 1) {\n\t\t\tr = mid - 1;\n\t\t\tcontinue;\n\t\t}\n\t\tif (sum <= v) {\n\t\t\tanswer = sum;\n\t\t\tl = mid + 1;\n\t\t} else {\n\t\t\tr = mid - 1;\n\t\t}\n\t}\n\tcout << setprecision(6) << fixed << answer << ""\n"";\n\treturn 0;\n}"	"create integers n and v\nread n and v\na is an array of doubles with size n\nread n elements into array a\ndeclare double called minvalue = INT_MAX\nb is an array of doubles with size n\nfor integer i = 0 to n exclusive\nread b[i]\nassign value of min of minvalue and b[i] to the minvalue\nl is double = 0\nlet r be double = 1e18\nanswer is double = 0\nfor integer i = 1 to 100 inclusive\ndouble mid = (l + (r - l) / 2)\nsum is double = 0\nflag is integer = 0\nfor i = 0 to n exclusive\nset double value to a[i] * mid\nif value is greater than b[i]\nset flag to 1\nbreak the loop\nelse\nincrease sum by (a[i] * mid)\nif flag = 1\nset value of r to mid - 1\nskip the rest of the loop\nif sum <= v\nset answer to sum\nl = mid + 1\nelse\nr = mid - 1\nprint setprecision(6), fixed, answer and ""\n"""
"int main() {\n\tint n;\n\tcin >> n;\n\tint A[n];\n\tfor (int i = 0; i < n; i++) { cin >> A[i]; }\n\tint ansf = 1;\n\tint j = 0;\n\tint ch = 0;\n\tint max1 = 1;\n\tint x = 0;\n\tint dp[n] = {0};\n\tfor (int i = 1; i < n; i++) {\n\t\tif (A[i] > A[i - 1]) {\n\t\t\tdp[i] = dp[i - 1] + 1;\n\t\t} else {\n\t\t\tdp[i] = 0;\n\t\t}\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tif (A[i] > A[i - 1]) {\n\t\t\tansf++;\n\t\t} else {\n\t\t\tif (ch == 0) {\n\t\t\t\tx = A[i];\n\t\t\t\tA[i] = A[i - 1] + 1;\n\t\t\t\tj = i;\n\t\t\t\tch = 1;\n\t\t\t\tansf++;\n\t\t\t} else {\n\t\t\t\tansf = i - j;\n\t\t\t\tA[j] = x;\n\t\t\t\tif (ansf == 1) {\n\t\t\t\t\tif (A[i] > A[i - 1]) {\n\t\t\t\t\t\tansf++;\n\t\t\t\t\t\tx = A[i - 2];\n\t\t\t\t\t\tansf++;\n\t\t\t\t\t\tj = i - 2;\n\t\t\t\t\t\tA[i - 2] = A[i - 1] - 1;\n\t\t\t\t\t\tif (i >= 3 && A[i - 2] > A[i - 3]) ansf = ansf + dp[i - 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tansf++;\n\t\t\t\t\t\tx = A[i - 1];\n\t\t\t\t\t\tj = i - 1;\n\t\t\t\t\t\tA[i - 1] = A[i] - 1;\n\t\t\t\t\t\tif (A[i - 1] > A[i - 2]) ansf = ansf + dp[i - 1];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (A[j] < A[j + 1]) ansf++;\n\t\t\t\t\tx = A[i];\n\t\t\t\t\tj = i;\n\t\t\t\t\tA[i] = A[i - 1] + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmax1 = max(max1, ansf);\n\t}\n\tcout << max1 << ""\n"";\n\treturn 0;\n}"	"declare integer variable n\nread input to n\nlet A be integer array with size n\nread n elements into A\ncreate integer ansf = 1\ncreate integer j = 0\ncreate integer ch = 0\ncreate integer max1 = 1\ncreate integer x = 1\ndeclare integer array dp with size n filled with 0\nfor integer i = 1 to n exclusive incrementing i\nif A[i] is greater than A[i - 1]\nchange dp[i] to dp[i - 1] + 1\nelse\nassign 0 to dp[i]\nloop i from 1 to n exclusive\nif A[i] is greater than A[i - 1]\nincrement ansf by one\nelse\nif ch is 0\nassign A[i] to x\nassign A[i - 1] + 1 to A[i]\nchange j to i\nassign 1 to ch\nincrement ansf by one\nelse\nassign i - j to ansf\nchange A[j] to x\nif ansf = 1\nif A[i] is greater than A[i - 1]\nincrement ansf by one\nchange x to A[i - 2]\nincrement ansf by one\nassign i - 2 to j\nchange A[i - 2] to A[i - 1] - 1\nif i >= 3 and A[i - 2] > A[i - 3], increase ansf by dp[i - 2]\nelse\nincrement ansf\nassign A[i - 1] to x\nassign i - 1 to j\nchange A[i - 1] to A[i] - 1\nif A[i - 1] is greater than A[i - 2], increase ansf by dp[i - 1]\nelse\nif A[j] is less than A[j + 1], increment ansf\nchange x to A[i]\nset j to i\nchange A[i] to A[i - 1] + 1\nchange max1 to max of max1 and ansf\nprint max1 and ""\n"""
vector<long long> v[100005];\nvoid solve() {\n\tlong long n, x = 0, b, y, ans = 0;\n\tcin >> n;\n\tlong long a[n];\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (i == 0) {\n\t\t\tv[x].push_back(a[i]);\n\t\t\tcontinue;\n\t\t}\n\t\tif (a[i] <= a[i - 1]) x++;\n\t\tv[x].push_back(a[i]);\n\t}\n\tif (x == 0) {\n\t\tcout << v[0].size() << '\n';\n\t\treturn;\n\t}\n\tfor (long long i = 0; i < x + 1; i++) {\n\t\tif (i == x) {\n\t\t\ty = v[i].size() + 1;\n\t\t} else {\n\t\t\tlong long n = v[i].size();\n\t\t\tlong long m = v[i + 1].size();\n\t\t\tif (m == 1) {\n\t\t\t\ty = n + 1;\n\t\t\t} else if (n == 1) {\n\t\t\t\ty = m + 1;\n\t\t\t} else if (v[i + 1][1] - v[i][n - 1] > 1) {\n\t\t\t\ty = n + m;\n\t\t\t} else if (v[i + 1][0] - v[i][n - 2] > 1) {\n\t\t\t\ty = n + m;\n\t\t\t} else\n\t\t\t\ty = n + 1;\n\t\t}\n\t\tans = max(ans, y);\n\t}\n\tcout << ans << '\n';\n\treturn;\n}\nint main() {\n\tlong long TESTS = 1;\n\twhile (TESTS--) { solve(); }\n\treturn 0;\n}	v = vector array of long long of size 100005\nin the function solve\nn, x, b, y, ans = long long with x = 0, ans = 0\nread n\na = array of long long of size n\nfor i = 0 to n exclusive\nread a[i]\nif i is 0\nappend a[i] in v[x]\ncontinue iteration\nif a[i] <= a[i - 1], increment x\nappend a[i] in v[x]\nif x is 0\nprint v[0].size()\nreturn\nfor i = 0 to x + 1\nif i is x\ny = v[i].size() + 1\nelse\nn = long long with n = v[i].size()\nm = long long with m = v[i + 1].size()\nif m is 1\ny = n + 1;\nelse if n is 1\ny = m + 1\nelse if v[i + 1][1] - v[i][n - 1] > 1\ny = n + m\nelse if v[i + 1][0] - v[i][n - 2] > 1\ny = n + m\nelse\ny = n + 1\nans = max of ans and y\nprint ans\nreturn\nTESTS = long long with TESTS = 1\nwhile postfix decrement TESTS, call solve
const int max4 = 10004;\nconst int maxx = 200005;\nconst int max6 = 1000006;\nconst int lg5 = 17;\nconst int INF = 1000000007;\nconst long long INFLL = 4LL * 1000000000 * 1000000000;\nint powmod(int a, int b, int mod) {\n\tint res = 1;\n\ta %= mod;\n\tfor (; b; b >>= 1) {\n\t\tif (b & 1) { res = 1LL * res * a % mod; }\n\t\ta = 1LL * a * a % mod;\n\t}\n\treturn res;\n}\nint gcd(int a, int b) {\n\twhile (b > 0) {\n\t\tint t = a % b;\n\t\ta = b, b = t;\n\t}\n\treturn a;\n}\nint lcm(int a, int b) {\n\treturn (a / gcd(a, b)) * b;\n}\nint is_prime(int n) {\n\tif (n <= 1 || n > 3 && (n % 2 == 0 || n % 3 == 0)) return 0;\n\tfor (int i = 5, t = 2; i * i <= n; i += t, t = 6 - t)\n\t\tif (n % i == 0) return 0;\n\treturn 1;\n}\nint n, arr[maxx], pref[maxx], suff[maxx];\nint main() {\n\tcin >> n;\n\tif (n == 1) { return cout << 1 << '\n', 0; }\n\tfor (int i = 1; i <= n; i++) { cin >> arr[i]; }\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (arr[i] > arr[i - 1]) {\n\t\t\tpref[i] = pref[i - 1] + 1;\n\t\t} else {\n\t\t\tpref[i] = 1;\n\t\t}\n\t}\n\tfor (int i = n; i >= 1; i--) {\n\t\tif (i == n || arr[i] < arr[i + 1]) {\n\t\t\tsuff[i] = suff[i + 1] + 1;\n\t\t} else {\n\t\t\tsuff[i] = 1;\n\t\t}\n\t}\n\tint res = 2;\n\tfor (int i = 2; i < n; i++) {\n\t\tif (arr[i + 1] > arr[i - 1] + 1) { res = max(res, pref[i - 1] + suff[i + 1] + 1); }\n\t}\n\tfor (int i = 2; i < n; i++) { res = max(res, max(pref[i], suff[i]) + 1); }\n\tcout << res << '\n';\n\treturn 0;\n}	create constant integer max4 with max4 = 10004\ncreate constant integer maxx with maxx = 200005\ncreate constant integer max6 with max6 = 1000006\ncreate constant integer lg5 with lg5 = 17\ncreate constant integer INF with INF = 1000000007\ncreate constant long long INFLL with INFLL = 4LL * 1000000000 * 1000000000\ndeclare powmod with integers a, b, mod as arguments, returning integer\ncreate integer res with res = 1\nset a to a % mod\nfor b, setting b to b bitshift right 1\nif b bitwise and 1, set res to 1LL * res * a % mod\nset a to 1LL * a * a % mod\nreturn res from function\ndeclare gcd with integers a, b as arguments, returning integer\nwhile b is greater than 0\ncreate integer t with t = a % b\nset a to b, set b to t\nreturn a from function\ndeclare lcm with integers a, b as arguments, returning integer\nreturn ( a / ( result of run gcd with a, b as arguments ) ) * b\ndeclare is_prime with integer n as argument, returning integer\nif n is less than or equal to 1 or n is greater than 3 and ( n % 2 is 0 or n % 3 is 0 ), return 0 from function\nfor i = 5, t = 2 to i * i is less than or equal to n, incrementing i by t, setting t to 6 - t\nif n % i is 0, return 0 from function\nreturn 1 from function\ncreate integer n, create integer arrays arr, pref, suff, with arr size maxx, pref size maxx, suff size maxx\nread n\nif n is 1, return print 1 print '\n', 0 from function\nfor i = 1 to n inclusive, read arr[i]\nfor i = 1 to n inclusive\nif arr[i] is greater than arr[i-1]\nset pref[i] to pref[i-1] + 1\nelse\nset pref[i] to 1\nfor i = n to 1 inclusive, decrementing i\nif i is n or arr[i] is less than arr[i+1]\nset suff[i] to suff[i+1] + 1\nelse\nset suff[i] to 1\ncreate integer res with res = 2\nfor i = 2 to n exclusive\nif arr[i+1] is greater than arr[i-1] + 1, set res to maximum of ( res and pref[i-1] + suff[i+1] + 1 )\nfor i = 2 to n exclusive, set res to maximum of ( res and maximum of ( pref[i] and suff[i] ) + 1 )\nprint res print '\n'
const long long inf = 1e9 + 7;\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long a[n + 2], left[n + 2], right[n + 2], ans = 0;\n\ta[0] = -1;\n\ta[n + 1] = inf;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tright[0] = 0;\n\tfor (int i = 1; i <= n; i++) right[i] = (a[i] > a[i - 1] ? right[i - 1] + 1 : 1);\n\tleft[n + 1] = 0;\n\tfor (int i = n; i > 0; i--) left[i] = (a[i] < a[i + 1] ? left[i + 1] + 1 : 1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i - 1] + 1 < a[i + 1])\n\t\t\tans = max(ans, 1 + left[i + 1] + right[i - 1]);\n\t\telse\n\t\t\tans = max(ans, max(left[i], right[i]) + 1);\n\t}\n\tcout << ans << endl;\n}	create const long long inf = 1e9 + 7\ndeclare integer n\nread from the input to n\ncreate long long ans = 0 and long long arrays a, left and right with size n + 2\nchange a[0] to - 1\nassign inf to a[n + 1]\nloop i from 1 to n inclusive incrementing i\nset right[0] to 0\nloop i from 1 to n inclusive, change right[i] to right[i - 1] + 1 if a[i] > a[i - 1], or else 1\nset left[n + 1] to 0\nloop i from n to 0 inclusive decrementing i, change left[i] to left[i + 1] + 1 if a[i] < a[i + 1], or else 1\nloop i from 1 to n inclusive\nif a[i - 1] + 1 is less than a[i+1]\nset ans to max of ans and 1 + left[i + 1] + right[i - 1]\nelse\nset ans to max of ans and (max of left[i] and right[i] + 1)\nprint ans
const int maxn = 100005;\nconst int INF = 0x3fffffff;\ndouble eps = 1e-8;\ndouble pi = acos(-1);\nint f[maxn];\nint g[maxn];\nint a[maxn];\nint n;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] > a[i - 1])\n\t\t\tf[i] = f[i - 1] + 1;\n\t\telse\n\t\t\tf[i] = 1;\n\t}\n\tfor (int i = n; i >= 1; i--) {\n\t\tif (a[i] < a[i + 1])\n\t\t\tg[i] = g[i + 1] + 1;\n\t\telse\n\t\t\tg[i] = 1;\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i + 1] - a[i - 1] > 1) {\n\t\t\tans = max(ans, f[i - 1] + g[i + 1] + 1);\n\t\t} else {\n\t\t\tans = max(ans, max(f[i - 1] + 1, g[i + 1] + 1));\n\t\t}\n\t}\n\tcout << ans << endl;\n}	maxn = const integer with maxn = 100005\nINF = const integer with INF = 0x3fffffff\neps = double with eps = 1e-8\npi = double with pi = acos of -1\nf = integer array of size maxn\ng = integer array of size maxn\na = integer array of size maxn\nn = integer\nread n\nfor i = 1 to n, read a[i]\nfor i = 1 to n\nif a[i] > a[i - 1]\nf[i] = f[i - 1] + 1\nelse\nf[i] = 1\nfor i = n down to 1\nif a[i] < a[i + 1]\ng[i] = g[i + 1] + 1\nelse\ng[i] = 1\nans = integer with ans = 0\nfor i = 1 to n\nif a[i + 1] - a[i - 1] > 1\nans = max of ans and f[i - 1] + g[i + 1] + 1\nelse\nans = max of ans and max(f[i - 1] + 1, g[i + 1] + 1)\nprint ans
int a[100005], dp1[100005], dp2[100005];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\ta[0] = 0x3f3f3f3f;\n\ta[n + 1] = 0x3f3f3f3f;\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) { dp1[i] = dp2[i] = 1; }\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] > a[i - 1]) { dp1[i] = dp1[i - 1] + 1; }\n\t\tans = max(ans, dp1[i]);\n\t}\n\tfor (int i = n; i > 0; i--) {\n\t\tif (a[i] < a[i + 1]) { dp2[i] = dp2[i + 1] + 1; }\n\t\tans = max(ans, dp2[i]);\n\t}\n\tfor (int i = 2; i <= n; i++) { ans = max(ans, dp2[i] + 1); }\n\tfor (int i = 1; i < n; i++) { ans = max(ans, dp1[i] + 1); }\n\tfor (int i = 2; i < n; i++) {\n\t\tif (a[i + 1] - a[i - 1] > 1) { ans = max(ans, dp2[i + 1] + dp1[i - 1] + 1); }\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	a, dp1, dp2 = int array of size 100005 each\nn = int\nread n\nfor i = 1 to n inclusive read a[i]\nset a[0] to 0x3f3f3f3f\nset a[n + 1] to 0x3f3f3f3f\nans = int with ans = 0\nfor i = 1 to n inclusive set dp1[i] and dp2[i] to 1\nfor i = 1 to n inclusive\nif a[i] is greater than a[i - 1] then set dp1[i] to dp1[i - 1] + 1\nset ans to max of ans and dp1[i]\nfor i = n to 0 decrementing i\nif a[i] is less than a[i + 1] then set dp2[i] to dp2[i + 1] + 1\nset ans to max of ans and dp2[i]\nfor i = 2 to n inclusive set ans to max of ans and dp2[i] + 1\nfor i = 1 to n set ans to max of ans and dp1[i] + 1\nfor i = 2 to n\nif a[i + 1] - a[i - 1] is greater than 1 then set ans to max of ans and dp2[i + 1] + dp1[i - 1] + 1\nprint ans
"int main() {\n\tint a, n, b, c;\n\tchar s[8];\n\tchar w[8] = ""jolteon"", q[8] = ""flareon"";\n\tchar v[8] = ""umbreon"", z[8] = ""leafeon"", l[8] = ""glaceon"", m[8] = ""sylveon"";\n\tcin >> n;\n\tcin >> s;\n\tif (n == 8) {\n\t\tcout << ""vaporeon"" << endl;\n\t} else if (n == 6) {\n\t\tcout << ""espeon"" << endl;\n\t} else {\n\t\ta = 0;\n\t\tb = 0;\n\t\tc = 0;\n\t\tint d = 0;\n\t\tint e = 0;\n\t\tint f = 0;\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (s[i] == w[i]) { a++; }\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (s[i] == q[i]) { b++; }\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (s[i] == v[i]) { c++; }\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (s[i] == z[i]) { d++; }\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (s[i] == l[i]) { e++; }\n\t\t}\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t\tif (s[i] == m[i]) { f++; }\n\t\t}\n\t\tif (a > b && a > c && a > d && a > e && a > f) {\n\t\t\tcout << ""jolteon"" << endl;\n\t\t} else if (b > a && b > c && b > d && b > e && b > f) {\n\t\t\tcout << ""flareon"" << endl;\n\t\t} else if (c > a && c > b && c > d && c > e && c > f) {\n\t\t\tcout << ""umbreon"" << endl;\n\t\t} else if (d > a && d > c && d > b && d > e && d > f) {\n\t\t\tcout << ""leafeon"" << endl;\n\t\t} else if (e > a && e > c && e > d && e > b && e > f) {\n\t\t\tcout << ""glaceon"" << endl;\n\t\t} else if (f > a && f > c && f > d && f > e && f > b) {\n\t\t\tcout << ""sylveon"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"a,n,b,c=int\ns=array of 8 char\nw=array of 8 char filled with ""jolteon"", q=array of 8 char filled with ""flareon""\nv=array of 8 char filled with ""umbreon"", z=array of 8 char filled with ""leafeon"", l=array of 8 char filled with ""glaceeon"", m=array of 8 char filled with ""sylveon""\nread n\nread s\nif n is 8\nprint ""vaporeon""\nelse if n is 6\nprint ""espeon""\nelse\na=0\nb=0\nc=0\nd=0\ne=0\nf=0\nfor i=0 to 8 exclusive\nif s[i] is w[i] increment a\nfor i=0 to 8 exclusive\nif s[i] is q[i] increment b\nfor i=0 to 8 exclusive\nif s[i] is v[i] increment c\nfor i=0 to 8 exclusive\nif s[i] is z[i] increment d\nfor i=0 to 8 exclusive\nif s[i] is l[i] increment e\nfor i=0 to 8 exclusive\nif s[i] is m[i] increment f\nif a>b and a>c and a>d and a>e and a>f\nprint ""jolteon""\nif b>a and b>c and b>d and b>e and b>f\nprint ""flareon""\nif c>a and c>b and c>d and c>e and c>f\nprint ""umbreon""\nif d>a and d>b and d>c and d>e and d>f\nprint ""leafeon""\nif e>a and e>b and e>c and e>d and e>f\nprint ""glaceon""\nif f>a and f>b and f>c and f>d and f>e\nprint ""sylveon"""
"pair<int, int> par[10001];\nset<string> str;\nint main() {\n\tstring s;\n\tint n, i;\n\tcin >> n >> s;\n\tif (n == 8)\n\t\tcout << ""vaporeon"" << endl;\n\telse if (n == 6)\n\t\tcout << ""espeon"" << endl;\n\telse if (n == 7) {\n\t\tif (s[0] == '.') {\n\t\t\tif (s[1] == 'o') {\n\t\t\t\tcout << ""jolteon"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (s[1] == 'm') {\n\t\t\t\tcout << ""umbreon"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (s[1] == 'e') {\n\t\t\t\tcout << ""leafeon"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (s[1] == 'y') {\n\t\t\t\tcout << ""sylveon"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (s[1] == 'l') {\n\t\t\t\tif (s[3] == 'r') {\n\t\t\t\t\tcout << ""flareon"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tcout << ""glaceon"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (s[1] == '.') {\n\t\t\t\tif (s[2] == 'b') {\n\t\t\t\t\tcout << ""umbreon"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (s[2] == 'l') {\n\t\t\t\t\tif (s[3] == 't') {\n\t\t\t\t\t\tcout << ""jolteon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcout << ""sylveon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (s[2] == 'a') {\n\t\t\t\t\tif (s[3] == 'r') {\n\t\t\t\t\t\tcout << ""flareon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (s[3] == 'c') {\n\t\t\t\t\t\tcout << ""glaceon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcout << ""leafeon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (s[2] == '.') {\n\t\t\t\t\tif (s[3] == 'r') {\n\t\t\t\t\t\tcout << ""flareon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (s[3] == 'c') {\n\t\t\t\t\t\tcout << ""glaceon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (s[3] == 'f') {\n\t\t\t\t\t\tcout << ""leafeon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (s[3] == 't') {\n\t\t\t\t\t\tcout << ""jolteon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (s[3] == 'v') {\n\t\t\t\t\t\tcout << ""sylveon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcout << ""umbreon"" << endl;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (s[0] == 'j') {\n\t\t\tcout << ""jolteon"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (s[0] == 'f') {\n\t\t\tcout << ""flareon"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (s[0] == 'u') {\n\t\t\tcout << ""umbreon"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (s[0] == 'l') {\n\t\t\tcout << ""leafeon"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (s[0] == 'g') {\n\t\t\tcout << ""glaceon"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (s[0] == 's') {\n\t\t\tcout << ""sylveon"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}"	"create pair of integer, integer array par with size 10001\ncreate string set str\ncreate string s\ncreate integers n, i\nread n read s\nif n is 8\nprint ""vaporeon"" print newline\nelse if n is 6\nprint ""espeon"" print newline\nelse if n is 7\nif s[0] is '.'\nif s[1] is 'o'\nprint ""jolteon"" print newline\nif s[1] is 'm'\nprint ""umbreon"" print newline\nif s[1] is 'e'\nprint ""leafeon"" print newline\nif s[1] is 'y'\nprint ""sylveon"" print newline\nif s[1] is 'l'\nif s[3] is 'r'\nprint ""flareon"" print newline\nelse\nprint ""glaceon"" print newline\nif s[1] is '.'\nif s[2] is 'b'\nprint ""umbreon"" print newline\nif s[2] is 'l'\nif s[3] is 't'\nprint ""jolteon"" print newline\nelse\nprint ""sylveon"" print newline\nif s[2] is 'a'\nif s[3] is 'r'\nprint ""flareon"" print newline\nif s[3] is 'c'\nprint ""glaceon"" print newline\nelse\nprint ""leafeon"" print newline\nif s[2] is '.'\nif s[3] is 'r'\nprint ""flareon"" print newline\nif s[3] is 'c'\nprint ""glaceon"" print newline\nif s[3] is 'f'\nprint ""leafeon"" print newline\nif s[3] is 't'\nprint ""jolteon"" print newline\nif s[3] is 'v'\nprint ""sylveon"" print newline\nelse\nprint ""umbreon"" print newline\nif s[0] is 'j'\nprint ""jolteon"" print newline\nif s[0] is 'f'\nprint 'flareon"" print newline\nif s[0] is 'u'\nprint ""umbreon"" print newline\nif s[0] is 'l'\nprint ""leafeon"" print newline\nif s[0] is 'g'\nprint ""glaceon"" print newline\nif s[0] is 's'\nprint ""sylveon"" print newline"
"int main() {\n\tstring str[12];\n\tint n, i, j, ck;\n\tcin >> n >> str[0];\n\tstr[1] = ""vaporeon"";\n\tstr[2] = ""jolteon"";\n\tstr[3] = ""flareon"";\n\tstr[4] = ""espeon"";\n\tstr[5] = ""umbreon"";\n\tstr[6] = ""leafeon"";\n\tstr[7] = ""glaceon"";\n\tstr[8] = ""sylveon"";\n\tfor (i = 1; i <= 8; i++) {\n\t\tif (str[i].size() == n) {\n\t\t\tck = 1;\n\t\t\tfor (j = 0; j < n; j++) {\n\t\t\t\tif (str[0][j] >= 'a' && str[0][j] <= 'z') {\n\t\t\t\t\tif (str[0][j] != str[i][j]) {\n\t\t\t\t\t\tck = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ck == 1) {\n\t\t\t\tcout << str[i] << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"str = string array of size 12\nn, i, j, ck = int\nread n then str[0]\nset str[1] to ""vaporeon""\nset str[2] to ""jolteon""\nset str[3] to ""flareon""\nset str[4] to ""espeon""\nset str[5] to ""umbreon""\nset str[6] to ""leafeon""\nset str[7] to ""glaceon""\nset str[8] to ""sylveon""\nfor i = 1 to 8 inclusive\nif size of str[i] is n\nset ck to 1\nfor j = 0 to n\nif str[0][j] >= 'a' and str[0][j] <= 'z'\nif str[0][j] is not str[i][j]\nset ck to 0\nbreak\nif ck is 1\nprint str[i]\nprint newline"
"int main() {\n\tint N;\n\tstring jolteon = ""jolteon"";\n\tint jol = 0;\n\tstring flareon = ""flareon"";\n\tint fla = 0;\n\tstring umbreon = ""umbreon"";\n\tint umb = 0;\n\tstring leafeon = ""leafeon"";\n\tint leaf = 0;\n\tstring glaceon = ""glaceon"";\n\tint gla = 0;\n\tstring sylveon = ""sylveon"";\n\tint syl = 0;\n\tstring eevee;\n\tcin >> N;\n\tcin >> eevee;\n\tif (N == 8) {\n\t\tcout << ""vaporeon\n"";\n\t} else if (N == 6) {\n\t\tcout << ""espeon\n"";\n\t} else {\n\t\tfor (int x = 0; x < N; x++) {\n\t\t\tif (eevee[x] != '.') {\n\t\t\t\tif (eevee[x] == flareon[x] && fla == 0) {\n\t\t\t\t\tif (x != 2) { leaf = 1; }\n\t\t\t\t\tjol = 1;\n\t\t\t\t\tsyl = 1;\n\t\t\t\t\tumb = 1;\n\t\t\t\t\tif (x != 1 && x != 2) { gla = 1; }\n\t\t\t\t}\n\t\t\t\tif (eevee[x] == glaceon[x] && gla == 0) {\n\t\t\t\t\tif (x != 2) { leaf = 1; }\n\t\t\t\t\tjol = 1;\n\t\t\t\t\tsyl = 1;\n\t\t\t\t\tumb = 1;\n\t\t\t\t\tif (x != 1 && x != 2) { fla = 1; }\n\t\t\t\t}\n\t\t\t\tif (eevee[x] == leafeon[x] && leaf == 0) {\n\t\t\t\t\tif (x != 2) {\n\t\t\t\t\t\tfla = 1;\n\t\t\t\t\t\tgla = 1;\n\t\t\t\t\t}\n\t\t\t\t\tjol = 1;\n\t\t\t\t\tsyl = 1;\n\t\t\t\t\tumb = 1;\n\t\t\t\t}\n\t\t\t\tif (eevee[x] == jolteon[x] && jol == 0) {\n\t\t\t\t\tleaf = 1;\n\t\t\t\t\tfla = 1;\n\t\t\t\t\tif (x != 2) { syl = 1; }\n\t\t\t\t\tumb = 1;\n\t\t\t\t\tgla = 1;\n\t\t\t\t}\n\t\t\t\tif (eevee[x] == umbreon[x] && umb == 0) {\n\t\t\t\t\tleaf = 1;\n\t\t\t\t\tjol = 1;\n\t\t\t\t\tsyl = 1;\n\t\t\t\t\tfla = 1;\n\t\t\t\t\tgla = 1;\n\t\t\t\t}\n\t\t\t\tif (eevee[x] == sylveon[x] && syl == 0) {\n\t\t\t\t\tleaf = 1;\n\t\t\t\t\tfla = 1;\n\t\t\t\t\tif (x != 2) { jol = 1; }\n\t\t\t\t\tumb = 1;\n\t\t\t\t\tgla = 1;\n\t\t\t\t}\n\t\t\t\tif (syl + leaf + jol + umb + gla + fla == 5) {\n\t\t\t\t\tif (syl == 0) { cout << sylveon << ""\n""; }\n\t\t\t\t\tif (gla == 0) { cout << glaceon << ""\n""; }\n\t\t\t\t\tif (fla == 0) { cout << flareon << ""\n""; }\n\t\t\t\t\tif (jol == 0) { cout << jolteon << ""\n""; }\n\t\t\t\t\tif (umb == 0) { cout << umbreon << ""\n""; }\n\t\t\t\t\tif (leaf == 0) { cout << leafeon << ""\n""; }\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"	"create integer N\ncreate string jolteon with jolteon = ""jolteaon""\ncreate integer jol with jol = 0\ncreate string flareon with flareon = ""flareon""\ncreate integer fla with fla = 0\ncreate string umbreon with umbreon = ""umbreon""\ncreate integer umb with umb = 0\ncreate string leafeon with leafeon = ""leafeon""\ncreate integer leaf with leaf = 0\ncreate string glaceon with glaceon = ""glaceon""\ncreate integer gla with gla = 0\ncreate string sylveon with sylveon = ""sylveon""\ncreate integer syl with syl = 0\ncreate string eevee\nread N\nread eevee\nif N is 8\nprint ""vaporeon\n""\nelse if N is 6\nprint ""espeon\n""\nelse\nfor x = 0 to N exclusive\nif eevee[x] is not '.'\niif eevee[x] is flareon[x] and fla is 0\nif x is not 2, set leaf to 1\nset jol to 1\nset syl to 1\nset umb to 1\nif x is not 1 and x is not 2, set gla to 1\nif eevee[x] is glaceon[x] and gla is 0\nif x is not 2, set leaf to 1\nset jol to 1\nset syl to 1\nset umb to 1\nif x is not 1 and x is not 2, set fla to 1\nif eevee[x] is leafeon[x] and leaf is 0\nif x is not 2\nset fla to 1\nset gla to 1\nset jol to 1\nset syl to 1\nset umb to 1\nif eevee[x] is jolteon[x] and jol is 0\nset leaf to 1\nset fla to 1\nif x is not 2, set syl to 1\nset umb to 1\nset gla to 1\nif eevee[x] is umbreon[x] and umb is 0\nset leaf to 1\nset jol to 1\nset syl to 1\nset fla to 1\nset gla to 1\nif eevee[x] is sylveon[x] and syl is 0\nset leaf to 1\nset fla to 1\nif x is not 2, set jol to 1\nset umb to 1\nset gla to 1\nif syl + leaf + jol + umb + gla + fla is 5\nif syl is 0, print sylveon print ""\n""\nif gla is 0, print glaceon print ""\n""\nif fla is 0, print flareon print ""\n""\nif jol is 0, print jolteon print ""\n""\nif umb is 0 print umbreon print ""\n""\nif leaf is 0 print leafon print ""\n""\nbreak loop"
"int main() {\n\tint n;\n\tcin >> n;\n\tpair<int, int> pr[n];\n\tfor (int i = 0; i < n; i++) { cin >> pr[i].first >> pr[i].second; }\n\tsort(pr, pr + n);\n\tfor (int j = 0; j < n - 1; j++) {\n\t\tif (pr[j].first < pr[j + 1].first && pr[j].second > pr[j + 1].second) {\n\t\t\tcout << ""Happy Alex"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""Poor Alex"" << endl;\n\treturn 0;\n}"	let n be an integer\nread n\ndefine n number of pair pr with two integer elements\nfor i= 0 to n exclusive , read\nsort pr, pr+n\nfor j=0 to n-1 (exclusive)\nif first element of jth pair is less than j+1 th pair , and second element of jth pair is greater than j+1th pair, do the following\nprint Happy Alex and a new line\nprint Poor Alex and a new line
"int main() {\n\tint t, a, b, h = 0, p = 0;\n\tcin >> t;\n\twhile (t--) {\n\t\tcin >> a >> b;\n\t\tif (a != b) p++;\n\t}\n\tif (p != 0)\n\t\tcout << ""Happy Alex"" << endl;\n\telse\n\t\tcout << ""Poor Alex"" << endl;\n\treturn 0;\n}"	"t, a, b, h, p = int with h = 0 and p = 0\nread t\nloop t times\nread a then b\nif a is not equal to b increment p\nif p is not equal 0\nprint ""Happy Alex""\nelse\nprint ""Poor Alex"""
"int main() {\n\tint n;\n\tcin >> n;\n\tdouble x, y;\n\tdouble z;\n\tdouble *arr = new double[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x >> y;\n\t\tdouble q = x + (y / 100000);\n\t\tarr[i] = q;\n\t}\n\tsort(arr, arr + n);\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (int(arr[i]) != int(arr[i + 1])) {\n\t\t\tif (arr[i + 1] - arr[i] < 1) {\n\t\t\t\tcout << ""Happy Alex"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""Poor Alex"" << endl;\n\treturn 0;\n}"	"declare integer variable n\nread n\ncreate doubles x and y\ncreate double z\ndouble pointer *arr points to new array of doubles with size n\nfor i = 0 to n exclusive\nread x and y\ndeclare double variable q = x + (y / 100000)\nset value of arr[i] to q\nsort arr\nfor integer i = 0 to n - 1 exclusive\nif arr[i] != arr[i + 1]\nif arr[i + 1] - arr[i] is less than 1\nprint ""Happy Alex""\nprint ""Poor Alex"""
"int main() {\n\tint a[100001], b[100001], count = 0, i, j, n;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i] >> b[i]; }\n\tfor (j = 0; j < n; j++) {\n\t\tif (a[j] != b[j]) {\n\t\t\tcout << ""Happy Alex"" << endl;\n\t\t\tcount = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (count == 0) cout << ""Poor Alex"" << endl;\n\treturn 0;\n}"	"count, i, j, n = int with count = 0 and a, b = int array of size 100001 each\nread n\nread n values into a then b\nfor j = 0 to n\nif a[j] is not b[j]\nprint ""Happy Alex""\nset count to 1\nbreak loop\nif count is 0 then print ""Poor Alex"""
"int main() {\n\tint n;\n\tcin >> n;\n\tpair<int, int> pr[n];\n\tfor (int i = 0; i < n; i++) { cin >> pr[i].first >> pr[i].second; }\n\tsort(pr, pr + n);\n\tfor (int j = 0; j < n - 1; j++) {\n\t\tif (pr[j].first < pr[j + 1].first && pr[j].second > pr[j + 1].second) {\n\t\t\tcout << ""Happy Alex"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""Poor Alex"" << endl;\n\treturn 0;\n}"	"create integer n\nread n\ncreate pair array of integer, integer pr with size n\nfor i = 0 to n exclusive, read first element of pr[i] read second element of pr[i]\nsort elements from pr to pr + n\nfor j = 0 to n - 1 exclusive\nif first element of pr[j] is less than first element of pr[j+1] and second element of pr[j] is greater than second element of pr[j+1]\nprint ""Happy Alex"" print newline\nprint ""Poor Alex"" print newline"
"int main() {\n\tint n, a, b;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a >> b;\n\t\tif (a != b) {\n\t\t\tcout << ""Happy Alex"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""Poor Alex"" << endl;\n\treturn 0;\n}"	"declare integer variables n, a and b\nread input to n\nfor integer i = 1 to n inclusive\nread a and b\nif a != b\nprint ""Happy Alex""\nprint ""Poor Alex"""
"const int MAXN = 100000 + 10;\nconst long double eps = 1e-10;\nint cnt[MAXN];\nint check(int n) {\n\tfor (int i = 0; i + 2 < n; i++) {\n\t\tif (cnt[i] == 0) continue;\n\t\tif (cnt[i] >= 2 && cnt[i + 1] >= 0) return 1;\n\t\tif (cnt[i] <= -2 && cnt[i + 1] <= 0) return -1;\n\t\tcnt[i + 1] += cnt[i];\n\t\tcnt[i + 2] += cnt[i];\n\t}\n\tlong double p = sqrt((long double)5) + 1;\n\tp /= 2;\n\tlong double ret = p * cnt[n - 2] + cnt[n - 1];\n\tif (fabs(ret) < eps) return 0;\n\tif (ret > 0) return 1;\n\treturn -1;\n}\nint main() {\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\tint n = max(s1.size(), s2.size());\n\tif (s1.size() < n) s1 = string(n - s1.size(), '0') + s1;\n\tif (s2.size() < n) s2 = string(n - s2.size(), '0') + s2;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a = s1[i] - '0';\n\t\tint b = s2[i] - '0';\n\t\tcnt[i] = a - b;\n\t}\n\tint ret = check(n);\n\tif (ret == 0)\n\t\tcout << ""="" << endl;\n\telse if (ret == -1)\n\t\tcout << ""<"" << endl;\n\telse\n\t\tcout << "">"" << endl;\n\treturn 0;\n}"	"create constant integer MAXN with MAXN = 100000 + 10\ncreate constant long double eps with eps = 1e-10\ncreate integer array cnt with size MAXN\ndeclare check with integer n as argument, returning integer\nfor i = 0 to i + 2 is less than n, incrementing i\nif cnt[i] is 0, break current loop iteration\nif cnt[i] is greater than or equal to 2 and cnt[i+1] is greater than or equal to 0, return 1 from function\nif cnt[i] is less than or equal to -2 and cnt[i+1] is less than or equal to 0, return -1 from function\nincrement cnt[i+1] by cnt[i]\nincrement cnt[i+2] by cnt[i]\ncreate long double p with p = square root of (long double casted 5) + 1\nset p to p / 2\ncreate long double ret with ret = p * cnt[n - 2] + cnt[n - 1]\nif absolute value of ret is less than eps, return 0 from function\nif ret is greater than 0, return 1 from function\nreturn -1 from function\ncreate strings s1, s2\nread s1 read s2\ncreate integer n with n = maximum of size of s1 and size of s2\nif size of s1 is less than n, set s1 to string initialized with ( n - size of s1, '0' ) + s1\nif size of s2 is less than n, set s2 to string initialized with ( n - size of s2, '0' ) + s2\nfor i = 0 to n exclusive\ncreate integer a with a = s1[i] - '0'\ncreate integer b with b = s2[i] - '0'\nset cnt[i] to a - b\ncreate integer ret with ret = result of run check with n as argument\nif ret is 0\nprint ""="" print newline\nelse if ret is -1\nprint ""<"" print newline\nelse\nprint "">"" print newline"
"string s1, s2;\nint main() {\n\tgetline(cin, s1);\n\tgetline(cin, s2);\n\tint sz1 = s1.size();\n\tint sz2 = s2.size();\n\tbool swaped = 0;\n\tif (sz1 < sz2) {\n\t\tswap(s1, s2);\n\t\tswap(sz1, sz2);\n\t\tswaped = 1;\n\t}\n\tif (sz1 > sz2) {\n\t\tstring aux = """";\n\t\tfor (int i = 1; i + sz2 <= sz1; ++i) { aux += ""0""; }\n\t\ts2 = aux + s2;\n\t}\n\ts1 = ""0"" + s1;\n\ts2 = ""0"" + s2;\n\tsz1++;\n\tfor (int i = 1; i + 1 < sz1; ++i) {\n\t\tif (s1[i] == '1' and s1[i + 1] == '1') {\n\t\t\ts1[i - 1] = '1';\n\t\t\ts1[i] = '0';\n\t\t\ts1[i + 1] = '0';\n\t\t\tint j = i - 2;\n\t\t\twhile (j - 1 >= 0 and s1[j] == '1') {\n\t\t\t\ts1[j - 1] = '1';\n\t\t\t\ts1[j] = '0';\n\t\t\t\ts1[j + 1] = '0';\n\t\t\t\tj -= 2;\n\t\t\t}\n\t\t}\n\t\tif (s2[i] == '1' and s2[i + 1] == '1') {\n\t\t\ts2[i - 1] = '1';\n\t\t\ts2[i] = '0';\n\t\t\ts2[i + 1] = '0';\n\t\t\tint j = i - 2;\n\t\t\twhile (j - 1 >= 0 and s2[j] == '1') {\n\t\t\t\ts2[j - 1] = '1';\n\t\t\t\ts2[j] = '0';\n\t\t\t\ts2[j + 1] = '0';\n\t\t\t\tj -= 2;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < sz1; ++i) {\n\t\tif (s1[i] > s2[i]) {\n\t\t\tif (!swaped) {\n\t\t\t\tcout << '>' << '\n';\n\t\t\t} else {\n\t\t\t\tcout << '<' << '\n';\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (s1[i] < s2[i]) {\n\t\t\tif (!swaped) {\n\t\t\t\tcout << '<' << '\n';\n\t\t\t} else {\n\t\t\t\tcout << '>' << '\n';\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << '=' << '\n';\n\treturn 0;\n}"	"s1, s2 = string\nread a line into s1 using cin\nread a line into s2 using cin\nsz1 = int with sz1 = size of s1\nsz2 = int with sz2 = size of s2\nswaped = bool with swaped = false\nif sz1 is less than sz2\ncall swap on s1 and s2\ncall swap on sz1 and sz2\nset swaped to true\nif sz1 is greater than sz2\naux = string with aux = """"\nfor i = 1 to sz1 - sz2 inclusive append ""0"" to aux\nprepend aux to s2\nprepend ""0"" to s1\nprepend ""0"" to s2\nincrement sz1\nfor i = 1 to sz1 - 1\nif s1[i] and s1[i + 1] are both '1'\nset s1[i - 1] to '1'\nset s1[i] to '0'\nset s1[i + 1] to '0'\nj = int with j = i - 2\nloop while j is greater than 0 and s1[j] is '1'\nset s1[j - 1] to '1'\nset s1[j] to '0'\nset s1[j + 1] to '0'\ndecrement j by 2\nif s2[i] and s2[i + 1] are both '1'\nset s2[i - 1] to '1'\nset s2[i] to '0'\nset s2[i + 1] to '0'\nj = int with j = i - 2\nloop while j is greater than 0 and s2[j] is '1'\nset s2[j - 1] to '1'\nset s2[j] to '0'\nset s2[j + 1] to '0'\ndecrement j by 2\nfor i = 0 to sz1\nif s1[i] is greater than s2[i]\nif swaped is false\nprint '>'\nelse\nprint '<'\nif s18i] is less than s2[i]\nif swaped is false\nprint '<'\nelse\nprint '>'\nprint '='"
const double PI = 3.14159265358979323846264338327;\nint main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tvector<int> a1(100020), b1(100020);\n\tfor (int i = a.size() - 1; i >= 0; i--) a1[a.size() - 1 - i] = a[i] - '0';\n\tfor (int i = b.size() - 1; i >= 0; i--) b1[b.size() - 1 - i] = b[i] - '0';\n\tfor (int i = 100010; i >= 0; i--) {\n\t\tfor (int j = i; a1[j] && a1[j + 1]; j += 2) a1[j] = a1[j + 1] = 0, a1[j + 2] = 1;\n\t\tfor (int j = i; b1[j] && b1[j + 1]; j += 2) b1[j] = b1[j + 1] = 0, b1[j + 2] = 1;\n\t}\n\tfor (int i = 100010; i >= 0; i--) {\n\t\tif (a1[i] < b1[i]) return cout << '<' << endl, 0;\n\t\tif (a1[i] > b1[i]) return cout << '>' << endl, 0;\n\t}\n\tcout << '=' << endl;\n\treturn 0;\n}	create constant double PI with PI = 3.14159265358979323846264338327\ncreate strings a, b\nread a read b\ncreate integer vectors a1, b1 with a1 initialized with 100020, b1 initialized with 100020\nfor i = size of a - 1 to 0 inclusive, decrementing i, set a1[size of a - 1 - i ] to a[i] - '0'\nfor i = size of b - 1 to 0 inclusive, decrementing i, set b1[size of b - 1 - i ] to b[i] - '0'\nfor i = 100010 to 0 inclusive, decrementing i\nfor j = i to a1[j] and a1[j+1], incrementing j by 2, set a1[j] to a1[j+1] to 0, set a1[j+2] to 1\nfor j = i to b1[j] and b1[j+1], incrementing j by 2, set b1[j] to b1[j+1] to 0, set b1[j+2] to 1\nfor i = 100010 to 0 inclusive, decrementing i\nif a1[i] is less than b1[i], return print '<' print newline, 0 from function\nif a1[i] is greater than b1[i], return print '>' print newline, 0\nprint '=' print newline
"map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n\tchar s[20];\n\tint n;\n\tm[0] = ""January"";\n\tm[1] = ""February"";\n\tm[2] = ""March"";\n\tm[3] = ""April"";\n\tm[4] = ""May"";\n\tm[5] = ""June"";\n\tm[6] = ""July"";\n\tm[7] = ""August"";\n\tm[8] = ""September"";\n\tm[9] = ""October"";\n\tm[10] = ""November"";\n\tm[11] = ""December"";\n\twhile (cin >> s >> n) {\n\t\tint j = 0;\n\t\tfor (it = m.begin(); it != m.end(); it++) {\n\t\t\t++j;\n\t\t\tif (it->second == s) break;\n\t\t}\n\t\tcout << m[(j + n - 1) % 12] << endl;\n\t}\n\treturn 0;\n}"	"create a map from integers to strings with name m\ncreate iterator it for map of int to strings\ns = array of characters of size 20\ndeclare integer variable n\nm[0] = ""January""\nm[1] = ""February""\nm[2] = ""March""\nm[3] = ""April""\nm[4] = ""May""\nm[5] = ""June""\nm[6] = ""July""\nm[7] = ""August""\nm[8] = ""September""\nm[9] = ""October""\nm[10] = ""November""\nm[11] = ""December""\nwhile cin >> s >> n\ncreate integer j with value 0\nmove it through m from the beginning\nincrement j\nif it->second = s. break\nprint m[(j + n - 1) % 12] and a new line"
"map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n\tchar s[20];\n\tint n;\n\tm[0] = ""January"";\n\tm[1] = ""February"";\n\tm[2] = ""March"";\n\tm[3] = ""April"";\n\tm[4] = ""May"";\n\tm[5] = ""June"";\n\tm[6] = ""July"";\n\tm[7] = ""August"";\n\tm[8] = ""September"";\n\tm[9] = ""October"";\n\tm[10] = ""November"";\n\tm[11] = ""December"";\n\twhile (cin >> s >> n) {\n\t\tint j = 0;\n\t\tfor (it = m.begin(); it != m.end(); it++) {\n\t\t\t++j;\n\t\t\tif (it->second == s) break;\n\t\t}\n\t\tcout << m[(j + n - 1) % 12] << endl;\n\t}\n\treturn 0;\n}"	"create map m from integer to string\ncreate map iterator it from integer to string\ncreate character array s with size 20\ncreate integer n\nset m[0] to ""January""\nset m[1] to ""February""\nset m[2] to ""March""\nset m[3] to ""April""\nset m[4] to ""May""\nset m[5] to ""June""\nset m[6] to ""July""\nset m[7] to ""August""\nset m[8] to ""September""\nset m[9] to ""October""\nset m[10] to ""November""\nset m[11] to ""December""\nwhile read s read n\ncreate integer j with j = 0\nfor it = beginning of m to it is not end of m, incrementing it\nincrement j\nif second element of it is s, break loop\nprint m[(j + n - 1) % 12] print newline"
"int main() {\n\tstring a;\n\tint s;\n\tcin >> a >> s;\n\tint d;\n\tif (a == ""January"")\n\t\td = 1;\n\telse if (a == ""February"")\n\t\td = 2;\n\telse if (a == ""March"")\n\t\td = 3;\n\telse if (a == ""April"")\n\t\td = 4;\n\telse if (a == ""May"")\n\t\td = 5;\n\telse if (a == ""June"")\n\t\td = 6;\n\telse if (a == ""July"")\n\t\td = 7;\n\telse if (a == ""August"")\n\t\td = 8;\n\telse if (a == ""September"")\n\t\td = 9;\n\telse if (a == ""October"")\n\t\td = 10;\n\telse if (a == ""November"")\n\t\td = 11;\n\telse\n\t\td = 12;\n\td--;\n\td = d + s;\n\td = d % 12;\n\tif (d == 0)\n\t\ta = ""January"";\n\telse if (d == 1)\n\t\ta = ""February"";\n\telse if (d == 2)\n\t\ta = ""March"";\n\telse if (d == 3)\n\t\ta = ""April"";\n\telse if (d == 4)\n\t\ta = ""May"";\n\telse if (d == 5)\n\t\ta = ""June"";\n\telse if (d == 6)\n\t\ta = ""July"";\n\telse if (d == 7)\n\t\ta = ""August"";\n\telse if (d == 8)\n\t\ta = ""September"";\n\telse if (d == 9)\n\t\ta = ""October"";\n\telse if (d == 10)\n\t\ta = ""November"";\n\telse\n\t\ta = ""December"";\n\tcout << a << endl;\n}"	"let a be string\ns = integer\nread a and s\ndeclare integer variable d\nif a is equal to ""January""\nset d to 1\nelse if a is equal to ""February""\nset value of d to 2\nelse if a is equal to ""March""\nset value of d to 3\nelse if a is equal to ""April""\nset value of d to 4\nelse if a is equal to ""May""\nset d to 5\nelse if a is equal to ""June""\nset value of d to 6\nelse if a is equal to ""July""\nset value of d to 7\nelse if a is equal to ""August""\nset value of d to 8\nelse if a is equal to ""September""\nset d to 9\nelse if a is equal to ""October""\nset d to 10\nelse if a is equal to ""November""\nd = 11\nelse\nd = 12\ndecrease d by one\nd = d + s\nd = d % 12\nif d is equal to 0\na = ""January""\nelse if d is equal to 1\na = ""February""\nelse if d is equal to 2\na = ""March""\nelse if d is equal to 3\na = ""April""\nelse if d is equal to 4\na = ""May""\nelse if d is equal to 5\na = ""June""\nelse if d is equal to 6\na = ""July""\nelse if d is equal to 7\na = ""August""\nelse if d is equal to 8\na = ""September""\nelse if d is equal to 9\na = ""October""\nelse if d is equal to 10\na = ""November""\nelse\na = ""December""\nprint a and a new line"
"int main() {\n\tvector<string> v(120);\n\tfor (int i = 0; i < 120; i += 12) {\n\t\tv[i] = ""January"";\n\t\tv[i + 1] = ""February"";\n\t\tv[i + 2] = ""March"";\n\t\tv[i + 3] = ""April"";\n\t\tv[i + 4] = ""May"";\n\t\tv[i + 5] = ""June"";\n\t\tv[i + 6] = ""July"";\n\t\tv[i + 7] = ""August"";\n\t\tv[i + 8] = ""September"";\n\t\tv[i + 9] = ""October"";\n\t\tv[i + 10] = ""November"";\n\t\tv[i + 11] = ""December"";\n\t}\n\tstring x;\n\tcin >> x;\n\tint n, z;\n\tcin >> n;\n\tfor (int i = 0; i < 120; i++) {\n\t\tif (v[i] == x) {\n\t\t\tz = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << v[z + n] << endl;\n}"	"v is a vector of strings with 120 elements\nfor integer i = 0 to 120 exclusive\nv[i] = ""January""\nv[i + 1] = ""February""\nv[i + 2] = ""March""\nv[i + 3] = ""April""\nv[i + 4] = ""May""\nv[i + 5] = ""June""\nv[i + 6] = ""July""\nv[i + 7] = ""August""\nv[i + 8] = ""September""\nv[i + 9] = ""October""\nv[i + 10] = ""November""\nv[i + 11] = ""December""\nx = string\nread x\ndeclare integers n and z\nread n\nfor i = 0 to 120 exclusive\nif v[i] = x\nassign value of i to the z\nbreak the loop\nprint v[z + n] and a new line"
"int num[3005];\nmap<string, int> ma;\nint ans = 0;\nbool is_prime(int u);\nint main() {\n\tstring s;\n\ts = ""January"";\n\tma[s] = 1;\n\ts = ""February"";\n\tma[s] = 2;\n\ts = ""March"";\n\tma[s] = 3;\n\ts = ""April"";\n\tma[s] = 4;\n\ts = ""May"";\n\tma[s] = 5;\n\tma[""June""] = 6;\n\tma[""July""] = 7;\n\tma[""August""] = 8;\n\tma[""September""] = 9;\n\tma[""October""] = 10;\n\tma[""November""] = 11;\n\tma[""December""] = 12;\n\tint n;\n\tcin >> s;\n\tcin >> n;\n\tif (n % 12 == 0)\n\t\tcout << s << endl;\n\telse {\n\t\tint a = ma[s];\n\t\tn += a;\n\t\tif (n % 12 == 1) cout << ""January"" << endl;\n\t\tif (n % 12 == 2) cout << ""February"" << endl;\n\t\tif (n % 12 == 3) cout << ""March"" << endl;\n\t\tif (n % 12 == 4) cout << ""April"" << endl;\n\t\tif (n % 12 == 5) cout << ""May"" << endl;\n\t\tif (n % 12 == 6) cout << ""June"" << endl;\n\t\tif (n % 12 == 7) cout << ""July"" << endl;\n\t\tif (n % 12 == 8) cout << ""August"" << endl;\n\t\tif (n % 12 == 9) cout << ""September"" << endl;\n\t\tif (n % 12 == 10) cout << ""October"" << endl;\n\t\tif (n % 12 == 11) cout << ""November"" << endl;\n\t\tif (n % 12 == 0) cout << ""December"" << endl;\n\t}\n}"	"let num be an array of integers of length 3005\ncreate a map from strings to integers with name ma\nset integer ans to 0\nboolean function is_prime with integer arguments u\ns = string\ns = ""January""\nma[s] = 1\ns = ""February""\nma[s] = 2\ns = ""March""\nma[s] = 3\ns = ""April""\nset value of ma[s] to 4\ns = ""May""\nma[s] = 5\nma[""June""] = 6\nma[""July""] = 7\nma[""August""] = 8\nma[""September""] = 9\nma[""October""] = 10\nma[""November""] = 11\nma[""December""] = 12\nn = integer\nread s\nread n\nif n % 12 = 0\nprint s and a new line\nelse\nset integer a to ma[s]\nincrease n by a\nif n % 12 = 1, print ""January"" and a new line\nif n % 12 = 2, print ""February"" and a new line\nif n % 12 = 3, print ""March"" and a new line\nif n % 12 = 4, print ""April"" and a new line\nif n % 12 = 5, print ""May"" and a new line\nif n % 12 = 6, print ""June"" and a new line\nif n % 12 = 7, print ""July"" and a new line\nif n % 12 = 8, print ""August"" and a new line\nif n % 12 = 9, print ""September"" and a new line\nif n % 12 = 10, print ""October"" and a new line\nif n % 12 = 11, print ""November"" and a new line\nif n % 12 = 0, print ""December"" and a new line"
"inline long long nxt() {\n\tlong long _x = 0, _tmp = 1;\n\tchar _tc = getchar();\n\twhile ((_tc < '0' || _tc > '9') && _tc != '-') _tc = getchar();\n\tif (_tc == '-') _tc = getchar(), _tmp = -1;\n\twhile (_tc >= '0' && _tc <= '9') _x *= 10, _x += (_tc - '0'), _tc = getchar();\n\treturn _x * _tmp;\n}\nint main() {\n\tstring s[170];\n\tfor (int i = 1; i <= 160; ++i) {\n\t\tif (i % 12 == 1) s[i] = ""January"";\n\t\tif (i % 12 == 2) s[i] = ""February"";\n\t\tif (i % 12 == 3) s[i] = ""March"";\n\t\tif (i % 12 == 4) s[i] = ""April"";\n\t\tif (i % 12 == 5) s[i] = ""May"";\n\t\tif (i % 12 == 6) s[i] = ""June"";\n\t\tif (i % 12 == 7) s[i] = ""July"";\n\t\tif (i % 12 == 8) s[i] = ""August"";\n\t\tif (i % 12 == 9) s[i] = ""September"";\n\t\tif (i % 12 == 10) s[i] = ""October"";\n\t\tif (i % 12 == 11) s[i] = ""November"";\n\t\tif (i % 12 == 0) s[i] = ""December"";\n\t}\n\tstring str;\n\tint n;\n\tcin >> str >> n;\n\tfor (int i = 1; i <= 12; ++i) {\n\t\tif (s[i] == str) { cout << s[i + n] << endl; }\n\t}\n}"	"declare inline nxt with no arguments, returning long long\ncreate long longs _x, _tmp with _x = 0, _tmp = 1\ncreate character _tc with _tc = read character\nwhile _tc is less than '0' or _tc is greater than '9' and _tc is not '-', set _tc to read character\nif _tc is '-', set _tc to read character, set _tmp to -1\nwhile _tc is greater than or equal to '0' and _tc is less than or equal to '9', set _x to _x * 10, increment _x by (_tc - '0'), set _tc to read character\nreturn _x * _tmp from function\ncreate string array s with size 170\nfor i = 1 to 160 inclusive\nif (i % 12 == 1) s[i] = ""January"";\nif (i % 12 == 2) s[i] = ""February"";\nif (i % 12 == 3) s[i] = ""March"";\nif (i % 12 == 4) s[i] = ""April"";\nif (i % 12 == 5) s[i] = ""May"";\nif (i % 12 == 6) s[i] = ""June"";\nif (i % 12 == 7) s[i] = ""July"";\nif (i % 12 == 8) s[i] = ""August"";\nif (i % 12 == 9) s[i] = ""September"";\nif (i % 12 == 10) s[i] = ""October"";\nif (i % 12 == 11) s[i] = ""November"";\nif (i % 12 == 0) s[i] = ""December"";\ncreate string str\ncreate integer n\nread str read n\nfor i = 1 to 12 inclusive\nif s[i] is str, print s[i+n] print newline"
"map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n\tchar s[20];\n\tint n;\n\tm[0] = ""January"";\n\tm[1] = ""February"";\n\tm[2] = ""March"";\n\tm[3] = ""April"";\n\tm[4] = ""May"";\n\tm[5] = ""June"";\n\tm[6] = ""July"";\n\tm[7] = ""August"";\n\tm[8] = ""September"";\n\tm[9] = ""October"";\n\tm[10] = ""November"";\n\tm[11] = ""December"";\n\twhile (cin >> s >> n) {\n\t\tint j = 0;\n\t\tfor (it = m.begin(); it != m.end(); it++) {\n\t\t\t++j;\n\t\t\tif (it->second == s) break;\n\t\t}\n\t\tcout << m[(j + n - 1) % 12] << endl;\n\t}\n\treturn 0;\n}"	"declare map from integer to string m\ndeclare map iterator from integer to string it\ndeclare character array s size 20\ndeclare integer n\nlet m[0] be ""January""\nlet m[1] be ""February""\nlet m[2] be ""March""\nlet m[3] be ""April""\nlet m[4] be ""May""\nlet m[5] be ""June""\nlet m[6] be ""July""\nlet m[7] be ""August""\nlet m[8] be ""September""\nlet m[9] be ""October""\nlet m[10] be ""November""\nlet m[11] be ""December""\nwhile read s, n\ndeclare integer j = 0\nfor it = beginning of m to it is not end of m, incrementing it\nincrement j\nif second element of it is s, end loop\nprint m[(j + n - 1) % 12], newline"
"int main() {\n\tint n, m, a, b, rub = 0;\n\tcin >> n >> m >> a >> b;\n\twhile (n > 0) {\n\t\tif (n < m) {\n\t\t\tint flag = n * a;\n\t\t\tif (flag < b) {\n\t\t\t\trub += flag;\n\t\t\t\tn = 0;\n\t\t\t} else {\n\t\t\t\trub += b;\n\t\t\t\tn -= m;\n\t\t\t}\n\t\t} else if ((a * m) > b) {\n\t\t\tn -= m;\n\t\t\trub += b;\n\t\t} else {\n\t\t\trub += n * a;\n\t\t\tn = 0;\n\t\t}\n\t}\n\tcout << rub << ""\n"";\n}"	"declare integers n, m, a, b, rub, with rub = 0\nread n, m, a and b\nwhile n is greater than 0\nif n is less than m\nset integer flag to n * a\nif flag is less than b\nincrease rub by flag\nn = 0\nelse\nincrease rub by b\ndecrease n by m\nelse if (a * m) is greater than b\ndecrease n by m\nincrease rub by b\nelse\nincrease rub by n * a\nassign value of 0 to the n\nprint rub and ""\n"""
int main() {\n\tint n, m, a, b, r, d, cost = 0;\n\tcin >> n >> m >> a >> b;\n\tr = n % m;\n\td = n / m;\n\tif (m > n) {\n\t\tif (b < a * n) {\n\t\t\tcout << b << endl;\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tcout << a * n << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (d * b < a * (n - r)) {\n\t\tcost += (d * b);\n\t\tif (r * a < b) {\n\t\t\tcost += (r * a);\n\t\t} else {\n\t\t\tcost += b;\n\t\t}\n\t} else {\n\t\tcost += (a * n);\n\t}\n\tcout << cost << endl;\n\treturn 0;\n}	create integers n, m, a, b, r, d, cost with cost = 0\nread n read m read a read b\nset r to n % m\nset d to n / m\nif m is greater than n\nif b is less than a * b\nprint b print newline\nelse\nprint a * n print newline\nif d * b is less than a * ( n - r )\nincrement cost by d * b\nif r * a is less than b\nincrement cost by r * a\nelse\nincrement cost by b\nelse\nincrement cost by a * n\nprint cost print newline
int main() {\n\tint n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tint x = (n / m) * b + (n % m) * a;\n\tint y = (n / m + 1) * b;\n\tint z = n * a;\n\tcout << min(x, min(y, z)) << endl;\n}	n, m, a, b =integers\nRead n, m, a, b\nx = integer, set to (n / m) * b + (n % m) * a\ny = integer, set to (n / m + 1) * b\nz = integer, set to n * a\nprint minimum value of x and minimum value of y and z and a new line
int main() {\n\tint TESTS = 1;\n\twhile (TESTS--) {\n\t\tlong long n, m, a, b;\n\t\tcin >> n >> m >> a >> b;\n\t\tvector<long long int> v;\n\t\tif (b >= m * a)\n\t\t\tcout << n * a << '\n';\n\t\telse {\n\t\t\tlong long c = n / m;\n\t\t\tlong long ans = c * b;\n\t\t\tn -= c * m;\n\t\t\tans += min(b, a * n);\n\t\t\tcout << ans << '\n';\n\t\t}\n\t}\n\treturn 0;\n}	create integer TESTS with TESTS = 1\nwhile decrementing TESTS is true\ncreate long longs n, m, a, b\nread n read m read a read b\ncreate long long integer vector v\nif b is greater than or equal to m * a\nread n * a read '\n'\nelse\ncreate long long c with c = n / m\ncreate long long ans with ans = c * b\ndecrement n by c * m\nincrement ans by minimum of b and a * n\nprint ans print '\n'
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tif (m * a < b) {\n\t\tcout << n * a << endl;\n\t} else {\n\t\tlong long price = (n / m) * b + min((n % m) * a, b);\n\t\tcout << price << endl;\n\t}\n\treturn 0;\n}	n, m, a, b are long long\nread n,m,a,b\nif m*a < b\nprint n*a\nelse\nprice = n/m*b + min(n modulo m * a, b)\nprint price
int main() {\n\tint n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tif (m * a > b) {\n\t\tcout << min((n / m) * b + (n % m) * a, ((n / m) + 1) * b) << endl;\n\t\treturn 0;\n\t}\n\tcout << min(n * a, ((n / m) + 1) * b) << endl;\n\treturn 0;\n}	create integers n, m, a, b\nread n read m read a read b\nif m * a is greater than b\nprint minimum of ( (n / m) * b + (n % m) * a and ((n / m) + 1) * b ) print newline\nprint minimum of n * a and ((n / m) + 1) * b print newline
int main() {\n\tint n, m;\n\tfloat a, b;\n\tcin >> n >> m >> a >> b;\n\tint sum = 0;\n\tif ((n % m) * a <= b) {\n\t\tsum += n / m * b + (n % m) * a;\n\t} else\n\t\tsum = (n / m + 1) * b;\n\tif (sum > n * a) sum = n * a;\n\tcout << sum << endl;\n}	create integers n, m\ncreate floats a, b\nread n read m read a read b\ncreate integer sum with sum = 0\nif ( n % m ) * a is less than or equal to b\nincrement sum by n / m * b + ( n % m ) * a\nelse\nset sum to ( n / m + 1 ) * b\nif sum is greater than n * a, set sum to n * a\nprint sum print newline
int main() {\n\tlong long int n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tif (m * a < b) {\n\t\tcout << n * a << endl;\n\t} else {\n\t\tlong long int price = (n / m) * b + min((n % m) * a, b);\n\t\tcout << price << endl;\n\t}\n\treturn 0;\n}	create long long integers n, m, a , b\nread n read m read a read b\nif m * a is less than b\nprint n * a print newline\nelse\ncreate long long integer price with price = (n/m)*b+minimum of (n % m ) * b and b\nprint price print newline
int main() {\n\tlong long n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tif (m * a < b) {\n\t\tcout << n * a << endl;\n\t} else {\n\t\tlong long price = (n / m) * b + min((n % m) * a, b);\n\t\tcout << price << endl;\n\t}\n\treturn 0;\n}	declare long longs n, m, a and b\nread n, m, a and b\nif m * a is less than b\nprint n * a and a new line\nelse\ncreate variable price of type long long = (n / m) * b + min of (n % m) * a and b\nprint price and a new line
int main() {\n\tint m, n, a, b, cost;\n\tcin >> n >> m >> a >> b;\n\tif (a > (b / m)) {\n\t\tcost = (n / m) * b;\n\t\tif (a * (n % m) < b)\n\t\t\tcost += a * (n % m);\n\t\telse\n\t\t\tcost += b;\n\t} else\n\t\tcost = n * a;\n\tcout << cost << endl;\n\treturn 0;\n}	create integers m, n, a, b and cost\nread n, m, a and b\nif a is greater than b / m\ncost = (n / m) * b\nif a * (n % m) is less than b\nadd a * (n % m) to cost\nelse\nincrease cost by b\nelse\ncost = n * a\nprint cost and a new line
"int main() {\n\tint n, m, a, b;\n\tcin >> n >> m >> a >> b;\n\tint sum = a * n;\n\tint msum = b;\n\tint rides = m;\n\twhile (rides <= n) {\n\t\tmsum += b;\n\t\trides += m;\n\t}\n\tmsum -= b;\n\trides -= m;\n\tif (sum <= msum) {\n\t\tcout << sum << ""\n"";\n\t} else {\n\t\tif (rides < n) {\n\t\t\tint newsum = msum + (n - rides) * a;\n\t\t\tmsum += b;\n\t\t\trides += m;\n\t\t\tint newsum1 = msum;\n\t\t\tif (newsum1 <= newsum)\n\t\t\t\tcout << newsum1 << endl;\n\t\t\telse\n\t\t\t\tcout << newsum << endl;\n\t\t} else if (rides > n) {\n\t\t\tint newsum = msum + (n - rides) * a;\n\t\t\tmsum += b;\n\t\t\trides += m;\n\t\t\tint newsum1 = msum;\n\t\t\tif (newsum1 <= newsum)\n\t\t\t\tcout << newsum1 << endl;\n\t\t\telse\n\t\t\t\tcout << newsum << endl;\n\t\t} else {\n\t\t\tcout << msum << ""\n"";\n\t\t}\n\t}\n}"	create integers n, m, a, b\nread n, m, a, b\ncreate integer sum with sum = a * n\ncreate integer msum with msum = b\ncreate integer rides with rides = m\ndo the following while rides less than or equal to n\nadd b to msum\nadd m to rides\nsubtract b from msum\nsubtract m from rides\nif sum less than or equal to msum then do the following\nprint sum and a new line\nelse do the following\nif rides less than n\ncreate integer newsum with newsum = msum + (n - rides) * a\nadd b to msum\nadd m to rides\ncreate numsum1 with newsum1 = msum\nif newsum1 less than or equal to newsum then do the following\nprint newsum1 and a new line\nelse do the following\nprint newsum and a new line\nelse if rides greater than n then do the following\ncreate integer newsum with newsum = msum + (n - rides) * a\nadd b to msum\nadd m to rides\ncreate newsum1 with newsum1 = msum\nif newsum1 less than or equal to newsum then do the following\nprint newsum1 and a new line\nelse do the following\nprint newsum and a new line\nelse do the following\nprint msum and a new line
"int main() {\n\tint n, m = 2;\n\tcin >> n;\n\tcout << m;\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tm += (i + 1);\n\t\tif (m % n == 0)\n\t\t\tcout << "" "" << n;\n\t\telse\n\t\t\tcout << "" "" << m % n;\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"n and m = integers with m = 2\nread n\nprint m\nfor i = 1 to n - 1 exclusive\nincrease m by i + 1\nif m % n is equal to 0\nprint "" "" and n\nelse\nprint "" "" and m % n\nprint new line"
"int main() {\n\tint n, m = 2;\n\tcin >> n;\n\tcout << m;\n\tfor (int i = 1; i < n - 1; i++) {\n\t\tm += (i + 1);\n\t\tif (m % n == 0)\n\t\t\tcout << "" "" << n;\n\t\telse\n\t\t\tcout << "" "" << m % n;\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"create integers n, m with m = 2\nread n\nprint m\nfor i = 1 to n - 1 exclusive\nincrement m by i + 1\nif m % n is 0\nprint "" "" print n\nelse\nprint "" "" print m % n\nprint newline"
"int main() {\n\tint n;\n\tcin >> n;\n\tint cur = 0;\n\tfor (int i = 1; i < n; ++i) {\n\t\tif (i > 1) cout << "" "";\n\t\tcur += i;\n\t\tcur %= n;\n\t\tcout << cur + 1;\n\t}\n\tcout << endl;\n}"	n = integer\nread n\nset integer cur to 0\nfor integer i = 1 to n exclusive\nif i is greater than 1 print whitespace\nincrease cur by i\nset cur to remainder of division of cur by n\nprint cur + 1\nprint new line
"int main() {\n\tint n, a[200], i;\n\tcin >> n;\n\ta[0] = 1;\n\tfor (i = 1; i <= n - 1; i++) {\n\t\ta[i] = (a[i - 1] + i) % n;\n\t\tif (a[i] == 0) a[i] = n;\n\t}\n\tfor (i = 1; i < n - 1; i++) { cout << a[i] << "" ""; }\n\tcout << a[n - 1] << endl;\n\treturn 0;\n}"	"create integers n, i, create integer array a with size 200\nread n\nset a[0] to 1\nfor i = 1 to n - 1 inclusive\nset a[i] to (a[i - 1] + i) % n\nif a[i] is 0, set a[i] to n\nfor i = 1 to n - 1 exclusive, print a[i] print "" ""\nprint a[n-1] print newline"
"int main() {\n\tint n, a[200], i;\n\tcin >> n;\n\ta[0] = 1;\n\tfor (i = 1; i <= n - 1; i++) {\n\t\ta[i] = (a[i - 1] + i) % n;\n\t\tif (a[i] == 0) a[i] = n;\n\t}\n\tfor (i = 1; i < n - 1; i++) { cout << a[i] << "" ""; }\n\tcout << a[n - 1] << endl;\n\treturn 0;\n}"	"integers n and i, integer array a of size 200\nread n\nset value of a[0] to 1\nfor i = 1 to n - 1 inclusive\na[i] = (a[i - 1] + i) % n\nset a[i] to n if a[i] is 0\nfor i = 1 to n - 1 exclusive print a[i] and "" ""\nprint a[n - 1] and a new line"
"map<long long, long long> mp;\nvector<string> s;\nvector<int> v;\nint main() {\n\tint m;\n\tcin >> m;\n\tint k = m, i = 1, j = 1;\n\tm--;\n\twhile (m--) {\n\t\tj += i;\n\t\tint ans = j % k;\n\t\tif (ans == 0) ans = j;\n\t\tcout << ans;\n\t\tif (m == 0)\n\t\t\tcout << endl;\n\t\telse\n\t\t\tcout << "" "";\n\t\ti++;\n\t\tj %= k;\n\t\tif (j == 0) j = ans;\n\t}\n\treturn 0;\n}"	"mp = map from long long to long long\ndeclare vector of strings called s\ndeclare vector of integers called v\ndeclare integer variable m\nread m\nlet k, i and j be integers with k = m, i = 1 and j = 1\ndecrease m by one\nwhile m--\nincrease j by i\ninteger ans = j % k\nif ans is equal to 0 set ans to j\nprint ans\nif m is equal to 0\nprint new line\nelse\nprint "" ""\nincrease i by one\nj %= k\nif j is equal to 0, set j to ans"
"int main() {\n\tvector<int> v(6);\n\tcin >> v[0] >> v[1] >> v[2] >> v[3] >> v[4] >> v[5];\n\tsort(v.begin(), v.end());\n\tint h, b;\n\tif (v[0] == v[3]) {\n\t\th = 4;\n\t\tb = 5;\n\t} else if (v[1] == v[4]) {\n\t\th = 0;\n\t\tb = 5;\n\t} else if (v[2] == v[5]) {\n\t\th = 0;\n\t\tb = 1;\n\t} else {\n\t\tcout << ""Alien\n"";\n\t\treturn 0;\n\t}\n\tcout << (v[h] < v[b] ? ""Bear\n"" : ""Elephant\n"");\n\treturn 0;\n}"	"declare integer vector v initialized with 6\nread v[0], v[1], v[2], v[3], [4], v[5]\nsort from beginning of v to end of v\ndeclare integers h, b\nif v[0] is v[3]\nlet h be 4\nlet b be 5\nelse if v[1] is v[4]\nlet h be 0\nlet b be 5\nelse if v[2] is v[5]\nlet h be 0\nlet b be 1\nelse\nprint ""Alien\n""\nprint ""Bear\n"" if v[h] is less than v[b], else ""Elephant\n"""
"const int INF = 0x3f3f3f3f;\nint a[11];\nint main() {\n\tint n, m, t;\n\tint i, j, k;\n\tfor (i = 0; i < 6; i++) cin >> t, a[t]++;\n\tfor (i = 1; i <= 9; i++)\n\t\tif (a[i] >= 4) break;\n\tif (i > 9) {\n\t\tcout << ""Alien"" << endl;\n\t\treturn 0;\n\t}\n\tfor (i = 1; i <= 9; i++)\n\t\tif (a[i] == 2 || a[i] == 6) break;\n\tif (i > 9) {\n\t\tcout << ""Bear"" << endl;\n\t\treturn 0;\n\t}\n\tcout << ""Elephant"" << endl;\n\treturn 0;\n}"	"declare const int INF = 0x3f3f3f3f\ncreate int array a with size 11\ndeclare integer variables n, m and t\ndeclare integer variables i, j and k\nfor i = 0 to 6 exclusive, read t and increment a[t]\nfor i = 1 to 9 inclusive\nif a[i] >= 4, break\nif i is greater than 9\nprint ""Alien""\nfor i from 1 to 9 inclusive\nif a[i] = 2 or a[i] = 6, stop the loop\nif i is greater than 9\nprint ""Bear""\nprint ""Elephant"""
"int a[10];\nint main() {\n\tint x;\n\tfor (int i = 1; i <= 6; i++) {\n\t\tcin >> x;\n\t\ta[x]++;\n\t}\n\tint y = -1, z = -1;\n\tfor (int i = 1; i <= 9; i++) {\n\t\tif (a[i] >= 4) { z = i; }\n\t}\n\tif (z != -1) {\n\t\ta[z] = a[z] - 4;\n\t\tfor (int i = 1; i <= 9; i++) {\n\t\t\tif (a[i] == 1 && y == -1) { y = i; }\n\t\t\tif (a[i] == 1 && y != -1) { z = i; }\n\t\t\tif (a[i] == 2) { y = z = a[i]; }\n\t\t}\n\t\tif (y == z)\n\t\t\tcout << ""Elephant"" << endl;\n\t\telse\n\t\t\tcout << ""Bear"" << endl;\n\t} else\n\t\tcout << ""Alien"" << endl;\n}"	"declare new array of integers a with size 10\ncreate new integer variable x\nfor i from 1 to 6 inclusive incrementing i\nread variable x from the input\nincrement a[x]\ndeclare new ints y and z = -1\nstart for loop from i = 1 to 9 inclusive\nif a[i] >= 4, assign i to z\nif z is not -1\nassign a[z] - 4 to a[z]\nfor i = 1 to 9 inclusive\nif a[i] is equal to 1 and y = -1, change y to i\nif a[i] = 1 and y is not -1, set z to i\nif a[i] is equal to 2, change y to set z to a[i]\nif y is equal to z\nprint ""Elephant""\nelse\nprint ""Bear"" to the standard output\nelse\nprint ""Alien"""
"int main() {\n\tint i, j, n, p = 0, q, flag = 0, a[10] = {0};\n\tfor (i = 0; i < 6; i++) {\n\t\tcin >> n;\n\t\ta[n]++;\n\t}\n\tfor (i = 0; i <= 9; i++) {\n\t\tif (a[i] >= 4) {\n\t\t\ta[i] -= 4;\n\t\t\tflag = 1;\n\t\t}\n\t}\n\tif (flag == 0) {\n\t\tcout << ""Alien"" << endl;\n\t\treturn 0;\n\t}\n\tfor (i = 0; i <= 9; i++) {\n\t\tif (a[i] == 2) {\n\t\t\tcout << ""Elephant"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""Bear"" << endl;\n\treturn 0;\n}"	"create integers i, j, n, p, q, flag with p = 0, flag = 0, create integer array a with size 10 with a = {0}\nfor i = 0 to 6 exclusive\nread n\nincrement a[n]\nfor i = 0 to 9 inclusive\nif a[i] is greater than or equal to 4\ndecrement a[i] by 4\nset flag to 1\nif flag is 0\nprint ""Alien"" print newline\nfor i = 0 to 9 inclusive\nif a[i] is 2\nprint ""Elephant"" print newline\nprint ""Bear"" print newline"
"int ar[12];\nint main() {\n\tint a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tar[a]++;\n\tar[b]++;\n\tar[c]++;\n\tar[d]++;\n\tar[e]++;\n\tar[f]++;\n\tbool paichi = false;\n\tfor (int i = 1; i <= 9; i++) {\n\t\tif (ar[i] >= 4) { paichi = true; }\n\t}\n\tif (!paichi) return cout << ""Alien\n"", 0;\n\tint cnt = 0;\n\tfor (int i = 1; i <= 9; i++) {\n\t\tif (ar[i] == 2 or ar[i] == 6) return cout << ""Elephant\n"", 0;\n\t}\n\tcout << ""Bear\n"";\n\treturn 0;\n}"	"ar = int array of size 12\na, b, c, d, e, f = int\nread a then b then c then d then e then f\nincrement ar[a]\nincrement ar[b]\nincrement ar[c]\nincrement ar[d]\nincrement ar[e]\nincrement ar[f]\npaichi = bool with paichi = false\nfor i = 1 to 9 inclusive\nif ar[i] >= 4 set paichi to true\nif not paichi print ""Alien"" and return 0\ncnt = int with cnt = 0\nfor i = 1 to 9 inclusive\nif ar[i] is 2 or 6 print ""Elephant"" and return 0\nprint ""Bear"""
"int main() {\n\tint A[6];\n\tfor (int i = 0; i < 6; ++i) { cin >> A[i]; }\n\tsort(A, A + 6);\n\tint B, C;\n\tif (A[0] == A[3])\n\t\tB = A[4], C = A[5];\n\telse if (A[1] == A[4])\n\t\tB = A[0], C = A[5];\n\telse if (A[2] == A[5])\n\t\tB = A[0], C = A[1];\n\telse {\n\t\tcout << ""Alien"" << endl;\n\t\treturn 0;\n\t}\n\tif (B == C) {\n\t\tcout << ""Elephant"" << endl;\n\t\treturn 0;\n\t}\n\tif (B < C) {\n\t\tcout << ""Bear"" << endl;\n\t\treturn 0;\n\t}\n}"	"create integer A with size 6\nfor i = 0 to 6 exclusive, read A[i]\nsort elements from A to A + 6\ncreate integers B, C\nif A[0] is A[3]\nset B to A[4], set C to A[5]\nelse if A[1] is A[4]\nset B to A[0], set C to A[5]\nelse if A[2] is A[5]\nset B to A[0], set C to A[1]\nelse\nprint ""Alien"" print newline\nif B is C\nprint ""Elephant"" print newline\nif B is less than C\nprint ""Bear"" print newline"
"char dp[10][10];\nmap<long long, long long> mp;\nint main() {\n\tlong long n, x;\n\tlong long a[10];\n\tfor (int i = 0; i < 6; i++) {\n\t\tcin >> a[i];\n\t\tmp[a[i]]++;\n\t}\n\tbool ok = false;\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (mp[a[i]] == 6) ok = true;\n\t}\n\tif (ok) {\n\t\tcout << ""Elephant"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (mp[a[i]] == 5) ok = true;\n\t}\n\tif (ok) {\n\t\tcout << ""Bear"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (mp[a[i]] == 4) ok = true;\n\t}\n\tif (!ok) {\n\t\tcout << ""Alien"" << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 0; i < 6; i++) {\n\t\tif (mp[a[i]] == 2) ok = false;\n\t}\n\tif (ok)\n\t\tcout << ""Bear"" << endl;\n\telse\n\t\tcout << ""Elephant"" << endl;\n\treturn 0;\n}"	"dp = two dimensional char array of sizes 10 and 10\nmp = long long and long long map\nn, x = long long\na = long long array of size 10\nfor i = 0 to 6\nread a[i]\nincrement mp[a[i]]\nok = bool with ok = false\nfor i = 0 to 6\nif mp[a[i]] is 6 set ok to true\nif ok is true\nprint ""Elephant""\nfor i = 0 to 6\nif mp[a[i]] is 5 set ok to true\nif ok is true\nprint ""Bear""\nfor i = 0 to 6\nif mp[a[i]] is 4 set ok to true\nif ok is false\nprint ""Alien""\nfor i = 0 to 6\nif mp[a[i]] is 2 set ok to false\nif ok is true\nprint ""Bear""\nelse\nprint ""Elephant"""
"int b[10], c[6];\nint main() {\n\tint a[6], i, x, j = 0;\n\tfor (i = 0; i < 6; i++) {\n\t\tcin >> a[i];\n\t\tx = a[i];\n\t\tb[x]++;\n\t}\n\tfor (i = 1; i <= 9; i++) {\n\t\tif (b[i] != 0) {\n\t\t\tc[j] = b[i];\n\t\t\tj++;\n\t\t}\n\t}\n\tsort(c, c + 3);\n\tif (c[0] == 1 && c[1] == 1 && c[2] == 4) {\n\t\tcout << ""Bear"" << endl;\n\t} else if (c[0] == 0 && c[1] == 1 && c[2] == 5) {\n\t\tcout << ""Bear"" << endl;\n\t} else if (c[0] == 0 && c[1] == 2 && c[2] == 4) {\n\t\tcout << ""Elephant"" << endl;\n\t} else if (c[2] == 6) {\n\t\tcout << ""Elephant"" << endl;\n\t} else {\n\t\tcout << ""Alien"" << endl;\n\t}\n\treturn 0;\n}"	"declare int arrays b with size 10 and c with size 6\ndeclare an array of integers a with size 6 and integer variables i, x and j with j = 0\nfor i = 0 to 6 exclusive\nread a[i]\nassign a[i] to x\nincrement b[x] by one\nfor i = 1 to 9 inclusive\nif b[i] != 0\nset c[j] to b[i]\nincrement j by one\nsort first 3 elements of c\nif c[0] = 1 and c[1] = 1 and c[2] = 4\nprint ""Bear""\nelse if c[0] = 0 and c[1] = 1 and c[2] = 5\nprint ""Bear""\nelse if c[0] = 0 and c[1] = 2 and c[2] = 4\nprint ""Elephant""\nelse if c[2] is equal to 6\nprint ""Elephant""\nelse\nprint ""Alien"""
"int main() {\n\tint i, j, n, p = 0, q, flag = 0, a[10] = {0};\n\tfor (i = 0; i < 6; i++) {\n\t\tcin >> n;\n\t\ta[n]++;\n\t}\n\tfor (i = 0; i <= 9; i++) {\n\t\tif (a[i] >= 4) {\n\t\t\ta[i] -= 4;\n\t\t\tflag = 1;\n\t\t}\n\t}\n\tif (flag == 0) {\n\t\tcout << ""Alien"" << endl;\n\t\treturn 0;\n\t}\n\tfor (i = 0; i <= 9; i++) {\n\t\tif (a[i] == 2) {\n\t\t\tcout << ""Elephant"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""Bear"" << endl;\n\treturn 0;\n}"	"create integers i, j, n, p, q, flag, with p = 0, flag = 0, create integer array a with size 10 with a = {0}\nfor i = 0 to 6 exclusive\nread n\nincrement a[n]\nfor i = 0 to 9 inclusive\nif a[i] is greater than or equal to 4\ndecrement a[i] by 4\nset flag to 1\nif flag is 0\nprint ""Alien"" print newline\nfor i = 0 to 9 inclusive\nif a[i] is 2\nprint ""Elephant"" print newline\nprint ""Bear"" print newline"
"int main() {\n\tint list[10];\n\tmemset(list, 0, sizeof(list));\n\tfor (int i = 0; i < 6; i++) {\n\t\tint temp;\n\t\tcin >> temp;\n\t\tlist[temp]++;\n\t}\n\tfor (int i = 0; i < 10; i++) {\n\t\tif (list[i] == 4) {\n\t\t\tfor (int j = 0; j < 10; j++) {\n\t\t\t\tif (list[j] == 2) {\n\t\t\t\t\tcout << ""Elephant"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << ""Bear"" << endl;\n\t\t\treturn 0;\n\t\t} else if (list[i] == 5) {\n\t\t\tcout << ""Bear"" << endl;\n\t\t\treturn 0;\n\t\t} else if (list[i] == 6) {\n\t\t\tcout << ""Elephant"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""Alien"" << endl;\n\treturn 0;\n}"	"declare integer array list size 10\nset bytes from list to size of list to value 0\nfor i = 0 to 6 exclusive\ndeclare temp as integer\nread temp\nincrement list[temp]\nfor i = 0 to 10 exclusive\nif list[i] is 4\nfor j = 0 to 10 exclusive\nif list[j] is 2\nprint ""Elephant"", newline\nprint ""Bear"", newline\nelse if list[i] is 5\nprint ""Bear"", newline\nelse if list[i] is 6\nprint ""Elephant"", newline\nprint ""Alien"", newline"
"int mp[20];\nint main() {\n\tint n;\n\tvector<int> Q;\n\tmemset(mp, 0, sizeof mp);\n\tfor (int i = 1; i <= 6; i++) {\n\t\tint p;\n\t\tcin >> p;\n\t\tmp[p]++;\n\t\tQ.push_back(p);\n\t}\n\tint flag1 = 0, flag2 = 0;\n\tfor (int i = 0; i < Q.size(); i++) {\n\t\tif (mp[Q[i]] >= 4) { flag1 = 1; }\n\t\tif (mp[Q[i]] == 2) { flag2 = 1; }\n\t\tif (mp[Q[i]] == 6) {\n\t\t\tflag1 = 1;\n\t\t\tflag2 = 1;\n\t\t}\n\t}\n\tif (flag1 == 1 and flag2 == 0) {\n\t\tcout << ""Bear\n"";\n\t} else if (flag1 == 1 and flag2 == 1) {\n\t\tcout << ""Elephant\n"";\n\t} else {\n\t\tcout << ""Alien\n"";\n\t}\n\treturn 0;\n}"	"create integer array mp with size 20\ncreate integer n\ncreate integer vector Q\nset bytes from mp to size of mp to value 0\nfor i = 1 to 6 inclusive\ncreate integer p\nread p\nincrement mp[p]\nadd character p to end of Q\ncreate integers flag1, flag2 with flag1 = 0, flag2 = 0\nfor i = 0 to size of Q exclusive\nif mp[Q[i]] is greater than or equal to 4, set flag1 to 1\nif mp[Q[i]] is 2, set flag2 to 1\nif mp[Q[i]] is 6\nset flag1 to 1\nset flag2 to 1\nif flag1 is 1 and flag2 is 0\nprint ""Bear\n""\nelse if flag1 is 1 and flag2 is 1\nprint ""Elephant\n""\nelse\nprint ""Alien\n"""
"int s[10], a, b, n;\nint main() {\n\tfor (int i = 0; i < 6; i++) {\n\t\tcin >> n;\n\t\ts[n]++;\n\t}\n\tfor (int i = 0; i < 10; i++) {\n\t\tif (s[i] >= 4) { b = 1; }\n\t\tif (s[i] == 2 || s[i] == 6) { a = 1; }\n\t}\n\tif (b == 0) {\n\t\tcout << ""Alien"" << endl;\n\t} else if (a == 1) {\n\t\tcout << ""Elephant"" << endl;\n\t} else {\n\t\tcout << ""Bear"" << endl;\n\t}\n}"	"a, b, n = int and s = int array of size 10\nfor i = 0 to 6\nread n\nincrement s[n]\nfor i = 0 to 10\nif s[i] is greater or equal to 4 set b to 1\nif s[i] is 2 or 6 set a to 1\nif b is 0\nprint ""Alien""\nelse if a is 1\nprint ""Elephant""\nelse\nprint ""Bear"""
"map<int, int> mp;\nint main() {\n\tfor (int i = 0; i < 6; i++) {\n\t\tint p;\n\t\tcin >> p;\n\t\tmp[p]++;\n\t}\n\tif (mp.size() > 3) {\n\t\tcout << ""Alien"" << endl;\n\t\treturn 0;\n\t}\n\tif (mp.size() == 3) {\n\t\tint f = 0;\n\t\tmap<int, int>::iterator it;\n\t\tfor (it = mp.begin(); it != mp.end(); it++) {\n\t\t\tif (it->second == 4) {\n\t\t\t\tf = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (f) {\n\t\t\tcout << ""Bear"" << endl;\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tcout << ""Alien"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (mp.size() == 2) {\n\t\tint f = 0;\n\t\tmap<int, int>::iterator it;\n\t\tfor (it = mp.begin(); it != mp.end(); it++) {\n\t\t\tif (it->second == 2) {\n\t\t\t\tf = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (it->second == 3) {\n\t\t\t\tcout << ""Alien"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tif (f) {\n\t\t\tcout << ""Elephant"" << endl;\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tcout << ""Bear"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (mp.size() == 1) {\n\t\tcout << ""Elephant"" << endl;\n\t\treturn 0;\n\t}\n\treturn 0;\n}"	"create a map from integers to integers with name mp\nfor integer i = 0 to 6 exclusive\ndeclare int p\nread p\nincrement mp[p]\nif length of mp is greater than 3\nprint ""Alien""\nif length of mp is equal to 3\ncreate integer f = 0\nit is a map iterator\nmove it through mp\nif it->second = 4\nchange f to 1\nbreak the loop\nif f != 0\nprint ""Bear""\nelse\nprint ""Alien""\nif length of mp is equal to 2\ndeclare integer variable f = 0\nit is a map iterator\nmove it through mp\nif it->second = 2\nchange f to 1\nbreak the loop\nif if it->second = 3\nprint ""Alien""\nif f != 0\nprint ""Elephant""\nelse\nprint ""Bear""\nif length of mp = 1\nprint ""Elephant"""
int main() {\n\tlong long l, r;\n\tcin >> l >> r;\n\tif (r - l > 1) {\n\t\tif (l % 2 == 0)\n\t\t\tcout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n\t\telse {\n\t\t\tif (r - l > 2)\n\t\t\t\tcout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n\t\t\telse\n\t\t\t\tcout << -1 << endl;\n\t\t}\n\t} else\n\t\tcout << -1 << endl;\n}	l, r = long long\nread l then r\nif r - l is greater than 1\nif l is even\nprint l then ' ' then l + 1 then ' ' then l + 2\nelse\nif r - l is greater than 2\nprint l + 1 then ' ' then l + 2 then ' ' then l + 3\nelse\nprint -1\nelse\nprint -1
"int tmp, min1, max1, sum_n, index_max, index_min;\nint arr1[1000][1000];\nchar arr3[100];\nint arr[10000];\nvoid display_vector(vector<int> v) {\n\tfor (int i = 0; i < v.size(); i++) cout << v[i] << "" "";\n\tcout << endl;\n}\nvoid speed() {}\nvoid min_max(vector<int> v, int l) {\n\tmin1 = INT_MAX;\n\tmax1 = INT_MIN;\n\tfor (int i = l; i < v.size(); i++) {\n\t\tif (v[i] <= min1) {\n\t\t\tmin1 = v[i];\n\t\t\tindex_min = i;\n\t\t}\n\t\tif (v[i] >= max1) {\n\t\t\tmax1 = v[i];\n\t\t\tindex_max = i;\n\t\t}\n\t}\n}\nint sum_v(vector<int> v) {\n\tfor (int i = 0; i < v.size(); i++) sum_n += v[i];\n\treturn sum_n;\n}\nbool is_it_sorted_acs(vector<int> v) {\n\tbool test1 = false;\n\tfor (int i = 0; i < v.size() - 1; i++)\n\t\tif (v[i + 1] <= v[i]) {\n\t\t\ttest1 = false;\n\t\t\treturn test1;\n\t\t}\n\ttest1 = true;\n\treturn test1;\n}\nbool is_it_sorted_des(vector<int> v) {\n\tbool test1 = false;\n\tfor (int i = 0; i < v.size() - 1; i++)\n\t\tif (v[i + 1] >= v[i]) {\n\t\t\ttest1 = false;\n\t\t\treturn test1;\n\t\t}\n\ttest1 = true;\n\treturn test1;\n}\nint main() {\n\tspeed();\n\tlong long l, r;\n\tcin >> l >> r;\n\tif (l % 2 != 0) l++;\n\tif (r - l < 2) return cout << -1 << endl, 0;\n\tcout << l << "" "" << l + 1 << "" "" << l + 2 << endl;\n}"	"tmp, min1, max1, sum_n, index_max, index_min = int\narr1 = two dimensional int array of sizes 1000 and 1000\narr3 = char array of size 100\narr = int array of size 10000\nin function display_vector taking an int vector v\nfor i = 0 to size of v print v[i] then "" ""\nprint newline\ndefine empty function speed\nin function min_max taking an int vector v and an int l\nset min1 to INT_MAX\nset max1 to INT_MIN\nfor i = l to size of v\nif v[i] is less or equal to min1\nset min1 to v[i]\nset index_min to i\nif v[i] is greater or equal to max1\nset max1 to v[i]\nset index_max to i\nin function sum_v taking an int vector v and returning an int\nfor i = 0 to size of v increment sum_n by v[i]\nreturn sum_n\nin function is_it_sorted_acs taking an int vector v and returning a bool\ntest1 = bool with test1 = false\nfor i = 0 to size of v - 1\nif v[i + 1] is less or equal to v[i]\nset test1 to false\nreturn test1\nset test1 to true\nreturn test1\nin function is_it_sorted_des taking an int vector v and returning a bool\ntest1 = bool with test1 = false\nfor i = 0 to size of v - 1\nif v[i + 1] is greater or equal to v[i]\nset test1 to false\nreturn test1\nset test1 to true\nreturn test1\ncall speed\nl, r = long long\nread l then r\nif l is uneven then increment l\nif r - l is less than 2 then print -1 and return 0\nprint l and l + 1 and l + 2"
int main() {\n\tlong long l, r;\n\tcin >> l >> r;\n\tif (r - l + 1 < 3) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (l % 2 == 0) {\n\t\tcout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n\t\treturn 0;\n\t}\n\tif (r - l + 1 > 3) {\n\t\tcout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n\t\treturn 0;\n\t}\n\tcout << -1 << endl;\n}	create long long l and r\nread l and r\nif r - l + 1 less than 3\nprint -1\nif l is odd\nprint l, ' ', l+1, ' ', l+2\nif r - l + 1 greater than 3\nprint l+1, ' ', l+2, ' ', l+3\nprint -1 and a newline
"long long l, r;\nint main() {\n\tcin >> l >> r;\n\tif (r - l + 1 < 3) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (l % 2 == 0) {\n\t\tcout << l << "" "" << l + 1 << "" "" << l + 2 << endl;\n\t\treturn 0;\n\t}\n\tif (r - l + 1 > 3) {\n\t\tcout << l + 1 << "" "" << l + 2 << "" "" << l + 3 << endl;\n\t\treturn 0;\n\t}\n\tcout << -1 << endl;\n\treturn 0;\n\treturn 0;\n}"	"create long long l and r\nread l, r\nif r - l + 1 < 3\nprint -1\nif l is even\nprint l, "" "", l+1, "" "", l+2\nif r - l + 1 greater than 3\nprint l + 1, "" "", l + 2, "" "", l + 3\nprint -1 and a newline"
"int main() {\n\tint long long l, r;\n\tcin >> l >> r;\n\tif (l % 2 != 0) l++;\n\tif (l + 2 > r)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << l << "" "" << l + 1 << "" "" << l + 2 << endl;\n\treturn 0;\n}"	"create integer long longs l, r\nread l read r\nif l % 2 is not 0, increment l\nif l + 2 is greater than r\nprint -1 print newline\nelse\nprint l print "" "" print l + 1 print "" "" print l + 2 print newline"
"int main() {\n\tlong long k, l;\n\twhile (cin >> k >> l) {\n\t\tif (l - k < 2)\n\t\t\tcout << -1 << endl;\n\t\telse if (!(k % 2)) {\n\t\t\tcout << k << "" "" << k + 1 << "" "" << k + 2 << endl;\n\t\t} else if (k % 2 && l - k >= 3) {\n\t\t\tcout << k + 1 << "" "" << k + 2 << "" "" << k + 3 << endl;\n\t\t} else\n\t\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}"	"declare long long variables k and l\nread k and l and keep looping\nif l - k is less than 2\nprint - 1\nelse if k is even\nprint k, "" "", k + 1, "" "" and k + 2\nelse if k is odd && l - k >= 3\nprint k + 1, "" "", k + 2, "" "" and k + 3\nelse\nprint -1"
"int main() {\n\tlong long n, m;\n\tcin >> n >> m;\n\tif (m - n < 2)\n\t\tcout << -1 << endl;\n\telse {\n\t\tif (n % 2 == 0)\n\t\t\tcout << n << "" "" << n + 1 << "" "" << n + 2 << endl;\n\t\telse if (n % 2 != 0 && n + 3 <= m)\n\t\t\tcout << n + 1 << "" "" << n + 2 << "" "" << n + 3 << endl;\n\t\telse\n\t\t\tcout << -1 << endl;\n\t}\n}"	"create long longs n, m\nread n read m\nif m - n is less than 2\nprint -1 print newline\nelse\nif n % 2 is 0\nprint n print "" "" print n + 1 print "" "" print n + 2 print newline\nelse if n % 2 is not 0 and n + 3 is less than or equal to m\nprint n + 1 print "" "" print n + 2 print "" "" print n + 3 print newline\nelse\nprint -1 print newline"
"int main() {\n\tlong long int a, b;\n\tcin >> a >> b;\n\tif (a % 2 == 0 && a + 2 <= b) {\n\t\tcout << a << "" "" << a + 1 << "" "" << a + 2 << endl;\n\t} else if (a % 2 != 0 && a + 3 <= b) {\n\t\tcout << a + 1 << "" "" << a + 2 << "" "" << a + 3 << endl;\n\t} else {\n\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}"	"a, b = long long integer\nread a, b\nif a modulo 2 is 0 and a + 2 <= b\nprint a,"" "",a + 1,"" "",a + 2\nelse if a modulo 2 is not 0 and a + 3 <= b\nprint a + 1,"" "",a + 2,"" "",a + 3\nelse\nprint -1"
"int main() {\n\tlong long l, r;\n\tcin >> l >> r;\n\tif (r - l + 1 < 3) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (r - l + 1 == 3 && (r % 2 != 0 || l % 2 != 0)) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (l % 2 == 0 && (l + 2) % 2 == 0)\n\t\tcout << l << "" "" << l + 1 << "" "" << l + 2 << endl;\n\telse\n\t\tcout << l + 1 << "" "" << l + 2 << "" "" << l + 3 << endl;\n}"	"create long long l and r\nread l and r\nif r - l + 1 < 3\nread -1\nif r - l + 1 = 3 and r mod 2 different from 0 or l mod 2 different from 0\nprint -1\nif l is even and l + 2 is even\nprint l, "" "", l + 1, "" "", l + 2\nelse\nprint l + 1, "" "", l + 2, "" "", l + 3"
int main() {\n\tlong long l, r;\n\tcin >> l >> r;\n\tif (r - l + 1 < 3) {\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\tif (l % 2 == 0) {\n\t\tcout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n\t\treturn 0;\n\t}\n\tif (r - l + 1 > 3) {\n\t\tcout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n\t\treturn 0;\n\t}\n\tcout << -1 << endl;\n}	l, r = long long\nread l, r\nif r - l + 1 < 3\nprint -1\nif l modulo 2 is 0\nprint l,' ',l + 1,' ',l + 2\nif r - l + 1 > 3\nprint l + 1,' ',l + 2,' ',l + 3\nprint -1
"int main() {\n\tlong long n1, n2;\n\tcin >> n1 >> n2;\n\tif (n1 % 2 != 0) n1++;\n\tif (n2 - n1 < 2) {\n\t\tcout << ""-1"" << endl;\n\t} else {\n\t\tcout << n1 << "" "" << n1 + 1 << "" "" << n1 + 2 << endl;\n\t}\n\treturn 0;\n}"	"create long long n1 and n2\nread n1, n2\nif n1 is odd, increase n1\nif n2 - n1 less than 2\nprint -1\nelse\nprint n1, "" "", n1+1, "" "", n1+2"
"int main() {\n\tlong long l, r;\n\tcin >> l >> r;\n\tif (r - l < 2)\n\t\tcout << -1 << '\n';\n\telse if (r - l == 2) {\n\t\tif (r % 2)\n\t\t\tcout << -1 << '\n';\n\t\telse\n\t\t\tcout << l << "" "" << l + 1 << "" "" << r << '\n';\n\t} else {\n\t\tif (l % 2)\n\t\t\tcout << l + 1 << "" "" << l + 2 << "" "" << l + 3 << '\n';\n\t\telse\n\t\t\tcout << l << "" "" << l + 1 << "" "" << l + 2 << '\n';\n\t}\n}"	let l, r be long integers\nread l and r\nif r - l is less than 2\nprint -1 and newline\nelse if r - l is equal to 2\nif r modulo 2\nprint -1 and newline\nelse do the following\nprint l and space and l + 1 and space and r and newline\nelse do the following\nif l modulo 2\nprint l + 1 and space and l + 2 and space and l + 3 and newline\nelse do the following\nprint l and space and l + 1 and space and l + 2 and newline
"int main() {\n\tlong long l, r;\n\tcin >> l >> r;\n\tif (l % 2 == 0 && l + 2 <= r)\n\t\tcout << l << "" "" << l + 1 << "" "" << l + 2 << endl;\n\telse {\n\t\tif (l + 3 <= r)\n\t\t\tcout << l + 1 << "" "" << l + 2 << "" "" << l + 3 << endl;\n\t\telse\n\t\t\tcout << -1 << endl;\n\t}\n\treturn 0;\n}"	"create long long l and r\nread l and r\nis l is even and l + 2 <= r\nprint l, "" "", l + 1, "" "", l + 2\nelse\nl + 3 <= r\nprint l+1, "" "", l + 2, "" "", l + 3\nelse\nprint -1 and a newline"
int main() {\n\tint n, res = 0;\n\tcin >> n;\n\tint total = 0;\n\twhile (total < n) {\n\t\tres++;\n\t\ttotal += res * (res + 1) / 2;\n\t}\n\tif (total > n) { res--; }\n\tcout << res << endl;\n\treturn 0;\n}	n, res = integer with res = 0\nread n\ntotal = integer with total = 0\nwhile total < n\nincrement res\ntotal = total + res * (res + 1) / 2\nif total > n, decrement res\nprint res
int main() {\n\tint n, i, j, x, mohi;\n\tlong long int sum = 0;\n\tvector<int> v;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tfor (j = 1; j <= i; j++) {\n\t\t\tmohi = (j * (j + 1)) / 2;\n\t\t\tsum += mohi;\n\t\t}\n\t\tif (sum > n) {\n\t\t\tx = i;\n\t\t\tbreak;\n\t\t}\n\t\tsum = 0;\n\t}\n\tif (n == 1)\n\t\tcout << 1 << endl;\n\telse\n\t\tcout << x - 1 << endl;\n}	create ints n, i, j, x, and mohi\ncreate long long int sum = 0\ncreate integer vector v\nread n\nfor i = 1 to n\nfor j = 1 to i\nset mohi to (j * (j + 1)) / 2\nset sum to sum + mohi\nif sum is less than n\nset x to i\nbreak loop\nset sum to 0\nif n is equal to 1\nprint 1\notherwise\nprint x - 1
int main() {\n\tint n, ans, sum, sum2;\n\twhile (cin >> n) {\n\t\tans = sum = sum2 = 0;\n\t\twhile (true) {\n\t\t\tif (sum2 > n) break;\n\t\t\tans++;\n\t\t\tsum += ans;\n\t\t\tsum2 += sum;\n\t\t}\n\t\tcout << ans - 1 << endl;\n\t}\n\treturn 0;\n}	n,ans,sum,sum2=int\nwhile read n\nans, sum, sum2=0\nwhile true\nif sum2>n break\nincrement ans\nadd ans to sum\nadd sum to sum2\nprint ans-1
"int Addition(int n) {\n\tint s;\n\ts = (n * (1 + n)) / 2;\n\treturn s;\n}\nint main() {\n\tint a, i = 0;\n\tcin >> a;\n\tif (a > 0) {\n\t\ta = a - Addition(i);\n\t\twhile (a > 0) {\n\t\t\ti++;\n\t\t\ta = a - Addition(i + 1);\n\t\t}\n\t\tcout << i << endl;\n\t} else\n\t\tcout << ""0"" << endl;\n}"	"int function Addition with int argument n\ndeclare new integer s\nset s to (n * (1 + n)) / 2\nreturn s\na and i are integers with i = 0\nread input to a\nif a is greater than 0\nchange a to a - the result of Addition(i)\nwhile a > 0\nincrement i\nassign a - the result of Addition(i + 1) to a\nprint i to the standard output\nelse\nprint ""0"" to the standard output"
int main() {\n\tint n, a = 0, b = 0;\n\tcin >> n;\n\tfor (int i = 1; a < n; i++) {\n\t\ta += i;\n\t\tn -= a;\n\t\tif (n >= 0) b++;\n\t}\n\tcout << b << endl;\n}	n, a, b = integers with a = 0, b = 0\nread n\nfor i = 1 to n exclusive\na = a + i\nn = n - a\nif n >= 0, increment b\nprint b
int main() {\n\tint a[151], sum, sum1 = 0;\n\tcin >> sum;\n\tfor (int i = 1; i <= 150; i++) {\n\t\ta[i] = (1 + i) * i / 2;\n\t\tsum1 += a[i];\n\t\ta[i + 1] = (2 + i) * (i + 1) / 2;\n\t\tif (sum >= sum1 && sum < sum1 + a[i + 1]) {\n\t\t\tcout << i << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	declare integer array a with size 151; create integers sum and sum1 where sum1 = 0\nread variable sum from the input\nin the for loop, change i from 1 to 150 inclusive\nset a[i] to (1 + i) * i / 2\nincrease sum1 by a[i]\nset a[i + 1] to (2 + i) * (i + 1) / 2\nif sum >= sum1 and sum < sum1 + a[i + 1]\nprint i to the standard output\nbreak the loop
"int main() {\n\tint n, s = 0;\n\tcin >> n;\n\tfor (int i = 1;; i++) {\n\t\tif (s > n) {\n\t\t\tcout << i - 2 << ""\n"";\n\t\t\tbreak;\n\t\t} else {\n\t\t\ts += (i * (i + 1)) / 2;\n\t\t}\n\t}\n}"	n = integer, s = integer = 0\nread n\nloop indefinitely for i = 1 and increase i at the end of the loop\nif s > n\nprint the result of i - 2\nexit the for loop\nelse\ns = s + (i * (i + 1)) / 2
"int main() {\n\tint var = 1, n, aux = 0, x = 0;\n\tcin >> n;\n\tint level = 0;\n\twhile (1) {\n\t\tx += var;\n\t\taux += x;\n\t\tif (aux > n) break;\n\t\tlevel++;\n\t\tvar++;\n\t}\n\tcout << level << ""\n"";\n}"	var, n, aux, x = int with var = 1 and aux = 0 and x = 0\nread n\nlevel = int with level = 0\nloop infinitely\nincrement x by var\nincrement aux by x\nif aux > n break\nincrement level\nincrement var\nprint level
const int INF = 1e9;\nconst int N = 1e5;\nint arr[10001];\nvoid prework() {\n\tarr[0] = 0;\n\tfor (int i = 1; i <= 10000; i++) { arr[i] = arr[i - 1] + i; }\n}\nint main() {\n\tprework();\n\tint n, cnt = 0;\n\tcin >> n;\n\tfor (int i = 1;; i++) {\n\t\tif (n < arr[i]) break;\n\t\tn -= arr[i];\n\t\tcnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	create constant int INF = 1e9\nlet const integer N = 1e5\nlet int array arr of size 10001\ndeclare prework\nset arr[0] to 0\nfor i = 1 to 10000, set arr[i] to arr[i - 1] + i\ncall prework\nlet ints n and cnt = 0\nread n\nfor i = 1, loop indefinitely\nif n is less than arr[i], break loop\nset n to n - arr[i]\nincrement cnt\nprint cnt
int main() {\n\tint n, c = 0, d, count = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tc += i;\n\t\tif (n >= c) count++;\n\t\tn -= c;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	create ints n, c = 0, d, and count = 0\nread n\nfor i = 1 to n\nset c to c + 1\nif n is greater than or equal to c, increment count\nset n to n - c\nprint count
int main() {\n\tint n;\n\tcin >> n;\n\tint h = 1;\n\tint temp = ((h) * (h + 1) * (h + 2)) / 6;\n\twhile (temp <= n) {\n\t\th++;\n\t\ttemp = ((h) * (h + 1) * (h + 2)) / 6;\n\t}\n\tcout << h - 1 << endl;\n\treturn 0;\n}	n = int\nread n\nh = int with h = 1\ntemp = int with temp = ((h) * (h + 1) * (h + 2)) / 6\nloop while temp <= n\nincrement h\nset temp to ((h) * (h + 1) * (h + 2)) / 6\nprint h - 1
int main() {\n\tlong long n;\n\tcin >> n;\n\tlong long val = 0, ans = 0;\n\tfor (long long i = 0; i < 10001; i++) {\n\t\tval += i;\n\t\tans += val;\n\t\tif (ans > n) {\n\t\t\tcout << i - 1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}	n = long long\nread n\nval, ans = long long with val = 0 and ans = 0\nfor i = 0 to 10001\nincrement val by i\nincrement ans by val\nif ans > n\nprint i - 1
int sum(int n) {\n\tint s = (n * (n + 1)) / 2;\n\treturn s;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tint i = 0;\n\tint s = 0;\n\twhile (true) {\n\t\ts = s + sum(i);\n\t\tif (s > n) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\ti++;\n\t\t}\n\t}\n\tcout << (i - 1) << endl;\n}	in function sum taking an int n and returning an int\ns = int with s = (n * (n + 1)) / 2\nreturn s\nn = int\nread n\ni = int with i = 0\ns = int with s = 0\nloop infinitely\nincrement s by sum of i\nif s > n\nbreak\nelse\nincrement i\nprint i - 1
int main() {\n\tint n, count = 0;\n\tcin >> n;\n\tint flag = 0, i = 2, x = 1;\n\twhile (flag <= n) {\n\t\tflag += x;\n\t\tx += i;\n\t\ti++;\n\t\tif (flag <= n) count++;\n\t}\n\tcout << count << endl;\n\treturn 0;\n}	n, count = int with count = 0\nread n\nflag, i, x = int with flag = 0 and i = 2 and x = 1\nloop while flag <= n\nincrement flag by x\nincrement x by i\nincrement i\nif flag <= n increment count\nprint count
int main() {\n\tint n;\n\tcin >> n;\n\tint tot = 0, ans = 0;\n\tfor (int i = 1; i <= n; i += 1) {\n\t\ttot += i * (i + 1) / 2;\n\t\tif (tot > n) break;\n\t\tans = i;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n = int\nread n\ntot, ans = int with tot = 0 and ans = 0\nfor i = 1 to n inclusive\nincrement tot by i * (i + 1) / 2\nif tot > n break\nset ans to i\nprint ans
int main() {\n\tlong long n, x = 0, count = 0, boxes = 0;\n\tcin >> n;\n\tlong long i = 1;\n\tlong long j = 1;\n\twhile (boxes + i + x <= n) {\n\t\tx += i;\n\t\ti += j;\n\t\tcount++;\n\t\tboxes += x;\n\t}\n\tcout << count << endl;\n}	n=long long, x, count and boxes=0\nread n\ni=1\nj=1\nwhile boxes+i+x <= n\nadd i to x\nadd j to i\nincrement count\nadd x to boxes\nprint count
int main() {\n\tint i, n, k;\n\twhile (cin >> n) {\n\t\tk = 0;\n\t\tfor (i = 1; n >= 0; i++) {\n\t\t\tk += i;\n\t\t\tn -= k;\n\t\t}\n\t\tcout << (i - 2) << endl;\n\t}\n}	let i, n, k be integers\nwhile read n\nk is equal to 0\nfor i is equal to 1, n >= 0 , increment i by 1\nincrement k by i\ndecrement n by k\nprint i - 2 and newline
int a[10010];\nint main() {\n\ta[1] = 1;\n\tlong long int sum, m;\n\tfor (int i = 2; i <= 10000; i++) a[i] = a[i - 1] + i;\n\twhile (cin >> m) {\n\t\tfor (int i = 1; i <= 10000; i++) {\n\t\t\tm -= a[i];\n\t\t\tif (m < a[i + 1]) {\n\t\t\t\tcout << i << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	a = array of integers of length 10010\n1st element in a is equal to 1\nlet sum, m be long integers\nfor i = 2 to 10000 inclusive , the value of a[i] is equal to a[i - 1] + i\nwhile reading m\nfor i = 1 to 10000 inclusive\ndecrement m by a[i]\nif m is less than a[i + 1]\nprint i and newline\nstop
vector<int> sol;\nint main() {\n\tint n;\n\tcin >> n;\n\tint sum = 0;\n\tfor (int i = 1; i <= 150; i++) {\n\t\tif (sum > n) {\n\t\t\tcout << i - 2 << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tsum += ((i * (i + 1)) / 2);\n\t}\n}	declare integer vector sol\ndeclare integer n\nread n\ndeclare integer sum = 0\nfor i = 1 to 150 inclusive\nif sum is greater than n\nprint i - 2, newline\nincrement sum by ((i * (i + 1)) / 2)
int a[10010];\nint main() {\n\ta[0] = 0;\n\tfor (int i = 1; i <= 10000; i++) a[i] = a[i - 1] + i;\n\tint n;\n\twhile (cin >> n) {\n\t\tint ans = 0;\n\t\tfor (int i = 1;; i++) {\n\t\t\tif (n >= a[i])\n\t\t\t\tn -= a[i], ans++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	create int array a of length 10010\nset a[0] to 0\nfor i=1 to 10000 inclusive set a[i] = a[i - 1] + i\ncreate int n\nwhile read n\nans =0\nloop over i starting from i=1\nif n >= a[i]\nset n to n - a[i], increment ans\nelse\nbreak\nprint ans
int main() {\n\tlong long int n, i, l, s = 0;\n\tcin >> n;\n\tfor (l = 0;; l++) {\n\t\ts += l * (l + 1) / 2;\n\t\tif (s > n) { break; }\n\t}\n\tcout << l - 1 << endl;\n\treturn 0;\n}	n, i, l, s = long long integer with s = 0\nread n\nfor l = 0\ns = s + l * (l + 1) / 2\nif s > n, break loop\nprint l - 1
int main() {\n\tint n;\n\tcin >> n;\n\tint ans = 0, t = 1, q = 1;\n\tans = ans + t;\n\twhile (n >= ans) {\n\t\tq++;\n\t\tt = t + q;\n\t\tans = ans + t;\n\t}\n\tcout << q - 1 << endl;\n}	create int n\nread n\ncreate int ans, t and q, set ans to 0 and t, q to 1\nans = ans + t\nwhile n >= ans\nincrement q\nset t to t + q\nassign ans + t to ans\nprint q - 1
int main() {\n\tint n;\n\tcin >> n;\n\tint a = 0, c = 0, b = 0, i;\n\tfor (int i = 1; i <= n; i++) {\n\t\tb = (i * (i + 1)) / 2;\n\t\ta += b;\n\t\tif (a > n) break;\n\t\tc++;\n\t}\n\tcout << c << endl;\n\treturn 0;\n}	create int n\nread n\ncreate int a, c, b and i, set a, c and b to 0\nfor i=1 to n inclusive\nset b to (i * (i + 1)) / 2\nset a to a + b\nif a > n, break\nincrement c\nprint c
int n, c;\nint main() {\n\tcin >> n;\n\tfor (c = 1; c * (c + 1) * (c + 2) / 6 <= n; c++)\n\t\t;\n\tcout << c - 1 << '\n';\n}	create ints n and c\nread n\nfor c = 1, loop as long as c * (c + 1) * (c + 2) / 6 <= n\nend statement\nprint c - 1
int main() {\n\tint n;\n\tcin >> n;\n\tint i = 2;\n\twhile (n - i * (i + 1) / 2 > 0) {\n\t\tn -= i * (i + 1) / 2;\n\t\ti++;\n\t}\n\tcout << i - 1 << endl;\n}	let n be an integer\nget input in n\nlet i = 2 = int\nwhile n - i * (i + 1) / 2 is positive\ndecrement n by i * (i + 1) / 2\nincrement i\nprint i-1
int a[10010];\nint main() {\n\ta[1] = 1;\n\tlong long int sum, m;\n\tfor (int i = 2; i <= 10000; i++) a[i] = a[i - 1] + i;\n\twhile (cin >> m) {\n\t\tfor (int i = 1; i <= 10000; i++) {\n\t\t\tm -= a[i];\n\t\t\tif (m < a[i + 1]) {\n\t\t\t\tcout << i << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	a is a new array of integers with size 10010\nset a[1] to 1\ndeclare new long long int variables sum and m\nfor i from 2 to 10000 inclusive, change a[i] to a[i - 1] + i\nread m and loop further\nstart for loop from i = 1 to 10000 inclusive incrementing i\ndecrease m by a[i]\nif m is less than a[i + 1]\nprint i\nbreak the loop
"int main() {\n\tint n;\n\tint a = 0;\n\tint b = 1;\n\tint c = 0;\n\tcin >> n;\n\twhile (true) {\n\t\tfor (int i = 1; i <= b; i++) { a += i; }\n\t\tb++;\n\t\tif (a > n) { break; }\n\t\tc++;\n\t}\n\tcout << c << ""\n"";\n\treturn 0;\n}"	n = int\na = int with a = 0\nb = int with b = 1\nc = int with c = 0\nread n\nloop infinitely\nfor i = 1 to b inclusive increment a by i\nincrement b\nif a > n break\nincrement c\nprint c
int main() {\n\tint n, r = 0, t = 0;\n\tcin >> n;\n\tfor (int i = 1;; ++i) {\n\t\tr += i;\n\t\tt += r;\n\t\tif (t > n) {\n\t\t\tcout << (i - 1) << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}	n, r, t = int with r = 0 and t = 0\nread n\nfor i = 1\nincrement r by i\nincrement t by r\nif t > n\nprint i - 1\nbreak
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tlong long sum = 0;\n\t\tint i;\n\t\tfor (i = 1;; i++) {\n\t\t\tlong long current = 1LL * i * (i + 1) / 2;\n\t\t\tif (sum + current <= n)\n\t\t\t\tn -= sum + current;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tcout << i - 1 << endl;\n\t}\n\treturn 0;\n}	let int n\nread n and while n is truthy\nlet long long int sum = 0\nlet int i\nfor i = 1 loop indefinitely\nmake long long current = 1LL * i * (i + 1) / 2\nif sum + current is less than or equal to n\nset n to n - sum + current\nelse do\nbreak loop\nprint i - 1
long long cube;\nint main() {\n\tlong long res;\n\tcin >> cube;\n\tfor (long long i = 0; i * (i + 1) * (i + 2) <= 6 * cube; ++i) { res = i; }\n\tcout << res << endl;\n\treturn 0;\n}	cube = long long\nres = long long\nread cube\nfor i = 0 loop while i * (i + 1) * ( i + 2) <= 6 * cube set res to i\nprint res
int need(int a) {\n\tint b = 0;\n\tfor (int i = 1; i <= a; i++) { b += i; }\n\treturn b;\n}\nint main() {\n\tint a;\n\tcin >> a;\n\tint i = 0;\n\twhile (a >= need(i)) {\n\t\ta -= need(i);\n\t\ti++;\n\t}\n\tcout << i - 1 << endl;\n}	declare need with integer a as argument, returning integer\ndeclare b as integer = 0\nfor i = 1 to a inclusive, increment b by i\nreturn b from function\ndeclare integer a\nread a\ndeclare integer i with i = 0\nwhile a is greater than or equal to result of run need with i as argument\ndecrement a by need(1)\nincrement i\nprint i - 1 print newline
int main() {\n\tint n;\n\tcin >> n;\n\tint sum, i, b;\n\tsum = b = i = 1;\n\tfor (;;) {\n\t\tif (sum == n) {\n\t\t\tcout << i << endl;\n\t\t\tbreak;\n\t\t} else {\n\t\t\tif (sum > n) {\n\t\t\t\tcout << (i - 1) << endl;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t\tb += i;\n\t\t\t\tsum += b;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	n = int\nread n\nsum, i, b = int\nset sum, b, i to 1\nloop infinitely\nif sum is n\nprint i\nbreak\nelse\nif sum > n\nprint i - 1\nbreak\nelse\nincrement i\nincrement b by i\nincrement sum by b
int main() {\n\tint n;\n\tcin >> n;\n\tint sum = 0, height = 0;\n\twhile (sum <= n) {\n\t\theight++;\n\t\tsum += height * (height + 1) / 2;\n\t}\n\tcout << height - 1 << endl;\n\treturn 0;\n}	n=int\nread n\nsum and height=0\nwhile sum <= n\nincrement height\nadd height*(height+1)/2 to sum\nprint height-1
int main() {\n\tint n, sum, level;\n\twhile (cin >> n) {\n\t\tif (n == 1) {\n\t\t\tcout << '1' << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tsum = 1, level = 1;\n\t\tfor (int i = 2;; i++) {\n\t\t\tlevel += i;\n\t\t\tsum += level;\n\t\t\tif (sum == n) {\n\t\t\t\tcout << i << endl;\n\t\t\t\tbreak;\n\t\t\t} else if (sum > n) {\n\t\t\t\tcout << i - 1 << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	let n, sum, level be integers\nwhile read n\nif n is equal to 1\nprint 1 and newline\nproceed to next\nsum is equal to 1, level is equal to 1\nfor integer i is equal to 2 , the condition is always true, increment i by 1\nincrement level by i\nincrement sum by level\nif sum is equal to n\nprint i and newline\nstop\nelse if sum is greater than n\nprint i - 1 and newline\nstop
int main() {\n\tint n;\n\tcin >> n;\n\tif (n < 4) {\n\t\tcout << 1 << endl;\n\t\treturn 0;\n\t}\n\tint cnt = 0, m = 1, i = 1, sum = 0;\n\twhile (sum + i <= n) {\n\t\tsum = sum + i;\n\t\tcnt++;\n\t\tm++;\n\t\ti += m;\n\t}\n\tcout << cnt << endl;\n}	n=int\nread n\nif n<4\nprint 1\ncnt=0, m=1, i=1, sum=0\nwhile sum+i <= n\naddi to sum\nincrement cnt\nincrement m\nadd m to i\nprint cnt
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tint sum1[1000] = {0};\n\t\tint sum2[1000] = {1};\n\t\tint sum = 0;\n\t\tfor (int i = 1; i < 50; i++) {\n\t\t\tsum += i;\n\t\t\tsum1[i - 1] = sum;\n\t\t\tsum1[i] = sum1[i - 1] + i + 1;\n\t\t\tsum2[i] = sum2[i - 1] + sum1[i];\n\t\t\tif ((sum2[i - 1] <= n) && (sum2[i] > n)) cout << i << endl;\n\t\t}\n\t}\n}	let n be a integer\nread n\nthe 1000th element of sum1 is equal to 0\nthe 1000th element of sum2 is equal to 1\nlet sum be a integer with sum = 0\nfor i = 1 to 50 exclusive\nincrement sum by i\nsum1[i - 1] is equal to sum\nsum1[i] is equal to sum1[i - 1] + i + 1\nsum2[i] is equal to sum2[i - 1] + sum1[i]\nif sum2[i - 1] <= n and sum2[i] is greater than n, print i and newline
"int main() {\n\tint n;\n\tcin >> n;\n\tint cont = 0;\n\tint sumador = 1;\n\tint i = 1;\n\twhile (n > 0 && n >= sumador) {\n\t\tn = n - sumador;\n\t\tcont++;\n\t\ti++;\n\t\tsumador = sumador + i;\n\t}\n\tcout << cont << ""\n"";\n\treturn 0;\n}"	"declare integer n\nread n\ndeclare integer cont = 0\ndeclare integer sumador = 1\ndeclare i = 1 as integer\nwhile n is greater than 0 and n is greater than or equal to sumador\nlet n be n - sumador\nincrement cont\nincrement i\nlet sumador = sumador + 1\nprint cont, ""\n"""
int n, i;\nint main() {\n\tcin >> n;\n\tfor (i = 1; i <= 40; i++)\n\t\tif (i * (i + 1) * (i + 2) / 6 > n) break;\n\tcout << i - 1 << endl;\n}	declare int variables n and i\nread user input to n\nfor i from 1 to 40 inclusive incrementing i\nif i * (i + 1) * (i + 2) / 6 is greater than n, stop the loop\nprint i - 1 to the standard output
int main() {\n\tint n, tmp = 0, hitung = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\thitung += ((i * (i + 1)) / 2);\n\t\tif (hitung == n) {\n\t\t\ttmp = i;\n\t\t\tbreak;\n\t\t} else if (hitung > n) {\n\t\t\ttmp = i - 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << tmp << endl;\n}	declare integers n, tmp = 0, hitung = 0\nread n\nfor i = 1 to n inclusive\nincrement hitung by ((i * (i + 1)) / 2)\nif hitung is n\nset tmp to i\nbreak loop\nelse if hitung is greater than n\nset tmp to i - 1\nbreak loop\nprint tmp, newline
int length = 1e5;\nint main() {\n\tint n, i, sum = 0;\n\tcin >> n;\n\tvector<int> a(n + 1);\n\ta[0] = 0;\n\tfor (i = 1; i <= n; i++) { a[i] = a[i - 1] + i; }\n\tfor (i = 1; (sum <= n) && (i <= n); i++) { sum += a[i]; }\n\tif (n == 1) i++;\n\tcout << i - 2 << endl;\n\treturn 0;\n}	create integer length = 1e5\nlet ints n, i, and sum = 0\nread n\ncreate int vector a of size n + 1\nset a[0] to 0\nfor i = 1 to n, set a[i] to a[i - 1] + i\nfor i = 1 until sum <= n and i <= n are false, set sum to sum + a[i]\nif n is equal to 1, increase 1 by 1\nprint the result of i - 2
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tlong long sum = 0;\n\t\tint i;\n\t\tfor (i = 1;; i++) {\n\t\t\tlong long current = 1LL * i * (i + 1) / 2;\n\t\t\tif (sum + current <= n)\n\t\t\t\tn -= sum + current;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tcout << i - 1 << endl;\n\t}\n\treturn 0;\n}	declare new integer variable n\nread n and keep looping\ndeclare new long long variable sum with value 0\ndeclare new integer called i\nset i to 1 and increment it in a for loop\ndeclare new long long variable current with value 1LL * i * (i + 1) / 2\nif sum + current <= n\nsubtract sum + current from n\nelse\nbreak the loop\nprint i - 1 to the standard output
int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tlong long sum = 0, prev = 0, x = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tprev += sum;\n\t\t\tsum += i;\n\t\t\tif (sum + prev <= n)\n\t\t\t\tx++;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tcout << x << endl;\n\t}\n\treturn 0;\n}	create integer n\nwhile get n do the following till valid input\ncreate long long sum, prev, x and set them to 0\nfor integer i=1 to n with increment i\nadd sum to prev\nadd i to sum\nif sum+prev less than or equal to n\nincrement x\nelse do the following\nbreak the loop\nprint x
int inum(int *a, int k, int i) {\n\tfor (int l = 1; l < k; l++) {\n\t\tif (a[l - 1] != -1) {\n\t\t\ta[l] = a[l - 1] + (l + 1);\n\t\t} else {\n\t\t\ta[l] = inum(a, l, i) + l + 1;\n\t\t}\n\t}\n\treturn *(a + (k - 1));\n}\nint isum(int i) {\n\tint arr[i], a[i];\n\tarr[i] = {-1};\n\ta[i] = {-1};\n\ta[0] = 1;\n\tarr[0] = 1;\n\tif (i == 1) {\n\t\treturn i;\n\t} else {\n\t\tint j = 1;\n\t\tfor (j; j < i; j++) {\n\t\t\tif (arr[j - 1] != -1) {\n\t\t\t\tarr[j] = arr[j - 1] + inum(a, j + 1, i);\n\t\t\t} else {\n\t\t\t\tarr[j] = isum(j) + (j + 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn *(arr + (i - 1));\n}\nint main() {\n\tint n, i = 1;\n\tcin >> n;\n\twhile (isum(i) <= n) { i++; }\n\tcout << (i - 1) << endl;\n\treturn 0;\n}	in function inum taking pointer to an int a, int k, int i returning int\nfor l = 1 to k\nif a[l - 1] is not 1\nset a[l] to a[l - 1] + (l + 1)\nelse\nset a[l] to (inum of a, l, i) + l + 1\nreturn value of (a + (k - 1))\nin function isum taking int i returning int\narr, a = int array of size i each\nset arr[i] to -1\nset a[i] to -1\nset a[0] to 1\nset arr[0] to 1\nif i is 1\nreturn i\nelse\nj = int with j = 1\nfor j to i\nif arr[j - 1] is not -1\nset arr[j] to arr[j - 1] + inum of a, j + 1, i\nelse\nset arr[j] to isnum of j + j + 1\nreturn value of arr + (i - 1)\nn, i = int with i = 1\nread n\nloop while isnum of i <= n increment i\nprint i - 1
int main() {\n\tlong long int n, cnt, sum, ans, i;\n\tcin >> n;\n\tcnt = 0, ans = 0, sum = 0;\n\tfor (i = 1; i <= 10000; i++) {\n\t\tans += i;\n\t\tsum += ans;\n\t\tif (sum > n) break;\n\t\tcnt++;\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}	declare n, cnt, sum, ans, i as long long integers\nread n\nlet cnt be 0, ans be 0, sum be 0\nfor i = 1 to 10000 inclusive\nincrement ans by i\nincrement sum by ans\nif sum is greater than n, break loop\nincrement cnt\nprint cnt print newline
int main() {\n\tint n;\n\tint a[100];\n\twhile (cin >> n) {\n\t\tint i = 2, sum = 0;\n\t\tint cs = 0;\n\t\ta[1] = 1;\n\t\tfor (i = 2; sum < n; i++) {\n\t\t\ta[i] = i + a[i - 1];\n\t\t\tsum += a[i];\n\t\t\tcs = i - 1;\n\t\t}\n\t\tcout << cs << endl;\n\t}\n}	create integer n\ncreate integer array a with dimension 100\nwhile get n do till valid input\ncreate integer i, sum with i=2, sum=0\ncreate integer cs with cs=0\nset a[1] to 1\nfor integer i=2 with increment i till sum less than n\nset a[i] to i + a[i-1]\nadd a[i] to sum\nset cs to i-1\nprint cs
int main() {\n\tint n, i = 0, l = 0;\n\tcin >> n;\n\twhile (l <= n) {\n\t\ti++;\n\t\tl += (i * (i + 1)) / 2;\n\t}\n\tcout << i - 1 << endl;\n\treturn 0;\n}	create integer variables n, i and l with i and l = 0\nread standard input to n\nwhile l <= n\nincrement i by one\nchange l to sum of l and (i * (i + 1)) / 2\nprint i - 1
long long cum[100 + 2];\nint main() {\n\tfor (int i = 1; i <= 100; i++) cum[i] = i;\n\tfor (int i = 2; i <= 100; i++) { cum[i] += cum[i - 1]; }\n\tint n;\n\tcin >> n;\n\tlong long sum = 0;\n\tint Count = 0;\n\tint i;\n\tfor (i = 1; sum <= n; i++) {\n\t\tsum += cum[i];\n\t\tif (sum > n)\n\t\t\tbreak;\n\t\telse\n\t\t\tCount++;\n\t}\n\tcout << Count << endl;\n}	cum = long long array of size 102\nfor i = 1 to 100 inclusive set cum[i] to i\nfor i = 2 to 100 inclusive increment cum[i] by cum[i - 1]\nn = int\nread n\nsum = long long with sum = 0\nCount = int with Count = 0\ni = int\niterate i starting at 1 while sum <= n\nincrement sum by cum[i]\nif sum > n\nbreak\nelse\nincrement Count\nprint Count
int main() {\n\tint sum = 1;\n\tint levels = 1;\n\tint counter = 0;\n\tint n;\n\tcin >> n;\n\tfor (int i = 2; sum <= n; i++) {\n\t\tcounter++;\n\t\tlevels = levels + i;\n\t\tsum = sum + levels;\n\t}\n\tcout << counter << endl;\n}	create int sum = 1\nmake int levels = 1\nmake integer counter = 0\nlet int n\nread n\nfor i = 2 to n\nincrement counter\nset levels to levels + i\nset sum to sum + levels\nprint counter
int main() {\n\tlong long n;\n\twhile (cin >> n) {\n\t\tint i;\n\t\tlong long t = 0;\n\t\tlong long k = 0;\n\t\tint last;\n\t\tfor (i = 1;; i++) {\n\t\t\tt += i;\n\t\t\tk += t;\n\t\t\tif (n >= k) {\n\t\t\t\tlast = i;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (n == 0) { last = 0; }\n\t\tcout << last << endl;\n\t}\n}	declare long long n\nwhile read n is true\ndeclare i as integer\ndeclare long long t = 0\ndeclare long long k = 0\ndeclare last as integer\nfor i = 1, incrementing i\nincrement t by i\nincrement k by t\nif n is greater than or equal to k\nlet last be i\nelse\nbreak loop\nif n is 0, let last be 0\nprint last, newline
"int check(string s, int i, int j) {\n\tint l = i, r = j;\n\twhile (l < r) {\n\t\tif (s[l] == s[r]) {\n\t\t\tl++;\n\t\t\tr--;\n\t\t\tcontinue;\n\t\t} else\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\nint main() {\n\tstring s;\n\tcin >> s;\n\tint i, n = s.length(), j;\n\ti = 0;\n\tj = n - 1;\n\twhile (i < j) {\n\t\tif (s[i] != s[j]) {\n\t\t\tif (i + 1 == j) {\n\t\t\t\ts.insert(s.begin() + j + 1, s[i]);\n\t\t\t\tcout << s << endl;\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tif (check(s, i + 1, j)) {\n\t\t\t\t\ts.insert(s.begin() + j + 1, s[i]);\n\t\t\t\t\tcout << s << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else if (check(s, i, j - 1)) {\n\t\t\t\t\ts.insert(s.begin() + i, s[j]);\n\t\t\t\t\tcout << s << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tcout << ""NA"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\tif (s.length() % 2 == 0) {\n\t\ts.insert(s.begin() + n / 2, 'a');\n\t\tcout << s << endl;\n\t\treturn 0;\n\t} else {\n\t\ts.insert(s.begin() + n / 2 + 1, s[n / 2]);\n\t\tcout << s << endl;\n\t\treturn 0;\n\t}\n}"	"integer function check with string argument s and integer arguments i and j\ndeclare integer variables l = i and r = j\nwhile l is less than r\nif s[l] = s[r]\nincrement l\ndecrease r by one\nskip the rest of the loop\nelse\nreturn 1\ndeclare string variable s\nread s\ni, n and j are integers where n = length of s\nset value of i to 0\nset j to n - 1\nwhile i is less than j\nif s[i] != s[j]\nif i + 1 = j\ninsert s[i] at position s.begin() + j + 1 of s\nprint s\nelse\nif check(s, i + 1, j) is 1\ninsert s[i] at position s.begin() + j + 1 of s\nprint s\nelse if check(s, i, j - 1) is 1\ninsert s[j] at position s.begin() + i of s\nprint s\nelse\nprint ""NA""\nelse\nincrease i\ndecrease j by one\nif length of s is even\npush character 'a' to s at position s.begin() + n / 2\nprint s\nelse\npush character aat s[n / 2] to s at position s.begin() + n / 2 + 1\nprint s"
"char s1[15];\nchar s2[15];\nchar s[15];\nint main() {\n\tint f = 0;\n\tcin >> s1;\n\tint n = strlen(s1);\n\tbool flag = 0;\n\tfor (int i = 0; i < 26; i++) {\n\t\tfor (int j = 0; j <= n; j++) {\n\t\t\tf = 0;\n\t\t\tfor (int k = 0; k < j; k++) { s[k] = s1[k]; }\n\t\t\ts[j] = char('a' + i);\n\t\t\tfor (int k = j + 1; k <= n; k++) { s[k] = s1[k - 1]; }\n\t\t\tfor (int i = 0, j = n; i < j; i++, j--) {\n\t\t\t\tif (s[i] != s[j]) {\n\t\t\t\t\tf++;\n\t\t\t\t\tif (f >= 1) { break; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f == 0) {\n\t\t\t\tfor (int i = 0; i <= n; i++) { cout << s[i]; }\n\t\t\t\tcout << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""NA"" << endl;\n\treturn 0;\n}"	"let s1 be character array with size 15\nset s2 be character array with size 15\nset s be character array with size 15\ndeclare integer variable f = 0\nread s1\ndeclare integer variable n = length of s1\ncreate boolean flag = 0\nfor i = 0 to 26 exclusive\nfor j = 0 to n inclusive\nset f to 0\nfor k = 0 to j exclusive, set s[k] to s1[k]\ns[j] = char('a' + i)\nfor k = j + 1 to n inclusive, set s[k] to s1[k - 1]\nfor i = 0, j = n while i < j increase i and decrease j\nif s[i] != s[j]\nincrement f\nif f >= 1, break\nif f = 0\nprint n elements of s\nprint new line\nprint ""NA"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint pntr = s.size() - 1;\n\tchar c;\n\tfor (int i = 0; i < s.size() / 2; i++) {\n\t\tif (s[i] != s[pntr]) {\n\t\t\tbool b = true;\n\t\t\tint pntr2 = pntr;\n\t\t\tfor (int j = i + 1; j < (s.size() + 1) / 2; j++)\n\t\t\t\tif (s[j] != s[pntr2]) {\n\t\t\t\t\tb = false;\n\t\t\t\t} else\n\t\t\t\t\tpntr2--;\n\t\t\tif (b) {\n\t\t\t\tc = s[i];\n\t\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\t\tcout << s[j];\n\t\t\t\t\tif (j == pntr) cout << c;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tpntr2 = pntr - 1;\n\t\t\tb = true;\n\t\t\tfor (int j = i; j < (s.size() + 1) / 2; j++)\n\t\t\t\tif (s[j] != s[pntr2]) {\n\t\t\t\t\tb = false;\n\t\t\t\t} else\n\t\t\t\t\tpntr2--;\n\t\t\tif (b) {\n\t\t\t\tc = s[pntr];\n\t\t\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\t\t\tif (j == i) cout << c;\n\t\t\t\t\tcout << s[j];\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tcout << ""NA"" << endl;\n\t\t\treturn 0;\n\t\t} else\n\t\t\tpntr--;\n\t}\n\tif (s.size() % 2) {\n\t\tfor (int i = 0; i < s.size(); i++)\n\t\t\tif (i == (s.size()) / 2)\n\t\t\t\tcout << s[i] << s[i];\n\t\t\telse\n\t\t\t\tcout << s[i];\n\t\tcout << endl;\n\t} else {\n\t\tfor (int i = 0; i < s.size(); i++)\n\t\t\tif (i == (s.size() / 2))\n\t\t\t\tcout << ""a"" << s[i];\n\t\t\telse\n\t\t\t\tcout << s[i];\n\t\tcout << endl;\n\t}\n}"	"declare string s\nread s\ndeclare integer variable pntr = length of s - 1\ndeclare character c\nfor i = 0 to length of s / 2 exclusive\nif s[i] != s[pntr]\ndeclare boolean b = true\ndeclare integer variable pntr2 = pntr\nfor integer j = i + 1 to (length of s + 1) / 2 exclusive\nif s[j] != s[pntr2]\nset b to false\nelse\ndecrease pntr2\nif b is true\nassign value of s[i] to c\nfor integer j = 0 to length of s exclusive\nprint s[j]\nif j = pntr print c\nprint new line\npntr2 = pntr - 1\nset value of b to true\nfor integer j = i to (length of s + 1) / 2 exclusive\nif s[j] != s[pntr2]\nb = false\nelse\ndecrement pntr2\nif b\nassign value of s[pntr] to c\nfor integer j = 0 to length of s exclusive\nif j = i\nprint s[j]\nprint new line\nprint ""NA""\nelse\ndecrement pntr\nif length of s is an even number\nfor i = 0 to length of s exclusive\nif i = (length of s) / 2\nprint s[i] and s[i]\nelse\nprint s[i]\nprint new line\nelse\nfor integer i = 0 to length of s exclusive\nif i = (length of s / 2)\nprint ""a"" and s[i]\nelse\nprint s[i]\nprint new line"
"string s;\nint main() {\n\tcin >> s;\n\tfor (char c = 'a'; c <= 'z'; c++)\n\t\tfor (int i = 0; i <= s.size(); i++) {\n\t\t\tstring t = s;\n\t\t\tt.insert(i, 1, c);\n\t\t\tstring k = t;\n\t\t\treverse(k.begin(), k.end());\n\t\t\tif (k == t) {\n\t\t\t\tcout << t << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tcout << ""NA"" << endl;\n\treturn 0;\n}"	"declare string variable s\nread s\nfor char = 'a' to 'z' inclusive going alphabetically\nfor integer i = 0 to length of s inclusive\ndeclare string t = s\ninsert character c to the t at position i\ncreate string k = t\nreverse k\nif k = t\nprint t\nprint ""NA"""
"int main() {\n\tstring s;\n\tcin >> s;\n\tint flag = -1;\n\tint sz = s.size();\n\tfor (int i = 0; i < 26; i++) {\n\t\tstring a;\n\t\ta.push_back('a' + i);\n\t\ta += s;\n\t\tfor (int j = 0; j < sz; j++) {\n\t\t\tstring b = a;\n\t\t\treverse(b.begin(), b.end());\n\t\t\tif (a == b) {\n\t\t\t\tcout << a << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tswap(a[j], a[j + 1]);\n\t\t}\n\t\tstring b = a;\n\t\treverse(b.begin(), b.end());\n\t\tif (a == b) {\n\t\t\tcout << a << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << ""NA"" << endl;\n\treturn 0;\n}"	"create string s\nread s\ncreate integer flag with flag = -1\ncreate integer sz with sz = size of s\nfor i = 0 to 26 exclusive\ncreate string a\nadd element ( 'a' + i ) to end of a\nincrement a by s\nfor j = 0 to sz exclusive\ncreate string b with b = 0\nreverse element order from beginning of b to end of b\nif a is b\nprint a print newline\nswap element values from a[j] to a[j+1]\ncreate string b with b = a\nreverse element order from beginning of b to end of b\nif a is b\nprint a print newline\nprint ""NA"" print newline"
"int mp[1010][1010];\nint main() {\n\tint m, n, k;\n\tcin >> m >> n >> k;\n\tmemset(mp, 0, sizeof(mp));\n\tint flog = 0;\n\tint ans = 0;\n\tfor (int i = 1; i <= k; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tmp[x][y] = 1;\n\t\tif (flog == 0) {\n\t\t\tif (mp[x - 1][y] && mp[x - 1][y - 1] && mp[x][y - 1]) flog = 1;\n\t\t\tif (mp[x + 1][y] && mp[x + 1][y + 1] && mp[x][y + 1]) flog = 1;\n\t\t\tif (mp[x - 1][y] && mp[x - 1][y + 1] && mp[x][y + 1]) flog = 1;\n\t\t\tif (mp[x + 1][y] && mp[x + 1][y - 1] && mp[x][y - 1]) flog = 1;\n\t\t\tif (flog) {\n\t\t\t\tcout << i << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""0"" << endl;\n}"	"create 2d integer array mp with size 1010 by 1010\ncreate integers m, n, k\nread m read n read k\nset bytes from m to size of m to value 0\ncreate integer flog with flag = 0\ncreate integer ans with ans = 0\nfor i = 1 to k inclusive\ncreate integers x, y\nread x read y\nset mp[x][y] to 1\nif flag is 0\nif (mp[x - 1][y] and mp[x - 1][y - 1] and mp[x][y - 1]), set flog to 1\nif (mp[x + 1][y] and mp[x + 1][y + 1] and mp[x][y + 1]), set flog to 1\nif (mp[x - 1][y] and mp[x - 1][y + 1] and mp[x][y + 1]), set flog to 1\nif (mp[x + 1][y] and mp[x + 1][y - 1] and mp[x][y - 1]), set flog to 1\nif flog is true\nprint i print newline\nprint ""0"" print newline"
"int mp[1010][1010];\nint main() {\n\tint m, n, k;\n\tcin >> m >> n >> k;\n\tmemset(mp, 0, sizeof(mp));\n\tint flog = 0;\n\tint ans = 0;\n\tfor (int i = 1; i <= k; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tmp[x][y] = 1;\n\t\tif (flog == 0) {\n\t\t\tif (mp[x - 1][y] && mp[x - 1][y - 1] && mp[x][y - 1]) flog = 1;\n\t\t\tif (mp[x + 1][y] && mp[x + 1][y + 1] && mp[x][y + 1]) flog = 1;\n\t\t\tif (mp[x - 1][y] && mp[x - 1][y + 1] && mp[x][y + 1]) flog = 1;\n\t\t\tif (mp[x + 1][y] && mp[x + 1][y - 1] && mp[x][y - 1]) flog = 1;\n\t\t\tif (flog) {\n\t\t\t\tcout << i << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""0"" << endl;\n}"	"mp = two dimensional int array of sizes 1010 and 1010\nm, n, k = int\nread m then n then k\nset all values of mp to 0\nflog = int with flog = 0\nans = int with ans = 0\nfor i = 1 to k inclusive\nx, y = int\nread x then y\nset mp[x][y] to 1\nif flog is 0\nif mp[x - 1][y] is not 0 and mp[x - 1][y - 1] is not 0 and mp[x][y - 1] is not 0 then set flog to 1\nif mp[x + 1][y] is not 0 and mp[x + 1][y + 1] is not 0 and mp[x][y + 1] is not 0 then set flog to 1\nif mp[x - 1][y] is not 0 and mp[x - 1][y + 1] is not 0 and mp[x][y + 1] is not 0 then set flog to 1\nif mp[x + 1][y] is not 0 and mp[x + 1][y - 1] is not 0 and mp[x][y - 1] is not 0 then set flog to 1\nif flog is not 0\nprint i\nprint ""0"""
"const int OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 1e3 + 5, mod = 1e9 + 7;\nbool black[N][N];\nbool check(int x, int z) {\n\tif (black[x + 1][z] && black[x + 1][z + 1] && black[x][z + 1]) return 1;\n\tif (black[x][z - 1] && black[x + 1][z - 1] && black[x + 1][z]) return 1;\n\tif (black[x][z - 1] && black[x - 1][z] && black[x - 1][z - 1]) return 1;\n\tif (black[x][z + 1] && black[x - 1][z] && black[x - 1][z + 1]) return 1;\n\treturn 0;\n}\nint main() {\n\tint n, m, k;\n\tcin >> n >> m >> k;\n\tint ans = 0;\n\tint x, z;\n\tfor (int i = 0; i < k; ++i) {\n\t\tcin >> x >> z;\n\t\tblack[x][z] = 1;\n\t\tif (!ans) {\n\t\t\tif (check(x, z)) ans = i + 1;\n\t\t}\n\t}\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	let OO, NegOO, N, mod be constant integers with OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 1e3 + 5, mod = 1e9 + 7\nblack = 2d boolean array of N rows and N columns\nboolean check of int x, int z\nif black[x + 1][z] and black[x + 1][z + 1] and black[x][z + 1], return the value 1\nif black[x][z - 1] and black[x + 1][z - 1] and black[x + 1][z], return the value 1\nif black[x][z - 1] and black[x - 1][z] and black[x - 1][z - 1], return the value 1\nif black[x][z + 1] and black[x - 1][z] and black[x - 1][z + 1], return the value 1\nlet n, m, k be integers\nread n, m, k\nlet ans be a integer with ans = 0\nlet x, z be integers\nfor i = 0 to k exclusive\nread x, z\nset black[x][z] to 1\nif not ans\nif check ( x, z ) , ans is equal to i + 1\nprint ans and newline
long long n, m, i, a[1007][1007], k, v1, v2, f = 0;\nint main() {\n\tcin >> n >> m >> k;\n\tfor (i = 1; i <= k; i++) {\n\t\tcin >> v1 >> v2;\n\t\ta[v1][v2] = 1;\n\t\tif ((a[v1][v2] + a[v1 + 1][v2] + a[v1 + 1][v2 + 1] + a[v1][v2 + 1]) == 4) {\n\t\t\tcout << i << endl;\n\t\t\tf = 1;\n\t\t\tbreak;\n\t\t}\n\t\tif ((a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 + 1] + a[v1 - 1][v2 + 1]) == 4) {\n\t\t\tcout << i << endl;\n\t\t\tf = 1;\n\t\t\tbreak;\n\t\t}\n\t\tif ((a[v1][v2] + a[v1][v2 - 1] + a[v1 + 1][v2] + a[v1 + 1][v2 - 1]) == 4) {\n\t\t\tcout << i << endl;\n\t\t\tf = 1;\n\t\t\tbreak;\n\t\t}\n\t\tif ((a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 - 1] + a[v1 - 1][v2 - 1]) == 4) {\n\t\t\tcout << i << endl;\n\t\t\tf = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (f == 0) cout << 0 << endl;\n\treturn 0;\n}	declare long longs n, m, i, k, v1, v2 and f where f = 0, and 2d long long array a with size 1007 by 1007\nread n, m and k\nfor i from 1 to k inclusive\nread v1 and v2\nchange a[v1][v2] to 1\nif (a[v1][v2] + a[v1 + 1][v2] + a[v1 + 1][v2 + 1] + a[v1][v2 + 1]) = 4\nprint i\nassign 1 to f\nbreak the loop\nif a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 + 1] + a[v1 - 1][v2 + 1] = 4\nprint i\nset f to 1\nstop the loop\nif a[v1][v2] + a[v1][v2 - 1] + a[v1 + 1][v2] + a[v1 + 1][v2 - 1] = 4\nprint i\nset f to 1\nstop the loop\nif a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 - 1] + a[v1 - 1][v2 - 1] = 4\nprint i\nchange f to 1\nbreak the loop\nif f is equal to 0, print 0
"const int N = 1e5 + 5;\nint x, y, arr[1005][1005] = {};\nbool solve(int st1, int st2) {\n\tfor (int z = st1; z <= st1 + 1; ++z) {\n\t\tfor (int v = st2; v <= st2 + 1; ++v) {\n\t\t\tif (!arr[x + z][y + v]) return false;\n\t\t}\n\t}\n\treturn true;\n}\nint main() {\n\tint n, m, k;\n\tcin >> n >> m >> k;\n\tfor (int i = 1; i <= k; ++i) {\n\t\tcin >> x >> y;\n\t\tarr[x][y] = 1;\n\t\tfor (int t = -1; t <= 0; ++t) {\n\t\t\tfor (int u = -1; u <= 0; ++u) {\n\t\t\t\tif (solve(t, u)) return cout << i << ""\n"", 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn cout << 0 << ""\n"", 0;\n\treturn 0;\n}"	"create constant integer N with N = 1e5 + 5\ncreate integers x, y, create integer array arr with size 1005 by 1005\ndeclare solve with integers st1, st2 as arguments, returning boolean\nfor z = st1 to st1 + 1 inclusive\nfor v = st2 to st2 + 2 inclusive\nif not arr[x+z][y+v], return false from function\nreturn true from function\ncreate integers n, m, k\nread n read m read k\nfor i = 1 to k inclusive\nread x read y\nset arr[x][y] to 1\nfor t = -1 to 0 inclusive\nfor u = -1 to 0 inclusive\nif result of run solve with t, u as arguments is true, return print i print ""\n"", 0 from function\nreturn print 0 print ""\n"", 0 from function"
int a[1005][1005], vis[1005][1005];\nint ans;\nint n, m;\nint fang[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};\nvoid dfs(int x, int y) {\n\tans++;\n\tfor (int i = 0; i < 4; ++i) {\n\t\tint nx = x + fang[i][0];\n\t\tint ny = y + fang[i][1];\n\t\tif (nx > 0 && nx <= n && ny > 0 && ny <= m && a[nx][ny] && !vis[nx][ny]) {\n\t\t\tvis[nx][ny] = 1;\n\t\t\tdfs(nx, ny);\n\t\t}\n\t}\n}\nint main() {\n\tint k, i, j;\n\twhile (cin >> n >> m >> k) {\n\t\tans = 0;\n\t\tint x, y;\n\t\tmemset(a, 0, sizeof(a));\n\t\tint res = 0;\n\t\tfor (i = 1; i <= k; ++i) {\n\t\t\tcin >> x >> y;\n\t\t\ta[x][y] = 1;\n\t\t\tif (!res) {\n\t\t\t\tans++;\n\t\t\t\tif (a[x][y] && a[x + 1][y] && a[x][y + 1] && a[x + 1][y + 1]) res = 1;\n\t\t\t\tif (a[x][y] && a[x + 1][y] && a[x][y - 1] && a[x + 1][y - 1]) res = 1;\n\t\t\t\tif (a[x][y] && a[x - 1][y] && a[x][y + 1] && a[x - 1][y + 1]) res = 1;\n\t\t\t\tif (a[x][y] && a[x - 1][y] && a[x][y - 1] && a[x - 1][y - 1]) res = 1;\n\t\t\t}\n\t\t}\n\t\tif (!res) ans = 0;\n\t\tcout << ans << endl;\n\t}\n}	create 2d ingeger arrays a, vis, with a size 1005 by 1005, vis size 1005 by 1005\ncreate integer ans\ncreate integers n, m\ncreate 2d integer array fang with size 4 by 2 with fang = {1, 0, -1, 0, 0, 1, 0, -1}\ndeclare dfs with integers x, y as arguments, returning void\nincrement ans\nfor i = 0 to 4 exclusive\ncreate integer nx with nx = x + fang[i][0]\ncreate integer ny with ny = y + fang[i][1]\nif nx is greater than 0 and nx is less than or equal to n and ny is greater than 0 and ny is less than or equal to m and a[nx][ny] and not vis[nx][ny]\nset vis[nx][ny] to 1\nrun dfs with nx, ny as arguments\ncreate integers k, i, j\nwhile read n read m read k\nset ans to 0\ncreate integers x, y\nset bytes from a to size of a to value 0\ncreate integer res with res = 0\nfor i = 1 to k inclusive\nread x read y\nset a[x][y] to 1\nif not res\nincrement ans\nif (a[x][y] and a[x + 1][y] and a[x][y + 1] and a[x + 1][y + 1]),set res to 1\nif (a[x][y] and a[x + 1][y] and a[x][y - 1] and a[x + 1][y - 1]),set res to 1\nif (a[x][y] and a[x - 1][y] and a[x][y + 1] and a[x - 1][y + 1]),set res to 1\nif (a[x][y] and a[x - 1][y] and a[x][y - 1] and a[x - 1][y - 1]),set res to 1\nif not res, set ans to 0\nprint ans print newline
bool a[1005][1005];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint k;\n\tcin >> k;\n\tfor (int c = 1; c <= k; c++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\ta[x][y] = true;\n\t\tif (a[x][y] && a[x + 1][y] && a[x][y + 1] && a[x + 1][y + 1]) {\n\t\t\tcout << c << endl;\n\t\t\treturn 0;\n\t\t} else if (a[x][y] && a[x - 1][y] && a[x][y + 1] && a[x - 1][y + 1]) {\n\t\t\tcout << c << endl;\n\t\t\treturn 0;\n\t\t} else if (a[x][y] && a[x - 1][y] && a[x][y - 1] && a[x - 1][y - 1]) {\n\t\t\tcout << c << endl;\n\t\t\treturn 0;\n\t\t} else if (a[x][y] && a[x + 1][y] && a[x][y - 1] && a[x + 1][y - 1]) {\n\t\t\tcout << c << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << 0 << endl;\n\treturn 0;\n}	create bool a[1005][1005]\ncreate int n and m\nread n, m\ncreate int k\nread k\nfor c=1 to k inclusive\ncreate int x and y\nread x, y\nset a[x][y] = true\nif a[x][y], a[x + 1][y], a[x][y + 1], a[x + 1][y + 1] are true\nprint c\nelse if a[x][y] and a[x - 1][y] and a[x][y + 1] and a[x - 1][y + 1] are not false\nprint c and a newline\nelse if a[x][y], a[x - 1][y], a[x][y - 1], a[x - 1][y - 1] = true\nprint c\nelse if a[x][y] and a[x + 1][y] and a[x][y - 1] and a[x + 1][y - 1] different from false\nprint c\nprint 0 and a newline
"const int N = 1e3 + 5;\nbool mark[N][N];\nint main() {\n\tint n, m, k;\n\tcin >> n >> m >> k;\n\tfor (int i = 0; i < k; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tmark[--x][--y] = true;\n\t\tfor (int a = x - 1; a <= x; a++)\n\t\t\tfor (int b = y - 1; b <= y; b++)\n\t\t\t\tif (~min(a, b) && a + 1 < n && b + 1 < m) {\n\t\t\t\t\tbool bad = true;\n\t\t\t\t\tfor (int c = 0; c < 4; c++) bad &= mark[a + (c & 1)][b + (c >> 1 & 1)];\n\t\t\t\t\tif (bad) return cout << i + 1 << endl, 0;\n\t\t\t\t}\n\t}\n\tcout << ""0\n"";\n\treturn 0;\n}"	"create constant integer N with N = 1e3 + 5\ncreate 2d boolean array mark with size N by N\ncreate integers n, m, k\nread n read m read k\nfor i = 0 to k exclusive\ncreate integers x, y\nread x read y\nset mark[decrement x][decrement y] to true\nfor a = x - 1 to x inclusive\nfor b = y - 1 to y inclusive\nif bitwise not minimum of (a and b) and a + 1 is less than n and b + 1 is less than m\ncreate boolean bad with bad = true\nfor c = 0 to 4 exclusive, set bad to bad bitwise and mark[ a + ( c bitwise and 1 ) ][ b + ( c bitshift right 1 bitwise and 1) ]\nif bad, return print i + 1 print newline, 0\nprint ""0\n"""
"int main() {\n\tint n;\n\tstring str, s, ans, min = ""z"";\n\tcin >> str >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s;\n\t\tif (s == str) {\n\t\t\tmin = str;\n\t\t\tbreak;\n\t\t}\n\t\tif ((s.find(str) == 0) && (s < min)) min = s;\n\t}\n\tif (min == ""z"")\n\t\tcout << str << endl;\n\telse\n\t\tcout << min << endl;\n\treturn 0;\n}"	"create integer n\ncreate strings str, s, ans, min with min = ""z""\nread str read n\nfor i = 0 to n exclusive\nread s\nif s is str\nset min to str\nbreak loop\nif first index of str in s is 0 and s is less than min, set min to s\nif min is ""z""\nprint str print newline\nelse\nprint min print newline"
"int main() {\n\tstring str, str2, ans = ""a"";\n\tint n, flag = 0;\n\tcin >> str;\n\tint len = str.length();\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> str2;\n\t\tflag = 0;\n\t\tfor (int j = 0; j < len; j++) {\n\t\t\tif (str[j] != str2[j]) {\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag == 1) { continue; }\n\t\tif (ans == ""a"") {\n\t\t\tans = str2;\n\t\t} else if (str2 < ans) {\n\t\t\tans = str2;\n\t\t}\n\t}\n\tif (ans != ""a"") {\n\t\tcout << ans << endl;\n\t} else {\n\t\tcout << str << endl;\n\t}\n\treturn 0;\n}"	create string str, str2, ans, set ans to a\ncreate int n and flag, assign 0 to flag\nread str\nset len to length of str\nread n\nfor i=0 to n exclusive\nread str2\nset flag to 0\nfor j=0 to len\nif str[j] different from str2[j]\nflag =1\nbreak\nif flag=1, continue\nif ans equal to a\nset ans to str2\nelse if str2<ans\nset ans = str2\nif ans different from a\nprint ans\nelse\nprint str and a newline
"string str, s[105];\nvector<string> s1;\nint n;\nint main() {\n\tcin >> str;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> s[i];\n\tsort(s, s + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i].find(str) == 0) s1.push_back(s[i]);\n\t}\n\tif (s1.size())\n\t\tcout << s1[0] << ""\n"";\n\telse\n\t\tcout << str << ""\n"";\n\treturn 0;\n}"	let str, s be strings with s = array of strings of length 105\ncreate a vector of strings s1\nlet n be a integer\nread str\nread n\nfor i = 0 to n exclusive, read s[i]\nsort the values s and s + n\nfor i = 0 to n exclusive\nif s[i].find(str) is equal to 0 , push_back s[i] in s1\nif length of s1\nprint s1[0] and newline\nelse do the following\nprint str and newline
int main() {\n\tstring str;\n\tcin >> str;\n\tint len = str.length();\n\tint n;\n\tcin >> n;\n\tvector<string> vec;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring temp;\n\t\tcin >> temp;\n\t\tint pos = temp.find(str);\n\t\tif (pos == 0) {\n\t\t\tstring suffix = temp.substr(len);\n\t\t\tvec.push_back(suffix);\n\t\t}\n\t}\n\tif (vec.size() == 0) {\n\t\tcout << str << endl;\n\t} else {\n\t\tsort(vec.begin(), vec.end());\n\t\tcout << (str + vec[0]) << endl;\n\t}\n\treturn 0;\n}	str = string\nread str\nlen = int with len = length of str\nn = int\nread n\nvec = string vector\nfor i = 0 to n\ntemp = string\nread temp\npos = int with pos = index of str in temp\nif pos is 0\nsuffix = string with suffix = substr of len on temp\nappend suffix to vec\nif size of vec is 0\npritn str\nelse\nsort vec\nprint str + vec[0]
int main() {\n\tstring s;\n\tcin >> s;\n\tint n;\n\tcin >> n;\n\tvector<string> vs;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring ss;\n\t\tcin >> ss;\n\t\tvs.push_back(ss);\n\t}\n\tsort(vs.begin(), vs.end());\n\tint len = s.size();\n\tfor (int i = 0; i < n; i++)\n\t\tif (vs[i].substr(0, len) == s) {\n\t\t\tcout << vs[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\tcout << s << endl;\n\treturn 0;\n}	s = string\nread s\nn = integer\nread n\nvs = vector string\nfor i = 0 to n exclusive\nss = string\nread ss\nappend ss in vs\nsort vs.begin() and vs.end()\nlen = integer with len = s.size()\nfor i = 0 to n exclusive\nif vs[i].substr(0, len) is s\nprint vs[i]\nprint s
int main() {\n\tstring str, s[101];\n\tint n;\n\tcin >> str;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> s[i];\n\tsort(s + 1, s + n + 1);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (s[i].substr(0, str.length()) == str) {\n\t\t\tcout << s[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\tcout << str << endl;\n\treturn 0;\n}	let str be a string , s = array of strings of length 101\nlet n be a integer\nread str\nread n\nfor i = 1 to n inclusive, read s[i]\nsort the values s + 1 and s + n + 1\nfor i = 1 to n inclusive\nif s[i].substr(0, length of str ) is equal to str\nprint s[i] and newline\nprint str and newline
bool subset(string n1, string n2, int len) {\n\tfor (int i = 0; i < len; i++) {\n\t\tif (n1[i] != n2[i]) return false;\n\t}\n\treturn true;\n}\nstring small_min(string n1, string n2) {\n\tif (n1.length() < n2.length()) return n1;\n\treturn n2;\n}\nint main() {\n\tstring s, ans;\n\tcin >> s;\n\tstring ara[110];\n\tint n;\n\tcin >> n;\n\tint f = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> ara[i];\n\t\tint j;\n\t\tfor (j = 0; j < s.size(); j++) {\n\t\t\tif (ara[i][j] != s[j]) break;\n\t\t}\n\t\tif (j == s.size()) {\n\t\t\tif (f == 0) ans = ara[i];\n\t\t\tf = 1;\n\t\t\tans = min(ans, ara[i]);\n\t\t}\n\t}\n\tif (f == 0)\n\t\tcout << s << endl;\n\telse\n\t\tcout << ans << endl;\n\treturn 0;\n}	function subset (get strings n1 and n2 and int len, return bool)\nfor i=0 to len exclusive\nif n1[i] != n2[i] return false\nreturn true\nfunction small_min(get strings n1 and n2, return string)\nif length of n1 < length of n2 return n1\nreturn n2\ns,ans=string\nread s\nara=array of 110 string\nn=int\nread n\nf=0\nfor i=0 to n exclusive\nread ara[i]\nj=int\nfor j=0 to size of s exclusive\nif ara[i][j] != s[j] break\nif j is size of s\nif f is 0 ans=ara[i]\nf=1\nans=min(ans, ara[i])\nif f is 0\nprint s\nelse\nprint ans
"int arr[1000000], a[1000], ar[100000];\nmap<char, int> m;\nmap<char, int> mm;\nint main() {\n\tstring s, m, k = """", n = """";\n\tint x;\n\tcin >> s >> x;\n\tfor (int i = 0; i < x; i++) {\n\t\tcin >> m;\n\t\tif (m.size() >= s.size()) {\n\t\t\tn = m.substr(0, s.size());\n\t\t\tif (n == s && (m <= k || k == """")) { k = m; }\n\t\t}\n\t}\n\tif (k != """")\n\t\tcout << k << endl;\n\telse\n\t\tcout << s << endl;\n\treturn 0;\n}"	"arr = int array of size 1000000 and a = int array of size 1000 and ar = int array of size 100000\nm = char, int map\nmm = char, int map\ns, m, k, n = string with k = """" and n = """"\nx = int\nread s then x\nfor i = 0 to x\nread m\nif size of m >= size of s\nset n to first size of s chars of m\nif n is s and (m <= k || k is """") set k to m\nif k is not """"\nprint k\nelse\nprint s"
int main() {\n\tstring *ch, var;\n\tint n;\n\tcin >> var >> n;\n\tch = new string[n];\n\tfor (int i = 0; i < n; i++) cin >> ch[i];\n\tsort(ch, ch + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (ch[i].find(var) == 0) {\n\t\t\tcout << ch[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << var << endl;\n\treturn 0;\n}	create string pointer ch, create string var\ncreate integer n\nread var read n\nset ch to new string array with size n\nfor i = 0 to n exclusive, read ch[i]\nsort elements from ch to ch + n\nfor i = 0 to n exclusive\nif first index of var in ch[i] is 0\nprint ch[i] print newline\nprint var print newline
string s, s1[101];\nint n, ok;\nint main() {\n\tcin >> s >> n;\n\tfor (int i = 1; i <= n; ++i) cin >> s1[i];\n\tfor (int i = n; i >= 1; --i)\n\t\tfor (int j = 1; j < i; ++j)\n\t\t\tif (s1[j] > s1[j + 1]) swap(s1[j], s1[j + 1]);\n\tfor (int k = 1; k <= n; ++k) {\n\t\tok = 1;\n\t\tfor (int i = 0; i < s.length(); ++i)\n\t\t\tif (s[i] != s1[k][i]) {\n\t\t\t\tok = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (ok) {\n\t\t\tcout << s1[k] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	create string s and string array s1 with dimension 101\ncreate integer n, ok\nget s,n\nfor integer i=1 to n with increment i do get s1[i]\nfor integer i=n to 1 with decrement i\nfor integer j=1 with increment j till j less than i\nif s1[j] greater than s1[j+1] then swap s1[j] and s1[j+1]\nfor integer k=1 to n with increment k\nset ok to 1\nfor integer i=0 to length of s -1 with increment i\nif s[i] not equal to s1[k][i] then\nset ok to 0\nbreak the loop\nif ok not equal to 0 then\nprint s1[k]\nprint s
const int M = 110;\nchar s[M][M];\nchar a[M];\nint f[M], t[M];\nchar b[M];\nint main() {\n\tint n;\n\twhile (cin >> a) {\n\t\tcin >> n;\n\t\tint c = 0;\n\t\tmemset(f, 0, sizeof(f));\n\t\tmemset(t, 0, sizeof(t));\n\t\tint len = strlen(a);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> s[i];\n\t\t\tint len1 = strlen(s[i]);\n\t\t\tif (len1 < len) {\n\t\t\t\tt[i] = 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (int j = 0; j < len; j++) {\n\t\t\t\tif (a[j] != s[i][j]) {\n\t\t\t\t\tt[i] = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (t[i] == 0) {\n\t\t\t\tf[i] = 1;\n\t\t\t\tmemset(b, 0, sizeof(b));\n\t\t\t\tstrcpy(b, s[i]);\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t\tif (c == 0)\n\t\t\tcout << a << endl;\n\t\telse {\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (f[i] == 1) {\n\t\t\t\t\tif (strcmp(b, s[i]) > 0) {\n\t\t\t\t\t\tmemset(b, 0, sizeof(b));\n\t\t\t\t\t\tstrcpy(b, s[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << b << endl;\n\t\t}\n\t}\n\treturn 0;\n}	M=110\ns=array of M by M char\na=array of M char\nf and t=array of M int\nb=array of M char\nn=int\nwhile read a\nread n\nc=0\nfill f with 0\nfill t with 0\nlen=length of a\nfor i=0 to n exclusive\nread s[i]\nlen1=length of s[i]\nif len1<len\nt[i]=1\ncontinue\nfor j=0 to len exclusive\nif a[j] is not s[i][j]\nt[i]=1\nbreak\nif t[i] is 0\nf[i]=1\nfill b with 0\ncopy from s[i] to b\nincrement c\nif c is 0\nprint a\nelse\nfor i=0 to n exclusive\nif f[i] is 1\nif b > s[i]\nfill b with 0\ncopy from s[i] to b\nprint b
"int main() {\n\tstring ss;\n\tcin >> ss;\n\tint n;\n\tcin >> n;\n\tcin.ignore();\n\tstring res = ss;\n\tbool noe = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tstring tmp = """";\n\t\tfor (int j = 0, ii = 0; j < s.length(); j++) {\n\t\t\tif (ss[ii] == s[j])\n\t\t\t\tii++;\n\t\t\telse\n\t\t\t\tii = 0;\n\t\t\tif (ii == ss.length()) {\n\t\t\t\tif (!noe)\n\t\t\t\t\tres = s.substr(j - ii + 1, s.length()), noe = 1;\n\t\t\t\telse {\n\t\t\t\t\ttmp = s.substr(j - ii + 1, s.length());\n\t\t\t\t\tres = min(res, tmp);\n\t\t\t\t\tii = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << res << '\n';\n\treturn 0;\n}"	"declare string variable with name ss\nread standard input to ss\ncreate new integer n\nread variable n from the input\nread and discard the input data\ncreate string res = ss\ndeclare new boolean noe with value 0\nfor integer i = 0 to n exclusive incrementing i\ns is a new string\nread variable s from the input\ndeclare string tmp with value """"\nfor j = 0 and ii = 0 while j < length of s, increment j\nif ss[ii] = s[j]\nincrement ii\nelse\nassign 0 to ii\nif ii is equal to length of ss\nif noe is false\nset res to the substring of s from index j - ii + 1 to the end; set noe to 1\nelse\nchange tmp to the substring of s from index j - ii + 1 to the end\nset res to min of res and tmp\nassign 0 to ii\nprint res and '\n'"
int main() {\n\tstring s;\n\tcin >> s;\n\tint len = s.length();\n\tint n;\n\tcin >> n;\n\tstring array[n];\n\tstring output[n];\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> array[i];\n\t\tint flag = 0;\n\t\tif (array[i].length() < len) { continue; }\n\t\tfor (int j = 0; j < len; j++) {\n\t\t\tif (array[i][j] != s[j]) {\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag == 0) { output[count++] = array[i]; }\n\t}\n\tif (count == 0) {\n\t\tcout << s << endl;\n\t\treturn 0;\n\t}\n\tsort(output, output + count);\n\tcout << output[0] << endl;\n\treturn 0;\n}	create string s\nread s\nlet int len = s.length()\nlet int n\nread n\nlet string array array of size n\nlet string array output of size n\ncreate integer count = 0\nfor i = 0 to n exclusive\nread array[i]\nlet int flag = 0\nif array[i].length() is less than len, continue to next loop iteration\nfor j = 0 to len exclusive\nif array[i][j] is not equal to s[j]\nset flag to 1\nbreak loop\nif flag is equal to 0, set output[count++] to array[i]\nif count is 0\nprint s\nsort output using argument output + count\nprint output[0]
"vector<string> v;\nint main() {\n\tstring x;\n\tcin >> x;\n\tlong long n, i;\n\tstring y;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> y;\n\t\tv.push_back(y);\n\t}\n\tsort(v.begin(), v.end());\n\tfor (i = 0; i < v.size(); i++) {\n\t\tlong long f = v[i].find(x);\n\t\tif (f == 0) {\n\t\t\tcout << v[i] << ""\n"";\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << x << ""\n"";\n}"	v = string vector\nx = string\nread x\nn, i = long long\ny = string\nread n\nwhile n is not 0 subtract 1 from n and do\nread y\nappend y to the end of v\nsort v\nfor i = 0 to size of v exclusive\nf = long long with value of the position of x within v[i]\nif f equals 0\nprint v[i]\nprint x
int main() {\n\tint n;\n\tstring s[110], st;\n\tcin >> st >> n;\n\tfor (int i = 0; i < n; i++) cin >> s[i];\n\tsort(s, s + n);\n\tfor (int i = 0; i < n; i++)\n\t\tif (s[i].substr(0, st.size()) == st) {\n\t\t\tcout << s[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\tcout << st << endl;\n\treturn 0;\n}	create integer n\ncreate string array s with size 110, create string st\nread st read n\nfor i = 0 to n exclusive, read s[i]\nsort elements from s to s + n\nfor i = 0 to n exclusive\nif substring of s[i] from 0 to size of st is st\nprint s[i] print newline\nprint st print newline
const int INF = 1e9;\nint main() {\n\tstring S;\n\tint N;\n\tstring A[128];\n\tcin >> S >> N;\n\tfor (int i = 0; i < N; i++) { cin >> A[i]; }\n\tsort(A, A + N);\n\tstring ans = S;\n\tfor (int i = 0; i < N; i++) {\n\t\tbool check = true;\n\t\tfor (int j = 0; j < S.size(); j++) {\n\t\t\tif (S[j] != A[i][j]) {\n\t\t\t\tcheck = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (check == false)\n\t\t\tcontinue;\n\t\telse {\n\t\t\tans = A[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create constant integer INF = 1e9\nlet string s\ncreate int N\ncreate string array A of size 128\nread S and N\nfor i = 0 to N exclusive, read A[i]\nsort A\nlet string ans = S\nfor i = 0 to N exclusive\nlet bool check = true\nfor j = 0 to size of S exclusive\nif S[j] is not equal to A[i][j]\nset check to false\nbreak loop\nif check is equal to false\ncontinue loop\nelse\nset ans to A[i]\nbreak loop\nprint ans
"int main() {\n\tstring s;\n\tint n;\n\tcin >> s >> n;\n\tint trig = 0;\n\tint c = 0;\n\tstring *a = new string[n];\n\tint k = 0;\n\tint j = 0;\n\tstring s2;\n\tint z = s.length();\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s2;\n\t\ta[i] = s2;\n\t}\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] != a[j][k]) {\n\t\t\ttrig = 1;\n\t\t\tc++;\n\t\t} else {\n\t\t\tk++;\n\t\t}\n\t\tif (z == k) {\n\t\t\ttrig = 3;\n\t\t\tbreak;\n\t\t}\n\t\tif (trig == 1) {\n\t\t\tj++;\n\t\t\ti = -1;\n\t\t\tk = 0;\n\t\t\ttrig = 0;\n\t\t}\n\t\tif (c == n) {\n\t\t\ttrig = 5;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (trig == 5) {\n\t\tcout << s << endl;\n\t\treturn 0;\n\t}\n\tsort(a, a + n);\n\tstring t = """";\n\tif (trig == 3) {\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tt = a[i];\n\t\t\tfor (int ind = 0; ind < s.length(); ind++) {\n\t\t\t\tif (s[ind] != t[ind]) {\n\t\t\t\t\ta[i] = '0';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tt = """";\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] != ""0"") {\n\t\t\tcout << a[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << s << endl;\n\treturn 0;\n}"	"s=string\nn=int\nread s,n\ntrig=0\nc=0\na=string of n char\nk=0\nj=0\ns2=string\nz=length of s\nfor i=0 to n exclusive\nread s2\na[i]=s2\nfor i=0 to length of s\nif s[i] != a[j][k]\ntrig=1\nincrement c\nelse\nincrement k\nif z is k\ntrig=3\nbreak\nif trig is 1\nincrement j\ni=-1\nk=0\ntrig=0\nif c is n\ntrig=5\nbreak\nif trig is 5\nprint s\nsort first n items of a\nt=""""\nif trig is 3\nfor i=0 to n\nt=a[i]\nfor ind=0 to length of s exclusive\nif s[ind] != t[ind]\na[i]='0'\nbreak\nt=""""\nfor i=0 to n exclusive\nif a[i] is not ""0""\nprint a[i]\nprint s"
"string p, s, ans;\nint n;\nint main() {\n\tcin >> p >> n;\n\tans = """";\n\twhile (n--) {\n\t\tcin >> s;\n\t\tif ((int)s.size() >= (int)p.size()) {\n\t\t\tstring aux = s.substr(0, (int)p.size());\n\t\t\tif (aux == p && (s < ans || ans == """")) { ans = s; }\n\t\t}\n\t}\n\tcout << (ans == """" ? p : ans) << ""\n"";\n}"	"p, s, ans = string\nn = int\nread p then n\nset ans to """"\nloop n times\nread s\nif size of s as int is greater or equal to size of p as int\naux = string with aux = substr of 0 and size of p as int on s\nif aux is p and (s is less than ans or ans is """") set ans to s\nprint p if ans is """" else print ans"
int main() {\n\tstring s, t;\n\tint n, j = 0;\n\tcin >> s >> n;\n\tstring ar[n];\n\tint slength = s.size();\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> t;\n\t\tif (t.substr(0, slength) == s) {\n\t\t\tar[j] = t;\n\t\t\tj++;\n\t\t}\n\t}\n\tif (j == 0)\n\t\tcout << s << '\n';\n\telse {\n\t\tsort(ar, ar + j);\n\t\tcout << ar[0] << '\n';\n\t}\n\treturn 0;\n}	s, t = string\nn, j = int with j = 0\nread s then n\nar = string array of size n\nslength = int with slength = length of s\nfor i = 1 to n inclusive\nread t\nif t starts with s\nset ar[j] to t\nincrement j\nif j is 0\nprint s\nelse\nsort ar from position 0 to j\nprint ar[0]
"const int OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 2e5 + 5, mod = 1e9 + 7;\nint main() {\n\tstring x;\n\tcin >> x;\n\tint n;\n\tcin >> n;\n\tstring arr[n];\n\tfor (int c = 0; c < n; c++) { cin >> arr[c]; }\n\tsort(arr, arr + n);\n\tfor (int c = 0; c < n; c++) {\n\t\tbool flag = 1;\n\t\tfor (int i = 0; i < ((int)((x).size())); i++) {\n\t\t\tif (i < ((int)((arr[c]).size())) && x[i] != arr[c][i]) flag = 0;\n\t\t}\n\t\tif (flag) return cout << arr[c] << ""\n"", 0;\n\t}\n\tcout << x << ""\n"";\n\treturn 0;\n}"	"create integer constants OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 2e5 + 5 and mod = 1e9 + 7\ncreate new string variable x\nread variable x from the input\ncreate integer n\nread input to n\narr is a new array of strings with size n\nfor c from 0 to n exclusive, read standard input to arr[c]\nsort arr from 0 to n\nstart for loop from c = 0 to n exclusive incrementing c\ndeclare boolean flag = 1\nfor integer i = 0 to the size of x exclusive\nchange flag to 0 if i is less than size of arr[c] and x[i] != arr[c][i]\nif flag is not 0, return cout << arr[c] << ""\n"", 0\nprint x and ""\n"" to the standard output"
"int main() {\n\tstring s;\n\tcin >> s;\n\tint n;\n\tcin >> n;\n\tvector<string> a(n);\n\tfor (int i = 0; i < n; ++i) { cin >> a[i]; }\n\tint opt = -1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif ((int)(a[i]).size() < (int)(s).size()) { continue; }\n\t\tif (a[i].substr(0, (int)(s).size()) != s) { continue; }\n\t\tif (opt == -1 || a[i] < a[opt]) { opt = i; }\n\t}\n\tif (opt != -1) {\n\t\tcout << a[opt];\n\t} else {\n\t\tcout << s;\n\t}\n\tcout << ""\n"";\n}"	create string s\nread s\nmake integer n\nread n\nmake string vector a of size n\nfor i = 0 to n exclusive, read a[i]\nlet int opt = -1\nfor i = 0 to n exclusive\nif (int)(a[i]).size() is less than (int)(s).size(), continue to next loop iteration\nif a[i]. substr(0, (int)(s).size()) is not equal to s, continue to next loop iteration\nif opt is equal to -1 or a[i] is less than a[opt], set opt to i\nif opt is not equal to -1\nprint a[opt]\nelse\nprint s\nprint new line
const int N = 110;\nstring hist[N], input;\nvector<string> prefixed;\nint n;\nbool comp(string s1, string s2) {\n\treturn strcmp(s1.c_str(), s2.c_str()) < 0;\n}\nbool isPref(string s1, string s2) {\n\tif (s1.size() < s2.size()) return false;\n\tfor (int i = 0; i < s2.size(); i++)\n\t\tif (s1[i] != s2[i]) return false;\n\treturn true;\n}\nint main() {\n\tcin >> input >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> hist[i];\n\t\tif (isPref(hist[i], input)) prefixed.push_back(hist[i]);\n\t}\n\tif (!prefixed.empty()) {\n\t\tsort(prefixed.begin(), prefixed.end(), comp);\n\t\tcout << prefixed[0] << endl;\n\t} else\n\t\tcout << input << endl;\n}	create new constant integer variable N with value 110\ndeclare new string input and string array hist with size N\ndeclare vector of strings called prefixed\ndeclare new integer n\nboolean function comp with string arguments s1 and s2\nreturn true if s1 is less than s2 in lexicographic order, or false otherwise\nisPref is a boolean function with string arguments s1 and s2\nif length of s1 is less than length of s2, return false\nfor integer i = 0 to length of s2 exclusive\nif s1[i] != s2[i], return false\nreturn true\nread input and n from the input\nfor integer i = 0 to n exclusive incrementing i\nread hist[i] from the user input\nif isPref(hist[i], input) returned true, push hist[i] into prefixed\nif prefixed is not emptu\nsort prefixed\nprint first element of prefixed to the standard output\nelse\nprint input
int main() {\n\tstring s[101];\n\tint n;\n\tstring t;\n\tcin >> t;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> s[i];\n\tsort(s, s + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i].length() < t.length()) continue;\n\t\tint j = 0;\n\t\twhile (j < (int)t.length()) {\n\t\t\tif (s[i][j] != t[j]) break;\n\t\t\tj++;\n\t\t}\n\t\tif (j == (int)t.length()) {\n\t\t\tcout << s[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << t << endl;\n\treturn 0;\n}	s is a new array of strings with size 101\ndeclare integer variable n\ndeclare new string t\nread t from the user input\nread standard input to n\nin a for loop, change i from 0 to n exclusive, reading s[i] on each loop\nsort s\nin a for loop, change i from 0 to n exclusive\nif length of s[i] is less than length of t, skip the rest of the loop\ndeclare integer j with value 0\nwhile j < length of t\nif s[i][j] != t[j], break\nincrement j by one\nif j = length of t\nprint s[i] to the standard output\nprint t
"string s;\nint n;\ninline void Run() {\n\twhile (cin >> s) {\n\t\tstring ans = """", tmp = """";\n\t\tfor (int i = 1; i <= 110; ++i) ans += 'z', tmp += 'z';\n\t\tcin >> n;\n\t\tstring t;\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tcin >> t;\n\t\t\tif (t.size() < s.size()) continue;\n\t\t\tif (t.substr(0, s.size()) == s) ans = min(ans, t);\n\t\t}\n\t\tif (ans == tmp) ans = s;\n\t\tcout << ans << endl;\n\t}\n}\nint main() {\n\tRun();\n\treturn 0;\n}"	s = string\nn = integer\nin function Run that returns nothing\nwhile s can be read as a valid string\nans, tmp = string\nfor i = 1 to 110 inclusive and increase i at the start of the loop, then ans = ans + z, tmp = tmp + z\nread n\nt = string t\nfor i = 1 to n inclusive\nread t\nif size of t < size of s, continue\nif contents of t from the beginning of t to size of s elements away is s, then ans = lower value between ans and t\nif ans is tmp, then ans = s\nprint ans\ncall Run
bool lexi_comp(const string &a, const string &b) {\n\tint n = min(a.size(), b.size());\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] != b[i]) { return a[i] < b[i]; }\n\t}\n\treturn a.size() < b.size();\n}\nbool isPrefix(const string &a, const string &b) {\n\tif (b.size() < a.size()) { return false; }\n\tfor (int i = 0; i < a.size(); i++) {\n\t\tif (a[i] != b[i]) { return false; }\n\t}\n\treturn true;\n}\nint main() {\n\tstring a, b, ans;\n\tint n;\n\tcin >> a >> n;\n\tans = a + string(100, 'z');\n\tbool ok = false;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> b;\n\t\tif (isPrefix(a, b)) {\n\t\t\tok = true;\n\t\t\tif (lexi_comp(b, ans)) { swap(b, ans); }\n\t\t}\n\t}\n\tif (ok) {\n\t\tcout << ans << endl;\n\t} else {\n\t\tcout << a << endl;\n\t}\n\treturn 0;\n}	in the function lexi_comp that takes const string reference a,b and returns bool\nn = integer with n = min of a.size() and b.size()\nfor i = 0 to n exclusive\nif a[i] is not b[i], return a[i] < b[i]\nreturn a.size() < b.size()\nin the function isPrefix that takes const string reference a, b and returns bool\nif b.size() < a.size(), return false\nfor i = 0 to a.size() exclusive\nif a[i] is not b[i], return false\nreturn true\na, b, ans = string\nn = integer\nread a, n\nans = a + string on 100 an z\nok = bool with ok = false\nfor i = 0 to n exclusive\nread b\nif isPrefix on a and b\nok = true\nif lexi_comp(b, ans), swap b and ans\nif ok\nprint ans\nelse\nprint a
string st, st1[102];\nlong long n;\nint main() {\n\tcin >> st >> n;\n\tfor (int i = 1; i <= n; i++) cin >> st1[i];\n\tsort(st1 + 1, st1 + n + 1);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (st1[i].find(st) == 0) {\n\t\t\tcout << st1[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\tcout << st << endl;\n\treturn 0;\n}	create string st and string array st1 of size 102\nlet long long int n\nread st and n\nfor i = 1 to n, read st1[i]\nsort st1 + 1 using argument st1 + n + 1\nfor i = 1 to n\nif st[i].find(st) is equal to 0\nprint st1[i]\nprint st
int main() {\n\tstring *a, s;\n\tint n;\n\tcin >> s >> n;\n\ta = new string[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i].find(s) == 0) {\n\t\t\tcout << a[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	a=pointer to string, s=string\nn=int\nread s\na=array of n string\nfor i=0 to n exclusive read a[i]\nsort first n items of a\nfor i=0 to n exclusive\nif a[i] begins with s\nprint a[i]\nprint s
int main() {\n\tstring s;\n\tint n;\n\tcin >> s >> n;\n\tvector<string> v(n + 1);\n\tfor (int i = 0; i < n; i++) { cin >> v[i]; }\n\tv[n] = s;\n\tsort(v.begin(), v.end());\n\tfor (int i = 0; i <= n; i++) {\n\t\tif (v[i] == s) {\n\t\t\tif (i < n && v[i] == v[i + 1].substr(0, (int)v[i].size())) {\n\t\t\t\tcout << v[i + 1] << endl;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tcout << v[i] << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}	s = string\nn = integer\nread s, n\nv = vector of string with v = n + 1\nfor i = 0 to n exclusive, read v[i]\nv[n] = s\nsort v.begin() and v.end()\nfor i = 0 to n\nif v[i] is s\nif i < n and v[i] is v[i + 1].substring(0, (int)v[i].size())\nprint v[i + 1]\nbreak loop\nelse\nprint v[i]\nbreak loop
"bool check(string s, string t) {\n\tif (s.length() < t.length()) return false;\n\tfor (int i = 0; i < t.length(); i++)\n\t\tif (s[i] != t[i]) return false;\n\treturn true;\n}\nint main() {\n\tstring t;\n\tcin >> t;\n\tint n;\n\tcin >> n;\n\tstring s[1000];\n\tfor (int i = 1; i <= n; i++) cin >> s[i];\n\tstring min = """";\n\tfor (int i = 1; i <= n; i++)\n\t\tif (check(s[i], t))\n\t\t\tif (min == """" || s[i] < min) min = s[i];\n\tif (min == """")\n\t\tcout << t << endl;\n\telse\n\t\tcout << min << endl;\n\treturn 0;\n}"	"declare check taking in strings s and t and returning bool\nif length of s is less than length of t, return false\nif i = 0 to length of t exclusive\nif s[i] is not equal to t[i], return false\nreturn true\nlet string t\nread t\ncreate integer n\nread n\nlet string array s of size 1000\nfor i = 1 to n, read s[i]\ncreate string min = """"\nfor i = 1 to n\nif check(s[i], t) is true\nif min is equal to """" or s[i] is less than min, set min to s[i]\nif min is equal to """"\nprint t\nelse\nprint min"
int main() {\n\tstring *str, var;\n\tint n;\n\tcin >> var >> n;\n\tstr = new string[n];\n\tfor (int i = 0; i < n; i++) cin >> str[i];\n\tsort(str, str + n);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (str[i].find(var) == 0) {\n\t\t\tcout << str[i] << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << var << endl;\n\treturn 0;\n}	var = string and str = pointer to a string\nn = int\nread var then n\nset str to new string array of size n\nread n values into str\nsort str\nfor i = 0 to n\nif str[i] starts with var\nprint str[i]\nprint var
int main() {\n\tint n;\n\tcin >> n;\n\tvector<bool> good(n, 1);\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tif (x <= 0)\n\t\t\t\tcontinue;\n\t\t\telse if (x == 1)\n\t\t\t\tgood[i] = 0;\n\t\t\telse if (x == 2)\n\t\t\t\tgood[j] = 0;\n\t\t\telse\n\t\t\t\tgood[i] = good[j] = 0;\n\t\t}\n\t}\n\tvector<int> sol;\n\tfor (int i = 0; i < n; i++)\n\t\tif (good[i]) sol.push_back(i + 1);\n\tcout << sol.size() << endl;\n\tif (sol.size() > 0) {\n\t\tfor (int i = 0; i < sol.size(); i++) {\n\t\t\tif (i != 0) cout << ' ';\n\t\t\tcout << sol[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}	create integer n\nread n\ncreate vector of booleans called good with n elements filled with 1\nfor i from 0 to n exclusive\nfor j from 0 to n exclusive\ndeclare integer x\nread input to x\nif x <= 0\ngo to the start of the loop\nelse if x = 1\nset good[i] to 0\nelse if x = 2\nset good[j] to 0\nelse\nset good[i] and good[j] to 0\ndeclare vector of integers called sol\nfor i from 0 to n exclusive\nif good[i] is true, push i + 1 to sol\nprint length of sol\nif length of sol > 0\nfor integer i = 0 to length of sol exclusive\nif i != 0, print ' '\nprint sol[i]\nprint new line
"int main() {\n\tint n, i, j, a[100][100], b[100] = {0}, k, flag;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) { cin >> a[i][j]; }\n\t}\n\tk = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tflag = 1;\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tif (i != j) {\n\t\t\t\tif (a[i][j] == 1 || a[i][j] == 3) flag = 0;\n\t\t\t}\n\t\t}\n\t\tif (flag) b[k++] = i + 1;\n\t}\n\tif (b[0] == 0)\n\t\tcout << ""0"" << endl;\n\telse {\n\t\tcout << k << endl;\n\t\tfor (i = 0; i < k - 1; i++) { cout << b[i] << "" ""; }\n\t\tcout << b[k - 1] << endl;\n\t}\n\treturn 0;\n}"	"n,i,j,k,flag=int, a=array of 100 by 100 int, b=array of 100 int filled with 0\nread n\nfor i=0 to n exclusive\nfor j=0 to n exclusive read a[i][j]\nk=0\nfor i=0 to n exclusive\nflag=1\nfor j=0 to n exclusive\nif i != j\nif a[i][j] is 1 or 3 flag=0\nif flag b[k] = i+1, increment k\nif b[0] is 0\nprint ""0""\nelse\nprint k\nfor i=0 to k-1 excluisve print b[i], space\nprint b[k-1]"
"int vis[105], f[105][105];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tcin >> f[i][j];\n\t\t\tif (f[i][j] == 1)\n\t\t\t\tvis[i] = 1;\n\t\t\telse if (f[i][j] == 2)\n\t\t\t\tvis[j] = 1;\n\t\t\telse if (f[i][j] == 3)\n\t\t\t\tvis[i] = vis[j] = 1;\n\t\t}\n\t}\n\tint a[105], top = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!vis[i]) { a[top++] = i; }\n\t}\n\tcout << top << endl;\n\tfor (int i = 0; i < top; i++) {\n\t\tif (i == top - 1)\n\t\t\tcout << a[i] << endl;\n\t\telse\n\t\t\tcout << a[i] << "" "";\n\t}\n\treturn 0;\n}"	vis=array of 105 int, f=array of 105 by 105 int\nn=int\nread n\nfor i=1 to n inclusive\nfor j=1 to n inclusive\nread f[i][j]\nif f[i][j] is 1\nvis[i]=1\nelse if f[i][j] is 2\nvis[j]=1\nelse if f[i][j] is 3\nvis[i] = vis[j] = 1\na=array of 105 int, top=0\nfor i=1 to n inclusive\nif not vis[i] a[top]=i, increment top\nprint top\nfor i=0 to top exclusive\nif i is top-1\nprint a[i]\nelse\nprint a[i] and space
"vector<int> vec;\nint main() {\n\tint n;\n\tcin >> n;\n\tint arr[n][n];\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) { cin >> arr[i][j]; }\n\t}\n\tint cnt = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tbool t = true;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tif (arr[i][j] == 1 || arr[i][j] == 3) {\n\t\t\t\tt = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (t) {\n\t\t\tcnt++;\n\t\t\tvec.push_back(i + 1);\n\t\t}\n\t}\n\tcout << cnt << endl;\n\tint len = vec.size();\n\tfor (int i = 0; i < len - 1; i++) { cout << vec[i] << "" ""; }\n\tif (cnt > 0) cout << vec[vec.size() - 1] << endl;\n}"	"declare vector of integers vec\ndeclare int variable n\nread input to n\ncreate 2d array of ints arr with size n by n\nfor i from 0 to n exclusive\nfor j from 0 to n exclusive, read input to arr[i][j]\ndeclare int cnt = 0\nfor i from 0 to n exclusive\ncreate bool t = true\nfor j = 0 to n exclusive\nif arr[i][j] = 1 or arr[i][j] = 3\nset t to false\nstop the loop\nif t is true\nincrement cnt by one\npush i + 1 into vec\nprint cnt\ndeclare integer len = length of vec\nprint all elements of vec except last with "" "" after each one\nif cnt is greater than 0, print last element of vec"
"int main() {\n\tint n, i, j;\n\tint a[105][105], f[105], t, b[105];\n\tcin >> n;\n\tt = 0;\n\tfor (i = 0; i < n; i++) f[i] = 1;\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = 0; j < n; j++) {\n\t\t\tcin >> a[i][j];\n\t\t\tif (a[i][j] == 1)\n\t\t\t\tf[i] = 0;\n\t\t\telse if (a[i][j] == 2)\n\t\t\t\tf[j] = 0;\n\t\t\telse if (a[i][j] == 3)\n\t\t\t\tf[i] = f[j] = 0;\n\t\t}\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tif (f[i]) b[t++] = i + 1;\n\t}\n\tcout << t << endl;\n\tfor (i = 0; i < t; i++) {\n\t\tif (i != t - 1)\n\t\t\tcout << b[i] << "" "";\n\t\telse\n\t\t\tcout << b[i] << endl;\n\t}\n\treturn 0;\n}"	"define ints n, i, j\ndefine 2-dimensional int array a to be of 105 x 105 elements, int array f to be of 105 elements, int t, and int array b to be of 105 elements\nread n\nassign zero to t\nfor i by 1 from 0 to n (exclusive), set f[i] to 1\nfor i from 0 to n (exclusive) by 1\nfor j from 0 to n (exclusive) by 1\nread a[i][j]\nif a[i][j] is 1\nset f[i] to 0\nelse if a[i][j] is two\nzero f[j]\notherwise if a[i]j] = three\nzero f[i] and f[j]\nfor i from 0 to n (exclusive) by 1\nif f[i], then set b[t] to i + 1 and then increment t\nprint t and newline\nfor i from 0 to t (exclusive) by 1\nif i isn't t - 1\nprint b[i] and "" ""\nelse\nprint b[i] and newline"
"int main() {\n\tint n, d, dist[105], s;\n\tcin >> n;\n\ts = n;\n\tmemset(dist, 0, sizeof(dist));\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tcin >> d;\n\t\t\tif (d == 1) dist[i]++;\n\t\t\tif (d == 2) dist[j]++;\n\t\t\tif (d == 3) {\n\t\t\t\tdist[i]++;\n\t\t\t\tdist[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i <= n; i++) {\n\t\tif (dist[i] != 0) s--;\n\t}\n\tcout << s << endl;\n\tint flot = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (dist[i] == 0 && flot) {\n\t\t\tcout << i;\n\t\t\tflot = 0;\n\t\t} else if (dist[i] == 0 && !flot)\n\t\t\tcout << "" "" << i;\n\t}\n\tif (s) cout << endl;\n\treturn 0;\n}"	n,d,s=int, dist=array of 105 int\nread n\ns=n\nfill dist with 0\nfor i=1 to n inclusive\nfor j=1 to n inclusive\nread d\nif d is 1 increment dist[i]\nif d is 2 increment dist[j]\nif d is 3\nincrement dist[i]\nincrement dist[j]\nfor i=0 to n inclusive\nif dist[i] != 0 decrement s\nprint s\nflot=1\nfor i=1 to n inclusive\nif dist[i] is 0 and flot\nprint i\nflot=0\nelse if dist[i] is 0 and not flot\nprint space, i\nif s print newline
"int main() {\n\tint r[200][200], a, b, c, d, e;\n\twhile (cin >> a) {\n\t\tvector<int> v2;\n\t\tint v[200];\n\t\tfor (b = 1; b <= a; b++) {\n\t\t\tv[b] = 1;\n\t\t\tfor (c = 1; c <= a; c++) { cin >> r[b][c]; }\n\t\t}\n\t\tfor (b = 1; b <= a; b++) {\n\t\t\tfor (c = 1; c <= a; c++) {\n\t\t\t\tif (b == c) continue;\n\t\t\t\tif (r[b][c] == 1) v[b] = 0;\n\t\t\t\tif (r[b][c] == 2) v[c] = 0;\n\t\t\t\tif (r[b][c] == 3) v[b] = 0, v[c] = 0;\n\t\t\t}\n\t\t}\n\t\tc = 0;\n\t\tfor (b = 1; b <= a; b++) {\n\t\t\tif (v[b] == 1) {\n\t\t\t\tc++;\n\t\t\t\tv2.push_back(b);\n\t\t\t}\n\t\t}\n\t\tif (c) {\n\t\t\tcout << c << endl;\n\t\t\tfor (d = 1; d <= c; d++) {\n\t\t\t\tif (d == 1) {\n\t\t\t\t\tcout << v2[d - 1];\n\t\t\t\t} else {\n\t\t\t\t\tcout << "" "" << v2[d - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << endl;\n\t\t} else {\n\t\t\tcout << c << endl;\n\t\t}\n\t\tv2.clear();\n\t}\n\treturn 0;\n}"	"define 2D int array r to be 200 x 200, and define ints a, b, c, d, and e\nwhile read into a\ndefine int dynamic array v2\ndefine 200-elt. array v\nfor b from 1 to a by 1\nset v[b] to 1\nfor c by 1 from 1 to a, read into r[b][c]\nfor b by 1 from 1 to a\nfor c from 1 to a by 1\nif b is c, then continue\nif r[b][c] is one, then zero v[b]\nif r[b][c] is two, then set v[c] to zero\nif r[b][c] is three,then set v[b] and v[c] to zero\nassign zero to c\nfor b from 1 to a by 1\nif v[b] is one\nincrement c\nappend b onto v2\nif c\nprint c and newline\nfor d from 1 to c by 1\nif d is one\nprint v2[d - 1]\notherwise\nprint "" "" and v2[d - 1]\nprint newline\nelse\nprint c followed by newline\nclear out v2"
int main() {\n\tint n, a, ans[105];\n\twhile (cin >> n) {\n\t\tmemset(ans, 0, sizeof(ans));\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\tcin >> a;\n\t\t\t\tif (a == 1 || a == 3) ans[i] = 1;\n\t\t\t}\n\t\tint cnt = 0, b[105];\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (ans[i] == 0) b[cnt++] = i;\n\t\t}\n\t\tif (cnt) {\n\t\t\tcout << cnt << endl;\n\t\t\tfor (int i = 0; i < cnt - 1; i++) cout << b[i] << ' ';\n\t\t\tcout << b[cnt - 1] << endl;\n\t\t} else\n\t\t\tcout << 0 << endl;\n\t}\n\treturn 0;\n}	create int n and a and int array ans of size 105\nwhile cin >> n is truthy\nset all contents of ans to 0\nfor i = 1 to n\nfor j = 1 to n\nread a\nif a is equal to 1 or a is equal to 3, set ans[i] to 1\nlet int cnt = 0 and int array b of size 105\nfor i = 1 to n\nif ans[i] is equal to 0, set b[cnt++] to i\nif cnt is truthy\nprint cnt\nfor i = 0 to cnt - 1 exclusive, print b[i] and ' '\nprint b[cnt - 1]\nelse\nprint 0
bool good[200];\nint main() {\n\tint n;\n\tint a[300][300];\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) { cin >> a[i][j]; }\n\t}\n\tmemset(good, true, sizeof(good));\n\tint sum = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tif (a[i][j] == 1 || a[i][j] == 3) {\n\t\t\t\tgood[i] = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!good[i]) continue;\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tif (a[j][i] == 2 || a[j][i] == 3) {\n\t\t\t\tgood[i] = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (good[i]) sum++;\n\t}\n\tcout << sum << endl;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (good[i]) {\n\t\t\tif (sum == 1)\n\t\t\t\tcout << i << endl;\n\t\t\telse\n\t\t\t\tcout << i << ' ';\n\t\t\tsum--;\n\t\t}\n\t}\n\treturn 0;\n}	declare 2d boolean array good with size 200\ndeclare integer variable n\ndeclare 2d integer array a with size 300 by 300\nread input to n\nfor i = 1 to n inclusive\nfor j = 1 to n inclusive, read a[i][j]\nset sizeof(good) bytes at the pointer good to true\ndeclare integer variable sum = 0\nfor i from 1 to n inclusive\nfor j from 1 to n inclusive\nif a[i][j] = 1 or a[i][j] = 3\nassign false to good[i]\nstop the loop\nif good[i] is false, go to the start of the loop\nfor j from 1 to n inclusive\nif a[j][i] is equal to 2 or a[j][i] is equal to 3\nchange good[i] to false\nbreak the loop\nif good[i] is true, increment sum\nprint sum\nfor i from 1 to n inclusive\nif good[i] is true\nif sum is equal to 1\nprint i\nelse\nprint i and ' '\ndecrement sum
int main() {\n\tvector<int> v(6);\n\tfor (int i = 0; i < 6; i++) cin >> v[i];\n\tint suma = 0;\n\tint minA = min(v[1], v[5]);\n\tint maxA = max(v[1], v[5]);\n\tint inicial = v[0] * 2 + 1;\n\tfor (int i = 0; i < minA; i++) {\n\t\tsuma += inicial;\n\t\tinicial += 2;\n\t}\n\tif (maxA != minA) inicial--;\n\tfor (int i = minA; i < maxA; i++) { suma += inicial; }\n\tminA = min(v[2], v[4]);\n\tmaxA = max(v[2], v[4]);\n\tinicial = v[3] * 2 + 1;\n\tfor (int i = 0; i < minA; i++) {\n\t\tsuma += inicial;\n\t\tinicial += 2;\n\t}\n\tif (maxA != minA) inicial--;\n\tif (v[1] == v[5]) {\n\t\tfor (int i = minA; i < maxA; i++) { suma += inicial; }\n\t}\n\tcout << suma << endl;\n\treturn 0;\n}	v is a vector of 6 integers\nfor integer i = 0 to 6 exclusive read v[i]\ndeclare integer suma = 0\ncreate integer minA with value min of v[1] and v[5]\ncreate integer maxA with value max of v[1] and v[5]\ndeclare integer inicial = v[0] * 2 + 1\nfor i = 0 to minA exclusive\nincrease suma by inicial\nincrease inicial by 2\ndecrement inicial if maxA != minA\nfor i = minA to maxA exclusive, increase suma by inicial\nassign value of min of v[2] and v[4] to minA\nassign value of max of v[2] and v[4] to maxA\ninicial = v[3] * 2 + 1\nfor i = 0 to minA exclusive\nincrease suma by inicial\nincrease inicial by 2\ndecrement inicial if maxA != minA\nif v[1] = v[5]\nfor integer i = minA to maxA exclusive, increase suma by inicial\nprint suma
inline int sq(int x) {\n\treturn x * x;\n}\nint main() {\n\tint a[11];\n\tfor (int i = 0; i < 6; i++) cin >> a[i];\n\tint ans = sq(a[0] + a[1] + a[2]);\n\tans -= sq(a[0]) + sq(a[2]) + sq(a[4]);\n\tcout << ans << endl;\n\treturn 0;\n}	sq is a function that returns an integer and receive integer x\nreturn square of x\na = array of integers of length 11\nfor ( integer i=0 to 6 exclusive),read i th element of array a\nans is an integer and equals square of (a[0] + a[1] + a[2])\ndecrement ans by square of a[0]) + sq(a[2]) + sq(a[4]\nprint ans and a new line
long long a[6];\nint main() {\n\tfor (long long i = 0; i < 6; i++) cin >> a[i];\n\tlong long c = 2 * a[0] - 1, ans = 0;\n\tfor (long long i = 0; i < a[1] + a[2]; i++) {\n\t\tif (i <= a[1] && i <= a[5])\n\t\t\tc += 2;\n\t\telse if (i > a[1] && i > a[5])\n\t\t\tc -= 2;\n\t\tif (a[1] == a[5] && i == a[1]) c -= 2;\n\t\tif (i != a[1] && i == a[5]) c--;\n\t\tif (i == a[1] && i != a[5]) c--;\n\t\tans += c;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	declare long long array a with size 6\nread 6 elements into array a\ncreate long longs ans = 0 and c = 2 * a[0] - 1\nfor i = 0 to a[1] + a[2] exclusive\nif i <= a[1] && i <= a[5]\nincrease c by 2\nelse if i > a[1] && i is greater than a[5]\ndecrease c by 2\nif a[1] = a[5] && i = a[1] decrease c by 2\nif i != a[1] && i = a[5] decrease c by 1\nif i = a[1] && i != a[5] decrease c by 1\nincrease ans by c\nprint ans
int main() {\n\tint a1, a2, a3, a4, a5, a6;\n\tcin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6;\n\tcout << (a1 + a2 + a3) * (a1 + a2 + a3) - a1 * a1 - a3 * a3 - a5 * a5 << endl;\n\treturn 0;\n}	a1, a2, a3, a4, a5, a6 =integers\nRead a1, a2, a3, a4, a5, a6\nprint (a1 + a2 + a3) * (a1 + a2 + a3) - a1 * a1 - a3 * a3 - a5 * a5 and a new line
int main() {\n\tlong a, b, c, d, e, f, maxlevel;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tmaxlevel = b + c;\n\tlong curr = a * 2 - 1;\n\tlong sum = 0;\n\tfor (int i = 0; i < maxlevel; i++) {\n\t\tif (b > 0)\n\t\t\tcurr++;\n\t\telse if (b < 0)\n\t\t\tcurr--;\n\t\tb--;\n\t\tif (f > 0)\n\t\t\tcurr++;\n\t\telse if (f < 0)\n\t\t\tcurr--;\n\t\tf--;\n\t\tsum += curr;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	a, b, c, d, e, f, maxlevel = long\nread a, b, c, d, e, f\nmaxlevel = b + c\ncurr = long with curr = a * 2 - 1\nsum = long with sum = 0\nfor i = 0 to maxlevel exclusive\nif b > 0\nincrement curr\nelse if b < 0\ndecrement curr\ndecrement b\nif f > 0\nincrement curr\nelse if f < 0\ndecrement curr\ndecrement f\nsum = sum + curr\nprint sum
int main() {\n\tint a[6];\n\tfor (int i = 0; i < 6; ++i) cin >> a[i];\n\tint n = a[0] + a[1];\n\tint l[n] = {}, r[n] = {};\n\tfor (int i = 0; i < a[1]; ++i) l[i] = 1;\n\tfor (int i = a[1] + 1; i < n; ++i) l[i] = -1;\n\tfor (int i = 0; i < a[3]; ++i) r[i] = 1;\n\tfor (int i = a[3] + 1; i < n; ++i) r[i] = -1;\n\tint ans = 0, step = 2 * a[2] - 1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstep += l[i] + r[i];\n\t\tans += step;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create integer array a with 6 elements\nread 6 elements into a\ncreate integer n = a[0] + a[1]\ndeclare integer arrays l and r with size n\nfor i = 0 to a[1] exclusive, set l[i] to 1\nfor integer i = a[1] + 1 to n exclusive, set l[i] to -1\nfor i = 0 to a[3] exclusive, set r[i] to 1\nfor i = a[3] + 1 to n exclusive, set r[i] to -1\ndeclare integers ans = 0 and step = 2 * a[2] - 1\nfor integer i = 0 to n exclusive\nincrease step by l[i] + r[i]\nincrease ans by step\nprint ans
int a[10], b[5005];\nint main() {\n\tb[0] = 0;\n\tb[1] = 1;\n\tfor (int i = 2; i < 5005; i++) { b[i] = i * i; }\n\tint len = 0;\n\tfor (int i = 1; i <= 6; i++) { cin >> a[i]; }\n\tint m = a[1] + a[2] + a[3];\n\tlen = b[m] - (b[a[1]] + b[a[3]] + b[a[5]]);\n\tcout << len << endl;\n\treturn 0;\n}	create integer arrays a, b, with a size 10, b size 5005\nset b[0] to 0\nset b[1] to 1\nfor i = 2 to 5005 exclusive, set b[i] to i * i\ncreate integer len with len = 0\nfor i = 1 to 6 inclusive, read a[i]\ncreate integer m with m = a[1] + a[2] + a[3]\nset len to b[m] - (b[a[1]] + b[a[3]] + b[a[5]])\nprint len print newline
"int main() {\n\tlong long a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tcout << (c + d + e) * (c + d + e) - (a * a) - (c * c) - (e * e) << ""\n"";\n\treturn 0;\n}"	"declare long long variables a, b, c, d, e and f\nread a, b, c, d, e and f\nprint (c + d + e) * (c + d + e) - (a * a) - (c * c) - (e * e) and ""\n"""
int main() {\n\tint a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tint x = a + b + c;\n\tint res = (x * x) - (a * a) - (c * c) - (e * e);\n\tcout << res << endl;\n\treturn 0;\n}	create integers a, b, c, d, e, and f\nprint a b c d e and f\nset integer x equal to a + b + c\nlet res be an integer equal to (x * x) - (a * a) - (c * c) - (e * e)\nprint res and a new line
int a, b, c, d, e, f;\nint main() {\n\tcin >> a >> b >> c >> d >> e >> f;\n\tcout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n}	let a, b, c, d, e, f be ints\nread a, b, c, d, e, f\nprint (a + b + c) * (a + b + c) - a * a - c * c - e * e and one newline
const int maxn = 1e6;\nconst double inf = 0x3f3f3f3f3f3f3f3f;\nint a, b, c, d, e, f;\nint main() {\n\twhile (cin >> a >> b >> c >> d >> e >> f) { cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl; }\n\treturn 0;\n}	maxn = const int with maxn = 1e6\ninf = const double with inf = 0x3f3f3f3f3f3f3f3f\na, b, c, d, e, f = int\nwhile reading a then b then c then d then e then f print (a + b + c) * (a + b + c) - a * a - c * c - e * e
int main() {\n\tint a, b, c, d, e, f, ans = 0, x = 0, y = 0, z = 0;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tif (b > f) {\n\t\tans += 2 * a * f + f * (f + 1) - f;\n\t\tx = a + f;\n\t} else {\n\t\tans += 2 * a * b + b * (b + 1) - b;\n\t\tx = a + b;\n\t}\n\tif (c > e) {\n\t\tans += 2 * d * e + e * (e + 1) - e;\n\t\ty = c - e;\n\t} else {\n\t\tans += 2 * d * c + c * (c + 1) - c;\n\t\ty = e - c;\n\t}\n\tans += 2 * x * y;\n\tcout << ans << '\n';\n\treturn 0;\n}	a, b, c, d, e, f, ans, x, y and z are integers where ans, x, y and z = 0\nread a, b, c, d, e and f\nif b is greater than f\nincrease ans by 2 * a * f + f * (f + 1) - f\nset value of x to a + f\nelse\nincrease ans by 2 * a * b + b * (b + 1) - b\nset value of x to a + b\nif c is greater than e\nincrease ans by 2 * d * e + e * (e + 1) - e\nassign value of c - e to y\nelse\nincrease ans by 2 * d * c + c * (c + 1) - c\ny = e - c\nincrease ans by 2 * x * y\nprint ans and '\n'
int n = 6, res, a[10];\nint main() {\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tint root = a[1] * 2 + 1, curr = root;\n\tint first_layer = 0, second_layer = 0, third_layer = 0;\n\tif (a[2] >= a[n])\n\t\tfirst_layer = a[n], second_layer = a[2] - a[n];\n\telse\n\t\tfirst_layer = a[2], second_layer = a[n] - a[2];\n\tfor (int i = 1; i <= first_layer; i++) {\n\t\tres = res + curr;\n\t\tcurr = curr + 2;\n\t}\n\tif (first_layer == a[2])\n\t\tsecond_layer = min(second_layer, a[3]);\n\telse\n\t\tsecond_layer = min(second_layer, a[5]);\n\tfor (int i = 1; i <= second_layer; i++) res = res + curr - 1;\n\troot = a[4] * 2 + 1, curr = root;\n\tfor (int i = 1; i <= min(a[3], a[5]); i++) {\n\t\tres = res + curr;\n\t\tcurr = curr + 2;\n\t}\n\tcout << res << '\n';\n\treturn 0;\n}	declare integers n and res where n = 6 and array of integers a with 10 elements\nfor i = 1 to n inclusive read a[i]\ndeclare integers root = a[1] * 2 + 1 and curr = root\ncreate integers first_layer, second_layer and third_layer = 0\nif a[2] >= a[n]\nset first_layer = a[n] and second_layer = a[2] - a[n]\nelse\nset first_layer = a[2] and second_layer = a[n] - a[2]\nfor i = 1 to first_layer inclusive\nset value of res to res + curr\ncurr = curr + 2\nif first_layer = a[2]\nsecond_layer = min of second_layer and a[3]\nelse\nsecond_layer = min of second_layer and a[5]\nfor i = 1 to second_layer inclusive, increase res by curr - 1\nset root = a[4] * 2 + 1 and curr = root\nfor integer i = 1 to min of a[3] and a[5] inclusive\nres = res + curr\nset curr to curr + 2\nprint res and '\n'
int main() {\n\tint ee = 0, acc = 0;\n\tfor (int i = 0; i < 6; i++) {\n\t\tint e;\n\t\tcin >> e;\n\t\tif (i % 2 == 0) acc += e * e;\n\t\tif (i < 3) ee += e;\n\t}\n\tint ans = ee * ee - acc;\n\tcout << ans << endl;\n}	set ee and acc = 0\nfor i=0 to 6 exclusive\ncreate int e\nread e\nif i is even, assign acc + e * e to acc\nif i is less than 3, ee= ee +e\nset ans equal to ee * ee - acc\nprint ans
int main() {\n\tint a1, a2, a3, a4, a5, a6, result = 0;\n\tcin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6;\n\tresult = ((a1 + a2 + a3) * (a1 + a2 + a3)) - (a1 * a1) - (a3 * a3) - (a5 * a5);\n\tcout << result << endl;\n\treturn 0;\n}	a1, a2, a3, a4, a5, a6, result =integers with result = 0\nRead a1, a2, a3, a4, a5, a6\nset result to ((a1 + a2 + a3) * (a1 + a2 + a3)) - (a1 * a1) - (a3 * a3) - (a5 * a5)\nprint result and a new line
int main() {\n\tint a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tif (e > c) swap(e, c), swap(f, b);\n\tcout << 2 * c * (d + e) - e * e + 2 * a * b + b * b << endl;\n}	create integers a, b, c, d, e and f\nread a, b, c, d, e and f\nif e > c then swap e and c and swap f and b\nprint 2 * c * (d + e) - e * e + 2 * a * b + b * b
int main() {\n\tlong long a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tcout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n\treturn 0;\n}	create int a, b, c, d, e, f\nread a, b, c, d, e and f\nprint (a + b + c) * (a + b + c) - a * a - c * c - e * e
const int maxn = 105;\nint main() {\n\tint a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tcout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n}	maxn = constant integer with value of 105\na, b, c, d, e, f = integers\nread a, b, c, d, e, and f\nprint (a + b + c) * (a + b + c) - a * a - c * c - e * e
int side[7];\nint main() {\n\tfor (int i = 1; i <= 6; ++i) cin >> side[i];\n\tint h1 = min(side[2], side[6]);\n\tint h2 = min(side[3], side[5]);\n\tint h3 = side[2] + side[3] - h1 - h2;\n\tint ans = 0;\n\tfor (int i = side[1] + 1; i <= side[1] + h1; ++i) ans += 2 * i - 1;\n\tfor (int i = side[4] + 1; i <= side[4] + h2; ++i) ans += 2 * i - 1;\n\tfor (int i = 1; i <= h3; ++i) ans += (side[1] + h1) * 2;\n\tcout << ans << endl;\n\treturn 0;\n}	declare int array side with size 7\nfor integer i = 1 to 6 inclusive read side[i]\ncreate integer h1 = min of side[2] and side[6]\ncreate integer h2 = min of side[3] and side[5]\ndeclare int h3 = side[2] + side[3] - h1 - h2\ncreate int ans = 0\nfor integer i = side[1] + 1 to side[1] + h1 inclusive, increase ans by 2 * i - 1\nfor integer i = side[4] + 1 to side[4] + h2 inclusive, increase ans by 2 * i - 1\nfor i = 1 to h3 inclusive, increase ans by (side[1] + h1) * 2\nprint ans
int main() {\n\tlong long a, b, c, d, e, f;\n\tcin >> a >> b >> c >> d >> e >> f;\n\tlong long ans = (a + b + c) * (a + b + c) - a * a - c * c - e * e;\n\tcout << ans << endl;\n\treturn 0;\n}	create long longs a, b, c, d, e, f\nread a read b read c read d read e read f\ncreate long long ans with ans = (a + b + c) * (a + b + c) - a * a - c * c - e * e\nprint ans print newline
int sq(int a) {\n\treturn a * a;\n}\nint main() {\n\tint A[6], i, j, k, a, b, c;\n\tfor (i = 0; i < 6; i++) { cin >> A[i]; }\n\ta = A[0] + A[1] + A[2];\n\tb = sq(a);\n\tc = sq(A[0]) + sq(A[2]) + sq(A[4]);\n\tj = b - c;\n\tcout << j << endl;\n\treturn 0;\n}	in function sq taking an int a and returning an int\nreturn a * a\ni, j, k, a, b, c = int and A = int array of size 6\nread 6 values into A\nset a to A[0] + A[1] + A[2]\nset b to sq of a\nset c to sq of A[0] + sq of A[2] + sq of A[4]\nset j to b - c\nprint j
"int a[7];\nint p(int x) {\n\treturn x * x;\n}\nint main() {\n\tfor (int i = 1; i <= 6; i++) { cin >> a[i]; }\n\tint ans = p(a[1] + a[2] + a[3]) - p(a[1]) - p(a[3]) - p(a[5]);\n\tcout << ans << ""\n"";\n\treturn 0;\n}"	a = integer array of size 7\nin the function p that takes integer x and returns integer\nreturn x * x\nfor i = 1 to 6, read a[i]\nans = integer with ans = p(a[1] + a[2] + a[3]) - p(a[1]) - p(a[3]) - p(a[5])\nprint ans
"int main() {\n\tint i, j, l, test = 0, ans, len;\n\tchar str[1003], ch;\n\tdouble maps = 0, k;\n\tcin >> l;\n\tfor (i = 0; i < l; i++) {\n\t\tcin >> str;\n\t\tif (strcmp(str, ""ABSINTH"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""BEER"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""BRANDY"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""CHAMPAGNE"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""GIN"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""RUM"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""SAKE"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""TEQUILA"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""VODKA"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""WHISKEY"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""WINE"") == 0) {\n\t\t\ttest++;\n\t\t} else if (str[0] >= 48 && str[0] <= 57) {\n\t\t\tlen = strlen(str);\n\t\t\tk = 0;\n\t\t\tmaps = 0;\n\t\t\tfor (j = len - 1; j >= 0; j--) {\n\t\t\t\tstr[j] = str[j] - '0';\n\t\t\t\tmaps = maps + (str[j] * pow(10.0, k));\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tans = (int)maps;\n\t\t\tif (ans < 18) { test++; }\n\t\t}\n\t}\n\tcout << test << endl;\n}"	"declare ints i, j, l, test, ans and len with test = 0\ndeclare character ch and array of characters str with 1003 elements\ndeclare doubles maps and k where maps = 0\nread l\nfor i from 0 to l exclusive\nread input to str\nif str is ""ABSINTH""\nincrement test\nif str is ""BEER""\nincrement test by one\nif str is ""BRANDY""\nincrement test by one\nif str is ""CHAMPAGNE""\nincrement test by one\nif str is ""GIN""\nincrement test by one\nif str is ""RUM""\nincrement test\nif str is ""SAKE""\nincrement test by one\nif str is ""TEQUILA""\nincrement test by one\nif str is ""VODKA""\nincrement test by one\nif str is ""WHISKEY""\nincrement test\nif str is ""WINE""\nincrement test by one\nelse if str[0] >= 48 and str[0] <= 57\nassign length of str to len\nset k to 0\nset maps to 0\nfor j = len - 1 to 0 inclusive counting down\nchange str[j] to str[j] - '0'\nassign maps + (str[j] * pow(10.0, k)) to maps\nincrement k\nchange ans to maps\nif ans is less than 18, increment test\nprint test"
"int main() {\n\tmap<string, int> mp;\n\tmp[""ABSINTH""] = mp[""BEER""] = mp[""BRANDY""] = mp[""CHAMPAGNE""] = 1;\n\tmp[""GIN""] = mp[""RUM""] = mp[""SAKE""] = mp[""TEQUILA""] = mp[""VODKA""] = 1;\n\tmp[""WHISKEY""] = mp[""WINE""] = 1;\n\tint n;\n\tcin >> n;\n\tint cnt = 0;\n\twhile (n--) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tif (mp[s])\n\t\t\tcnt++;\n\t\telse if (s[0] >= '0' && s[0] <= '9') {\n\t\t\tstringstream geek(s);\n\t\t\tint x = 0;\n\t\t\tgeek >> x;\n\t\t\tif (x < 18) cnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n\treturn 0;\n}"	"mp = map of string and int\nset mp[""ABSINTH""] and mp[""BEER""] and mp[""BRANDY""] and mp[""CHAMPAGNE""] to 1\nset mp[""GIN""] and mp[""RUM""] and mp[""SAKE""] and mp[""TEQUILA""] and mp[""VODKA""] to 1\nset mp[""WHISKEY""] and mp[""WINE""] to 1\nn = int\nread n\ncnt = int with cnt = 0\nloop n times\ns = string\nread s\nif mp[s] is not 0\nincrement cnt\nelse if s[0] is numeric char\ngeek = stringstream initialized with s\nx = int with x = 0\nread into x from geek\nif x is less than 18 then increment cnt\nprint cnt"
"string s;\nint ans = 0;\nvoid make() {\n\tint len = s.length();\n\tif (s[0] <= '9' && s[0] >= '0') {\n\t\tint year = 0;\n\t\tfor (int i = 0; i < len; i++) { year = year * 10 + s[i] - '0'; }\n\t\tif (year < 18) { ans++; }\n\t} else {\n\t\tif (s == ""BRANDY"") {\n\t\t\tans++;\n\t\t} else if (s == ""BEER"") {\n\t\t\tans++;\n\t\t} else if (s == ""ABSINTH"") {\n\t\t\tans++;\n\t\t} else if (s == ""CHAMPAGNE"") {\n\t\t\tans++;\n\t\t} else if (s == ""GIN"") {\n\t\t\tans++;\n\t\t} else if (s == ""RUM"") {\n\t\t\tans++;\n\t\t} else if (s == ""SAKE"") {\n\t\t\tans++;\n\t\t} else if (s == ""TEQUILA"") {\n\t\t\tans++;\n\t\t} else if (s == ""VODKA"") {\n\t\t\tans++;\n\t\t} else if (s == ""WHISKEY"") {\n\t\t\tans++;\n\t\t} else if (s == ""WINE"") {\n\t\t\tans++;\n\t\t}\n\t}\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> s;\n\t\tmake();\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	s = string\nans = integer with ans = 0\nin the function make\nlen = integer with len = s.length()\nif s[0] <= 9 and s[0] >= 0\nyear = integer with year = 0\nfor i = 0 to len exclusive, year = year * 10 + s[i] - 0\nif year < 18, increment ans\nelse\nif s is BRANDY\nincrement ans\nelse if s is BEER\nincrement ans\nelse if s is ABSINTH\nincrement ans\nelse if s is CHAMPAGNE\nincrement ans\nelse if s is GIN\nincrement ans\nelse if s is RUM\nincrement ans\nelse if s is SAKE\nincrement ans\nelse if s is TEQUILA\nincrement ans\nelse if s is VODKA\nincrement ans\nelse if s is WHISKEY\nincrement ans\nelse if s is WINE\nincrement ans\nn = integer\nread n\nfor i = 1 to n\nread s\ncall make\nprint ans
"int main() {\n\tint i, j, l, test = 0, ans, len;\n\tchar str[1003], ch;\n\tdouble maps = 0, k;\n\tcin >> l;\n\tfor (i = 0; i < l; i++) {\n\t\tcin >> str;\n\t\tif (strcmp(str, ""ABSINTH"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""BEER"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""BRANDY"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""CHAMPAGNE"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""GIN"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""RUM"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""SAKE"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""TEQUILA"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""VODKA"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""WHISKEY"") == 0) {\n\t\t\ttest++;\n\t\t} else if (strcmp(str, ""WINE"") == 0) {\n\t\t\ttest++;\n\t\t} else if (str[0] >= 48 && str[0] <= 57) {\n\t\t\tlen = strlen(str);\n\t\t\tk = 0;\n\t\t\tmaps = 0;\n\t\t\tfor (j = len - 1; j >= 0; j--) {\n\t\t\t\tstr[j] = str[j] - '0';\n\t\t\t\tmaps = maps + (str[j] * pow(10.0, k));\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tans = (int)maps;\n\t\t\tif (ans < 18) { test++; }\n\t\t}\n\t}\n\tcout << test << endl;\n}"	"declare integers i, j, l, test, ans and len where test = 0\ndeclare character array str with size 1003 and a character variable ch\ndeclare double variables maps = 0 and k\nread input to l\nloop i from 0 to l exclusive\nread str\nif str is ""ABSINTH""\nincrement test\nelse if str is ""BEER""\nincrement test\nelse if str is ""BRANDY""\nincrement test by one\nelse if str is ""CHAMPAGNE""\nincrement test by one\nelse if str is ""GIN""\nincrement test by one\nelse if str is ""RUM""\nincrement test\nelse if str is ""SAKE""\nincrement test\nelse if str is ""TEQUILA""\nincrement test\nelse if str is ""VODKA""\nincrement test\nelse if str is ""WHISKEY""\nincrement test by one\nelse if str is ""WINE""\nincrement test\nelse if str[0] >= 48 and str[0] <= 57\nchange len to length of str\nchange k to 0\nchange maps to 0\nloop j from len - 1 to 0 inclusive counting down\nassign str[j] - '0' to str[j]\nchange maps to maps + (str[j] * (10.0 in power k))\nincrement k by one\nchange ans to maps\nif ans is less than 18, increment test by one\nprint test"
"const int maxn = 1e6;\nint prime[maxn + 1];\nvoid getPrime() {\n\tmemset(prime, 0, sizeof(prime));\n\tfor (int i = 2; i <= maxn; i++) {\n\t\tif (!prime[i]) prime[++prime[0]] = i;\n\t\tfor (int j = 1; j <= prime[0] && prime[j] <= maxn / i; j++) {\n\t\t\tprime[prime[j] * i] = 1;\n\t\t\tif (i % prime[j] == 0) break;\n\t\t}\n\t}\n}\nint main() {\n\tgetPrime();\n\tint n;\n\twhile (cin >> n) {\n\t\tvector<int> v;\n\t\tv.clear();\n\t\tint key = prime[1], id = 1;\n\t\tfor (int i = 1; prime[i] <= n; i++) {\n\t\t\tint key = prime[i];\n\t\t\twhile (key <= n) {\n\t\t\t\tv.push_back(key);\n\t\t\t\tkey *= prime[i];\n\t\t\t}\n\t\t}\n\t\tcout << v.size() << endl;\n\t\tfor (int i = 0; i < v.size(); i++) cout << v[i] << (i == v.size() - 1 ? ""\n"" : "" "");\n\t}\n}"	"declare const int maxn = 1e6\ncreate an array of integers prime with maxn + 1 elements\nfunction getPrime\nset first sizeof(prime) bytes at the pointer prime to 0\nfor i from 2 to maxn inclusive\nif prime[i] is 0, increment prime[0] and set prime[prime[0]] to i\nfor j from 1 to prime[0] inclusive while prime[j] <= maxn / i, incrementing j\nprime[prime[j] * i] = 1\nif i % prime[j] is equal to 0, break the loop\ncall getPrime()\ndeclare int variable n\nloop, reading n from the input\ndeclare vector of integers v\nclear v\ndeclare integer variables key = prime[1] and id=1\nloop i from 1 to n inclusive\ncreate int key = prime[i]\nwhile key <= n\npush key into v\nmultiply key by prime[i]\nprint length of v\nfor integer i = 0 to length of v exclusive, print v[i] and ""\n"" if i = length of v - 1 or "" "" if it is not"
const int maxn = 1010;\nvector<int> v;\nbool is_prime[maxn];\nint prime[maxn];\nint k;\nvoid Euler(int n) {\n\tint i, j;\n\tk = 0;\n\tfor (i = 2; i < n; i++) {\n\t\tif (is_prime[i] == false) prime[k++] = i;\n\t\tfor (j = 0; j < k && i * prime[j] < n; j++) {\n\t\t\tis_prime[i * prime[j]] = true;\n\t\t\tif (i % prime[j] == 0) break;\n\t\t}\n\t}\n}\nint main() {\n\tint n, x;\n\tEuler(maxn);\n\tint ans(0);\n\tcin >> n;\n\tfor (int i = 0; i < k; i++) {\n\t\tif (prime[i] <= n) {\n\t\t\tint p = prime[i];\n\t\t\twhile (p <= n) {\n\t\t\t\tv.push_back(p);\n\t\t\t\tp *= prime[i];\n\t\t\t}\n\t\t}\n\t}\n\tcout << v.size() << endl;\n\tif (v.size() > 0) {\n\t\tfor (int i = 0; i < v.size() - 1; i++) cout << v[i] << ' ';\n\t\tcout << v[v.size() - 1] << endl;\n\t}\n\treturn 0;\n}	maxn = const integer with maxn = 1010\nv = vector of integer\nis_prime = bool array of size maxn\nprime = integer array of size maxn\nk = integer\nin the function Euler that takes integer n\ni, j = integers\nk = 0\nfor i = 2 to n exclusive\nif is_prime[i] is false, prime[increment k] = i\nfor j < k and i * prime[j] < n\nis_prime[i * prime[j]] = true\nif i modulo prime[j] is 0, break loop\nn, x = integer\nEuler of maxn\nans = integer with ans = (0)\nread n\nfor i = 0 to k exclusive\nif prime[i] <= n\np = integer with p = prime[i]\nwhile p <= n\nappend p in v\np = p * prime[i]\nprint v.size()\nif v.size() > 0\nfor i = 0 to v.size() - 1 exclusive, print v[i]\nprint v[v.size() - 1]
"int a[1005];\nbool zhi(int n) {\n\tfor (int i = 2; i < n; i++) {\n\t\tif (n % i == 0) return false;\n\t}\n\treturn true;\n}\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tif (n == 1) {\n\t\t\tcout << 0 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(a, 0, sizeof(a));\n\t\tint j = 0;\n\t\tfor (int i = 2; i <= n; i++) {\n\t\t\tif (zhi(i)) {\n\t\t\t\ta[j] = i;\n\t\t\t\tj++;\n\t\t\t\tint t = i;\n\t\t\t\tt *= i;\n\t\t\t\twhile (t <= n) {\n\t\t\t\t\ta[j] = t;\n\t\t\t\t\tj++;\n\t\t\t\t\tt *= i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << j << endl;\n\t\tfor (int i = 0; i < j - 1; i++) { cout << a[i] << "" ""; }\n\t\tcout << a[j - 1] << endl;\n\t}\n}"	"create integer array a with size 1005\ndeclare zhi with integer n as argument, returning boolean\nfor i = 2 to n exclusive\nif n % i is 0, return false from function\nreturn true from function\ncreate integer n\nwhile read n\nif n is 1\nprint 0 print newline\nbreak current loop iteration\nset bytes from a to size of a to value 0\ncreate integer j with j = 0\nfor i = 2 to n inclusive\nif result of run zhi with i as argument is true\nset a[j] to i\nincrement j\ncreate integer t with t = i\nset t to t * i\nwhile t is less than or equal to n\nset a[j] to t\nincrement j\nset t to t * i\nprint j print newline\nfor i = 0 to j - 1 exclusive, print a[i] print "" ""\nprint a[j-1] print newline"
int main() {\n\tdouble a, b, c;\n\tcin >> a >> b >> c;\n\tcout << b / (b + c) * a << endl;\n\treturn 0;\n}	declare double variables a, b and c\nread a, b and c\nprint b / (b + c) * a
double l, p, q;\nint main() {\n\tcin >> l >> p >> q;\n\tcout << l / (q + p) * p << endl;\n\treturn 0;\n}	a, b, r = integers\nRead l, p, q\nprint l / (q + p) * p and a new line
"int main() {\n\tdouble l, p, q;\n\tcin >> l >> p >> q;\n\tcout << l / (p + q) * p << ""\n"";\n\treturn 0;\n}"	double integers = l,p,q\nread l,p,q\noutput l / (p + q) * p
const int maxn = (int)1e5 + 5;\nconst long long mod = 1e9 + 7;\nint main() {\n\tdouble l, p, q;\n\tcin >> l >> p >> q;\n\tdouble t1 = ((2 * l) / (p + q));\n\tdouble t2 = l / (p + q);\n\tdouble ans = p * (t1 - t2);\n\tcout << ans << endl;\n\treturn 0;\n}	create constant integer maxn with maxn = integer casted 1e5 + 5\ncreate constant long long mod with mod = 1e9 + 7\ncreate doubles l, p, q\nread l read p read q\ncreate double t1 with t1 = ((2 * l) / (p + q))\ncreate double t2 with t2 = l / (p + q)\ncreate double ans with ans = p * (t1 - t2)\nprint ans print newline
int main() {\n\tdouble m, a, s;\n\tdouble i, j;\n\twhile (cin >> m >> i >> j) {\n\t\ta = i + j;\n\t\ts = m / a;\n\t\tcout << s * i << endl;\n\t}\n\treturn 0;\n}	define floating point numbers m, a, s\ndefine doubles i, j\nwhile read m, i, j\nset a to i + j\nassign m / a to s\nprint s * i and a newline
int main() {\n\tint l, p, q;\n\tcin >> l >> p >> q;\n\tcout << l * p / (double)(p + q) << endl;\n\treturn 0;\n}	create int l, p and q\nread l, p and q\nprint l * p / (p + q)
int main() {\n\tdouble d, n, m;\n\tcin >> d >> n >> m;\n\tcout << (d * n) / (n + m) << endl;\n}	double integers = d,n,m\nread d,n,m\noutput (d * n) / (n + m)
const int inf = 0x3f3f3f3f;\nconst int mod1 = 1e9 + 7;\nconst long long mod = 1e16;\nconst int maxn = 1000;\nint dx[5] = {0, 1, 0, -1, 0}, dy[5] = {1, 0, -1, 0, 0};\nint dir[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nint main() {\n\tdouble n, x, y;\n\tcin >> n >> x >> y;\n\tdouble d = n / (x + y);\n\tdouble e = d * x;\n\tcout << e << endl;\n\treturn 0;\n}	inf = const integer with inf = 0x3f3f3f3f\nmod1 = const integer with mod1 = 1e9 + 7\nmod = const long long with mod = 1e16\nmaxn = const integer with maxn = 1000\ndx, dy = integer array of size 5 with dx = {0, 1, 0, -1, 0}, dy = {1, 0, -1, 0, 0}\ndir = integer array of size [4][2] with dir = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}}\nn, x, y = double\nread n, x, y\nd = double with d = n / (x + y)\ne = double with e = d * x\nprint e
int h[3];\nint main() {\n\tlong double a, b, c;\n\tcin >> a >> b >> c;\n\tlong double f = b + c;\n\tlong double t = a / f;\n\tcout << b * t << '\n';\n\treturn 0;\n}	create integer array h with size 3\ncreate long long doubles a, b, c\nread a read b read c\ncreate long long double f with f = b + c\ncreate long long double t with t = a / f\nprint b * t print '\n'
int main() {\n\tdouble l, p, q;\n\tcin >> l >> p >> q;\n\tdouble t_total = 3 * l / (p + q);\n\tdouble t1 = l / (p + q);\n\tcout << (t_total - 2 * t1) * p << endl;\n}	create doubles l, p and q\nread input to l, p and q\ndeclare double variable t_total = 3 * l / (p + q)\ndeclare double t1 = l / (p + q)\nprint (t_total - 2 * t1) * p
int main() {\n\tdouble l, x, y;\n\tcin >> l;\n\tcin >> x >> y;\n\tif (y > x) {\n\t\tcout << l - ((l / (x + y)) * max(x, y)) << endl;\n\t} else {\n\t\tcout << (l / (x + y)) * max(x, y) << endl;\n\t}\n\treturn 0;\n}	l, x, y = double\nread l\nread x, y\nif y > x\nprint l - ((l / (x + y)) * the greatest value between x and y)\nelse\nprint ((l / (x + y)) * the greatest value between x and y)
"const long long N = 1e5;\nfloat l, p, q;\nint main() {\n\tcin >> l >> p >> q;\n\tcout << l / (p + q) * p;\n\tcout << ""\n"";\n\treturn 0;\n}"	N = const long long with N = 1e5\nl, p, q = flaot\nread l then p then q\nprint l / (p + q) * p\nprint newline
int main() {\n\tdouble a = 0, b = 0, c = 0;\n\tcin >> a >> b >> c;\n\tif (b == c) {\n\t\tcout << 0.5 * a << endl;\n\t\treturn 0;\n\t}\n\tcout << b / (c + b) * a << endl;\n}	set a, b and c to 0\nprint a, b and c\nif b equal to c\nprint 0.5*a\nprint b / (c+b)*a and a newline
const int N = 5000 + 100;\nint main() {\n\tdouble l, q, p, t, ans;\n\twhile (cin >> l) {\n\t\tcin >> p >> q;\n\t\tt = l / (p + q);\n\t\tans = p * t;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	create constant integer N with N = 5000 + 100\ncreate doubles l, q, p, t, ans\nwhile read l is true\nread p read q\nset t to l / ( p + q )\nset ans to p * t\nprint ans print newline
int main() {\n\tdouble l, p, q;\n\tcin >> l >> p >> q;\n\tcout << p * l / (p + q) << endl;\n}	l, p, q = double\nread l, p, q\nprint result of p * l / (p + q)
int main() {\n\tdouble l, p, q;\n\tcin >> l >> p >> q;\n\tcout << (l * p) / (p + q) << endl;\n\treturn 0;\n}	let l, p, q be double values\nread l, p, q\nprint (l * p) / (p + q) and newline
int main() {\n\tfloat a = 0, s = 0, c = 0, d = 0, e = 0, i, j, k, l, f;\n\tcin >> k >> l >> f;\n\ts = (l + f) / 2;\n\ts = k / s;\n\ts = s / 2;\n\ta = l * s;\n\tcout << a << endl;\n\treturn 0;\n}	set float a,s,c,d,e all to 0 and set float for i,j,k,l,f\nread k,l,f\nset s to (l + f) / 2\nset s to k / s\nset s to s / 2\nset a to l * s\noutput a
"int main() {\n\tdouble l, p, q;\n\tcin >> l >> p >> q;\n\tcout << (l / (p + q)) * p << ""\n"";\n\treturn 0;\n}"	"create doubles l, p and q\nread l, p and q\nprint (l / (p + q)) * p and ""\n"""
long long int a, b, c, tt;\nint main() {\n\tcin >> a >> b >> c;\n\tcout << (float)a / (b + c) * b << endl;\n}	a,b,c,tt = long long integers\nread a,b,c\noutput (float)a / (b + c) * b
const long long int MOD = 1000000007;\nlong long int N, M, K, H, W, L, R;\nint main() {\n\tlong double a, b, c;\n\tcin >> a >> b >> c;\n\ta /= (b + c);\n\ta *= b;\n\tcout << a << endl;\n\treturn 0;\n}	MOD = const long long integer with MOD = 1000000007\nN, M, K, H, W, L, R = long long integer\na, b, c = long double\nread a, b, c\na = a / (b + c)\na = a * b\nprint a
int main() {\n\tint l, p, q;\n\tdouble sum, su;\n\twhile (cin >> l >> p >> q) {\n\t\tsum = (double)l / (2 * (p + q));\n\t\tsu = (double)l - sum * q * 2;\n\t\tcout << su << endl;\n\t}\n}	declare int variables l, p and q\ncreate doubles sum and su\nread l, p and q and keep looping\nchange sum to l / (2 * (p + q))\nassign l - sum * q * 2 to su\nprint su
int main() {\n\tdouble l, a, b;\n\tcin >> l >> a >> b;\n\tcout << l / (a + b) * a << endl;\n\treturn 0;\n}	create doubles l, a, b\nread l read a read b\nprint l / ( a + b ) * a print newline
int main() {\n\tdouble d, a, b;\n\tcin >> d >> a >> b;\n\tdouble t = d / (a + b);\n\tcout << t * a << endl;\n}	declare doubles d, a and b\nread d, a and b\ncreate double t = d / (a + b)\nprint t * a
int main() {\n\tdouble a;\n\tdouble l, p, q;\n\tcin >> l >> p >> q;\n\ta = l * p / (p + q);\n\tcout << a << endl;\n\treturn 0;\n}	let a double\nlet l, p, q doubles\nread l, p, and q\nset a to l * p / (p + q)\nprint a
int main() {\n\tfloat l, p, q;\n\tcin >> l >> p >> q;\n\tcout << l / (p + q) * p << endl;\n\treturn 0;\n}	declare floats l, p and q\nread input to l, p and q\nprint l / (p + q) * p
"const double PI = acos(-1.0);\nvoid fast_in_out() {}\nvoid pause() {}\nint main() {\n\tfast_in_out();\n\tint ar[] = {2, 4, 8, 16, 32, 64, 128, 256, 512};\n\tint n, b, q;\n\tcin >> n >> b >> q;\n\tint x = 0, y = n * q;\n\tfor (int i = 8; i >= 0; i--) {\n\t\tif (n < ar[i]) continue;\n\t\tint k = ar[i];\n\t\tn = n - k;\n\t\tn += k / 2;\n\t\ti++;\n\t\tk = k * b + (k / 2);\n\t\tx += k;\n\t}\n\tcout << x << "" "" << y << '\n';\n\tpause();\n\treturn 0;\n}"	"declare constant double PI with PI = acosign of -1.0\ndeclare fast_in_out with no arguments, returning void\ndeclare pause with no arguments, returning void\nrun fast_in_out\ndeclare ar as integer array = {2, 4, 8, 16, 32, 64, 128, 256, 512}\ndeclare integers n, b, q\nread n and b and q\ndeclare integers x = 0, y = n * q\nfor i = 8 to 0 inclusive, decrementing i\nif n is less than ar[i], break current loop iteration\ndeclare integer k with k = ar[i]\nlet n be n - k\nincrement n by k / 2\nincrement i\nlet k = k * b + (k / 2)\nincrement x by k\nprint x, "" "", y, '\n'\nrun pause"
"int n, b, p, x = 0, y;\nint main() {\n\tcin >> n >> b >> p;\n\tb = 2 * b + 1;\n\ty = n * p;\n\twhile (n > 1) {\n\t\tint k = 1;\n\t\twhile (2 * k <= n) k *= 2;\n\t\tx += b * k / 2;\n\t\tn -= k / 2;\n\t}\n\tcout << x << "" "" << y << '\n';\n\treturn 0;\n}"	"create ints n, b, p, x = 0, and y\nread n, b, and p\nset b to 2 * b + 1\nset y to n * p\nwhile n is greater than 1\ncreate integer k = 1\nwhile 2 * k is less than or equal to n, set k to k * 2\nset x to x + b * k / 2\nset n to n - k / 2\nprint x, "" "", and y"
"const long long int INF = (1LL << 60) - 1;\nconst long long int MAX = 2000001;\nlong long int fast_exp(long long int base, long long int exp, long long int m) {\n\tlong long int res = 1;\n\twhile (exp > 0) {\n\t\tif (exp % 2 == 1) { res = (res * base) % m; }\n\t\tbase = (base * base) % m;\n\t\texp /= 2;\n\t}\n\treturn res % m;\n}\nint main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint bottle = 0, towel = 0;\n\ttowel = p * n;\n\twhile (n > 1) {\n\t\tint k = 1;\n\t\twhile (k <= n) { k *= 2; }\n\t\tk /= 2;\n\t\tn = (n - k) + k / 2;\n\t\tbottle += (k / 2) * (2 * b + 1);\n\t}\n\tcout << bottle << "" "" << towel << endl;\n\treturn 0;\n}"	INF = const long long int with INF = (1LL bitshift left by 60) - 1\nMAX = const long long int with MAX = 2000001\nin function fast_exp taking three long long ints base, exp and m and returning a long long int\nres = long long int with res = 1\nloop while exp is greater than 0\nif exp is uneven set res to (res * base) mod m\nset base to (base * base) mod m\nset exp to exp / 2\nreturn res mod m\nn, b, p = int\nread n then b then p\nbottle, towel = int with bottle = 0 and towel = 0\nset towel to p * n\nloop while n is greater than 1\nk = int with k = 1\nloop while k is less or equal to n set k to k * 2\nset k to k / 2\nset n to (n - k) + k / 2\nincrement bottle by (k / 2) * (2 * b + 1)\nprint bottle and towel
"int main() {\n\tint n, m, p;\n\tcin >> n >> m >> p;\n\tint ans = 0;\n\tint c = n;\n\twhile (n != 1) {\n\t\tans += n / 2;\n\t\tn -= n / 2;\n\t}\n\tcout << ans * (m * 2 + 1) << "" "" << c * p << endl;\n}"	n,m,p=int\nread n,m,p\nans=0\nc=n\nwhile n is not 1\nadd n/2 to ans\nsubtract n/2 from n\nprint ans*(m*2+1), space, c*p
"const int N = 1e6 + 5, MAX = 3e7, MOD = 1e9 + 7;\nint n, p, b, x, y;\nint main() {\n\tcin >> n >> p >> b;\n\ty = b * n;\n\twhile (n) {\n\t\tif (n / 2)\n\t\t\tx += ((n - n % 2) * p + n / 2);\n\t\telse\n\t\t\tbreak;\n\t\tn = n / 2 + n % 2;\n\t}\n\tcout << x << "" "" << y << ""\n"";\n}"	"create const ints N = 1e6 + 5, MAX = 3e7 and MOD = 1e9 + 7\ndeclare ints n, p, b, x and y\nread n, p and b\nset y to b * n\nwhile n is not 0\nif n / 2 is true\nincrease x by (n - n % 2) * p + n / 2\nelse\nbreak the loop\nassign n / 2 + n % 2 to n\nprint x, "" "", y and ""\n"""
"int main() {\n\tint m, b, p, total = 0, total_p;\n\tcin >> m >> b >> p;\n\ttotal_p = m * p;\n\twhile (1) {\n\t\tint k = [](int n) -> int {\n\t\t\tint i = 1, res = pow(2, 0);\n\t\t\twhile (1) {\n\t\t\t\tint temp = pow(2, i);\n\t\t\t\tif (temp > n) break;\n\t\t\t\tres = temp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn res;\n\t\t}(m);\n\t\tint matches = k / 2;\n\t\ttotal += matches * (2 * b);\n\t\ttotal += matches;\n\t\tm = (k / 2) + (m - k);\n\t\tif (matches == 0) break;\n\t}\n\tcout << total << "" "" << total_p << endl;\n\treturn 0;\n}"	"create integers m, b, p, total and total_p where total = 0\nread variables m, b and p from the input\nassign m * p to total_p\nstart infinite loop\ndeclare integer variable k = [](int n)->int\ndeclare ints i = 1 and res = pow(2, 0)\nlooping infinitely\ndeclare new integer variable temp = 2 in the power of i\nif temp is greater than n, break\nset res to temp\nincrement i by one\nreturn res\n(m)\ncreate integer variable with name matches and value = k / 2\nchange total to sum of total and matches * (2 * b)\nincrease total by matches\nassign (k / 2) + (m - k) to m\nif matches = 0, break the loop\nprint total, "" "" and total_p"
"int main() {\n\tint n, agua, toalha = 0;\n\tcin >> n >> agua >> toalha;\n\tint nrod, tagua, ttoalha = 0;\n\tnrod = n - 1;\n\ttagua = nrod + nrod * agua * 2;\n\tttoalha = toalha * n;\n\tcout << tagua << "" "" << ttoalha << endl;\n\treturn 0;\n}"	n, agua, toalha = int with toalha = 0\nread n then agua then toalha\nnrod, tagua, ttoalha = int with ttoalha = 0\nset nrod to n - 1\nset tagua to nrod + nrod * agua * 2\nset ttoalha to toalha * n\nprint tagua and ttoalha
"int main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint bottles = 0, towels = n * p;\n\twhile (n > 1) {\n\t\tint matches = (1 << (int)log2(n)) / 2;\n\t\tbottles += matches * (2 * b + 1);\n\t\tn -= matches;\n\t}\n\tcout << bottles << "" "" << towels << endl;\n\treturn 0;\n}"	let n, b, p be integers\nread n, b, p\nlet bottles, towels be integers with bottles = 0, towels = n * p\nwhile n is greater than 1\nlet matches be a integer with matches = (1 << (int)log2(n)) / 2\nincrement bottles by matches * (2 * b + 1)\ndecrement n by matches\nprint bottles and space and towels and newline
"int n, b, p;\nint main() {\n\tcin >> n >> b >> p;\n\tb = b * 2 + 1;\n\tint now = 1;\n\twhile (now <= n) { now <<= 1; }\n\tnow >>= 1;\n\tint t = n;\n\tlong long ans = 0;\n\twhile (t > 1) {\n\t\tans += 1LL * now / 2 * b;\n\t\tt -= now / 2;\n\t\twhile (now && now > t) { now >>= 1; }\n\t}\n\tcout << ans << "" "" << n * p << endl;\n\treturn 0;\n}"	"create ints n, b, and p\nread n, b, and p\nset b to b * 2 + 1\ncreate integer now = 1\nwhile now is less than or equal to n, shift the bits of now one place to the left\nshift the bits of now one place to the right\ncreate int t = n\nlet long long integer ans = 0\nwhile t is greater than 1\nset ans to ans + 1LL * now / 2 * b\nset t to t - now / 2\nwhile now is truthy and now > t is true, shift the bits of now one place to the right\nprint ans, "" "", and n * p"
"int g(int n) {\n\twhile (__builtin_popcount(n) > 1) n = n & (n - 1);\n\treturn n;\n}\nint main() {\n\tint n, b, p, r = 0, m;\n\tcin >> n >> b >> p;\n\tm = n;\n\twhile (n > 1) {\n\t\tint x = g(n);\n\t\tr += x * (b);\n\t\tr += x / 2;\n\t\tn -= x / 2;\n\t}\n\tcout << r << "" "" << p * m << endl;\n\treturn 0;\n}"	"declare g taking in int n and returning integer\nwhile _builtin_popcount(n) is greater than 1, set n to n & (n - 1)\nreturn n\nlet ints n, b, p, r = 0, and m\nread n, b, and p\nset m to n\nwhile n is greater than 1\ncreate int x = g(n)\nset r to r + x * (b)\nset r to r + x / 2\nset n to n - x / 2\nprint r, "" "", and p * m"
"int main() {\n\tint participants, bottles, towels;\n\tint total_b = 0, total_t = 0, matches;\n\tcin >> participants >> bottles >> towels;\n\ttotal_t = participants * towels;\n\twhile (participants != 1) {\n\t\tmatches = participants / 2;\n\t\tif (participants % 2 == 1) {\n\t\t\ttotal_b += (participants - 1) * bottles + matches;\n\t\t\tparticipants = participants / 2 + 1;\n\t\t} else {\n\t\t\ttotal_b += participants * bottles + matches;\n\t\t\tparticipants = participants / 2;\n\t\t}\n\t}\n\tcout << total_b << "" "" << total_t << endl;\n\treturn 0;\n}"	"create ints participants, bottles, and towels\nlet ints total_b = 0, total_t = 0, and matches\nread participants, bottles, and towels\nset total_t to the result of participants * towels\nwhile participants is not 1\nset matches to participants / 2\nif participants modulo 2 is equal to 1\nset total_ b to total_b + (participants - 1) * bottles + matches\nset participants to participants / 2 + 1\notherwise do\nset total_b to total_b + participants * bottles + matches\nset participants to the result of participants / 2\nprint total_b, "" "", and total_t"
"map<long long int, long long int> m1;\nmap<long long int, long long int>::iterator itr;\nint main() {\n\tlong long int n, b, p;\n\tcin >> n >> b >> p;\n\tlong long int ans2 = n * p;\n\tlong long int ans1 = 0;\n\twhile (n > 1) {\n\t\tlong long int i;\n\t\tfor (i = 0;; i++) {\n\t\t\tif (pow(2, i) > n) break;\n\t\t}\n\t\ti--;\n\t\tlong long int z = pow(2, i);\n\t\tans1 += (z / 2) * (2 * b + 1);\n\t\tn = n - z / 2;\n\t}\n\tcout << ans1 << "" "" << ans2 << endl;\n\treturn 0;\n}"	"create map m1 from long long ints to long long ints\ncreate map iterator itr from long long ints to long long ints\ncreate long long int n, b, and p\nread n, b, and p\nmake long long int ans2 = n * p\nmake long long int ans1 = 0\nwhile n is greater than 1\nlet long long int i\nfor i = 0, loop indefinitely\nif pow(2, i) is greater than n, break loop\ndecrease i\ncreate long long integer z = pow(2, i)\nset ans1 to ans1 + (z / 2) * (2 * b + 1)\nset n to n - z / 2\nprint ans1, "" "", and ans2"
int N;\nint A;\nint T;\nint values[1001][1001];\nint pagamento[1001];\nint aguinha;\nint strlen(char t[1001]) {\n\tint ret = 0;\n\twhile (t[ret] != '\0') { ret++; }\n\treturn ret;\n}\nint maxfunc(int t1, int t2) {\n\tint ret = t1;\n\tif (t2 > t1) { ret = t2; }\n\treturn ret;\n}\nint minfunc(int t1, int t2) {\n\tint ret = t1;\n\tif (t2 < t1) { ret = t2; }\n\treturn ret;\n}\nint epar(int x) {\n\tint ret = 0;\n\tif ((x % 2) == 0) { ret = 1; }\n\treturn ret;\n}\nint atoifunc(char x) {\n\treturn x - '0';\n}\nint main() {\n\tint result = 0;\n\tint size;\n\tN = 0;\n\tint N;\n\tint A;\n\tint T;\n\tcin >> N >> A >> T;\n\taguinha = A * 2 + 1;\n\tint njogos = 0;\n\tint resta = N;\n\twhile (resta != 1) {\n\t\tnjogos += resta / 2;\n\t\tif (epar(resta)) {\n\t\t\tresta = (resta / 2);\n\t\t} else {\n\t\t\tresta = (resta / 2) + 1;\n\t\t}\n\t}\n\tcout << njogos * aguinha << ' ' << N * T << endl;\n\treturn 0;\n}	N = int\nA = int\nT = int\nvalues = two dimensional int array of sizes 1001 and 1001\npagamento = int array of size 1001\naguinha = int\nin function strlen taking char array of size 1001 t and returning int\nret = int with ret = 0\nloop while t[ret] is not '\0' increment ret\nreturn ret\nin function maxfunc taking int t1, int t2 and returning int\nret = int with ret = t1\nif t2 > t1 set ret to t2\nreturn ret\nin function minfunc taking int t1, int t2 and returning int\nret = int with ret = t1\nif t2 < t1 set ret to t2\nreturn ret\nin function epar taking int x and returning int\nret = int with ret = 0\nif x is even set ret to 1\nreturn ret\nin function atoifunc taking char x and returning int\nreturn x - '0'\nresult = int with result = =\nsize = int\nset N to 0\nN = int\nA = int\nT = int\nread N then A then T\nset aguinha to A * 2 + 1\nnjogos = int with njogos = 0\nresta = int with resta = N\nloop while resta is not 1\nincrement njogos by resta / 2\nif epar of resta\nset resta to resta / a\nelse\nset resta to resta / 2 + 1\nprint njogos * aguinha and N * T
"int main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint fp = n * p;\n\tint m = 0;\n\twhile (n > 1) {\n\t\tint po = floor(log2(n));\n\t\tint compete = pow(2, po);\n\t\tint diff = n - pow(2, po);\n\t\tm += compete / 2;\n\t\tn = compete / 2 + diff;\n\t}\n\tint fb = m * 2 * b + m;\n\tcout << fb << "" "" << fp << endl;\n\treturn 0;\n}"	n, b, p = int\nread n then b then p\nfp = int with fp = n * p\nm = int with m = 0\nloop while n > 1\npo = int with po = floor of log2 of n\ncompete = int with compete = pow of 2, po\ndiff = int with diff = n - pow of 2, po\nincrement m by compete / 2\nset n to compete / 2 + diff\nfb = int with fb = m * 2 * b + m\nprint fb and fp
"int main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint ats1 = 0, ats2 = p * n;\n\twhile (n != 1) {\n\t\tint k = 1;\n\t\twhile (2 * k <= n) k *= 2;\n\t\tats1 += k * b + k / 2;\n\t\tn -= k / 2;\n\t}\n\tcout << ats1 << "" "" << ats2 << ""\n"";\n}"	let n, b, p be integers\nread n, b, p\nlet ats1 , ats2 be integers with ats1 = 0, ats2 = p * n\nwhile n is not equal to 1\nlet k be a integer with k = 1\nwhile 2 * k <= n , k is equal to k * 2\nincrement ats1 by k * b + k / 2\ndecrement n by k / 2\nprint ats1 and space and ats2 and newline
"int main() {\n\tint p, b, t, x;\n\tcin >> p >> b >> t;\n\tint match = 0;\n\tx = p;\n\twhile (p != 1) {\n\t\tmatch += (p / 2);\n\t\tp = (p / 2) + (p % 2);\n\t}\n\tcout << match + (2 * match * b) << "" "" << x * t << endl;\n}"	"create integer variables p, b, t and x\nread input to p, b and t\ncreate new integer match with value 0\nchange x to p\nwhile p != 1\nchange match to match + (p / 2)\nset p to (p / 2) + (p % 2)\nprint match + (2 * match * b), "" "" and x * t to the standard output"
"int main() {\n\tint n, p, b;\n\tcin >> n >> p >> b;\n\tcout << (n - 1) * p * 2 + (n - 1) << "" "";\n\tcout << b * n << endl;\n\treturn 0;\n}"	n, p, b = integers\nread n, p, b\nprint (n - 1) * p * 2 + (n - 1)\nprint b * n
"void solve() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint br = 0;\n\tint tr = n * p;\n\twhile (n > 1) {\n\t\tint x = 1;\n\t\twhile (2 * x < n) { x *= 2; }\n\t\tbr += x * (2 * b + 1);\n\t\tn -= x;\n\t}\n\tcout << br << "" "" << tr << endl;\n}\nint main() {\n\tsolve();\n}"	"in the function solve\nn, b, p = integers\nread n, b, p\nbr = integer with br = 0\ntr = integer with tr = n * p;\nwhile n > 1\nx = integer with x = 1\nwhile 2 * x < n, x = x * 2\nbr = br + x * (2 * b + 1\nn = n - x\nprint br,"" "",tr\ncall solve"
"int main() {\n\tint n, b, p, k, ptot, btot;\n\tcin >> n >> b >> p;\n\tptot = p * n;\n\tbtot = 0;\n\twhile (n > 1) {\n\t\tk = 1 << ((int)floor(log2(n)));\n\t\tn = n - (k / 2);\n\t\tbtot += ((k * b) + (k / 2));\n\t}\n\tcout << btot << "" "" << ptot << ""\n"";\n\treturn 0;\n}"	n, b, p, k, ptot, btot = int\nread n then b then p\nset ptot to p * n\nset btot to 0\nloop while n is greater than 1\nset k to 1 bitshift left by (floor of log2 of n) as int\ndecrement n by k / 2\nincrement btot by (k * b) + (k / 2)\nprint btot and ptot
"long long gcd(long long a, long long b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) {\n\treturn a * b / gcd(a, b);\n}\nlong long f(long long n, long long b) {\n\tif (n <= 1) return 0;\n\tlong long i = 1;\n\twhile (i * 2 <= n) i *= 2;\n\treturn f(n - i + i / 2, b) + i / 2 * (2 * b + 1);\n}\nint main() {\n\tlong long n, b, p;\n\tcin >> n >> b >> p;\n\tcout << f(n, b) << "" "" << n * p << endl;\n}"	"declare gcd with long longs a, b as arguments, returning long long\nif b is 0, return a from function\nreturn result of gcd(b,a%b)\ndeclare long long lcm with long longs a, b as arguments\nreturn a * b / gcd(a,b) from function\ndeclare long long f with long longs n, b as arguments\nif n is less than or equal to 1, return 0\ndeclare i as long long = 1\nwhile i * 2 is less than or equal to n, let i be i * 2\nreturn result of run f with (n - i + i / 2, b) as arguments + i / 2 * (2 * b + 1)\ndeclare long longs n, b, p\nread n read b read p\nprint result of run f(n,b), print "" "", n * p, newline"
"int main() {\n\tint n, b, p, m;\n\tcin >> n >> b >> p;\n\tp = p * n;\n\tfor (m = 0; n >= 2; m = m + n / 2, n = n / 2 + n % 2)\n\t\t;\n\tcout << (b * 2 + 1) * m << "" "" << p << endl;\n\treturn 0;\n}"	n, b, p, m = int\nread n then b then p\nset p to p * n\nfor m = 0 to n is greater or equal to 2 setting m to m + n / 2 and n to n / 2 + n mod 2\nnoop\nprint (b * 2 + 1) * m and p
"int p2[] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\nint main() {\n\tint n, b, p, k, m;\n\tint bn = 0;\n\tcin >> n >> b >> p;\n\tm = n;\n\twhile (m > 1) {\n\t\tfor (k = 8; k >= 0; k--) {\n\t\t\tif (p2[k] <= m) {\n\t\t\t\tbn += p2[k] / 2 + p2[k] * b;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tm = p2[k] / 2 + (m - p2[k]);\n\t}\n\tcout << bn << "" "" << n * p << endl;\n\treturn 0;\n}"	"declare integer array p2 = {1, 2, 4, 8, 16, 32, 64, 128, 256}\ndeclare integers n, b, p, k, m\ndeclare integer bn = 0\nread n, b, p\nlet m be n\nwhile m is greater than 1\nfor k = 8 to 0 inclusive, decrementing k\nif p2[k] is less than or equal to m\nincrement bn by p2[k] / 2 + p2[k] * b\nend loop\nlet m be p2[k] / 2 + (m - p2[k])\nprint bn and "" "" and n * p and newline"
"int water;\nint s, n, b, p;\nint main() {\n\tcin >> n >> b >> p;\n\tint k = n;\n\twater = 0;\n\twhile (n != 1) {\n\t\ts = n / 2;\n\t\tif (n % 2 == 0) {\n\t\t\tn /= 2;\n\t\t} else {\n\t\t\tn = n / 2 + 1;\n\t\t}\n\t\twater += s * (2 * b + 1);\n\t}\n\tcout << water << "" "" << k * p << endl;\n}"	"declare new integer water\ncreate integers s, n, b and p\nread from the input to n, b and p\ndeclare new integer called k = n\nset water to 0\nwhile n is not 1\nchange s to n / 2\nif n is even\nset n to n divided by 2\nelse\nchange n to n / 2 + 1\nchange water to sum of water and s * (2 * b + 1)\nprint water, "" "" and k * p to the standard output"
"inline long long read() {\n\tchar c = getchar();\n\twhile (c != '-' && (c < '0' || c > '9')) c = getchar();\n\tlong long k = 0, kk = 1;\n\tif (c == '-') c = getchar(), kk = -1;\n\twhile (c >= '0' && c <= '9') k = k * 10 + c - '0', c = getchar();\n\treturn kk * k;\n}\nvoid write(long long x) {\n\tif (x < 0) x = -x, putchar('-');\n\tif (x / 10) write(x / 10);\n\tputchar(x % 10 + '0');\n}\nvoid writeln(long long x) {\n\twrite(x);\n\tputs("""");\n}\nlong long n, b, p;\nint main() {\n\tn = read();\n\tb = read();\n\tp = read();\n\twrite((b + b + 1) * (n - 1));\n\tputchar(' ');\n\twriteln(p * n);\n}"	"function read (no args, return long long)\nc=getchar()\nwhile c is not '-' and (c < '0' or c > '9') c=getchar()\nk=0, kk=1\nif c is '-' c=getchar(), kk=-1\nwhile c >= '0' and c <= '9' k=k*10+c-'0', c=getchar()\nreturn kk*k\nfunction write (get long long x, return nothing)\nif x<0 x=-x, putchar('-')\nif x/10 write(w/10)\nputchar(x modulo 10+'0')\nfunction writlne (get long long x, return nothing)\nwrite(x)\nputs("""")\nn,b,p=long long\nn=read()\nb=read()\np=read()\nwrite((b+b+1)*(n-1))\nputchar(' ')\nwriteln(p*n)"
"void solve();\nvoid speed_up() {}\nint main() {\n\tspeed_up();\n\tsolve();\n\treturn 0;\n}\nvoid solve() {\n\tlong long n, b, p;\n\tcin >> n >> b >> p;\n\tlong long y = n * p;\n\tlong long sor = 0;\n\twhile (n > 1) {\n\t\tlong long st = 2;\n\t\twhile (st * 2 <= n) st *= 2;\n\t\tsor += (st / 2) * (b * 2 + 1);\n\t\tn -= st / 2;\n\t}\n\tcout << sor << "" "" << y << ""\n"";\n}"	in function solve that returns nothing\nin function speed_up that returns nothing\ncall speed_up\ncall solve\nin function solve that returns nothing\nn, b, p = long long\nread n, b, p\ny = long long = n * p\nsor = long long = 0\nwhile n > 1\nst = long long = 2\nwhile st * 2 <= n, then st = st * 2\nsor = sor + (st / 2) * (b * 2 + 1)\nn = n - st / 2\nprint sor y
int main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint bowl = 0, towl = n * p;\n\twhile (n > 1) {\n\t\tint k = pow(2, (int)(log(n) / log(2)));\n\t\tbowl += k / 2 * (2 * b + 1);\n\t\tn -= k / 2;\n\t}\n\tcout << bowl << ' ' << towl << endl;\n\treturn 0;\n}	declare ints n, b and p\nread variables n, b and p from the input\ncreate ints bowl = 0 and towl = n * p\nwhile n > 1\nnew integer k = pow(2, (log(n) / log(2)))\nincrease bowl by k / 2 * (2 * b + 1)\nchange n to n - k / 2\nprint bowl, ' ' and towl to the standard output
"int main() {\n\tint n, agua, toalha = 0;\n\tcin >> n >> agua >> toalha;\n\tint nrod, tagua, ttoalha = 0;\n\tnrod = n - 1;\n\ttagua = nrod + nrod * agua * 2;\n\tttoalha = toalha * n;\n\tcout << tagua << "" "" << ttoalha << endl;\n\treturn 0;\n}"	"declare new integers n, agua and toalha with toalha = 0\nread user input to n, agua and toalha\ndeclare integers nrod, tagua and ttoalha with ttoalha = 0\nassign n - 1 to nrod\nchange tagua to nrod + nrod * agua * 2\nassign toalha * n to ttoalha\nprint tagua, "" "" and ttoalha"
"int main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint bottles = 0;\n\tint towels = n * p;\n\twhile (n > 1) {\n\t\tint k = 0;\n\t\tfor (int i = 32 - 1; i >= 0; i--) {\n\t\t\tif (n & (1 << i)) {\n\t\t\t\tk = (1 << i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tn = (n - k) + k / 2;\n\t\tbottles += b * k + k / 2;\n\t}\n\tcout << bottles << "" "" << towels << ""\n"";\n}"	n, b, p = int\nread n then b then p\nbottles = int with bottles = 0\ntowels = int with towels = n * p\nloop while n is greater than 1\nk = int with k = 0\nfor i = 32 - 1 to 0 inclusive decrementing i\nif n bitwise-and (1 bitshift left by i) is 1\nset k to 1 bitshift left by i\nbreak\nset n to (n - k) + k / 2\nincrement bottles by b * k + k / 2\nprint bottles and towels
"int main() {\n\tint m, b, p, total = 0, total_p;\n\tcin >> m >> b >> p;\n\ttotal_p = m * p;\n\twhile (1) {\n\t\tint k = [](int n) -> int {\n\t\t\tint i = 1, res = pow(2, 0);\n\t\t\twhile (1) {\n\t\t\t\tint temp = pow(2, i);\n\t\t\t\tif (temp > n) break;\n\t\t\t\tres = temp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn res;\n\t\t}(m);\n\t\tint matches = k / 2;\n\t\ttotal += matches * (2 * b);\n\t\ttotal += matches;\n\t\tm = (k / 2) + (m - k);\n\t\tif (matches == 0) break;\n\t}\n\tcout << total << "" "" << total_p << endl;\n\treturn 0;\n}"	let m, b, p, total , total_p be integers with total = 0\nread m, b, p\nthe value of total_p = m * p\nwhile 1 is an infinite loop since condition is always true\nle k be a integer with k = [](int n) -> int\nlet i , res be integers with i = 1, res = 2 ^ 0\nwhile 1 is an infinite loop since condition is always true\nlet temp be a integer with temp = 2 ^ i\nif temp is greater than n, stop\nthe value of res = temp\nincrement i by 1\nreturn the value of res\nm\nlet matches be a integer with matches = k / 2\nincrement total by matches * (2 * b)\nincrement total by matches\nthe value of m = (k / 2) + (m - k)\nif matches is equal to 0 , stop\nprint total and space and total_p and newline
"int main() {\n\tint i, b, p, j, n, m, k;\n\tcin >> n >> b >> p;\n\tcout << (2 * b + 1) * (n - 1) << "" "" << n * p << endl;\n}"	i, b, p, j, n, m, k = int\nread n, b, p\nprint (2 * b + 1) * (n - 1) and space and n * p
"int main() {\n\tlong long n, b, p;\n\tcin >> n >> b >> p;\n\tlong long B = 0;\n\tlong long T = n * p;\n\twhile (n > 1) {\n\t\tlong long now = 1;\n\t\twhile (now * 2 <= n) now *= 2;\n\t\tB += (now / 2) * (2 * b + 1);\n\t\tn = now / 2 + (n - now);\n\t}\n\tcout << B << "" "" << T << endl;\n\treturn 0;\n}"	"declare new long longs n, b and p\nread variables n, b and p from the input\nB is a new long long = 0\ndeclare new long long called T = n * p\nwhile n > 1\ncreate long long variable with name now = 1\nwhile now * 2 <= n\nchange B to B + (now / 2) * (2 * b + 1)\nset n to now / 2 + (n - now)\nprint B, "" "" and T"
"int main() {\n\tint N, B, P;\n\tcin >> N >> B >> P;\n\tint Ile = 0;\n\tint Reczniki = N * P;\n\twhile (N > 1) {\n\t\tint Potega = 1;\n\t\twhile (Potega * 2 <= N) { Potega *= 2; }\n\t\tint IleMeczy = Potega / 2;\n\t\tIle += IleMeczy * 2 * B + IleMeczy;\n\t\tN = (N - Potega) + IleMeczy;\n\t}\n\tcout << Ile << "" "" << Reczniki << ""\n"";\n}"	"declare new integers N, B and P\nread from the input to N, B and P\nIle is a new integer variable with value 0\ncreate new integer variable Reczniki with value N * P\nwhile N > 1\ndeclare integer variable Potega with value 1\nwhile Potega * 2 <= N\ndeclare new integer IleMeczy = Potega / 2\nadd IleMeczy * 2 * B + IleMeczy to Ile\nchange N to (N - Potega) + IleMeczy\nprint Ile, "" "", Reczniki and ""\n"""
"int main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tcout << (n - 1) * (2 * b + 1) << "" "" << n * p << ""\n"";\n\treturn 0;\n}"	"create int n, b, p\nread n, b, p\nprint (n - 1) * (2 * b + 1), "" "", n*p and a newline"
"int main() {\n\tint P[9] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tint B = 0;\n\tint N = n;\n\twhile (n > 1) {\n\t\tint k;\n\t\tfor (int i = 8; i > -1; i--) {\n\t\t\tif (P[i] <= n) {\n\t\t\t\tk = P[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tB += k * (2 * b + 1) / 2;\n\t\tn -= k / 2;\n\t}\n\tcout << B << "" "" << N * p << endl;\n\treturn 0;\n}"	P=array of 9 int filled with 1,2,4,8,16,32,64,128,256\nn,b,p=int\nread n,b,p\nB=0\nN=n\nwhile n>1\nk=int\nfor i=8 down to -1 exclusive\nif P[i] <= n\nk=P[i]\nbreak\nadd k*(2*b+1)/2 to B\nsubtract k/2 from n\nprint B, space, N*p
"void fast() {}\nlong long mn = 1e9;\nvoid lucky(long long a, long long c, int b) {\n\tif (a > 1e11) return;\n\tif (a >= b && c == 0) mn = min(mn, a);\n\tlucky(a * 10 + 7, c - 1, b);\n\tlucky(a * 10 + 4, c + 1, b);\n}\nint n;\nvoid fff(string s, int c) {\n\tif (s.size() == 2 * n) {\n\t\tif (c == 0) cout << s << endl;\n\t\treturn;\n\t}\n\tfff(s + ""("", c + 1);\n\tif (c > 0) fff(s + "")"", c - 1);\n}\nlong long toint(string s) {\n\tlong long a = 0, c = 1;\n\t;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\ta += (s[s.size() - i - 1] - '0') * c;\n\t\tc *= 10;\n\t}\n\treturn a;\n}\nint main() {\n\tfast();\n\tlong long a, b = 0, c = 0, d = 1, sum = 0, x = 0;\n\tstring s, ss = """";\n\tcin >> a >> b >> c;\n\td = a;\n\twhile (a > 1) {\n\t\tx = a / 2;\n\t\ta -= x;\n\t\twhile (x--) sum += ((2 * b) + 1);\n\t}\n\tcout << sum << "" "" << d * c << ""\n"";\n\treturn 0;\n}"	"declare fast with no arguments, returning void\ndeclare mn = 1e9 as long long\ndeclare lucky with long longs a, c, integer b as arguments, returning void\nif a is greater than 1e11, return from function\nif a is greater than or equal to b and c is 0, let mn be minimum of mn and a\nrun lucky with a * 10 + 7, c - 1, b as arguments\nrun lucky with a * 10 + 4, c + 1, b as arguments\ndeclare integer n\ndeclare fff with string s, integer c as arguments, returning void\nif size of s is 2 * n\nif c is 0, print s and newline\nreturn from function\nrun fff with s + ""("", c + 1 as arguments\nif c is greater than 0, run fff with s + "")"", c - 1 as arguments\ndeclare toint with string s as argument, returning long long\ndeclare a = 0, c = 1 as long longs\nend statement\nfor i = 0 to size of s exclusive\nincrement a by (s[size of s - i - 1] - '0') * c\nlet c be c * 10\nreturn a from function\nrun fast\ndeclare a, b = 0, c = 0, d = 1, sum = 0, x = 0 as long longs\ndeclare strings s, ss = """"\nread a, b, c\nlet d be a\nwhile a is greater than 1\nlet x be a / 2\ndecrement a by x\nwhile decrement x is ture, increment sum by ((2 * b) + 1)\nprint sum and "" "" and d * c and ""\n"""
"long long int n, b, p;\nint main() {\n\tcin >> n >> b >> p;\n\tlong long int bByGame = b * 2 + 1;\n\tlong long int towels = p * n;\n\tlong long int bottles = 0;\n\twhile (n > 1) {\n\t\tlong long int num = log2(n);\n\t\tbottles += num * bByGame;\n\t\tn -= num;\n\t}\n\tcout << bottles << "" "" << towels << endl;\n\treturn 0;\n}"	"n, b, p = long long int\nread n, b, p\nbByGame = long long integer with bByGame = b * 2 + 1\ntowels = long long integer with towels = p * n\nbottles = long long integer with bottles = 0\nwhile n > 1\nnum = long long integer with num = log2(n)\nbottles = bottles + num * bByGame\nn = n - num\nprint bottles,"" "",towels"
"int min(int a, int b) {\n\treturn a < b ? a : b;\n}\nint max(int a, int b) {\n\treturn a > b ? a : b;\n}\nint main() {\n\tint n, b, p, matches = 0;\n\tint x = 256;\n\tcin >> n >> b >> p;\n\tint N = n;\n\twhile (n != 1) {\n\t\tif (x > n) {\n\t\t\tx /= 2;\n\t\t\tcontinue;\n\t\t}\n\t\tn -= x / 2;\n\t\tmatches += x / 2;\n\t}\n\tcout << matches * (1 + 2 * b) << "" "" << N * p << endl;\n}"	"function min with int arguments a and b that returns integer\nreturn a if a < b, or b otherwise\nmax is an integer function with int arguments a and b\nreturn a if a > b, or b otherwise\ndeclare integer variables n, b, p and matches with the value of matches = 0\ncreate integer variable with name x = 256\nread n, b and p\ndeclare integer N with value n\nwhile n != 1\nif x is greater than n\nchange the value of x to x divided by 2\nskip the rest of the loop\nsubtract x / 2 from n\nadd x / 2 to matches\nprint matches * (1 + 2 * b), "" "" and N * p to the standard output"
"int main() {\n\tlong long n, b, p;\n\tcin >> n >> b >> p;\n\tlong long s1 = 0LL, s2 = p * n;\n\twhile (n > 1) {\n\t\tlong long k = 1;\n\t\twhile (k < n) k *= 2;\n\t\tif (k > n) k /= 2;\n\t\ts1 += (k / 2) * (2 * b + 1);\n\t\tlong long m = n - k;\n\t\tlong long l = k / 2;\n\t\tn = l + m;\n\t}\n\tcout << s1 << "" "" << s2 << '\n';\n\treturn 0;\n}"	n, b, p = long long\nread n then b then p\ns1, s2 = long long with s1 = 0LL and s2 = p * n\nloop while n > 1\nk = long long with k = 1\nloop while k < n set k to k * 2\nif k > n set k to k / 2\nincrement s1 by (k / 2) * (2 * b + 1)\nm = long long with m = n - k\nl = long long with l = k / 2\nset n to l + m\nprint s1 and s2
const int maxn = 1e6 + 5;\nconst int mod = 1e9 + 7;\nlong long fac[maxn], y[maxn];\nlong long n, k;\nlong long qpow(long long a, long long b, long long c) {\n\tlong long ans = 1;\n\ta %= c;\n\tb %= c;\n\twhile (b > 0) {\n\t\tif (b % 2 == 1) ans = (ans * a) % c;\n\t\tb = b / 2;\n\t\ta = (a * a) % c;\n\t}\n\treturn ans;\n}\nint pow_2(int m) {\n\tint res = 1;\n\tint left = 1;\n\twhile (true) {\n\t\tif (res << left <= m && res << (left + 1) > m) return res << left;\n\t\tleft++;\n\t}\n}\nint main() {\n\tint n, b, p;\n\tint ans = 0;\n\tcin >> n >> b >> p;\n\tint tow = n * p;\n\tint left = 0;\n\twhile (n > 1) {\n\t\tint k = pow_2(n);\n\t\tleft = n - k;\n\t\tans += b * k + k / 2;\n\t\tn = k / 2 + left;\n\t}\n\tcout << ans << ' ' << tow << '\n';\n\treturn 0;\n}	create new constant integer maxn with value 1e6+5\ncreate constant integer variable mod = 1e9+7\ncreate long long arrays fac and y with size maxn\ndeclare long long variables n and k\nlong long function qpow with long long arguments a, b and c\ndeclare long long variable with name ans with value 1\nchange a to the remainder of a divided by c\nchange b to b modulo c\nwhile b > 0\nif b is even, set ans to (ans * a) modulo c\nchange b to b / 2\nchange a to a squared modulo c\nreturn ans\ninteger function pow_2 with integer argument m\ncreate new integer called res with value 1\ndeclare new integer variable left = 1\nlooping infinitely\nif res << left <= m and res << (left + 1) > m, return res\nincrement left\ncreate ints n, b and p\ndeclare new integer called ans with value 0\nread standard input to n, b and p\ndeclare integer tow with value n * p\ndeclare new integer called left with value 0\nwhile n > 1\ncreate integer k with value pow_2 of n\nset left to n - k\nadd b * k + k / 2 to ans\nchange n to k / 2 + left\nprint ans, ' ', tow and '\n' to standard output
"int main() {\n\tint participants, bottles, towels;\n\tint total_b = 0, total_t = 0, matches;\n\tcin >> participants >> bottles >> towels;\n\ttotal_t = participants * towels;\n\twhile (participants != 1) {\n\t\tmatches = participants / 2;\n\t\tif (participants % 2 == 1) {\n\t\t\ttotal_b += (participants - 1) * bottles + matches;\n\t\t\tparticipants = participants / 2 + 1;\n\t\t} else {\n\t\t\ttotal_b += participants * bottles + matches;\n\t\t\tparticipants = participants / 2;\n\t\t}\n\t}\n\tcout << total_b << "" "" << total_t << endl;\n\treturn 0;\n}"	let participants, bottles, towels be integers\nlet total_b , total_t , matches be integers with total_b = 0, total_t = 0\nread participants, bottles, towels\nthe value of total_t = participants * towels\nwhile participants is not equal to 1\nthe value of matches = participants / 2\nif participants modulo 2 is equal to 1\ntotal_b is equal to total_b + (participants - 1) * bottles + matches\nthe value of participants = participants / 2 + 1\nelse do the following\ntotal_b is equal to total_b + participants * bottles + matches\nthe value of participants = participants / 2\nprint total_b and space and total_t and newline
"int main() {\n\tint n, b, p;\n\tcin >> n >> b >> p;\n\tcout << (n - 1) * (b * 2 + 1) << "" "" << p * n << '\n';\n\treturn 0;\n}"	n, b, p = int\nread n then b then p\nprint (n - 1) * (b * 2 + 1) and p * n
"int N, B, P;\nint qplays;\nint qplayers;\nint qoutplayers;\nint tplays;\nint tplayers;\nvoid calc(int n) {\n\tint k = 1;\n\twhile (k < n) k <<= 1;\n\tif (k > n) k >>= 1;\n\tqplays = k - 1;\n\tqoutplayers = n - k;\n\tqplayers = 0;\n\twhile (k >= 1) {\n\t\tqplayers += k;\n\t\tk >>= 1;\n\t}\n\t--qplayers;\n}\nint main() {\n\tcin >> N >> B >> P;\n\ttplays = 0;\n\ttplayers = 0;\n\tqoutplayers = 0;\n\tint n = N;\n\tdo {\n\t\tcalc(n);\n\t\ttplayers += qplayers;\n\t\ttplays += qplays;\n\t\tn = 1 + qoutplayers;\n\t} while (qoutplayers > 0);\n\tcout << ((tplayers * B) + tplays) << "" "" << (N * P) << ""\n"";\n\treturn 0;\n}"	N, B, P = int\nqplays = int\nqplayers = int\nqoutplayers = int\ntplays = int\ntplayers = int\nin function calc taking int n\nk = int with k = 1\nloop while k < n set k to k bithsift left by 1\nif k > n set k to k bitshift right by 1\nset qplays to k - 1\nset qoutplayers to n - k\nset qplayers to 0\nloop while k >= 1\nincrement qplayers by k\nset k to k bitshift right by 1\ndecrement qplayers\nread N then B then P\nset tplays to 0\nset tplayers to 0\nset qoutplayers to 0\nn = int with n = N\ndo\ncall calc of n\nincrement tplayers by qplayers\nincrement tplays by qplays\nset n to 1 + qoutplayers\nwhile qoutplayers > 0\nprint ((tplayers * B) + tplays) and N * P
"long long n, b, p, x, ans;\nbool l = true;\nint main() {\n\tcin >> n >> b >> p;\n\tx = n;\n\twhile (n > 1) {\n\t\tans += (n / 2) * (b * 2 + 1);\n\t\tn = ceil(n / 2.0);\n\t}\n\tcout << ans << "" "" << x * p << endl;\n\treturn 0;\n}"	"n, b, p, x, ans = long long\nl = bool with l = true\nread n, b, p\nx = n\nwhile n > 1\nans = ans + (n / 2) * (b * 2 + 1)\nn = ceil(n / 2.0)\nprint ans,"" "",x * p"
"int main() {\n\tint n, m, p;\n\tcin >> n >> m >> p;\n\tint ans = 0;\n\tint c = n;\n\twhile (n != 1) {\n\t\tans += n / 2;\n\t\tn -= n / 2;\n\t}\n\tcout << ans * (m * 2 + 1) << "" "" << c * p << endl;\n}"	create integers n, m, p\nget n, m, p\ncreate integer ans with ans=0\ncreate integer c with c=n\nwhile n not equal to 1 do the following\nadd n/2 to ans\nsubtract n/2 from n\ncompute and print two expressions ans*(m*2+1) and c*p with a blank space between
"int p2[] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\nint main() {\n\tint n, b, p, k, m;\n\tint bn = 0;\n\tcin >> n >> b >> p;\n\tm = n;\n\twhile (m > 1) {\n\t\tfor (k = 8; k >= 0; k--) {\n\t\t\tif (p2[k] <= m) {\n\t\t\t\tbn += p2[k] / 2 + p2[k] * b;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tm = p2[k] / 2 + (m - p2[k]);\n\t}\n\tcout << bn << "" "" << n * p << endl;\n\treturn 0;\n}"	p2 = int array with the values 1, 2, 4, 8, 16, 32, 64, 128, 256\nn, b, p, k, m = int\nbn = int with bn = 0\nread n then b then p\nset m to n\nloop while m is greater than 1\nfor k = 8 to 0 inclusive decrementing k\nif p2[k] is less or equal to m\nincrement bn by p2[k] / 2 + p2[k] * b\nbreak\nset m to p2[k] / 2 + (m - p2[k])\nprint bn and n * p
"int main() {\n\tint n, p;\n\tstring str[45];\n\tlong long sum, now;\n\tcin >> n >> p;\n\tsum = 0, now = 0;\n\tfor (int i = n - 1; i >= 0; i--) cin >> str[i];\n\tfor (int i = 0; i <= n - 1; i++) {\n\t\tif (str[i] == ""half"") {\n\t\t\tsum += now * p;\n\t\t\tnow = now * 2;\n\t\t} else {\n\t\t\tsum += now * p + p / 2;\n\t\t\tnow = now * 2 + 1;\n\t\t}\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}"	"n, p = int\nstr = string array of size 45\nsum, now = long long\nread n then p\nset sum and now to 0\nfor i = n - 1 to 0 inclusive decrementing i read str[i]\nfor i = 0 to n - 1 inclusive\nif str[i] is ""half""\nincrement sum by now * p\nset now to now * 2\nelse\nincrement sum by now * p + p / 2\nset now to now * 2 + 1\nprint sum"
"int main() {\n\tlong long n, p;\n\tcin >> n >> p;\n\tstring str[n];\n\tlong long i;\n\tlong long ans, fans = 0;\n\tfor (i = 0; i < n; i++) cin >> str[i];\n\treverse(str, str + n);\n\tif (str[0] == ""half"")\n\t\tans = 2;\n\telse\n\t\tans = 1;\n\tfans += ans * p / 2;\n\tfor (i = 1; i < n; i++) {\n\t\tif (str[i] == ""half"")\n\t\t\tans *= 2;\n\t\telse\n\t\t\tans = ans * 2 + 1;\n\t\tfans += ans * p / 2;\n\t}\n\tcout << fans << endl;\n}"	"create long longs n, p\nread n read p\ncreate string array str with size n\ncreate long long i\ncreate long longs ans, fans with fans = 0\nfor i = 0 to n exclusive, read str[i]\nreverse sort elements from str to str + n\nif str[0] is ""half""\nset ans to 2\nelse\nset ans to 1\nincrement fans by ans * p / 2\nfor i = 1 to n exclusive\nif str[i] is ""half""\nset ans to ans * 2\nelse\nset ans to ans * 2 + 1\nincrement fans by ans * p / 2\nprint fans print newline"
"void solve() {\n\tint n, p;\n\tcin >> n >> p;\n\tlong double ans = 0;\n\tint cnt = 0;\n\tvector<string> v;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tv.push_back(s);\n\t}\n\treverse(v.begin(), v.end());\n\tfor (int i = 0; i < n; i++) {\n\t\tif (v[i] == ""halfplus"") {\n\t\t\tans += 0.5;\n\t\t\tans *= 2;\n\t\t\tcnt++;\n\t\t} else {\n\t\t\tans *= 2;\n\t\t}\n\t}\n\tcout << (long long)(ans)*p - cnt * (p / 2) << endl;\n}\nint main() {\n\tsolve();\n\treturn 0;\n}"	"declare solve\ncreate ints n and p\nread n and p\nlet long double ans = 0\nlet int cnt = 0\ncreate string vector v\nfor i = 0 to n exclusive\nlet string s\nread s\nappend s to vector v\nreverse order of contents of vector v\nfor i = 0 to n exclusive\nif v[i] is equal to ""halfplus""\nset ans to ans + 0.5\nset ans to ans * 2\nincrement cnt\notherwise do:\nset ans to ans * 2\nprint the result of (long long)(ans)*p - cnt * (p / 2)\ncall solve()"
"int main() {\n\tstring str[41];\n\tint n, p, i, flag = 0;\n\tlong long a = 0;\n\tcin >> n >> p;\n\tfor (i = 1; i <= n; i++) { cin >> str[i]; }\n\tif (str[i - 1] == ""halfplus"") {\n\t\ta += p / 2;\n\t\tflag++;\n\t}\n\tfor (int j = i - 2; j > 0; j--) {\n\t\tif (str[j] == ""halfplus"") {\n\t\t\ta = a + (a + flag * p / 2 + p / 2);\n\t\t\tflag++;\n\t\t}\n\t\tif (str[j] == ""half"") { a = a + (a + flag * p / 2); }\n\t}\n\tcout << a << endl;\n}"	"str = string array of size 41\nn, p, i, flag = int with flag = 0\na = long long with a = 0\nread n then p\nfor i = 1 to n inclusive read str[i]\nif str[i - 1] is ""halfplus""\nincrement a by p / 2\nincrement flag\nfor j = i - 2 to 0 decrementing j\nif str[j] is ""halfplus""\nset a to a + (a + flag * p / 2 + p / 2)\nincrement flag\nif str[j] is ""half"" increment a by a + flag * p / 2\nprint a"
"string op[444];\nint main() {\n\tlong long n, p;\n\tcin >> n >> p;\n\tp /= 2;\n\tfor (int i = 1; i <= n; i++) { cin >> op[i]; }\n\tlong long ans = 0, send = 0;\n\tfor (int i = n; i >= 1; i--) {\n\t\tsend *= 2;\n\t\tif (op[i] == ""halfplus"") { send++; }\n\t\tans += send;\n\t}\n\tcout << ans * p << endl;\n\treturn 0;\n}"	op = array of strings 444\nlet n, p be long integers\nread n and p\nthe value of p = p / 2\nfor i = 1 to n inclusive, read op[i]\nlet ans, send be long integers with ans = 0, send = 0\nfor i is equal to n , i >= 1, decrement i by 1\nsend = send * 2\nif op[i] is equal to halfplus , increment send by 1\nincrement ans by send\nprint ans * p and newline
"int GCD(int a, int b) {\n\tif (a < b) swap(a, b);\n\ta %= b;\n\tif (a == 0)\n\t\treturn b;\n\telse\n\t\treturn GCD(a, b);\n}\nconst int INF = 1000000000;\nconst long long INF64 = 1e18;\nconst int N = 2020;\nconst int M = 2000;\nconst int MOD = 1000000007;\nint main() {\n\tlong long n, p;\n\tcin >> n >> p;\n\tvector<int> a(n);\n\tfor (int i = 0; i < int(n); i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tif (s == ""half"")\n\t\t\ta[i] = 0;\n\t\telse\n\t\t\ta[i] = 1;\n\t}\n\tlong long k = 0;\n\tlong long half = 0;\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tk = k * 2 + a[i];\n\t\thalf += a[i];\n\t}\n\tlong long res = k * p - half * (p / 2);\n\tcout << res << endl;\n}"	in the function GCD that takes integer a, b\nif a < b, swap a and b\na = a modulo b\nif a is 0\nreturn b\nelse\nreturn GCD of a and b\nINF = const integer with INF = 1000000000\nINF64 = const long long with INF64 = 1e18;\nN = const integer with N = 2020\nM = const integer with M = 2000\nMOD = const integer with MOD = 1000000007\nn, p = long long\nread n, p\na = vector of integer with a = n\nfor i = 0 to cast to int(n)\ns = string\nread s\nif s is half\na[i] = 0\nelse\na[i] = 1\nk = long long with k = 0\nhalf = long long with half = 0\nfor i = n - 1 down to 0\nk = k * 2 + a[i]\nhalf = half + a[i]\nres = long long with res = k * p - half * (p / 2)\nprint res
"const int maxn = 5005;\nconst int inf = 0x3f3f3f3f;\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tstring s[50];\n\tfor (int i = 1; i <= a; i++) { cin >> s[i]; }\n\tlong long ans = b / 2, num = 1;\n\tfor (int i = a - 1; i >= 1; i--) {\n\t\tif (s[i] == ""halfplus"") {\n\t\t\tans += (num + 0.5) * b;\n\t\t\tnum = num * 2 + 1;\n\t\t} else {\n\t\t\tans += num * b;\n\t\t\tnum *= 2;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	set maxn to 5005\nassign 0x3f3f3f3f to inf\ncreate int a and b\nread a, b\ncreate string s of size 50\nfor i=1 to a inclusive, read s[i]\nset ans to b/2 and num to 1\nfor i=a-1 to 1 inclusive\nif s[i] = halfplus\nset ans to ans + (num + 0.5) * b\nassign num*2 + 1 to num\nelse\nset ans to ans + bum*b\nnum= num*2\nprint ans
"string s[2525];\nint main() {\n\tlong long n, p, m = 0, l = 0;\n\tcin >> n >> p;\n\tfor (int i = 1; i <= n; i++) cin >> s[i];\n\tfor (int i = n; i >= 1; i--) {\n\t\tm *= 2;\n\t\tif (s[i] == ""halfplus"") m++;\n\t\tl += m;\n\t}\n\tcout << l * p / 2 << endl;\n\treturn 0;\n}"	"create string array s with size 2525\ncreate long longs n, p, m, l, with m = 0, l = 0\nread n read p\nfor i = 1 to n inclusive, read s[i]\nfor i = n to 1 inclusive, decrementing i\nset m to m * 2\nif s[i] is ""halfplus"" increment m\nincrement l by m\nprint l * p / 2 print newline"
"int main() {\n\tint n, p, halfs = 0;\n\tlong long current = 0;\n\tcin >> n >> p;\n\tstack<string> s;\n\tstring temp;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> temp;\n\t\ts.push(temp);\n\t\tif (temp == ""halfplus"") halfs++;\n\t}\n\tif (s.top() == ""halfplus"") {\n\t\tcurrent = 1;\n\t\ts.pop();\n\t}\n\twhile (!s.empty()) {\n\t\tcurrent *= 2;\n\t\tif (s.top() == ""halfplus"") current++;\n\t\ts.pop();\n\t}\n\tcurrent = current * p - (0.5 * p * halfs);\n\tcout << current << endl;\n\treturn 0;\n}"	"declare integers n, p and halfs where halfs = 0\ncreate long long current = 0\nread n and p from the user input\ncreate new stack of strings s\ncreate string variable temp\nfor i from 0 to n exclusive\nread standard input to temp\npush temp to the stack s\nif temp is equal to ""halfplus"", increment halfs\nif top element of s is equal to ""halfplus""\nassign 1 to current\nremove top element from s\nloop while s is not empty\nchange the value of current to current multiplied by 2\nif value of the top element of s is ""halfplus"", increment current by one\nremove top element from s\nchange current to current * p - (0.5 * p * halfs)\nprint current"
"long long ret[50];\nint main() {\n\tint n, p;\n\tcin >> n >> p;\n\tlong long ans = 1, tmp = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tif (s == ""half"")\n\t\t\tret[i] = 1;\n\t\telse\n\t\t\tret[i] = 2, tmp++;\n\t}\n\tfor (int i = n - 2; i >= 0; i--) {\n\t\tif (ret[i] == 1)\n\t\t\tans = ans * 2;\n\t\telse\n\t\t\tans = ans * 2 + 1;\n\t}\n\tans = ans * p - tmp * (p / 2);\n\tcout << ans << endl;\n\treturn 0;\n}"	let ret an array of long longs of length 50\nlet n, p ints\nread n and p\nlet ans, temp be long longs with ans = 1, tmp = 0\nfor i = 0 to n exclusive\nlet s a string\nread s\nif s is half\nset ret[i] to 1\notherwise\nset ret[i] to 2 and increment tmp\nfor i = n-2 down to 0 inclusive\nif ret[i] is 1\nmultiply ans by 2\notherwise\nset ans to ans * 2 + 1\nset ans to ans * p - tmp * (p / 2)\nprint ans
"int main() {\n\tlong long n, p, count = 0, y = 0;\n\tstring x;\n\tcin >> n >> p;\n\tvector<string> a;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\ta.push_back(x);\n\t}\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (a[i] == ""halfplus"") {\n\t\t\tcount = count * 2 + 1;\n\t\t\ty++;\n\t\t}\n\t\tif (a[i] == ""half"") { count = 2 * count; }\n\t}\n\tlong long ans = p * count - (p * y) / 2;\n\tcout << ans << endl;\n\treturn 0;\n}"	"create long long ints n, p, count = 0, and y = 0\nlet string x\nread n and p\nmake string vector a\nfor i = 0 to n exclusive\nread x\nappend x to vector a\nfor i = n - 1 to 0\nif a[i] is equal to ""halfplus""\nset count to count * 2 + 1\nincrement y\nif a[i] is equal to ""half"", set count to 2 * count\nlet long long int ans = p * count - (p * y) / 2\nprint ans"
"long long p, he, shu;\nint n;\nstring s[50];\nint main() {\n\tcin >> n >> p;\n\tp /= 2;\n\tfor (int i = 1; i <= n; i++) cin >> s[i];\n\tfor (int i = n; i >= 1; i--) {\n\t\tshu = shu * 2;\n\t\tif (s[i] != ""half"") shu += 1;\n\t\the += shu;\n\t}\n\tcout << he * p << endl;\n\treturn 0;\n}"	"declare long longs p, he and shu\ndeclare integer n\ndeclare an array of strings s with 50 elements\nread input to n and p\ndivide p by 2\nfor i = 1 to n inclusive, read s[i]\nfor integer i = n to 1 inclusive counting down\nset shu to shu * 2\nif s[i] != ""half"", increase shu by 1\nadd shu to he\nprint he * p"
"const int N = 1e6 + 5, MAX = 3e7, MOD = 1e9 + 7;\nint n, p;\nstring a[N];\nlong long ans;\nint main() {\n\tcin >> n >> p;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tlong long curr = 0;\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (a[i] == ""half"") {\n\t\t\tans += curr * p;\n\t\t\tcurr *= 2;\n\t\t} else {\n\t\t\tans += curr * p;\n\t\t\tans += p / 2;\n\t\t\tcurr *= 2;\n\t\t\tcurr++;\n\t\t}\n\t}\n\tcout << ans << ""\n"";\n}"	set N to 1e6 + 5, MAX to 3e7 and MOD = 1e9 + 7\ncreate int n and p\ncreate string a[N]\nlet ans be ans ans\nread n and p\nfor i=0 to n exclusive, read a[i]\ncurr = 0\nfor i= n-1 to 0 inclusive\nif a[i] = half\nset ans to ans + curr*p\nassign curr*2 to curr\nelse\nassign ans + curr * p to ans\nset ans to ans + p/2\nset curr= curr*2\nincrement curr\nprint ans and a newline
"int main() {\n\tlong long int n, p;\n\tcin >> n >> p;\n\tlong long int cost = 0;\n\tstring arr[n];\n\tfor (long long int i = 0; i < n; i++) { cin >> arr[i]; }\n\tlong long int num = 0;\n\tfor (long long int i = n - 1; i >= 0; i--) {\n\t\tif (arr[i] == ""halfplus"")\n\t\t\tnum = (num * 2) + 1;\n\t\telse\n\t\t\tnum = (num * 2);\n\t}\n\tfor (long long int i = 0; i < n; i++) {\n\t\tif (arr[i] == ""halfplus"") {\n\t\t\tcost += (num / 2) * p + (p / 2);\n\t\t\tnum = num - (num / 2) - 1;\n\t\t} else {\n\t\t\tcost += (num / 2) * p;\n\t\t\tnum = num - (num / 2);\n\t\t}\n\t}\n\tcout << cost << endl;\n}"	let n and p be long long integers\nread n and p\nlet cost be a long long in with value 0\narr with n elements = string\nread i long long elements into arr from 0 to n exclusive\nlet num = long long int with value 0\nfor i from n - 1 to 0 inclusive decreasing\nif arr at element i equals halfplus\nnum equals num times 2 plus 1\nelse\nnum equals itself times 2\nfor i from 0 to n exclusive\nif arr at i equals halfplus\ncost equals cost plus (num / 2) * p + (p / 2)\nnum equals num minus half of num minus 1\nelse\ncost equals cost plus (num / 2) * p\nnum equals num minus half of num\nprint cost
"const long long mod = 1e9 + 7;\nconst double esp = 1e-5;\nint main() {\n\tlong long n, p;\n\tstring a[50];\n\twhile (cin >> n >> p) {\n\t\tfor (long long i = 1; i <= n; i++) cin >> a[i];\n\t\tlong long num = 1, t = 1;\n\t\tfor (int i = n - 1; i >= 1; i--) {\n\t\t\tif (a[i] == ""halfplus"") {\n\t\t\t\tnum = (num + 0.5) * 2;\n\t\t\t\tt++;\n\t\t\t} else {\n\t\t\t\tnum = num * 2;\n\t\t\t}\n\t\t}\n\t\tlong long ans = 0;\n\t\tans = num * p - t * (p / 2);\n\t\tcout << ans << endl;\n\t}\n}"	"create constant long long mod with mod = 1e9 + 7\ncreate constant double esp with esp = 1e-5\ncreate long longs n, p\ncreate string array a with size 50\nwhile read n read p is true\nfor i = 1 to n inclusive, read a[i]\ncreate long longs num, t, with num = 1, t = 1\nfor i = n - 1 to 1 inclusive, decrementing i\nif a[i] is ""halfplus""\nset num to ( num + 0.5 ) * 2\nincrement t\nelse\nset num to num * 2\ncreate long long ans with ans = 0\nset ans to num * p - t * (p / 2)\nprint ans print newline"
"string s[41];\nlong long n, p, sum;\ndouble curr;\nint main() {\n\tcin >> n >> p;\n\tfor (int i = 0; i < n; i++) cin >> s[i];\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (s[i] == ""halfplus"") curr += 0.5;\n\t\tsum += curr * p;\n\t\tcurr *= 2;\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}"	"create string array s with size 41\ncreate long longs n, p, sum\ncreate double curr\nread n read p\nfor i = 0 to n exclusive, read s[i]\nfor i = n - 1 to 0 inclusive, decrementing i\nif s[i] is ""halfplus"", increment curr by 0.5\nincrement sum by curr * p\nset curr to curr * 2\nprint sum print newline"
"const int N = 1e6;\nint aa[N + 2];\nint main() {\n\tint n, p;\n\tcin >> n >> p;\n\tfor (int i = 1; i <= n; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tif (s == ""half"")\n\t\t\taa[i] = 0;\n\t\telse\n\t\t\taa[i] = 1;\n\t}\n\tlong long app, ans = 0;\n\tfor (int i = n; i >= 1; i--) {\n\t\tif (i == n)\n\t\t\tapp = 1;\n\t\telse\n\t\t\tapp = app * 2 + aa[i];\n\t\tans += ((app / 2) * 1LL) * p;\n\t\tif (app % 2) ans += (p / 2);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"	"declare constant int N = 1e6\ncreate integer array aa with size N + 2\ndeclare integers n and p\nread n and p\nfor i from 1 to n inclusive\ndeclare string s\nread input to s\nif s is equal to ""half""\nset aa[i] to 0\nelse\nset aa[i] to 1\ndeclare long longs app and ans where ans = 0\nfor integer i = n to 1 inclusive decrementing i\nif i = n\nset app to 1\nelse\nset app to app * 2 + aa[i]\nadd ((app / 2) * 1LL) * p to ans\nif app is odd, increase ans by p / 2\nprint ans"
"int main() {\n\tint n, p;\n\tcin >> n;\n\tcin >> p;\n\tlong double apples = 0;\n\tlong long answer = 0;\n\tvector<string> data;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring temp;\n\t\tcin >> temp;\n\t\tdata.push_back(temp);\n\t}\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (data[i] == ""halfplus"") {\n\t\t\tapples += 0.5;\n\t\t\tapples *= 2;\n\t\t\tanswer += (apples / 2.0) * p;\n\t\t} else {\n\t\t\tapples *= 2;\n\t\t\tanswer += (apples / 2.0) * p;\n\t\t}\n\t}\n\tcout << answer << endl;\n\tcin >> n;\n}"	"create ints n and p\nread n\nread p\ncreate long double apples = 0\nlet long long answer = 0\ncreate string vector data\nfor i = 0 to n exclusive\ncreate string temp\nread temp\nappend temp to data\nfor i = n - 1 to 0\nif data[i] is equal to ""halfplus""\nset apples to apples + 0.5\nset apples to apples * 2\nset answer to answer + (apples / 2.0) * p\nelse\nset apples to apples * 2\nset answer to answer + (apples / 2.0) * p\nprint answer\nread n"
"string op[444];\nint main() {\n\tlong long n, p;\n\tcin >> n >> p;\n\tp /= 2;\n\tfor (int i = 1; i <= n; i++) { cin >> op[i]; }\n\tlong long ans = 0, send = 0;\n\tfor (int i = n; i >= 1; i--) {\n\t\tsend *= 2;\n\t\tif (op[i] == ""halfplus"") { send++; }\n\t\tans += send;\n\t}\n\tcout << ans * p << endl;\n\treturn 0;\n}"	"declare string array op size 444\ndeclare long longs n, p\nread n, p\nlet p be p / 2\nfor i = 1 to n inclusive, read op[i]\ndeclare long longs ans = 0, send = 0\nfor i = n to 1 inclusive, decrementing i\nlet send be send * 2\nif op[i] is ""halfplus"", increment send\nincrement ans by send\nprint ans * p, newline"
long long n, p, k = 0;\nint main() {\n\tcin >> n >> p;\n\tvector<bool> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring t;\n\t\tcin >> t;\n\t\ta[i] = t.length() > 4;\n\t\tk += a[i];\n\t}\n\tdouble ans = 0;\n\tlong long sum = 0;\n\treverse(a.begin(), a.end());\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (a[i]) {\n\t\t\tans = ans * 2 + 0.5;\n\t\t\tsum += ans * p;\n\t\t} else {\n\t\t\tans *= 2;\n\t\t\tsum += ans * p;\n\t\t}\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}	create long longs n, p, k with k = 0\nread n read p\ncreate boolean vector a initialized with n\nfor i = 0 to n exclusive\ncreate string t\nread t\nset a[i] to length of t is greater than 4\nincrement k by a[i]\ncreate double ans with ans = 0\ncreate long long sum with sum = 0\nreverse sort elements from beginning of a to end of a\nfor i = 0 to n exclusive\nif a[i] is true\nset ans to ans * 2 + 0.5\nincrement sum by ans * p\nelse\nset ans to ans * 2\nincrement sum by ans * p\nprint sum print newline
"int N;\nlong long P;\nstring S[2000010];\nint main() {\n\tcin >> N >> P;\n\tfor (int i = 1; i <= N; i++) { cin >> S[i]; }\n\tlong double fans = 0;\n\tfor (int i = N; i >= 1; i--) {\n\t\tif (S[i] == ""halfplus"") {\n\t\t\tfans += 0.5;\n\t\t\tfans *= 2.00000000;\n\t\t} else {\n\t\t\tfans *= 2.00000000;\n\t\t}\n\t}\n\tlong double cost = 0;\n\tfor (int i = 1; i <= N; i++) {\n\t\tcost += (fans / 2.00000) * (P);\n\t\tif (S[i] == ""half"") {\n\t\t\tfans /= 2.000;\n\t\t} else {\n\t\t\tfans /= 2.000;\n\t\t\tfans -= 0.500;\n\t\t}\n\t}\n\tcout << fixed << setprecision(0) << cost << endl;\n\treturn 0;\n}"	"N=int\nP=long long\nS=array of 2000010 string\nread N,P\nfor i=1 to N inclusive read S[i]\nfans=0\nfor i=N down to 1 inclusive\nif S[i] is ""halfplus""\nadd 0.5 to fans\nmultiply fans by 2\nelse\nmultiply fans by 2\ncost=0\nfor i=1 to N inclusive\nadd (fans/2)*P to cost\nif S[i] is ""half""\ndivide fans by 2\nelse\ndivide fans by 2\nsubtract 0.5 from fans\nprint cost with 0 decimal digits"
"long long c[500005], s, bit[100], origin[100];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tlong long a, b;\n\t\tcin >> a >> b;\n\t\ts ^= a, c[i] = a ^ b;\n\t}\n\tint cnt = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < cnt; ++j)\n\t\t\tif (c[i] & bit[j]) c[i] ^= origin[j];\n\t\tif (c[i]) origin[cnt] = c[i], bit[cnt] = c[i] & -c[i], ++cnt;\n\t}\n\tfor (int j = 0; j < cnt; ++j)\n\t\tif (s & bit[j]) s ^= origin[j];\n\tif (s)\n\t\tcout << ""1/1"" << endl;\n\telse\n\t\tcout << (1ll << cnt) - 1 << '/' << (1ll << cnt) << endl;\n\treturn 0;\n}"	c array of size 500005],s,bit array size of 100, origin array size of 100 = long long integers\nintegers = n\nread n\nfor i = 0 to less than n do the following\nong a,b = long long integers\nread a,b\nset s ^= a, c[i] to a ^ b\nset integer cnt to 0\nfor i = 0 to less than n do the following\nfor j = 0 to less than cnt do the following\nif c[i] & bit[j] is true\nset if (c[i]) is true then origin[cnt] equals c[i], bit[cnt] equals c[i] and -c[i], and add 1 to cnt\nfor j = 0 to less than cnt do the following\nif s & bit[j] is true\nif s is true\noutput 1/1\nelse\noutput (1ll,cnt) - 1,/,(1ll << cnt)
"int main() {\n\tint n;\n\tvector<int> T(1001, 1);\n\tvector<char> rla;\n\tcin >> n;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tchar c;\n\t\tcin >> c;\n\t\trla.push_back(c);\n\t}\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (rla[i] == 'R') {\n\t\t\tT[i + 1] = max(T[i + 1], T[i] + 1);\n\t\t} else if (rla[i] == '=') {\n\t\t\tT[i + 1] = T[i];\n\t\t}\n\t}\n\tfor (int i = n - 2; i >= 0; i--) {\n\t\tif (rla[i] == 'L') {\n\t\t\tT[i] = max(T[i], T[i + 1] + 1);\n\t\t} else if (rla[i] == '=') {\n\t\t\tT[i] = T[i + 1];\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) { cout << T[i] << "" \n""[i == n - 1]; }\n\tcout << flush;\n\treturn 0;\n}"	"create integer n\ncreate vector of integers T with 1001 element filled with 1\ncreate vector of chararcters rla\nread n\nfor i = 0 to n - 1 exclusive\ncreate character c\nread c\npush c to rla\nfor integer i = 0 to n - 1 exclusive\nif rla[i] is 'R'\nT[i + 1] = max(T[i + 1], T[i] + 1)\nelse if rla[i] is '='\nT[i + 1] = T[i]\nfor i = n - 2 to 0\nif rla[i] is 'L'\nassign value of max of T[i] and T[i + 1] + 1 to T[i]\nelse if rla[i] is '='\nset T[i] to T[i + 1]\nfor i = 0 to n exclusive print T[i], "" \n"" and [i == n - 1]\nprint flush"
"vector<int> vector_in(int n) {\n\tvector<int> v(n);\n\tfor (int i = 0; i < n; i++) cin >> v[i];\n\treturn v;\n}\nvoid vector_out(vector<int> v) {\n\tfor (int i = 0; i < v.size(); i++) cout << v[i] << "" "";\n\tcout << endl;\n}\nint vector_sum(vector<int> v) {\n\tint sum;\n\tfor (int i = 0; i < v.size(); i++) sum += v[i];\n\treturn sum;\n}\nint main() {\n\tint n;\n\tvector<int> T(1001, 1);\n\tvector<char> rla;\n\tcin >> n;\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tchar c;\n\t\tcin >> c;\n\t\trla.push_back(c);\n\t}\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (rla[i] == 'R') {\n\t\t\tT[i + 1] = max(T[i + 1], T[i] + 1);\n\t\t} else if (rla[i] == '=') {\n\t\t\tT[i + 1] = T[i];\n\t\t}\n\t}\n\tfor (int i = n - 2; i >= 0; i--) {\n\t\tif (rla[i] == 'L') {\n\t\t\tT[i] = max(T[i], T[i + 1] + 1);\n\t\t} else if (rla[i] == '=') {\n\t\t\tT[i] = T[i + 1];\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) { cout << T[i] << "" \n""[i == n - 1]; }\n\tcout << flush;\n\treturn 0;\n}"	"vector_in is a int vector function with int argument n\ncreate vector of integers v with n elements\nloop i from 0 to n exclusive, reading v[i]\nreturn v\nfunction vector_out with vector of ints argument v\nfor i from 0 to length of v exclusive, print v[i] and "" ""\nprint new line\nfunction vector_sum with vector of ints argument v that returns integer\ncreate integer sum\nfor i = 0 to length of v exclusive, increase sum by v[i]\nreturn sum\ndeclare int n\ncreate vector of integers T with 1001 element filled with 1\ncreate characters vector rla\nread input to n\nloop i from 0 to n - 1 exclusive\ndeclare character variable c\nread c\npush c into rla\nfor i from 0 to n-1 exclusive\nif rla[i] = 'R'\nset T[i + 1] to max of T[i + 1] and T[i] + 1\nelse if rla[i] is '='\nchange T[i + 1] to T[i]\nfor integer i = n - 2 to 0 inclusive counting down\nif rla[i] is equal to 'L'\nassign max of T[i] and T[i + 1] + 1 to T[i]\nelse if rla[i] is '='\nset T[i] to T[i + 1]\nfor i from 0 to n exclusive, print T[i] and "" \n""[i=n - 1]\nprint flush"
"long long int n;\nint answer[2000];\nint main() {\n\tcin >> n;\n\tint small = 1;\n\tchar s[n];\n\tfor (int i = 0; i < n - 1; i++) cin >> s[i];\n\tfor (int i = 0; i < n; i++) answer[i] = 1;\n\tfor (int i = n - 2; i >= 0; i--) {\n\t\tif (s[i] == 'L')\n\t\t\tanswer[i] = answer[i + 1] + 1;\n\t\telse if (s[i] == '=')\n\t\t\tanswer[i] = answer[i + 1];\n\t}\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (s[i] == 'R' && answer[i] >= answer[i + 1])\n\t\t\tanswer[i + 1] = answer[i] + 1;\n\t\telse if (s[i] == '=')\n\t\t\tanswer[i + 1] = answer[i];\n\t}\n\tfor (int i = 0; i < n; i++) cout << answer[i] << "" \n""[i == n - 1];\n}"	n = long long integers\nintegers = answer array with size of 2000\nread n\nset integer small to 1\ncreate character variable s\nread n values into array s\nmake n values of array answer = 1\nfor i = n - 2 to greater than or equal to 0 then do\nif s[i] is L then do the following\nset answer[i] to answer[i + 1] + 1\nelse if s[i] is = then do the following\nset answer[i] to answer[i + 1]\nfor i = 0 to less than n - 1 do the following\nif s[i] = R and answer[i] is greater than or equal to answer[i + 1] then do the following\nset answer[i + 1] to answer[i] + 1\nelse if s[i] is = then do the following\nset answer[i + 1] to answer[i]\noutput n values from array answer
"long long const mod = 1000000007;\nlong long powmod(long long a, long long b) {\n\tlong long res = 1;\n\ta %= mod;\n\tassert(b >= 0);\n\tfor (; b; b >>= 1) {\n\t\tif (b & 1) res = res * a % mod;\n\t\ta = a * a % mod;\n\t}\n\treturn res;\n}\nifstream in(""txt.in"");\nofstream out(""txt.out"");\nint main() {\n\tcout << fixed << setprecision(12);\n\tlong long a, b;\n\tcin >> a >> b;\n\tlong long n;\n\tcin >> n;\n\tdouble mx = 2e9;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tlong long x, y, k;\n\t\tcin >> x >> y >> k;\n\t\tdouble dis = sqrt((x - a) * (x - a) + (y - b) * (y - b)) / k;\n\t\tmx = min(mx, dis);\n\t}\n\tcout << mx << '\n';\n\treturn 0;\n}"	"mod = const long long with mod = 1000000007\nin function powmod taking two long longs a and b and returning a long long\nres = long long with res = 1\nset a to a mod mod\ncall assert on b is greater or equal to 0\nloop while b is not 0 setting b to b bitwise rightshift 1 each time\nif b bitwise and 1 is 1 then set re to res * a modulo mod\nset a to a * a modulo mod\nreturn res\nin = ifstream of ""txt.in""\nout = ofstream of ""txt.out""\ncall fixed and setprecision of 12 on cout\na, b = long long\nread a then b\nn = long long\nread n\nmx = double with mx = 2e9\nfor i = 1 to n inclusive\nx, y, k = long long\nread x then y then k\ndis = double with dis = result of sqrt of (x - a) * (x - a) + (y - b) * (y - b) / k\nmx = min of mx and dis\nprint mx"
"int main() {\n\tint n, i, a[100000], b[100000];\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (i = 0; i < n - 1; i++) { b[i] = a[i] + a[i + 1]; }\n\tb[n - 1] = a[n - 1];\n\tfor (i = 0; i < n - 1; i++) { cout << b[i] << "" ""; }\n\tcout << b[n - 1] << endl;\n\treturn 0;\n}"	"create integers n and i and an arrays of integers a and b with size 100000\nread n\nread n elements into a\nfor i = 0 to n - 1 exclusive, set value of b[i] to a[i] + a[i + 1]\nset value of b[n - 1] to a[n - 1]\nfor i = 0 to n - 1 exclusive print b[i] and "" ""\nprint b[n - 1]"
"int n, z, a;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a;\n\t\tif (i != 1) { cout << a + z << "" ""; }\n\t\tz = a;\n\t}\n\tcout << a << endl;\n\treturn 0;\n}"	"declare integers n, z and a\nread n\nfor integer i = 1 to n inclusive\nread a\nif i != 1, print a + z and "" ""\nset z to a\nprint a"
"int main() {\n\tint n;\n\tcin >> n;\n\tlong long a[100050];\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 1; i < n; i++) cout << a[i] + a[i - 1] << "" "";\n\tcout << a[n - 1] << endl;\n\treturn 0;\n}"	"declare integer variable n\nread n\ncreate long long array a with 100050 elements\nfor integer i = 0 to n exclusive, read a[i]\nfor integer i = 1 to n exclusive, print a[i] + a[i - 1] and "" ""\nprint a[n - 1]"
"int main() {\n\tlong long int n, i;\n\tcin >> n;\n\tlong long int arr[n];\n\tfor (i = 0; i < n; i++) { cin >> arr[i]; }\n\tfor (i = 0; i < n; i++) {\n\t\tif (i == n - 1) {\n\t\t\tcout << arr[n - 1] << endl;\n\t\t} else {\n\t\t\tcout << arr[i] + arr[i + 1] << "" "";\n\t\t}\n\t}\n}"	"create long long integers n, i\nread n\ncreate long long integer array arr of size n\nfor i = 0 to n exclusive, read arr[i]\nfor i = 0 to n exclusive\nif i is n - 1\nprint arr[n-1] print newline\nelse\nprint arr[i] + arr[i+1] print "" """
int a[100005];\nint main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tfor (int i = 1; i <= n; i++) { cin >> a[i]; }\n\t\tfor (int i = 1; i < n; i++) { cout << a[i] + a[i + 1] << ' '; }\n\t\tcout << a[n] << endl;\n\t}\n}	a = int array of size 100005\nn = int\nwhile reading n\nfor i = i to n inclusive rad a[i]\nfor i = 1 to n print a[i] + a[i + 1]\nprint a[n]
"int main() {\n\tint n;\n\tint k = 0, x;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> x;\n\t\tif (i != 1) cout << x + k << "" "";\n\t\tk = x;\n\t}\n\tcout << x << endl;\n\treturn 0;\n}"	n =integer\nx, k = integers with k = 0\nRead n\nfor i = 0 to n exclusive\nRead x\nif i is not equal to 1, then print NO and a new line\nset k to x\nprint x and a new line
long long x[100005], y[100005];\nint main() {\n\tlong long a, b;\n\tcin >> a;\n\tmemset(x, 0, sizeof(x));\n\tmemset(y, 0, sizeof(y));\n\tfor (b = 0; b < a; b++) cin >> x[b];\n\tfor (b = 0; b < a; b++) y[b] = x[b] + x[b + 1];\n\tfor (b = 0; b < a - 1; b++) cout << y[b] << ' ';\n\tcout << y[a - 1] << endl;\n\treturn 0;\n}	x, y = long long arrays of size 100005 each\na, b = long long\nread a\nset x to all 0\nset y to all 0\nfor b = 0 to a read x[b]\nfor b = 0 to a set y[b] to x[b] + x[b + 1]\nfor b = 0 to a - 1 print y[b] and ' '\nprint y[a - 1]
"int main() {\n\tint n;\n\tcin >> n;\n\tint arr[n];\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tarr[i] += arr[i + 1];\n\t\tcout << arr[i] << "" "";\n\t}\n\tcout << arr[n - 1] << ""\n"";\n}"	n = integer\nread n\narr = integer array of size n\nfor i = 0 to n exclusive read arr[i]\nfor i = 0 to n-1 exclusive\nincrease arr[i] by arr[i+1]\nprint arr[i] followed by a space\nprint arr[n-1]
"int main() {\n\tint n, arr[100010];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> arr[i]; }\n\tfor (int i = 1; i < n; i++) { cout << arr[i] + arr[i - 1] << "" ""; }\n\tcout << arr[n - 1] << endl;\n\treturn 0;\n}"	"create integer n, create integer array arr with size 100010\nread n\nfor i = 0 to n exclusive, read arr[i1]\nfor i = 1 to n exclusive, print arr[i]+arr[i-1] print "" ""\nprint arr[n-1] print newline"
int main() {\n\tint n, ara[100000];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> ara[i]; }\n\tfor (int i = 0; i < n - 1; i++) { cout << ara[i] + ara[i + 1] << ' '; }\n\tcout << ara[n - 1] << endl;\n}	create integer n create integer array ara with size 100000\nread n\nfor i = 0 to n exclusive, read ara[i]\nfor i = 0 to n - 1 exclusive, print ara[i]+ara[i+1] print ' '\nprint ara[n-1] print newline
"int main() {\n\tint n, k1, k2, i;\n\tcin >> n;\n\tcin >> k1;\n\tfor (i = 1; i < n; i++) {\n\t\tcin >> k2;\n\t\tcout << k2 + k1 << "" "";\n\t\tk1 = k2;\n\t}\n\tcout << k1 << endl;\n\treturn 0;\n}"	"create integers n, k1, k2, i\nread n\nread k1\nfor i = 1 to n exclusive\nread k2\nprint k2 + k1 print "" ""\nset k1 to k2\nprint k1 print newline"
"int main() {\n\tint n, a[100001], r, s, b[100001], i, j = 0;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) cin >> a[i];\n\tj++;\n\tb[j] = a[n];\n\tfor (i = n; i > 1; i--) {\n\t\tr = a[i] + a[i - 1];\n\t\tj++;\n\t\tb[j] = r;\n\t}\n\tfor (i = j; i > 0; i--) {\n\t\tcout << b[i];\n\t\tif (i != 1) cout << "" "";\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"create int n, r, s i, j and arrays a and b of length 100001\nread n\nfor i=1 to n inclusive, read a[i]\nincrement j\nb[j] = a[n]\nfor i=n to 1 exclusive\nset r = a[i] + a[i - 1]\nadd 1 to j\nassign r to b[j]\nfor i=j to 0 exclusive\nprint b[i]\nif i different fro 1, print "" ""\nprint a newline"
"int main() {\n\tint n;\n\tint k = 0, x;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> x;\n\t\tif (i != 1) cout << x + k << "" "";\n\t\tk = x;\n\t}\n\tcout << x << endl;\n\treturn 0;\n}"	n =integer\nx, k = integers with k = 0\nRead n\nfor i = 1 to n exclusive\nRead x\nif i is not 1, then print x + k and a new line\nset k to x\nprint x and a new line
"int main() {\n\tint number, i, temp, flag, index = 0, result = 0;\n\tstring str;\n\tcin >> number;\n\tcin >> str;\n\tint arr[number] = {0};\n\tfor (i = 0; i < number; i++) {\n\t\tflag = 0;\n\t\ttemp = 0;\n\t\twhile (str[i] == 'B') {\n\t\t\ti++;\n\t\t\tflag = 1;\n\t\t\ttemp++;\n\t\t}\n\t\tif (flag == 1) {\n\t\t\ti--;\n\t\t\tresult++;\n\t\t\tarr[index] = temp;\n\t\t\tindex++;\n\t\t}\n\t}\n\tcout << result << endl;\n\tfor (i = 0; i < result; i++) {\n\t\tif (i == result - 1) {\n\t\t\tcout << arr[i] << endl;\n\t\t\tbreak;\n\t\t}\n\t\tcout << arr[i] << "" "";\n\t}\n\treturn 0;\n}"	"create int number, i, temp, flag, index and result, set index, result to 0\ncreate string str\nread number\nread str\nset arr[number] to 0\nfor i=0 to number exclusive\nassign 0 to flag\nset temp to 0\nwhile str[i] = B\nincrement i\nassign 1 to flag\nincrement temp\nif flag = 1\ndecrement i\nadd 1 to result\nassign temp to arr[index]\nincrement index\nprint result\nfor i=0 to result exclusive\nif i = result - 1\nprint arr[i]\nbreak\nprint arr[i], "" """
"int main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tint cnt = -1, ans[100] = {0};\n\tchar p = 'W';\n\tfor (int i = 0; i < n; ++i) {\n\t\tchar c = s[i];\n\t\tif (c == 'B') {\n\t\t\tif (p == 'W') { ++cnt; }\n\t\t\t++ans[cnt];\n\t\t}\n\t\tp = c;\n\t}\n\tcout << cnt + 1 << endl;\n\tif (cnt + 1 > 0) {\n\t\tbool first = true;\n\t\tfor (int i = 0; i <= cnt; ++i) {\n\t\t\tif (first)\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\tcout << "" "";\n\t\t\tcout << ans[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	"create int n\ncreate string s\nread n and s\ndeclare integer variable cnt = -1 and an array of integers ans with 100 elements filled with 0\ncreate character p = 'W'\nloop i from 0 to n exclusive\ndeclare character variable c = s[i]\nif c = 'B'\nif p = 'W'\nincrease ans[cnt]\nset p to c\nprint cnt + 1\nif cnt + 1 is greater than 0\ndeclare boolean first = true\nloop i from 0 to cnt inclusive\nif first is true\nset first to false\nelse\nprint "" ""\nprint ans[i]\nprint new line"
"int main() {\n\tint n;\n\tchar a[100005];\n\tint b[100005];\n\twhile (cin >> n) {\n\t\tmemset(a, 0, sizeof(a));\n\t\tmemset(b, 0, sizeof(b));\n\t\tcin >> a;\n\t\tint j = 1, count = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] == 'B')\n\t\t\t\tb[j]++;\n\t\t\telse if (a[i] == 'W' && a[i + 1] == 'B')\n\t\t\t\tj++;\n\t\t}\n\t\tfor (int i = 1; i <= j; i++)\n\t\t\tif (b[i] != 0) count++;\n\t\tcout << count << endl;\n\t\tif (count != 0) {\n\t\t\tfor (int i = 1; i < j; i++)\n\t\t\t\tif (b[i] != 0) cout << b[i] << "" "";\n\t\t\tcout << b[j] << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"n = int\na = char array of size 100005\nb = int array of size 100005\nloop while reading n\nset all values of a to 0\nset all values of b to 0\nread a\nj, count = int with j = 1 and count = 0\nfor i = 0 to n\nif a[i] is 'B'\nincrement b[j]\nelse if a[i] is 'W' and a[i + 1] is 'B'\nincrement j\nfor i = 1 to j inclusive\nif b[i] is not 0 then increment count\nprint count\nif count is not 0\nfor i = 1 to j\nif b[i] is not 0 print b[i] and "" ""\nprint b[j]"
"long long a, b;\nlong long ans[100];\nint flag = 0;\nint k;\nvoid dfs(long long a, int i) {\n\tif (flag || a > b) { return; }\n\tans[i] = a;\n\tif (a == b) {\n\t\tflag = 1;\n\t\tk = i;\n\t\treturn;\n\t}\n\tdfs(a * 2, i + 1);\n\tdfs(a * 10 + 1, i + 1);\n}\nint main() {\n\tcin >> a >> b;\n\tdfs(a, 0);\n\tif (flag == 0) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t\tcout << k + 1 << endl;\n\t\tcout << ans[0];\n\t\tfor (int i = 1; i <= k; i++) { cout << ' ' << ans[i]; }\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"	let a, b be long integers\nans = array of long integers of length 100\nlet flag be a integer with flag = 0\nlet k be a integer\nlet void dfs(long long a, int i) be a dfs function\nif flag or a greater than b , return the value\nthe value of ans[i] = a\nif a is equal to b\nflag is equal to 1\nk value is assigned to i\nreturn\ndepth first search of a * 2, i + 1\ndepth first search of a * 10 + 1, i + 1\nread a, b\ndepth first search of a, 0\nif flag is equal to 0\nprint NO and newline\nelse do the following\nprint YES and newline\nprint k + 1 and newline\nprint ans[0]\nfor i = 1 to k inclusive , print space and ans[i]\nprint newline
"int a, b;\nint main() {\n\tcin >> a >> b;\n\tvector<int> v;\n\tint ok = 1;\n\twhile (b > a) {\n\t\tv.push_back(b);\n\t\tif ((b & 1) == 0) {\n\t\t\tb = b / 2;\n\t\t} else if (b % 10 == 1) {\n\t\t\tb = b / 10;\n\t\t} else {\n\t\t\tok = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (b != a)\n\t\tok = 0;\n\telse\n\t\tv.push_back(a);\n\tif (!ok)\n\t\tcout << ""NO"" << endl;\n\telse {\n\t\tcout << ""YES"" << endl;\n\t\tcout << v.size() << endl;\n\t\tfor (int i = v.size() - 1; i > 0; i--) cout << v[i] << "" "";\n\t\tcout << v[0] << endl;\n\t}\n\treturn 0;\n}"	let a, b integers\nread a and b\nlet v be a vector of ints\nlet ok be an int with value 1\nwhile b > a\nappend b to v\nif b & 1 is 0\nset b to b / 2\nelse if b mod 10 is 1\nset b to b / 10\nelse\nset ok to 0\nbreak\nif b is different from a\nset ok to 0\nelse\nappend a to v\nif not ok\nprint NO\nelse\nprint YES\nprint the size of v\nfor i = size of v -1 to 0 exclusive, print v[i]\nprint v[0]
"long long a, b, n;\nlong long ans[1010];\nbool flag;\nvoid dfs(long long x, long long y, long long step) {\n\tans[step] = x;\n\tif (flag || x > y) return;\n\tif (x == y) {\n\t\tn = step;\n\t\tflag = true;\n\t\treturn;\n\t}\n\tdfs(x * 2, y, step + 1);\n\tif (!flag) dfs(x * 10 + 1, y, step + 1);\n}\nint main() {\n\twhile (cin >> a >> b) {\n\t\tflag = false;\n\t\tdfs(a, b, 1);\n\t\tif (flag) {\n\t\t\tcout << ""YES"" << endl;\n\t\t\tcout << n << endl;\n\t\t\tfor (int i = 1; i <= n; i++) cout << ans[i] << (i == n ? '\n' : ' ');\n\t\t} else {\n\t\t\tcout << ""NO"" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"	"declare long long variables a, b and n\ndeclare long long array ans with size 1010\ndeclare boolean flag\nfunction dfs with long long arguments x, y and step\nchange ans[step] to x\nif flag is true or x > y, return\nif x = y\nassign step to n\nset flag to true\nreturn\ncall dfs(x * 2, y, step + 1)\nif flag is false, call dfs(x * 10 + 1, y, step + 1)\nloop, reading a and b from the input\nchange flag to false\ncall dfs(a, b, 1)\nif flag is true\nprint ""YES""\nprint n\nloop i from 1 to n inclusive, print ans[i] and '\n' if i = n, or ' '\nelse\nprint ""NO"""
"stack<int> S;\nint funcion(long long a, long long b) {\n\tint r;\n\tif (a == b) return 1;\n\tif (a < b) {\n\t\tr = funcion(2 * a, b);\n\t\tif (r == 1) {\n\t\t\tS.push(1);\n\t\t\treturn 1;\n\t\t}\n\t\tr = funcion((10 * a) + 1, b);\n\t\tif (r == 1) {\n\t\t\tS.push(2);\n\t\t\treturn 1;\n\t\t}\n\t} else\n\t\treturn 0;\n}\nint main() {\n\tlong long a, b;\n\tint op, ans;\n\tcin >> a >> b;\n\tans = funcion(a, b);\n\tif (ans == 0)\n\t\tcout << ""NO"" << '\n';\n\telse {\n\t\tcout << ""YES"" << '\n';\n\t\tcout << S.size() + 1 << '\n';\n\t\tcout << a;\n\t\twhile (!S.empty()) {\n\t\t\top = S.top();\n\t\t\tS.pop();\n\t\t\tif (op == 1) {\n\t\t\t\ta *= 2;\n\t\t\t} else {\n\t\t\t\ta *= 10;\n\t\t\t\ta++;\n\t\t\t}\n\t\t\tcout << "" "" << a;\n\t\t}\n\t\tcout << '\n';\n\t}\n}"	"create integer stack S\ndeclare funcion with long longs a, b as arguments, returning integer\ncreate integer\nif a is b, return 1 from function\nif a is less than b\nset r to result of run funcion with 2 * a, b as arguments\nif r is 1\nadd element 1 to end of S\nreturn 1 from function\nset r to result of run funcion with (10 * a) + 1, b as arguments\nif r is 1\nadd element 2 to end of S\nreturn 1 from function\nelse\ncreate long longs a, b\ncreate integers op, ans\nread a read b\nset ans to result of run funcion with a, b as arguments\nif ans is 0\nprint ""NO"" print '\n'\nelse\nprint ""YES"" print '\n'\nprint size of S + 1 print '\n'\nprint a\nwhile S is not empty\nset op to top of S\nremove element from top of S\nif op is 1\nset a to a * 2\nelse\nset a to a * 10\nincrement a\nprint "" "" print a\nprint '\n'"
"int ASS[50];\nint sum;\nbool flag;\nint digui(int a, int b) {\n\tif (a < b) {\n\t\tflag = 1;\n\t\treturn 0;\n\t}\n\tif (a == b) return 0;\n\tif (a % 2 == 0) {\n\t\tsum++;\n\t\tASS[sum - 1] = a / 2;\n\t\treturn digui(a / 2, b);\n\t} else if (a % 10 == 1) {\n\t\tsum++;\n\t\tASS[sum - 1] = (a - 1) / 10;\n\t\treturn digui((a - 1) / 10, b);\n\t} else\n\t\tflag = 1;\n}\nint main() {\n\tint m, n;\n\tcin >> m >> n;\n\tdigui(n, m);\n\tif (flag == 0) {\n\t\tcout << ""YES"" << endl << sum + 1 << endl;\n\t\tfor (int i = sum - 1; i >= 0; i--) cout << ASS[i] << "" "";\n\t\tcout << n << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	ASS = array of integers of length 50\nlet sum be a integer\nlet flag be a boolean value\nlet int digui(int a, int b) accepts integer values\nif a is less than b\nset the value of flag to 1\nif a is equal to b , return 0\nif a modulo 2 is equal to 0\nincrease sum by 1\nlet ASS[sum - 1] is equal to a / 2\nreturn digui of a / 2, b\nelse if a modulo 10 is equal to 1\nincrease sum by 1\nlet ASS[sum - 1] is equal to (a - 1) / 10\nreturn digui of (a - 1) / 10, b\nelse do the following\nset the value of flag to 1\nlet m , n be integers\nread m and n\ndigui of n , m\nif flag is equal to 0\nprint YES and newline and sum + 1 and newline\nfor integer i = sum - 1 , i >= 0, decrease i by 1 , print ASS[i] and space\nprint n and new line\nelse do the following\nprint NO and newline
"long int k, flag = 0;\nvector<long long int> ans;\nvoid dfs(long long int n, long long int level) {\n\tif (n == k) { flag = 1; }\n\tif (2 * n <= k && flag == 0) { dfs(2 * n, level + 1); }\n\tif (10 * n + 1 <= k && flag == 0) { dfs(10 * n + 1, level + 1); }\n\tif (flag == 1) { ans.push_back(n); }\n\treturn;\n}\nint main() {\n\tlong long int n;\n\tcin >> n >> k;\n\tdfs(n, 1);\n\tif (flag == 1) {\n\t\tcout << ""YES"" << endl;\n\t\tint sz = ans.size();\n\t\tcout << sz << endl;\n\t\tfor (long long int i = sz - 1; i >= 1; i--) { cout << ans[i] << "" ""; }\n\t\tif (sz >= 1) cout << ans[0] << endl;\n\t\treturn 0;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"let k and flag be long ints with flag = 0\ndeclare vector of long long integers ans\nfunction dfs with long long int arguments n and level\nif n is equal to k, assign 1 to flag\nif 2 * n <= k and flag = 0, call dfs(2 * n, level + 1)\nif 10 * n + 1 <= k and flag = 0, call dfs(10 * n + 1, level + 1)\nif flag = 1, push n to ans\nreturn\ncreate long long int n\nread n and k\ncall dfs(n, 1)\nif flag is 1\nprint ""YES""\ndeclare int sz = length of ans\nprint sz\nfor i = sz - 1 to 1 inclusive decrementing i, print ans[i] and "" ""\nif sz >= 1, print ans[0]\nelse\nprint ""NO"""
"const int N = 1e5 + 50;\nlong long a, b, cnt;\nlong long ans[N];\nint i, j, k, t, m, n;\nvoid dfs(long long st, long long step) {\n\tif (st > b) return;\n\tans[step] = st;\n\tif (st == b) {\n\t\tcnt = step;\n\t\tcout << ""YES"" << '\n';\n\t\tcout << cnt + 1 << '\n';\n\t\tcout << ans[0];\n\t\tfor (i = 1; i < cnt + 1; i++) cout << "" "" << ans[i];\n\t\tcout << '\n';\n\t\treturn;\n\t}\n\tif (st * 2 <= b) dfs(st * 2, step + 1);\n\tif (st * 10 + 1 <= b) dfs(st * 10 + 1, step + 1);\n}\nint main() {\n\tcin >> a >> b;\n\tcnt = 0;\n\tdfs(a, 0);\n\tif (!cnt) cout << ""NO"" << '\n';\n\treturn 0;\n}"	"N = const integer with N = 1e5 + 50\na, b, cnt = long long\nans = long long array of size N\ni, j, k, t, m, n = integers\nin the function dfs that takes long long st, step\nif st > b, return\nans[step] = st\nif st is b\ncnt = step\nprint YES\nprint cnt + 1\nprint ans[0]\nfor i = 1 to cnt exclusive, print "" "",ans[i]\nprint new line\nreturn\nif st * 2 <= b, dfs on st * 2 and step + 1\nif st * 10 + 1 <= b, dfs on st * 10 + 1 and step + 1\nread a and b\ncnt = 0\ndfs on a and 0\nif not cnt, print NO"
"long long a, b, jum;\nvector<long long> v;\nint main() {\n\tcin >> a >> b;\n\twhile (b >= 1) {\n\t\tjum++;\n\t\tv.push_back(b);\n\t\tif (a == b) { break; }\n\t\tif (b < a) {\n\t\t\tcout << ""NO"" << endl;\n\t\t\treturn 0;\n\t\t} else if (b % 2 == 0) {\n\t\t\tb = b / 2;\n\t\t} else if (b % 2 == 1) {\n\t\t\tb--;\n\t\t\tif (b % 10 == 0)\n\t\t\t\tb = b / 10;\n\t\t\telse {\n\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tsort(v.begin(), v.end());\n\tcout << ""YES"" << endl << jum << endl;\n\tfor (int i = 0; i < jum; i++) {\n\t\tcout << v[i];\n\t\tif (i < jum - 1)\n\t\t\tcout << "" "";\n\t\telse\n\t\t\tcout << endl;\n\t}\n}"	"a, b, jum = long long\nv = long long vector\nread a then b\nloop while b is greater than 0\nincrement jum\nappend b to v\nif a is b then break loop\nif a b is less than a\nprint ""NO""\nelse if b is even\nset b to b / 2\nelse if b is uneven\ndecrement b\nif b is a multiple of 10\nset b to b / 10\nelse\nprint ""NO""\nsort v\nprint ""YES"" and jum\nfor i = 0 to jum\nprint v[i]\nif i is less than jum - 1\nprint "" ""\nelse\nprint newline"
long int perm[2 * 100000 + 5];\nint main() {\n\tlong int n, x, cycle = 0, v, k, xo = 1;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> perm[i];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\txo ^= x;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!perm[i]) continue;\n\t\tcycle++;\n\t\tv = i;\n\t\twhile (perm[v]) {\n\t\t\tk = perm[v];\n\t\t\tperm[v] = 0;\n\t\t\tv = k;\n\t\t}\n\t}\n\tif (cycle == 1) cycle = 0;\n\tcout << cycle + xo << endl;\n\treturn 0;\n}	declare long integer array perm with size 2 * 100000 + 5\ndeclare long integer variables n, x, cycle, v, k and xo where cycle = 0 and xo = 1\nread n\nfor integer i = 1 to n inclusive, read perm[i]\nfor i = 0 to n exclusive\nread x\nxo ^= x\nfor integer i = 1 to n inclusive\ncontinue loop from the start if if perm[i] is false\nincrease cycle\nassign value of i to v\nwhile perm[v] is true\nassign value of perm[v] to k\nset perm[v] to 0\nset v to k\nif cycle = 1, change cycle to 0\nprint cycle + xo
int n;\nint p[200100];\nint b[200100];\nint vis[200200];\nvoid dfs(int x) {\n\tvis[x] = 1;\n\tif (!vis[p[x]]) dfs(p[x]);\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> p[i];\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> b[i];\n\t\tif (b[i] == 1) cnt++;\n\t}\n\tint ans = 0;\n\tif (cnt % 2 == 0) ans++;\n\tcnt = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!vis[i]) {\n\t\t\tcnt++;\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tif (cnt == 1) cnt = 0;\n\tcout << ans + cnt << endl;\n\treturn 0;\n}	let n be a integer\np = array of integers of length 200100\nb = array of integers of length 200100\nvis = array of integers of length 200200\nlet dfs be a function which accepts integer x value\nthe xth element of array vis is equal to 1\nif (not vis[ xth element of array p], dfs( xth element of array p)\nread n\nfor (i = 1 to n inclusive), read ith element of array p\nlet cnt be a integer with cnt value as 0\nfor (i = 1 to n inclusive)\nread ith element of array b\nif (ith element of array b is equal to 1), increase cnt by 1\nlet ans be a integer with ans value is equal to 0\nif (cnt modulus 2 is equal to 0), increase ans by 1\nlet the value of cnt is equal to 0\nfor (i = 1 to n inclusive)\nif (not ith element of array vis )\nincrease cnt value by 1\ndfs of i\nif (cnt is equal to 1), cnt is equal to 0\nprint ans + cnt and newline
const int N = 6e5 + 10;\nint v[N], A[N], B[N];\nint n;\nvoid dfs(int x) {\n\tif (v[x]) return;\n\tv[x] = 1;\n\tdfs(A[x]);\n}\nint main() {\n\tcin >> n;\n\tint ans = 0;\n\tfor (int i = 1; i <= n; ++i) cin >> A[i];\n\tfor (int i = 1; i <= n; ++i) cin >> B[i];\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (v[i] == 0) dfs(i), ++ans;\n\t}\n\tint t = 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (B[i]) t ^= 1;\n\t}\n\tif (ans == 1) --ans;\n\tcout << ans + t << endl;\n}	create constant integer N with N = 6e5 + 10\ncreate integer arrays v, A, B with v size N, A size N, B size N\ncreate integer n\ndeclare dfs with integer x as argument\nif v[x] is true, return from function\nset v[x] to 1\nrun dfs with A[x] as argument\nread n\ncreate integer ans with ans = 0\nfor i = 1 to n inclusive, read A[i]\nfor i = 1 to n inclusive, read B[i]\nfor i = 1 to n inclusive\nif v[i] is 0, run dfs with i as argument, increment ans\ncreate integer t with t = 1\nfor i = 1 to n inclusive\nif B[i] is true, set t to t ^ 1\nif ans is 1, decrement ans\nprint ans + t print newline
"const int N = 2e5 + 5;\nint Prv[N], vis[N];\nvoid dfs(int u) {\n\tif (vis[u]) return;\n\tvis[u] = true;\n\tdfs(Prv[u]);\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> Prv[i];\n\tint now = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tnow += x;\n\t}\n\tint Res = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!vis[i]) {\n\t\t\tdfs(i);\n\t\t\tRes++;\n\t\t}\n\t}\n\tif (Res == 1) Res--;\n\tcout << (Res + (now % 2)) << ""\n"";\n\treturn 0;\n}"	"declare constant integer N = 2e5 + 5\ncreate integer arrays Prv and vis with N elements\ndfs is a void function with integer argument u\nif vis[u] is not 0, return\nset value of vis[u] to true\ncall function dfs with arguments Prv[u]\ndeclare integer variable n\nread n\nfor integer i = 1 to n inclusive read Prv[i]\ncreate integer now = 1\nfor integer i = 1 to n inclusive\ncreate integer x\nread x\nincrease now by x\ndeclare integer Res = 0\nfor integer i = 1 to n inclusive\nif vis[i] is 0\ncall function dfs with argument i\nincrement Res\ndecrement Res if Res = 1\nprint Res + (now % 2) and ""\n"""
int main() {\n\tint i, j, n;\n\tint p[200000], b[200000], status[200000] = {0};\n\tint count = 0, result = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> p[i];\n\t\tp[i]--;\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> b[i];\n\t\tif (b[i] == 1) count++;\n\t}\n\tif (count % 2 == 0) result++;\n\tcount = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (status[i] == 0) {\n\t\t\tstatus[i] = 1;\n\t\t\tint t = p[i];\n\t\t\twhile (t != i) {\n\t\t\t\tstatus[t] = 1;\n\t\t\t\tt = p[t];\n\t\t\t}\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count > 1) result += count;\n\tcout << result << endl;\n\treturn 0;\n}	create int i, j and n\nset int arrays p, b and status of length 200000 to all 0\nset count and result to 0\nread n\nfor i=0 to n exclusive\nread p[i]\ndecrement p[i]\nfor i=0 to n exclusive\nread b[i]\nif b[i] = 1, increment count\nif count is even, increment result\ncount = 0\nif i=0 to n exclusive\nif status[i] equal to 0\nassign 1 to status[i]\nset t to p[i]\nwhile t different from 1\nstatus[t] = 1\nt = p[t]\nadd 1 to count\nif count greater than 1, set result to result + count\nprint result
static long long n, m, k;\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> p(n);\n\tfor (int i = 0; i < n; i++) cin >> p[i];\n\tint res = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tres += x;\n\t}\n\tres = (res + 1) % 2;\n\tvector<bool> visited(n);\n\tint count = -1;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (visited[i]) continue;\n\t\tcount++;\n\t\tint j = i;\n\t\twhile (!visited[j]) {\n\t\t\tvisited[j] = true;\n\t\t\tj = p[j] - 1;\n\t\t}\n\t}\n\tif (count > 0) res++;\n\tres += count;\n\tcout << res << endl;\n}	n,m,k=static long long\nn=int\nread n\np=vector of n int\nfor i=0 to n exclusive read p[i]\nres=0\nfor i=0 to n exclusive\nx=int\nread x\nadd x to res\nres = (res+1) modulo 2\nvisited = vector of n bool\ncount=-1\nfor i=0 to n exclusive\nif visited[i] continue\nincrement count\nj=i\nwhile not visited[j]\nvisited[j] = true\nj=p[j]-1\nif count > 0 increment res\nadd count to res\nprint res
"int n;\nconst int MAXN = 200005;\nint p[MAXN];\nbool vis[MAXN];\nvoid dfs(int idx) {\n\tvis[idx] = true;\n\tif (!vis[p[idx]]) dfs(p[idx]);\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> p[i];\n\tint counter = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint b;\n\t\tcin >> b;\n\t\tif (b == 1) counter++;\n\t}\n\tint cycle = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!vis[i]) {\n\t\t\tdfs(i);\n\t\t\tcycle++;\n\t\t}\n\tif (cycle == 1)\n\t\tcout << 1 - counter % 2 << ""\n"";\n\telse\n\t\tcout << cycle + 1 - counter % 2 << ""\n"";\n\treturn 0;\n}"	"create integer n\ncreate constant integer MAXN with MAXN = 200005\ncreate integer array p with size MAXN\ncreate boolean array vis with size MAXN\ndeclare dfs with integer idx as argument, returning void\nset vis[idx] to true\nif not vis[p[idx]], run dfs with p[idx] as argument\nread n\nfor i = 1 to n inclusive, read p[i]\ncreate integer counter with counter = 0\nfor i = 1 to n inclusive\ncreate integer b\nread b\nif b is 1, increment counter\ncreate integer cycle with cycle = 0\nfor i = 1 to n inclusive\nif not vis[i]\nrun dfs with i as argument\nincrement cycle\nif cycle is 1\nprint 1 - counter % 2 print ""\n""\nelse\nprint cycle + 1 - counter % 2 print ""\n"""
"int main() {\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\tif (s1 == s2) {\n\t\tcout << ""-1\n"";\n\t} else {\n\t\tcout << max(s1.size(), s2.size()) << '\n';\n\t}\n\treturn 0;\n}"	"create strings s1 and s2\nread s1 and s2\nif s1 is equal to s2\nprint ""-1\n""\nelse\nprint the max of s1.size() and s2.size()"
"int dx[] = {0, 1, 0, -1, 1, 1, -1, -1};\nint dy[] = {1, 0, -1, 0, 1, -1, 1, -1};\nvoid fast() {}\nint main() {\n\tfast();\n\tstring s, t;\n\tcin >> s >> t;\n\tcout << (s == t ? -1 : (int)max(s.size(), t.size())) << ""\n"";\n}"	dx = int array with the values 0, 1, 0, -1, 1, 1, -1, -1\ndy = int array with the values 1, 0, -1, 0, 1, -1, 1, -1\ndefine empty function fast\ncall fast\ns, t = string\nread s then t\nprint -1 if s is t else print max of size of s and size of t
int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tif (a == b) cout << -1 << endl, exit(0);\n\tcout << max(a.size(), b.size()) << endl;\n}	create strings a and b\nread standard input to a and b\nif a = b, print -1 to the standard output and exit the program\nprint max of length of a and length of b
"const long long N = 1e8 + 3;\nconst long long MN = 1e9 + 7;\nconst long long MX = -1e9 - 7;\nlong long n, m, cnt, mx = MX;\nstring a, b;\npair<long long, long long> pr;\nvector<string> v;\nmap<string, long long> mp;\nset<long long> st;\nset<long long>::iterator it;\nint main() {\n\tcin >> a >> b;\n\tif (max(a.size(), b.size()) > min(a.size(), b.size())) {\n\t\tcout << max(a.size(), b.size());\n\t} else {\n\t\twhile (true) {\n\t\t\tif (a != b) {\n\t\t\t\tcout << a.size();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ta = a.substr(0, a.size() - 1);\n\t\t\tb = b.substr(0, b.size() - 1);\n\t\t\tif (a.size() == 0) {\n\t\t\t\tcout << -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""\n"";\n\treturn 0;\n}"	"declare constant long long N = 1e8 + 3\ndeclare constant long long MN = 1e9 + 7\ndeclare constant long long MX = -1e9-7\ndeclare long longs n, m, cnt, mx = MX\ndeclare a, b as strings\ndeclare pair of long long, long long pr\ndeclare string vector v\ndeclare map from string to long long mp\ndeclare long long set st\ndeclare long long set iterator it\nread a, b\nif maximum of ( size of a and size of b ) is greater than minimum of ( size of a and size of b )\nprint maximum of ( size of a and size of b )\nelse\nwhile true\nif a is not b\nprint size of a\nend loop\nlet a be substring of a from 0 to size of a - 1\nlet b be substring of b from 0 to size of b - 1\nif size of a is 0\nprint -1\nend loop\nprint ""\n"""
"int main() {\n\tchar s1[100006], s2[100003];\n\twhile (cin >> s1 >> s2) {\n\t\tint p = strcmp(s1, s2);\n\t\tint len1 = strlen(s1);\n\t\tint len2 = strlen(s2);\n\t\tif (p == 0) {\n\t\t\tcout << ""-1"" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (len1 > len2)\n\t\t\tcout << len1 << endl;\n\t\telse\n\t\t\tcout << len2 << endl;\n\t}\n}"	"declare character array s1 with size 100006 s2 with size 100003\nwhile read s1, s2\ndeclare p as integer = string comparison between s1 and s2\ndeclare len1 as integer = string length of s1\ndeclare len2 as integer = string length of s2\nif p is 0\nprint ""-1"" print newline\nif len1 is greater than len2\nprint len1, newline\nelse\nprint len2, newline"
"int main() {\n\tstring s, ss;\n\tcin >> s >> ss;\n\tif (s == ss)\n\t\tcout << -1 << ""\n"";\n\telse\n\t\tcout << max(ss.length(), s.length()) << ""\n"";\n\treturn 0;\n}"	s, ss = string\nread s then ss\nif s is ss\nprint -1\nelse\nprint max of length of ss and length of s
int main() {\n\tlong long i = 0, res = 0;\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\tif (s1 == s2)\n\t\tres = -1;\n\telse\n\t\tres = max(s1.size(), s2.size());\n\tcout << res << endl;\n\treturn 0;\n}	i,res=0\ns1,s2=string\nread s1,s2\nif s1 == s2\nres=-1\nelse\nres=max(size of s1, size of s2)\nprint res
int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tint l = a.size(), ll = b.size();\n\tif (l != ll) {\n\t\tcout << max(l, ll) << endl;\n\t} else if (a == b) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << a.size() << endl;\n\t}\n\treturn 0;\n}	declare strings a and b\nread standard input to a and b\ndeclare integer variables l = length of a, and ll =length of b\nif l != ll\nprint max of l and ll to the standard output\nelse if a = b\nprint -1 to the standard output\nelse\nprint length of a to the standard output
"string a, b;\nint main() {\n\tcin >> a >> b;\n\tif (a != b) {\n\t\tcout << max(a.size(), b.size()) << endl;\n\t\treturn 0;\n\t} else {\n\t\tcout << ""-1"" << endl;\n\t\treturn 0;\n\t}\n}"	"a, b = string\nread a then b\nif a is not b\nprint max of size of a, size of b\nelse\nprint ""-1"""
"int main() {\n\tstring A;\n\tcin >> A;\n\tstring B;\n\tcin >> B;\n\tif (A == B) {\n\t\tcout << -1 << ""\n"";\n\t\treturn 0;\n\t}\n\tcout << max(A.size(), B.size()) << ""\n"";\n\treturn 0;\n}"	create string A\nread A\nlet string B\nread B\nif A is equal to B\nprint -1\nprint max of A.size() and B.size()
const long long int INF = (long long int)(8e18);\nconst long long int MOD = 998244353;\nint main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tif (a.length() != b.length())\n\t\tcout << max(a.length(), b.length()) << '\n';\n\telse if (a != b)\n\t\tcout << a.length() << '\n';\n\telse\n\t\tcout << -1 << '\n';\n\treturn 0;\n}	create new constant long long integer INF with value 8e18\ncreate new constant long long integer called MOD = 998244353\ndeclare string variables a and b\nread input to a and b\nif length of a != length of b\nprint max of length of a and length of b and '\n'\nelse if a != b\nprint length of a and '\n'\nelse\nprint -1 and '\n'
int main() {\n\tstring a, b;\n\tint c = 0;\n\tcin >> a >> b;\n\tint len1 = a.size();\n\tint len2 = b.size();\n\tif (a == b)\n\t\tcout << -1 << endl;\n\telse {\n\t\tcout << max(len1, len2) << endl;\n\t}\n\treturn 0;\n}	let a, b be strings\nlet c be a integer with c = 0\nread a, b\nlet len1 be a integer with len1 is equal to length of a\nlet len2 be a integer with len2 is equal to length of b\nif a is equal to b\nprint -1 and newline\nelse do the following\nprint maximum of len1, len2 and newline
"const int INF = 0x3f3f3f3f;\nconst int mod = 998244353;\nchar a[100005], b[100005];\nint main() {\n\tcin >> a >> b;\n\tif (strcmp(a, b) == 0)\n\t\treturn puts(""-1""), 0;\n\telse\n\t\tcout << max(strlen(a), strlen(b)) << endl;\n\treturn 0;\n}"	"INF is a new constant integer = 0x3f3f3f3f\ncreate new constant integer mod with value 998244353\ndeclare character arrays a and b with 100005 elements\nread input to a and b\nif content of a and b matches\nreturn puts(""-1"")\nelse\nprint max of length of a and length of b to the standard output"
int main() {\n\tstring s, s1;\n\tcin >> s >> s1;\n\tif (s == s1)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << max(s.size(), s1.size()) << endl;\n}	s, s1 = string\nread s then s1\nif s is s1\nprint -1\nelse\nprint max of size of s, size of s1
string n, n2;\nbool compare(string s1, string s2, int length) {\n\tfor (int i = 0; i < length; i++) {\n\t\tif (s1[i] != s2[i]) { return false; }\n\t}\n\treturn true;\n}\nint main() {\n\tcin >> n >> n2;\n\tint l1, l2, greater;\n\tl1 = greater = n.length();\n\tl2 = n2.length();\n\tif (l2 > l1) { greater = l2; }\n\tif (l1 == l2) {\n\t\tbool x = compare(n, n2, l1);\n\t\tif (x) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tcout << l1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << greater << endl;\n\treturn 0;\n}	declare strings n, n2\ndeclare compare with strings s1, s2, integer length as arguments, returning boolean\nfor i = 0 to length exclusive\nif s1[i] is not s2[i], return false from function\nreturn true from function\nread n, n2\ndeclare l1, l2, greater as integers\nlet l1 be greater = length of n\nlet l2 be length of n2\nif l2 is greater than l1, let greater be l2\nif l1 is l2\ndeclare x as boolean = result of run compare with n, n2, l1 as arguments\nif x is true\nprint -1 and newline\nelse\nprint l1 print newline\nprint greater print newline
int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tint sz1 = a.size(), sz2 = b.size();\n\tif (a == b) {\n\t\tcout << -1 << endl;\n\t} else\n\t\tcout << max(sz1, sz2) << endl;\n\treturn 0;\n}	a, b = string\nread a then b\nsz1, sz2 = int with sz1 = size of a and sz2 = size of b\nif a is b\nprint -1\nelse\nprint max of sz1, sz2
int main() {\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\tif (s1 == s2)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << max(s1.length(), s2.length()) << endl;\n}	declare string variables s1 and s2\nread from the input to s1 and s2\nif s1 is equal to s2\nprint -1 and a new line\nelse\nprint max of length of s1 and length of s2 to the standard output
"int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tif (a == b)\n\t\tputs(""-1"");\n\telse\n\t\tcout << max(a.length(), b.length()) << endl;\n\treturn 0;\n}"	let a, b strings\nread in a and b\nif a same as b\nprint -1 to stdout\notherwise\nprint max(length of a, length of b)
const int N = 1e5 + 10, INF = 1e9 + 7;\nstring a, b;\nint main() {\n\tcin >> a >> b;\n\tif (a == b)\n\t\tcout << -1 << '\n';\n\telse\n\t\tcout << max((int)a.size(), (int)b.size()) << '\n';\n\treturn 0;\n}	N, INF = const int with N = 1e5 + 10 and INF = 1e9 + 7\na, b = string\nread a then b\nif a is b\nprint -1\nelse\nprint max of size of a and size of b
"int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tif (a != b) {\n\t\tcout << max(a.length(), b.length()) << endl;\n\t} else\n\t\tcout << ""-1\n"";\n}"	"a, b = string\nread a then b\nif a is not b\nprint max of length of a and length of b\nelse\nprint ""-1"""
const double E = exp(1);\nconst int maxn = 1e6 + 10;\nchar ch[maxn];\nchar ch1[maxn];\nint main() {\n\tcin >> ch;\n\tcin >> ch1;\n\tint l1 = strlen(ch);\n\tint l2 = strlen(ch1);\n\tif (strcmp(ch, ch1) == 0)\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << max(l1, l2) << endl;\n\treturn 0;\n}	E=exp(1)\nmaxn=1000010\nch=array of maxn char\nch1=array of maxn char\nread ch\nread ch1\nl1=length of ch\nl2=length of ch1\nif ch and ch1 are equal\nprint -1\nelse\nprint max(l1,l2)
"int main() {\n\tstring s, second;\n\tcin >> s >> second;\n\tlong long p = 0, q = 0;\n\tlong long xx = 0;\n\tlong long cnt = 0;\n\tif (s == second) {\n\t\tcout << ""-1"" << endl;\n\t\treturn 0;\n\t}\n\tif (s.size() > second.size())\n\t\tcout << s.size() << endl;\n\telse\n\t\tcout << second.size() << endl;\n\treturn 0;\n}"	"create strings s and second\nread user input to s and second\ndeclare long long variables p and q = 0\ncreate new long long called xx with value 0\ncreate new long long variable cnt = 0\nif s = second\nprint ""-1"" to the standard output\nif length of s is greater than length of second\nprint length of s to the standard output\nelse\nprint length of second"
int main() {\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\tif (s1 == s2) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << max(s1.size(), s2.size()) << endl;\n\t}\n\treturn 0;\n}	s1, s2 = string\nRead s1 and s2\nif s1 = s2\nprint -1\nelse\nprint max of s1 and s2
int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tint l = a.size(), ll = b.size();\n\tif (l != ll) {\n\t\tcout << max(l, ll) << endl;\n\t} else if (a == b) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tcout << a.size() << endl;\n\t}\n\treturn 0;\n}	create strings a and b\nread a and b\nlet ints l = a.size() and ll = b.size()\nif l is not equal to ll\nprint max(l, ll)\nelse if a is equal to b\nprint -1\nelse\nprint a.size()
"int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tif (a.size() != b.size()) {\n\t\tcout << max(a.size(), b.size()) << endl;\n\t} else if (a.compare(b) == 0) {\n\t\tcout << ""-1"" << endl;\n\t} else {\n\t\tint s = a.size();\n\t\tmap<string, int> mp;\n\t\tint x = s;\n\t\twhile (x > 0) {\n\t\t\tfor (int i = 0; i < s && i + x <= s; i++) {\n\t\t\t\tstring st(a, i, x);\n\t\t\t\tmp[st] = 1;\n\t\t\t}\n\t\t\tfor (int i = 0; i < s && i + x <= s; i++) {\n\t\t\t\tstring st(b, i, x);\n\t\t\t\tif (mp[st] == 0) {\n\t\t\t\t\tcout << st.size() << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx--;\n\t\t}\n\t}\n}"	"a, b = string\nread a then b\nif size of a is not size of b\nprint max of size of a and size of b\nelse if compare of b on a is 0\nprint ""-1""\nelse\ns = int with s = size of a\nmp = string and int map\nx = int with x = s\nloop while x is greater than 0\nfor i = 0 to s and i + x is less or equal to s\nst = string with st = substring of a starting at i and a length of x\nset mp[st] to 1\nfor i = 0 to s and i + x is less or equal to s\nst = string with st = substring of b starting at i and a length of x\nif mp[st] is 0\nprint size of st\ndecrement x"
int main() {\n\tstring a, b;\n\tcin >> a >> b;\n\tif (a.length() != b.length()) {\n\t\tcout << max(a.length(), b.length()) << endl;\n\t} else {\n\t\tif (a == b) {\n\t\t\tcout << -1 << endl;\n\t\t} else {\n\t\t\tcout << a.length() << endl;\n\t\t}\n\t}\n\treturn 0;\n}	create strings a and b\nread a and b\nif the length of a is not equal to the length of b\nprint the max of length of a and length of b\nelse\nif a is equal to b\nprint -1\nelse\nprint the length of a
"int dx[] = {0, 1, 0, -1, 1, 1, -1, -1};\nint dy[] = {1, 0, -1, 0, 1, -1, 1, -1};\nvoid fast() {}\nint main() {\n\tfast();\n\tstring s, t;\n\tcin >> s >> t;\n\tcout << (s == t ? -1 : (int)max(s.size(), t.size())) << ""\n"";\n}"	dx = int array with the values 0, 1, 0, -1, 1, 1, -1, -1\ndy = int array with the values 1, 0, -1, 0, 1, -1, 1, -1\ndefine empty function fast\ncall fast\ns, t = string\nread s then t\nprint -1 if s is t else print max of size of s, size of t
long long n, c1, c2;\nlong long solve(long long g) {\n\tlong long t1 = ceil((double)n / g), t2 = n / g, left = n, res = 0;\n\tfor (; t2 * g != left && left > 0; left -= t1, g--) res += (c1 + c2 * (t1 - 1) * (t1 - 1));\n\tfor (; g > 0; left -= t2, g--) res += (c1 + c2 * (t2 - 1) * (t2 - 1));\n\treturn res;\n}\nint main() {\n\tchar t;\n\tcin >> n >> c1 >> c2;\n\tlong long p = 0, r = 0, i;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> t;\n\t\t(t == '1') ? p++ : r++;\n\t}\n\tlong long lo = 1, hi = p;\n\twhile (lo < hi) {\n\t\tlong long diff = hi - lo;\n\t\tlong long p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3;\n\t\tlong long s1 = solve(p1), s2 = solve(p2);\n\t\tif (s1 == s2)\n\t\t\tlo = p1 + 1, hi = p2 - 1;\n\t\telse if (s1 > s2)\n\t\t\tlo = p1 + 1;\n\t\telse\n\t\t\thi = p2 - 1;\n\t}\n\tcout << solve(lo) << endl;\n}	let n, c1, c2 be long integers\nlet solve accepts long integer g\nt1, t2, left, res be long integers with t1 = ceiling of(double)n / g , t2 = n / g, left = n, res = 0\nfor t2 * g is not equal to left and left is greater than 0, decrement left by t1, decrement g by 1, res = res + (c1 + c2 * (t1 - 1) * (t1 - 1))\nfor g is greater than 0, decrement left by t2, decrement g by 1, the value of res = res + (c1 + c2 * (t2 - 1) * (t2 - 1))\nreturn the value of res\nlet t be a character\nread n, c1, c2\nlet p , r , i be long integers with p = 0, r = 0\nfor i = 0 to n exclusive\nread t\nif t is equal to 1 increment p by 1 else increment r by 1\nlet lo, hi be long integers with lo = 1, hi = p\nwhile lo is less than hi\nlet diff be a long integer with diff = hi - lo\nlet p1, p2 be long integers with p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3\nlet s1, s2 be a long integers with s1 = solve(p1), s2 = solve(p2)\nif s1 is equal to s2\nlo is equal to p1 + 1, hi is equal to p2 - 1\nelse if s1 is greater than s2\nthe value of lo = p1 + 1\nelse do the following\nthe value of hi = p2 - 1\nprint solve(lo) and newline
long long n, c1, c2;\nlong long solve(long long g) {\n\tlong long t1 = ceil((double)n / g), t2 = n / g, left = n, res = 0;\n\tfor (; t2 * g != left && left > 0; left -= t1, g--) res += (c1 + c2 * (t1 - 1) * (t1 - 1));\n\tfor (; g > 0; left -= t2, g--) res += (c1 + c2 * (t2 - 1) * (t2 - 1));\n\treturn res;\n}\nint main() {\n\tchar t;\n\tcin >> n >> c1 >> c2;\n\tlong long p = 0, r = 0, i;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> t;\n\t\t(t == '1') ? p++ : r++;\n\t}\n\tlong long lo = 1, hi = p;\n\twhile (lo < hi) {\n\t\tlong long diff = hi - lo;\n\t\tlong long p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3;\n\t\tlong long s1 = solve(p1), s2 = solve(p2);\n\t\tif (s1 == s2)\n\t\t\tlo = p1 + 1, hi = p2 - 1;\n\t\telse if (s1 > s2)\n\t\t\tlo = p1 + 1;\n\t\telse\n\t\t\thi = p2 - 1;\n\t}\n\tcout << solve(lo) << endl;\n}	declare long longs n, c1, c2\ndeclare solve with long long g as argument, returning long long\ndeclare long longs t1 = round up( double casted(n) / g), t2 = n / g, left = n, res = 0\nfor t2 * g is not left and left is greater than 0, decrementing left by t1, decrementing g, increment res by (c1 + c2 * (t1 - 1) * (t1 - 1))\nfor g is greater than 0, decrementing left by t2, decrementing g, increment res by (c1 + c2 * (t2 - 1) * (t2 - 1))\nreturn res from function\ndeclare t as character\nread n, c1, c2\ndeclare long longs p = 0, r = 0, i\nfor i = 0 to n exclusive\nread t\nincrement p if t is '1', else increment r\ndeclare long long lo = 1, hi = p\nwhile lo is less than hi\ndeclare long long diff = hi - lo\ndeclare long longs p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3\ndeclare long longs s1 = result of run solve with p1 as argument, s2 = result of run solve(p2)\nif s1 is s2\nlet lo be p1 + 1, hi be p2 - 1\nelse if s1 is greater than s2\nlet lo be p1 + 1\nelse\nlet hi be p2 - 1\nprint result of run solve with lo as argument, newline
int main() {\n\tint n;\n\tlong long c1, c2;\n\tcin >> n >> c1 >> c2;\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tchar c;\n\t\tcin >> c;\n\t\tif (c == '1') cnt++;\n\t}\n\tlong long ans = 1e18;\n\tfor (int i = 1; i <= cnt; i++) {\n\t\tlong long p = n / i, mod = n % i;\n\t\tlong long now = (p - 1) * (p - 1) * c2 * (i - mod) + c1 * i + p * p * mod * c2;\n\t\tans = min(ans, now);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create integer n\ncreate long longs c1, c2\nread n read c1 read c2\ncreate integer cnt with cnt = 0\nfor i = 1 to n inclusive\ncreate character c\nread c\nif c is '1' increment cnt\ncreate long long ans with ans = 1e18\nfor i = 1 to cnt inclusive\ncreate long longs p, mod with p = n / i, mod = n % i\ncreate long long now with now = (p - 1) * (p - 1) * c2 * (i - mod) + c1 * i + p * p * mod * c2\nset ans to minimum of ans and now\nprint ans print newline
int main() {\n\tlong long n, m, i, j, p, q, cnt, c1, c2, x, y, mn;\n\tstring s;\n\twhile (cin >> n >> c1 >> c2) {\n\t\tgetchar();\n\t\tcin >> s;\n\t\tcnt = 0;\n\t\tmn = LONG_LONG_MAX;\n\t\tfor (i = 0; i < s.size(); i++) {\n\t\t\tif (s[i] == '1') cnt++;\n\t\t}\n\t\tfor (i = 1; i <= cnt; i++) {\n\t\t\tx = n / i;\n\t\t\ty = n % i;\n\t\t\tp = (c1 + c2 * (x - 1) * (x - 1)) * (i - y);\n\t\t\tq = (c1 + (c2 * x * x)) * y;\n\t\t\tm = p + q;\n\t\t\tmn = min(mn, m);\n\t\t}\n\t\tcout << mn << endl;\n\t}\n}	create long longs n, m, i, j, p, q, cnt, c1, c2, x, y, mn\ncreate string s\nwhile read n read c1 read c2 is true\nread charaacter\nread s\nset cnt to 0\nset mn to LONG_LONG_MAX\nfor i = 0 to size of s exclusive\nif s[i] is '1', increment cnt\nfor i = 1 to cnt inclusive\nset x to n / i\nset y to n % i\nset p to (c1 + c2 * (x - 1) * (x - 1)) * (i - y)\nset q to (c1 + (c2 * x * x)) * y\nset m to p + q\nset mn to minimum of mn and m\nprint mn print newline
const int MAX_N = 2e5 + 10;\nconst int MAX_LOG = 62;\nconst long long INF = 1e18 + 1;\nconst long long MOD = 1e9 + 7;\nlong long n, c1, c2, ans = INF;\nstring s;\nint m;\nint main() {\n\tcin >> n >> c1 >> c2;\n\tcin >> s;\n\tfor (int i = 0; i < n; i++)\n\t\tif (s[i] == '1') m++;\n\tfor (int i = 1; i <= m; i++) {\n\t\tlong long k = n / i;\n\t\tlong long r = n % i;\n\t\tlong long tmp = r * (c1 + c2 * (k)*k);\n\t\ttmp += (i - r) * (c1 + c2 * (k - 1) * (k - 1));\n\t\tans = min(ans, tmp);\n\t}\n\tcout << ans << endl;\n}	declare constant int MAX_N = 2e5 + 10\ndeclare constant int MAX_LOG = 62\ndeclare constant long long INF = 1e18 + 1\ndeclare constant long long MOD = 1e9 + 7\ndeclare long long variables n, c1, c2 and ans with ans = INF\ncreate string s\ndeclare integer variable m\nread input to n, c1 and c2\nread s\nfor i from 0 to n exclusive\nif s[i] = '1', increment m\nfor i from 1 to m inclusive\ncreate long long k = n / i\ncreate long long r = n % i\ndeclare long long variable tmp = r * (c1 + c2 * k * k)\nadd (i - r) * (c1 + c2 * (k - 1) * (k - 1)) to tmp\nset ans to min of ans and tmp\nprint ans
long long n;\nint main() {\n\tcin >> n;\n\tif (n == 1) cout << 4;\n\tif (n == 2) cout << 22;\n\tif (n == 3) cout << 27;\n\tif (n == 4) cout << 58;\n\tif (n == 5) cout << 85;\n\tif (n == 6) cout << 94;\n\tif (n == 7) cout << 121;\n\tif (n == 8) cout << 166;\n\tif (n == 9) cout << 202;\n\tif (n == 10) cout << 265;\n\tif (n == 11) cout << 274;\n\tif (n == 12) cout << 319;\n\tif (n == 13) cout << 346;\n\tif (n == 14) cout << 355;\n\tif (n == 15) cout << 378;\n\tif (n == 16) cout << 382;\n\tif (n == 17) cout << 391;\n\tif (n == 18) cout << 438;\n\tif (n == 19) cout << 454;\n\tif (n == 20) cout << 483;\n\tif (n == 21) cout << 517;\n\tif (n == 22) cout << 526;\n\tif (n == 23) cout << 535;\n\tif (n == 24) cout << 562;\n\tif (n == 25) cout << 576;\n\tif (n == 26) cout << 588;\n\tif (n == 27) cout << 627;\n\tif (n == 28) cout << 634;\n\tif (n == 29) cout << 636;\n\tif (n == 30) cout << 645;\n\tcout << endl;\n\treturn 0;\n}	n = long long\nread n\nif n is 1 print 4\nif n is 2 print 22\nif n is 3 print 27\nif n is 4 print 58\nif n is 5 print 85\nif n is 6 print 94\nif n is 7 print 121\nif n is 8 print 166\nif n is 9 print 202\nif n is 10 print 265\nif n is 11 print 274\nif n is 12 print 319\nif n is 13 print 346\nif n is 14 print 355\nif n is 15 print 378\nif n is 16 print 382\nif n is 17 print 391\nif n is 18 print 438\nif n is 19 print 454\nif n is 20 print 483\nif n is 21 print 517\nif n is 22 print 526\nif n is 23 print 535\nif n is 24 print 562\nif n is 25 print 576\nif n is 26 print 588\nif n is 27 print 627\nif n is 28 print 634\nif n is 29 print 636\nif n is 30 print 645\nprint a new line
"bool es_primo(int n) {\n\tif (n < 4) return true;\n\tfor (int i = 2; i * i <= n; i++) {\n\t\tif (n % i == 0) return false;\n\t}\n\treturn true;\n}\nint sum_digitos(int n) {\n\tint sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nint sum_factores(int n) {\n\tint sum = 0;\n\tfor (int i = 2; i * i <= n; i++) {\n\t\twhile (n % i == 0) {\n\t\t\tsum += sum_digitos(i);\n\t\t\tn /= i;\n\t\t}\n\t}\n\tif (n > 1) { sum += sum_digitos(n); }\n\treturn sum;\n}\nint busca_sig(int n) {\n\tdo { n++; } while (es_primo(n) || sum_digitos(n) != sum_factores(n));\n\treturn n;\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tint act = 0;\n\tfor (int i = 1; i <= n; i++) { act = busca_sig(act); }\n\tcout << act << ""\n"";\n\treturn 0;\n}"	in the function es_primo that takes integer n and returns bool\nif n < 4, return true\nfor i = 2 to i * i <= n\nif n modulo i is 0, return false\nreturn true\nin the function sum_digitos that takes integer n and returns int\nsum = integer with sum = 0\nwhile n > 0\nsum = sum + n modulo 10\nn = n / 10\nreturn sum\nin the function sum_factores that takes integer n and returns integer\nsum = integer with sum = 0\nfor i = 2 to i * i <= n\nwhile n modulo i is 0\nsum = sum + sum_digitos(i)\nn = n / i\nif n > 1, sum = sum + sum_digitos(n)\nreturn sum\nin the function busca_sig that takes integer n and returns integer\ndo increment n, while es_primo(n) or sum_digitos(n) is not sum_factores(n)\nreturn n\nn = integer\nread n\nact = integer with act = 0\nfor i = 1 to n, act = busca_sig(act)\nprint act
int n;\nstring t;\nint k;\nint ans_len;\nchar str[20 * 100010];\nint chars[80 * 100010];\nvoid push_up(int rt) {\n\tchars[rt] = chars[rt << 1] + chars[rt << 1 | 1];\n}\nvoid update(int L, int R, int left, int right, int rt) {\n\tif (chars[rt] >= right - left + 1) return;\n\tif (left == right) {\n\t\tchars[rt] = 1;\n\t\tstr[left] = t[left - L];\n\t\treturn;\n\t}\n\tif (L > right || R < left) return;\n\tint mid = (left + right) >> 1;\n\tif (mid >= R)\n\t\tupdate(L, R, left, mid, rt << 1);\n\telse if (mid < L)\n\t\tupdate(L, R, mid + 1, right, rt << 1 | 1);\n\telse {\n\t\tupdate(L, R, left, mid, rt << 1);\n\t\tupdate(L, R, mid + 1, right, rt << 1 | 1);\n\t}\n\tpush_up(rt);\n}\nint main() {\n\tint pos;\n\tint endpos;\n\twhile (cin >> n) {\n\t\tans_len = 0;\n\t\tfor (int i = 1; i < 2000010; i++) str[i] = 'a';\n\t\tmemset(chars, 0, sizeof(chars));\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tcin >> t >> k;\n\t\t\tfor (int j = 1; j <= k; j++) {\n\t\t\t\tcin >> pos;\n\t\t\t\tendpos = pos + t.length() - 1;\n\t\t\t\tupdate(pos, endpos, 1, 2000010, 1);\n\t\t\t\tif (j == k) {\n\t\t\t\t\tif (endpos > ans_len) ans_len = endpos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= ans_len; i++) cout << str[i];\n\t\tcout << endl;\n\t}\n}	declare integer variable n\ndeclare string t\ndeclare int k\ncreate int ans_len\ncreate char array str with 20 * 100010 elements\ncreate int array chars s with size 80 * 100010\nfunction push_up with int argument rt\nchars[rt] = chars[rt << 1] + chars[rt << 1 | 1]\nvoid function update with int arguments L, R, left, right and rt\nif chars[rt] >= right - left + 1, return\nif left is equal to right\ncreate char array s with rt elements\nset str[left] to t[left - L]\nreturn\nif L > right or R < left, return\nint mid = (left + right) >> 1\nif mid >= R\ncall update with arguments L, R, left, mid and rt << 1\nelse if mid is less than L\ncall update with arguments L, R, mid + 1, right and rt << 1 | 1\nelse\ncall update with arguments L, R, left, mid and rt << 1\ncall update with arguments L, R, mid + 1, right and rt << 1 | 1\ncall push_up(rt)\ncreate int pos\ndeclare integer endpos\nread n and loop further\nchange ans_len to 0\nfor i from 1 to 2000010 exclusive, assign 'a' to str[i]\nset sizeof(chars) bytes at the pointer chars to 0\nfor i from 1 to n inclusive\nread input to t and k\nloop j from 1 to k inclusive\nread pos\nset endpos to pos + length of t - 1\ncall update with arguments pos, endpos, 1, 2000010 and 1\nif j = k\nchange ans_len to endpos if endpos is greater than ans_len\nfor i from 1 to ans_len inclusive, print str[i]\nprint new line
int main() {\n\tlong long n, k, p;\n\tcin >> n >> k >> p;\n\tlong long pe[1001], ke[2002];\n\tfor (int a = 0; a < n; a++) cin >> pe[a];\n\tfor (int a = 0; a < k; a++) cin >> ke[a];\n\tsort(pe, pe + n);\n\tsort(ke, ke + k);\n\tlong long mins = 99999999999999;\n\tfor (int a = 0; a < k - n + 1; a++) {\n\t\tlong long tmp = 0;\n\t\tfor (int b = 0; b < n; b++) tmp = max(tmp, abs(pe[b] - ke[a + b]) + abs(ke[a + b] - p));\n\t\tmins = min(tmp, mins);\n\t}\n\tcout << mins << endl;\n\treturn 0;\n}	create long long n, k, p\nread n read k read p\ncreate long long arrays pe, ke, with pe size 1001, ke size 2002\nfor a = 0 to n exclusive, read pe[a]\nfor a = 0 to k exclusive, read ke[a]\nsort elements from pe to pe+n\nsort elements from ke to pe+k\ncreate long long mins with mins = 99999999999999\nfor a = 0 to k - n + 1 exclusive\ncreate long long tmp with tmp = 0\nfor b = 0 to n exclusive, set tmp to maximum of tmp and absolute value of ( pe[b] - ke[a + b] ) + absolute value of ( ke[a + b] - p )\nset mins to minimum of tmp and mins\nprint mins print newline
const int mod = 1000000007;\nconst long long inf = 1000000000000;\nint main() {\n\tint n, k, p;\n\tcin >> n >> k >> p;\n\tvector<long long> A, B;\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\tA.push_back(x);\n\t}\n\tfor (int i = 0; i < k; i++) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\tB.push_back(x);\n\t}\n\tsort(A.begin(), A.end());\n\tsort(B.begin(), B.end());\n\tlong long ans = inf;\n\tfor (int i = 0; i <= k - n; i++) {\n\t\tlong long temp = 0;\n\t\tint index = i;\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tlong long temp2 = 0;\n\t\t\ttemp2 = abs(A[j] - B[index]) + abs(B[index] - p);\n\t\t\ttemp = max(temp, temp2);\n\t\t\tindex++;\n\t\t}\n\t\tans = min(ans, temp);\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	mod = const int with mod = 1000000007\ninf = const long long with inf = 1000000000000\nn, k, p = int\nread n then k then p\nA, B = vector of long longs\nfor i = 0 to n\nx = long long\nread x\nappend x to A\nfor i = 0 to k\nx = long long\nread x\nappend x to B\nsort vector A\nsort vector B\nans = long long with ans = inf\nfor i = 0 to k - n inclusive\ntemp = long long with temp = 0\nindex = int with index = i\nfor j = 0 to n\ntemp2 = long long with temp2 = 0\nset temp2 to the sum the absolute value of A[j] - B[index] and the absolute value of B[index] - p\nset temp to max between temp and temp2\nincrement index\nset ans to min between ans and temp\nprint ans
const int N = 2e5 + 50;\nconst int M = 1e6;\nconst long long oo = 1e18;\nconst int mod = 1e9 + 7;\nlong long a[1010], b[2010];\nlong long n, k, p;\nbool can(long long md) {\n\tlong long id = 0;\n\tfor (int i = 0; i < k; i++) {\n\t\tif (abs(a[id] - b[i]) + abs(b[i] - p) > md) continue;\n\t\tid++;\n\t\tif (id == n) return 1;\n\t}\n\treturn 0;\n}\nint main() {\n\tcin >> n >> k >> p;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < k; i++) cin >> b[i];\n\tsort(a, a + n);\n\tsort(b, b + k);\n\tlong long md, lo = 0, hi = 2e9, ans = 0;\n\twhile (lo <= hi) {\n\t\tmd = (lo + hi) / 2;\n\t\tif (can(md)) {\n\t\t\thi = md - 1;\n\t\t\tans = md;\n\t\t} else\n\t\t\tlo = md + 1;\n\t}\n\tcout << ans << endl;\n}	N = constant integer with value of 2e5 + 50\nM = constant integer with value of 1e6\noo = constant long long with value of 1e18\nmod = constant integer with value of 1e9 + 7\na, b = long long arrays with a length of 1010 and b length of 2010\nn, k, p = long long\nin function can that takes long long variable md and returns a boolean\nid = long long with value of 0\nfor i = 0 to k exclusive\nif the absolute value of (a[id] - b[i]) plus the absolute value of (b[i] - p) is greater than md then continue\nadd 1 to id\nif id equals n return 1\nread n, k, and p\nfor i = 0 to n exclusive read a[i]\nfor i = 0 to k exclusive read b[i]\nsort the first n elements of a\nsort the first k elements of b\nmd, lo, hi, and ans = long long with lo value of 0 and hi value of 2e9 and ans value of 0\nwhile lo is less than or equal to hi\nset md to half of lo plus hi\nif call can with argument of md is true\nset hi to md minus 1\nset ans to md\nelse\nset lo to md plus 1\nprint ans
"const long long N = 1000 + 5;\nconst long long K = 2000 + 5;\nlong long n, m, fi;\nlong long p[N];\nlong long k[K];\nlong long di(long long a, long long b) {\n\treturn abs(a - b);\n}\nbool ok(long long t) {\n\tlong long poz = 1;\n\tfor (long long i = 1; i <= n; i++) {\n\t\tif (poz > m) return 0;\n\t\twhile (1) {\n\t\t\tlong long tot = di(p[i], k[poz]) + di(k[poz], fi);\n\t\t\tif (tot <= t) break;\n\t\t\tpoz++;\n\t\t\tif (poz > m) return 0;\n\t\t}\n\t\tpoz++;\n\t}\n\treturn 1;\n}\nint main() {\n\tcin >> n >> m >> fi;\n\tfor (long long i = 1; i <= n; i++) { cin >> p[i]; }\n\tfor (long long i = 1; i <= m; i++) { cin >> k[i]; }\n\tsort(p + 1, p + n + 1);\n\tsort(k + 1, k + m + 1);\n\tlong long r = -1, pas = (1LL << 60);\n\twhile (pas) {\n\t\tif (ok(r + pas) == 0) { r += pas; }\n\t\tpas >>= 1;\n\t}\n\tr++;\n\tcout << r << ""\n"";\n\treturn 0;\n}"	N = const long long with N = 1000 + 5\nN = const long long with K = 2000 + 5\nn, m, fi = long long\np = array of N long long\nk = array of K long long\nin the function di that takes long long a and b and returns long long\nreturn abs of a - b\nin the function ok that takes long long t and returns bool\nset poz to 1\nfor i = 1 to n inclusive\nif poz > m return 0\nwhile 1\ntot = long long with tot = di of p[i] and k[poz] + di of k[poz] and fi\nif tot <= t break loop\nincrement poz\nif poz > m return 0\nincrement poz\nreturn 1\nread n, m, fi\nfor i = 1 to n inclusive read p[i]\nfor i = 1 to m inclusive read k[i]\nsort p + 1 and p + n + 1\nsort k + 1 and k + m + 1\nr, pas = long long with r = -1, pas = 1LL << 60\nwhile pas\nif ok(r + pas) is 0 r = r + pas\npas = pas >> 1\nincrement r\nprint r
long long n, k, p;\nlong long a[1005], b[2005];\nbool moze(long long x) {\n\tlong long h = 0;\n\tfor (long long i = 0; i < n; i++) {\n\t\tif (h == k) return false;\n\t\tbool sat = false;\n\t\twhile (h < k) {\n\t\t\tlong long d = abs(a[i] - b[h]) + abs(b[h] - p);\n\t\t\th++;\n\t\t\tif (d <= x) {\n\t\t\t\tsat = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!sat) return false;\n\t}\n\treturn true;\n}\nint main() {\n\tcin >> n >> k >> p;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = 0; i < k; i++) cin >> b[i];\n\tsort(a, a + n);\n\tsort(b, b + k);\n\tlong long l = 0, r = 4e9, o = -1;\n\twhile (l <= r) {\n\t\tlong long m = (l + r) >> 1;\n\t\tif (moze(m)) {\n\t\t\to = m;\n\t\t\tr = m - 1;\n\t\t} else {\n\t\t\tl = m + 1;\n\t\t}\n\t}\n\tcout << o << '\n';\n}	create long longs n, k, p\ncreate long long arrays a, b, with a size 1005, b size 2005\ndeclare moze with long long x as argument, returning boolean\ncreate long long h with h = 0\nfor i = 0 to n exclusive\nif h is k, return false from function\ncreate boolean sat with sat = false\nwhile h is less than k\ncreate long long d with d = absolute value of ( a[i] - b[h] ) + absolute value of (b[h]-p)\nincrement h\nif d is less than or equal to x\nset sat to true\nbreak loop\nif not sat, return false from function\nreturn true from function\nread n read k read p\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to k exclusive, read b[i]\nsort elements from a to a + n\nsort elements from b to b + n\ncreate long longs l, r, o, with l = 0, r = 4e9, o = -1\nwhile l is less than or equal to r\ncreate long long m with m = ( l + r ) bitshift right 1\nif result of run moze with m as argument is true\nset o to m\nset r to m - 1\nelse\nset l to m + 1\nprint o print '\n'
const int MOD = 1e9 + 7;\nconst long long int INF = 1e18;\nvector<long long int> key, per;\nlong long int ans = INF;\nint main() {\n\tint i, j, k, n, p, x;\n\tcin >> n >> k >> p;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\tper.push_back(x);\n\t}\n\tfor (i = 0; i < k; i++) {\n\t\tcin >> x;\n\t\tkey.push_back(x);\n\t}\n\tsort(per.begin(), per.end());\n\tsort(key.begin(), key.end());\n\tfor (j = 0; j + n - 1 < k; j++) {\n\t\tlong long int now = 0;\n\t\tfor (i = 0; i < n; i++) { now = max(now, abs(per[i] - key[j + i]) + abs(key[j + i] - p)); }\n\t\tans = min(ans, now);\n\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	MOD = const int with MOD = 1e9 + 7\nINF = const long long int with INF = 1e18\nkeya, per = vectors of long long int\nans = long long int with ans = INF\ni, j, k, n, p, x = integers\nread n, k, p\nfor i = 0 to n exclusive\nread x\nappend x in per\nfor i = 0 to k exclusive\nread x\nappend x in key\nsort begin of per and end of per\nsort begin of key and end of key\nfor j = 0 to j + n - 1 < k\nnow = long long int with now = 0\nfor i = 0 to n exclusive now = max of now and abs(per[i] - key[j + i]) + abs(key[j + i] - p)\nans = min of ans and now\nprint ans
int main() {\n\tlong long n, k, p;\n\tcin >> n >> k >> p;\n\tlong long pe[1001], ke[2002];\n\tfor (int a = 0; a < n; a++) cin >> pe[a];\n\tfor (int a = 0; a < k; a++) cin >> ke[a];\n\tsort(pe, pe + n);\n\tsort(ke, ke + k);\n\tlong long mins = 99999999999999;\n\tfor (int a = 0; a < k - n + 1; a++) {\n\t\tlong long tmp = 0;\n\t\tfor (int b = 0; b < n; b++) tmp = max(tmp, abs(pe[b] - ke[a + b]) + abs(ke[a + b] - p));\n\t\tmins = min(tmp, mins);\n\t}\n\tcout << mins << endl;\n\treturn 0;\n}	create long longs n, k, p\nread n read k read p\ncreate long long arrays pe, ke, with pe size 1001, ke size 2002\nfor a = 0 to n exclusive, read pe[a]\nfor a = 0 to k exclusive, read ke[a]\nsort elements from pe to pe + n\nsort elements from ke to ke + n\ncreate long long mins with mins = 99999999999999\nfor a = 0 to k - n + 1 exclusive\ncreate long long tmp with tmp = 0\nfor b = 0 to n exclusive, set tmp to maximum of ( tmp and absolute value of ( pe[b] - ke[a + b] ) + absolute value of ( ke[a + b] - p ) )\nset mins to minimum of tmp and mins\nprint mins print newline
int n, k, p;\nlong long person[1005], key[2005];\nlong long ans, tmp;\nint main() {\n\twhile (cin >> n >> k >> p) {\n\t\tans = 99999999999999LL;\n\t\tfor (int i = 0; i < n; i++) { cin >> person[i]; }\n\t\tfor (int i = 0; i < k; i++) { cin >> key[i]; }\n\t\tsort(person, person + n);\n\t\tsort(key, key + k);\n\t\tfor (int i = 0; i + n <= k; i++) {\n\t\t\ttmp = 0;\n\t\t\tfor (int j = 0; j < n; j++) { tmp = max(tmp, abs(key[i + j] - person[j]) + abs(p - key[i + j])); }\n\t\t\tans = min(tmp, ans);\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n, k, p = integer\nperson = long long array of size 1005, key = long long array of size 2005\nans, tmp = long long\nwhile read n, k, p\nans = 99999999999999LL\nfor i = 0 to n exclusive, read person[i]\nfor i = 0 to k exclusive, read key[i]\nsort person and person + n\nsort key and key + k\nfor i = 0 to i + n <= k\ntmp = 0\nfor j = 0 to n exclusive, tmp = max of tmp and abs of key[i + j] - person[j] + abs of p - key[i + j]\nans = min of tmp and ans\nprint ans
const int64_t infint64_t = 9223372036854775807LL;\nvoid solve() {\n\tint64_t n, k, p;\n\tcin >> n >> k >> p;\n\tvector<int64_t> a(n);\n\tfor (int64_t i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a.begin(), a.end());\n\tvector<int64_t> b(k);\n\tfor (int64_t i = 0; i < k; i++) { cin >> b[i]; }\n\tsort(b.begin(), b.end());\n\tint64_t best = infint64_t;\n\tfor (int64_t i = 0; i <= k - n; i++) {\n\t\tint64_t curWorst = 0;\n\t\tfor (int64_t j = 0; j < n; j++) {\n\t\t\tint64_t cur = abs(b[i + j] - p) + abs(b[i + j] - a[j]);\n\t\t\tcurWorst = max(curWorst, cur);\n\t\t}\n\t\tbest = min(best, curWorst);\n\t}\n\tcout << best << endl;\n}\nint main() {\n\tsolve();\n\treturn 0;\n}	create 64 bit integer infint64_t with infint64_t = 9223372036854775807LL\ndeclare solve with no arguments, returning void\ncreate 64 bit integers n, k, p\nread n read k read p\ncreate 64 bit integer vector a initialized with n\nfor i = 0 to n exclusive, read a[i]\nsort elements from beginning of a to end of a\ncreate 64 bit integer vector b initialized with k\nfor i = 0 to k exclusive, read b[i]\nsort elements from beginning of b to end of b\ncreate 64 bit integer best with best = infint64_t\nfor i = 0 to k - n inclusive\ncreate 64 bit integer curWorst with curWorst = 0\nfor j = 0 to n exclusive\ncreate 64 bit integer cur with cur = absolute value of ( b[i+j] - p ) + absolute value of (b[i+j]-a[j] )\nset curWorst to maximum of curWorst and cur\nset best to minimum of best and curWorst\nprint best print newline\nrun solve
"int main() {\n\tlong long t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long a, b;\n\t\tcin >> a >> b;\n\t\tlong long c = pow(a * b, 1.0 / 3.0);\n\t\twhile (c * c * c < a * b) c++;\n\t\twhile (c * c * c > a * b) c--;\n\t\tif (c * c * c == a * b && a % c == 0 && b % c == 0) {\n\t\t\tcout << ""Yes\n"";\n\t\t} else {\n\t\t\tcout << ""No\n"";\n\t\t}\n\t}\n\treturn 0;\n}"	"create long long t\nread t\ndecrement t and loop further, while t > 0\ndeclare long longs a and b\nread a and b\nlong long c = pow(a * b, 1.0 / 3.0)\nincrement c while c * c * c < a * b\ndecrement c while c * c * c > a * b\nif c * c * c = a * b && a % c = 0 && b % c = 0\nprint ""Yes\n""\nelse\nprint ""No\n"""
"int main() {\n\tlong long q;\n\tcin >> q;\n\twhile (q--) {\n\t\tlong long a, b;\n\t\tcin >> a >> b;\n\t\tlong long prod = a * b;\n\t\tlong long round1 = round(cbrt(prod));\n\t\tif (a % round1 == 0 && b % round1 == 0) {\n\t\t\tif (round1 == 1) {\n\t\t\t\tif (a == 1 && b == 1)\n\t\t\t\t\tcout << ""Yes""\n\t\t\t\t\t\t<< ""\n"";\n\t\t\t\telse\n\t\t\t\t\tcout << ""No""\n\t\t\t\t\t\t<< ""\n"";\n\t\t\t} else\n\t\t\t\tcout << ""Yes""\n\t\t\t\t\t<< ""\n"";\n\t\t} else\n\t\t\tcout << ""No""\n\t\t\t\t<< ""\n"";\n\t}\n\treturn 0;\n}"	let q be a long integer\nread q\nwhile q value is decreased by 1\nlet a, b be long integers\nread a and b\nlet prod be long integer with prod = a * b\nlet round1 be long integer with round1 = round(cbrt(prod))\nif a modulus round1 is equal to 0 and b modulus round1 is equal to 0\nif round1 is equal to 1\nif a is equal to 1 and b is equal to 1\nprint Yes\nprint newline\nelse do the following\nprint No\nprint newline\nelse do the following\nprint Yes\nprint newline\nelse do the following\nprint No\nprint newline
"int main() {\n\tlong long q;\n\tcin >> q;\n\twhile (q--) {\n\t\tlong long a, b;\n\t\tcin >> a >> b;\n\t\tlong long prod = a * b;\n\t\tlong long round1 = round(cbrt(prod));\n\t\tif (a % round1 == 0 && b % round1 == 0) {\n\t\t\tif (round1 == 1) {\n\t\t\t\tif (a == 1 && b == 1)\n\t\t\t\t\tcout << ""Yes""\n\t\t\t\t\t\t<< ""\n"";\n\t\t\t\telse\n\t\t\t\t\tcout << ""No""\n\t\t\t\t\t\t<< ""\n"";\n\t\t\t} else\n\t\t\t\tcout << ""Yes""\n\t\t\t\t\t<< ""\n"";\n\t\t} else\n\t\t\tcout << ""No""\n\t\t\t\t<< ""\n"";\n\t}\n\treturn 0;\n}"	q = long long\nread q\nwhile q is not 0 subtract 1 from q do\na, b = long long\nread a and b\nprod = long long with value of a*b\nround1 = long long with value of the cubic root of prod rounded to the nearest whole number\nif a mod round1 equals 0 and b mod round1 equals 0\nif round1 equals 1\nif a and b equal 1\nprint Yes\nprint a new line\nelse\nprint No\nprint a new line\nelse\nprint Yes\nprint a new line\nelse\nprint No\nprint a new line
"long long int maxx(long long int &a, long long int &b) {\n\treturn a > b ? a : b;\n}\nlong long int minn(long long int &a, long long int &b) {\n\treturn a > b ? b : a;\n}\nvoid boostIO() {}\nlong long int gcd(long long int a, long long int b) {\n\treturn b == 0 ? a : gcd(b, a % b);\n}\nint int_gcd(int a, int b) {\n\treturn b == 0 ? a : int_gcd(b, a % b);\n}\nlong long int lcm(long long int a, long long int b) {\n\treturn a / gcd(a, b) * b;\n}\nlong long int poww(long long int base, long long int exp, long long int mod) {\n\tbase %= mod;\n\tlong long int result = 1;\n\twhile (exp > 0) {\n\t\tif (exp & 1) result = (result * base) % mod;\n\t\tbase = (base * base) % mod;\n\t\texp >>= 1;\n\t}\n\treturn result;\n}\nint cube_root(long long int x) {\n\tlong long int l = 1, r = 1e6 + 10;\n\twhile (l < r) {\n\t\tlong long int mid = (l + r) >> 1;\n\t\tif (mid * mid * mid >= x) {\n\t\t\tr = mid;\n\t\t} else {\n\t\t\tl = mid + 1;\n\t\t}\n\t}\n\tif (l * l * l == x) { return l; }\n\treturn -1;\n}\nint main() {\n\tboostIO();\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long int a, b;\n\t\tcin >> a >> b;\n\t\tint value = cube_root(a * b);\n\t\tif (value != -1) {\n\t\t\tlong long int g = gcd(a, b);\n\t\t\tif (g % value == 0) {\n\t\t\t\tputs(""Yes"");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tputs(""No"");\n\t}\n}"	"in function maxx taking two references to long long ints a and b and returning a long long int\nreturn a if it is greater than b else return b\nin function minn taking two references to long long ints a and b and returning a long long int\nreturn b if a is greater than b else return a\ndefine empty function boostISO\nin function gcd taking two long long ints a and b and returning a long long int\nreturn a if b is 0 else return gcd of b and a mod b\nin function int_gcd taking two ints a and b and returning an int\nreturna if b is 0 else return int_gcd of b and a mod b\nin function lcm taking two long long ints a and b and returning a long long int\nreturn a / gcd of a and b * b\nin function poww taking three long long ints base, exp and mod and returning a long long int\nset base to base modulo mod\nresult = long long int with result = 1\nloop while exp is greater than 0\nif exp bitwise-and 1 is 1 then set result to (result * base) modulo mod\nset base to (base * base) modulo mod\nset exp to exp bitshift right by 1\nreturn result\nin function cube_root taking a long long int x and returning an int\nl, r = long long int with l = 1 and r = 1e6 + 10\nloop while l is less than r\nmid = long long int with mid = (l + r) bitshift right by 1\nif mid * mid * mid is greater or equal to x\nset r to mid\nelse\nset l ti mid + 1\nif l * l * l is x then return l\nreturn -1\ncall boostISO\nt = int\nread t\nloop t times\na, b = long long int\nread a then b\nvalue = int with value = cube_root of a * b\nif value is not - 1\ng = long long int with g = gcd of a and b\nif g is a multiple of value\nprint ""YES""\ncontinue loop\nprint ""NO"""
"const int MAX = 2e5 + 7;\nconst int INF = 0x3f3f3f3f;\nint N, M, K;\nint prea[MAX], preb[MAX];\nint cal(int a, char c, int b) {\n\tif (c == '&') return a & b;\n\tif (c == '|') return a | b;\n\treturn a ^ b;\n}\nint main() {\n\twhile (cin >> N) {\n\t\tint x = 0, y = 1023;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tchar c;\n\t\t\tint a;\n\t\t\tcin >> c >> a;\n\t\t\tx = cal(x, c, a);\n\t\t\ty = cal(y, c, a);\n\t\t}\n\t\tint a = 0, b = 0, c = 1023;\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tint p = 1 << i;\n\t\t\tif (x & p) {\n\t\t\t\tif (y & p)\n\t\t\t\t\ta |= p;\n\t\t\t\telse\n\t\t\t\t\tb |= p;\n\t\t\t} else {\n\t\t\t\tif (!(y & p)) c ^= p;\n\t\t\t}\n\t\t}\n\t\tcout << 3 << endl;\n\t\tcout << ""| "" << a << endl;\n\t\tcout << ""^ "" << b << endl;\n\t\tcout << ""& "" << c << endl;\n\t}\n\treturn 0;\n}"	"create const integer MAX = 2e5 + 7\ncreate const integer INF = 0x3f3f3f3f\ndeclare integer variables N, M and K\ndeclare an arrays of integers prea and preb with size MAX\ninteger function cal with integer arguments a and b and char argument c\nif c = '&', return a & b\nif c = '|', return a | b\nreturn a ^ b\nread N and loop further\ncreate integers x = 0 and y = 1023\nfor i from 0 to N exclusive\ndeclare character c\ndeclare integer a\nread c and a\nset x to cal(x, c, a)\nset y to cal(y, c, a)\ndeclare integers a and b = 0 and c = 1023\nfor integer i = 0 to 10 exclusive\ninteger p = 1 << i\nif x & p != 0\nif y & p != 0\na |= p\nelse\nb |= p\nelse\nif y & p = 0, set c to c ^ p\nprint 3\nprint ""| "" and a\nprint ""^ "" and b\nprint ""& "" and c"
"int main() {\n\tlong long n, xx;\n\tcin >> n;\n\tlong long m1 = 0, m2 = 1023;\n\tlong long rr[1024], ss[1024];\n\tfor (long long i = 0; i < 1024; i++) {\n\t\trr[i] = i;\n\t\tss[i] = i;\n\t}\n\twhile (n--) {\n\t\tchar r;\n\t\tcin >> r >> xx;\n\t\tif (r == '|') {\n\t\t\tm1 = m1 | xx;\n\t\t\tm2 = m2 | xx;\n\t\t\tfor (long long i = 0; i < 1024; i++) { rr[i] = rr[i] | xx; }\n\t\t} else if (r == '^') {\n\t\t\tm1 = m1 ^ xx;\n\t\t\tm2 = m2 ^ xx;\n\t\t\tfor (long long i = 0; i < 1024; i++) { rr[i] = rr[i] ^ xx; }\n\t\t} else {\n\t\t\tm1 = m1 & xx;\n\t\t\tm2 = m2 & xx;\n\t\t\tfor (long long i = 0; i < 1024; i++) { rr[i] = rr[i] & xx; }\n\t\t}\n\t}\n\tlong long x = 0, a = 0, o = 0;\n\tfor (long long i = 0; i < 10; i++) {\n\t\tlong long u = m1 & (1 << i);\n\t\tlong long v = m2 & (1 << i);\n\t\tif (m1 & (1 << i) && v == 0) {\n\t\t\tx = x | (1 << i);\n\t\t\ta = a | (1 << i);\n\t\t} else if (u == 0 && m2 & (1 << i)) {\n\t\t\ta = a | (1 << i);\n\t\t} else if (m1 & (1 << i) && m2 & (1 << i)) {\n\t\t\ta = a | (1 << i);\n\t\t\to = o | (1 << i);\n\t\t}\n\t}\n\tcout << ""3"" << '\n';\n\tcout << ""| "" << o << '\n';\n\tcout << ""^ "" << x << '\n';\n\tcout << ""& "" << a << '\n';\n}"	"n,xx=long long\nread n\nm1=0, m2=1023\nrr and ss=array of 1024 long long\nfor i=0 to 1024 exclusive\nrr[i]=i\nss[i]=i\nwhile decremented value of n is not 0\nr=char\nread r,xx\nif r is '|'\nm1=m1 or xx\nm2=m2 or xx\nfor i=0 to 1024 exclusive rr[i]=rr[i] or xx\nelse if r is '^'\nm1=m1 xor xx\nm2=m2 xor xx\nfor i=0 to 1024 exclusive rr[i]=rr[i] xor xx\nelse\nm1=m1 and xx\nm2=m2 and xx\nfor i=0 to 1024 exclusive rr[i]=rr[i] and xx\nx,a,o=0\nfor i=0 to 10 exclusive\nu=m1 and (2^(i+1))\nv=m2 and (2^(i+1))\nif m1 and (2^(i+1)) and v is 0\nx=x or (2^(i+1))\na=a or (2^(i+1))\nelse if u is 0 and m2 and (2^(i+1))\na=a or (2^(i+1))\nelse if m1 and (2^(i+1)) and m2 and (2^(i+1))\na=a or (2^(i+1))\no=o or (2^(i+1))\nprint ""3""\nprint ""| "" and o\nprint ""^ "" and x\nprint ""& "" and a"
"int main() {\n\tlong long n, M, M2, s = 0;\n\tlong long t[100005];\n\tlong long t2[100005];\n\tcin >> n;\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> t[i];\n\t\ts += t[i];\n\t}\n\tfor (long long i = 0; i < n; i++) { cin >> t2[i]; }\n\tsort(t2, t2 + n);\n\tif (s <= t2[n - 1] + t2[n - 2]) {\n\t\tcout << ""YES"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create long longs n, M, M2, s, with s = 0\ncreate long long array t with size 100005\ncreate long long array t2 with size 100005\nread n\nfor i = 0 to n exclusive\nread t[i]\nincrement s by t[i]\nfor i = 0 to n exclusive, read t2[i]\nsort elements from t2 to t2 + n\nif s is less than or equal to t2[n-1] + t2[n-2]\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tlong long n, sum = 0;\n\tcin >> n;\n\tlong long a[n];\n\tlong long b[n];\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t}\n\tfor (long long i = 0; i < n; i++) { cin >> b[i]; }\n\tsort(b, b + n);\n\tcout << (b[n - 2] + b[n - 1] >= sum ? ""YES"" : ""NO"") << '\n';\n\treturn 0;\n}"	"create long longs n, sum with sum = 0\nread n\ncreate long long array a with size n\ncreate long long array b with size n\nfor i = 0 to n exclusive\nread a[i]\nincrement sum by a[i]\nfor i = 0 to n exclusive, read b[i]\nsort elements from b to b + n\nprint ""YES"" if b[n - 2] + b[n - 1] is greater than or equal to sum, else ""NO"", print '\n'"
"long long num[100010];\nbool cmp(int a, int b) {\n\treturn a > b;\n}\nint main() {\n\tlong long sum = 0;\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tint a;\n\t\tcin >> a;\n\t\tsum += a;\n\t}\n\tfor (int i = 0; i < n; i++) { cin >> num[i]; }\n\tsort(num, num + n, cmp);\n\tif (num[0] + num[1] >= sum)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"create long long array num with 100010 elements\nfunction cmp with integer arguments a and b that returns boolean\nreturn a > b\ndeclare long long variable sum = 0\ndeclare integer n\nread n\nfor integer i = 0 to n exclusive\ndeclare integer a\nread a\nincrease sum by a\nread n elements into num\nsort num using cmp as comparator function\nif num[0] + num[1] >= sum\nprint ""YES""\nelse\nprint ""NO"""
"int main() {\n\tlong long cans, sum = 0, aux;\n\tcin >> cans;\n\tlong long val[cans + 2];\n\tfor (int i = 0; i < cans; i++) {\n\t\tcin >> aux;\n\t\tsum += aux;\n\t}\n\tfor (int i = 0; i < cans; i++) cin >> val[i];\n\tsort(val, val + cans);\n\tif (sum <= val[cans - 1] + val[cans - 2])\n\t\tcout << ""YES\n"";\n\telse\n\t\tcout << ""NO\n"";\n\treturn 0;\n}"	"declare long long variables cans, sum and aux, with sum = 0\nread cans\nval is an array of long longs with size cans + 2\nfor i = 0 to cans exclusive\nread aux\nincrease sum by aux\nread val cans times\nsort val\nif sum <= val[cans - 1] + val[cans - 2]\nprint ""YES\n""\nelse\nprint ""NO\n"""
"int main() {\n\tlong long n, sum = 0;\n\tcin >> n;\n\tlong long b[n];\n\tfor (long long i = 0; i < n; i++) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\tsum += x;\n\t}\n\tfor (long long i = 0; i < n; i++) { cin >> b[i]; }\n\tsort(b, b + n);\n\tcout << (b[n - 2] + b[n - 1] >= sum ? ""YES"" : ""NO"") << '\n';\n\treturn 0;\n}"	let n, sum be long integers with sum is equal to 0\nread n\nb= array of long inters of length n\nfor long integer i = 0 to n exclusive\nlet x be a long integer\nread x\nsum is equal to sum+x\nfor long integer i = 0 to n exclusive, read ith element of b array\nsorting the data of b, b+n\nprint YES if (b[n - 2] + b[n - 1] >= sum ) else print NO
"const int N = 1e5 + 10;\nint main() {\n\tint n;\n\tcin >> n;\n\tint a[N], b[N];\n\tlong long sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t}\n\tfor (int i = 0; i < n; i++) cin >> b[i];\n\tsort(b, b + n, greater<int>());\n\tif (sum <= (b[0] + b[1]))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create constant integer N with N = 1e5 + 10\ncreate integer n\nread n\ncreate integer arrays a, b, with a size N, b size N\ncreate long long sum with sum = 0\nfor i = 0 to n exclusive\nread a[i]\nincrement sum by a[i]\nfor i = 0 to n exclusive, read b[i]\nsort elements from b to b + n using integer greater to compare\nif sum is less than or equal to (b[0] + b[1])\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"const int N = 1e5 + 10;\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long a[N], b[N];\n\tlong long sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t}\n\tfor (int i = 0; i < n; i++) cin >> b[i];\n\tsort(b, b + n, greater<int>());\n\tif (sum <= (b[0] + b[1]))\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"declare constant integer N = 1e5 + 10\ndeclare integer variable n\nread n\ncreate long long arrays a and b with N elements\ndeclare long long sum = 0\nfor integer i = 0 to n exclusive\nread a[i]\nincrease sum by a[i]\nfor i = 0 to n exclusive read b[i]\nsort b using greater function as comparer\nif sum <= (b[0] + b[1])\nprint ""YES""\nelse\nprint ""NO"""
"int a[100001], b[100001], i, n;\nlong long s;\nint main() {\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\ts += a[i];\n\t}\n\tfor (i = 1; i <= n; i++) cin >> b[i];\n\tsort(b + 1, b + n + 1);\n\tif (b[n] + b[n - 1] >= s)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	let a,b, i, n be integers where a and b are arrays of length 100001\nlet s be a long integer\nread n\nfor i= 1 to n inclusive\nread ith element of array a\ns is equal to s + ith element of array a\nfor i = 1 to n inclusive, read ith element of array b\nsort the values b+1, b+n+1\nif (nth term of array b + [n - 1]th term of array b is greater than or equal to s)\nprint YES and newline\nelse do the following\nprint NO and newline
"long long gcd(long long a, long long b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) {\n\treturn a * b / gcd(a, b);\n}\nint main() {\n\tlong long i, j;\n\tlong long n;\n\tcin >> n;\n\tvector<long long> a(n), b(n);\n\tfor (long long i = 0; i < (n); i++) cin >> a[i];\n\tfor (long long i = 0; i < (n); i++) cin >> b[i];\n\tlong long sum = 0;\n\tfor (long long i = 0; i < (n); i++) sum += a[i];\n\tsort(b.begin(), b.end());\n\tif (sum > b[n - 1] + b[n - 2]) {\n\t\tcout << ""NO"" << endl;\n\t} else {\n\t\tcout << ""YES"" << endl;\n\t}\n}"	"function gcd with long long arguments a and b that returns long long\nif b = 0, return a\nreturn gcd(b, a % b)\nfunction lcm with long long arguments a and b that returns long long\nreturn a * b / gcd(a, b)\ncreate long longs i and j\ndeclare long long n\nread n\ncreate vectors of long long a and b with n elements each\nread n elements into a\nread n elements into b\ndeclare long long variable sum = 0\nadd all elements of a to the sum one by one\nsort array b\nif sum is greater than b[n - 1] + b[n - 2]\nprint ""NO"" and a new line\nelse\nprint ""YES"" and a new line"
"int main() {\n\tlong long int n, a[100000], b[100000], c[2] = {0}, k;\n\tlong long int i, j, sum = 0;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tsum = sum + a[i];\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tcin >> b[i];\n\t\tif (b[i] > c[0]) {\n\t\t\tc[0] = b[i];\n\t\t\tk = i;\n\t\t}\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tif (c[1] < b[i] && b[i] <= c[0] && i != k) c[1] = b[i];\n\t}\n\tif (c[1] + c[0] >= sum) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create long long integers n and k, array c with 2 elements filled with 0, and arrays a and b with size 100000\ndeclare long long integer variables i, j and sum where sum = 0\nread n\nfor i = 0 to n exclusive\nread a[i]\nset sum to sum + a[i]\nfor i = 0 to n exclusive\nread b[i]\nif b[i] is greater than c[0]\nc[0] = b[i]\nk = i\nfor i = 0 to n exclusive\nif c[1] < b[i] and b[i] <= c[0] and i != k, set c[1] to b[i]\nif c[1] + c[0] >= sum\nprint ""YES""\nelse\nprint ""NO"""
"long long a[100010], b[100010];\nbool cmp(int a, int b) {\n\treturn a > b;\n}\nint main() {\n\tint n, i, j;\n\twhile (cin >> n) {\n\t\tmemset(a, 0, sizeof(a));\n\t\tmemset(b, 0, sizeof(b));\n\t\tdouble sum = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tcin >> a[i];\n\t\t\tsum += a[i];\n\t\t}\n\t\tfor (i = 0; i < n; i++) { cin >> b[i]; }\n\t\tsort(b, b + i, cmp);\n\t\tif (b[0] + b[1] >= sum)\n\t\t\tcout << ""YES"" << endl;\n\t\telse\n\t\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create long long arrays a, b, with a size 100010, b size 100010\ndeclare cmp with integers a, b as arguments, returning boolean\nreturn a is greater than b\ncreate integers n, i, j\nwhile read n is true\nset bytes from a to size of a to value 0\nset bytes from b to size of b to value 0\ncreate double sum with sum = 0\nfor i = 0 to n exclusive\nread a[i]\nincrement sum by a[i]\nfor i = 0 to n exclusive, read b[i]\nsort elements from b to b + i using cmp to compare\nif b[0] + b[1] is greater than or equal to sum\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"int main() {\n\tlong long n, M, M2, s = 0;\n\tlong long t[100005];\n\tlong long t2[100005];\n\tcin >> n;\n\tfor (long long i = 0; i < n; i++) {\n\t\tcin >> t[i];\n\t\ts += t[i];\n\t}\n\tfor (long long i = 0; i < n; i++) { cin >> t2[i]; }\n\tsort(t2, t2 + n);\n\tif (s <= t2[n - 1] + t2[n - 2]) {\n\t\tcout << ""YES"" << endl;\n\t} else\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	n, M, M2, s = long long and set s to 0\nt = long long array of size 100005\nt2 = long long array of size 100005\nread n\nfor long long i = 0 to n exclusive\nread t[i]\nincrease s by t[i]\nfor long long i = 0 to n exclusive read t2[i]\nsort the first n elements of t2\nif s <= t2[n-1] + t2[n-2]\nprint YES\nelse\nprint NO
"const long long Mod = 1e9 + 7;\nconst double pi = 2 * acos(0.0);\nconst int N = 2e5 + 5;\nint arr[N];\nint main() {\n\tlong long n, x, s = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> x;\n\t\ts += x;\n\t}\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tif (arr[n - 1] + arr[n - 2] >= s)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n\treturn 0;\n}"	"create constant long long Mod with value 1e9 + 7\ncreate constant double pi with value 2 * acos(0.0)\ncreate constant double N with value 2e5 + 5\narr is an integer array with size N\ncreate long longs n, x and s, with s = 0\nread n\nfor integer i = 0 to n exclusive\nread x\nincrease s by x\nfor integer i = 0 to n exclusive read arr[i]\nsort arr\nif arr[n - 1] + arr[n - 2] >= s\nprint ""YES"" and a new line\nelse\nprint ""NO"" and a new line"
"int main() {\n\tint n;\n\tcin >> n;\n\tlong long sum = 0, cur;\n\tfor (size_t i = 0; i < n; i++) {\n\t\tcin >> cur;\n\t\tsum += cur;\n\t}\n\tlong long Max1 = -1, Max2 = -1;\n\tfor (size_t i = 0; i < n; i++) {\n\t\tcin >> cur;\n\t\tif (cur > Max1) {\n\t\t\tMax2 = Max1;\n\t\t\tMax1 = cur;\n\t\t} else if (cur > Max2) {\n\t\t\tMax2 = cur;\n\t\t}\n\t}\n\tcout << ((Max2 + Max1 >= sum) ? ""YES\n"" : ""NO\n"");\n\treturn 0;\n}"	"declare integer variable n\nread n\nlet sum and cur be long longs where sum = 0\nfor size_t = 0 to n exclusive\nread cur\nincrease sum by cur\ncreate long longs Max1 and Max2 = -1\nfor size_t = 0 to n exclusive\nread cur\nif cur is greater than Max1\nset Max2 to Max1\nset value of Max1 to cur\nelse if cur is greater than Max2\nMax2 = cur\nprint ""YES\n"" if Max2 + Max1 >= sum, else pring ""NO\n"""
"int main() {\n\tint x;\n\tlong long int k = 0;\n\tcin >> x;\n\tvector<long long int> v;\n\tint a[x], b[x];\n\tfor (int i = 0; i < x; i++) {\n\t\tint s;\n\t\tcin >> s;\n\t\tk += s;\n\t}\n\tfor (int i = 0; i < x; i++) {\n\t\tlong long int d;\n\t\tcin >> d;\n\t\tv.push_back(d);\n\t}\n\tsort(v.begin(), v.end());\n\tlong int s = v[x - 1] + v[x - 2];\n\tif (s >= k) {\n\t\tcout << ""YES"" << endl;\n\t} else {\n\t\tcout << ""NO"" << endl;\n\t}\n\treturn 0;\n}"	"create integer x\ncreate long long integer k with k = 0\nread x\ncreate long long integer vector v\ncreate integer arrays a, b, with a size x, b size x\nfor i = 0 to x exclusive\ncreate integer s\nread s\nincrement k by s\nfor i = 0 to x exclusive\ncreate long long integer d\nread d\nadd element d to end of v\nsort elements from beginning of v to end of v\ncreate long long integer s with s = v[x-1]+v[x-2]\nif s is greater than or equal to k\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
"long long gcd(long long a, long long b) {\n\twhile (b) swap(a %= b, b);\n\treturn a;\n}\nint main() {\n\tlong long n;\n\tcin >> n;\n\tvector<long long> nums(n);\n\tlong long sum = 0;\n\tfor (long long i = 0; i < n; ++i) {\n\t\tlong long a;\n\t\tcin >> a;\n\t\tsum += a;\n\t}\n\tlong long mx1 = 0, mx2 = 0;\n\tfor (long long i = 0; i < n; ++i) {\n\t\tcin >> nums[i];\n\t\tif (nums[i] > mx1)\n\t\t\tmx2 = mx1, mx1 = nums[i];\n\t\telse if (nums[i] <= mx1 && nums[i] > mx2)\n\t\t\tmx2 = nums[i];\n\t}\n\tif (sum <= mx1 + mx2)\n\t\tcout << ""YES"" << endl;\n\telse\n\t\tcout << ""NO"" << endl;\n}"	"declare gcd with long longs a, b as arguments, returning long long\nwhile b is true, swap values of ( set a to a % b, and b )\nreturn a\ncreate long long n\nread n\ncreate long long vector nums initialized with n\ncreate long long sum with sum = 0\nfor i = 0 to n exclusive\ncreate long long a\nread a\nincrement sum by a\ncreate long longs mx1, mx2 with mx1= 0, mx2 = 0\nfor i = 0 to n exclusive\nread nums[i]\nif nums[i] is greater than mx1\nset mx2 to mx1, set mx1 to nums[i]\nelse if nums[i] is less than or equal to mx1 and nums[i] is greater than mx2\nset mx2 to nums[i]\nif sum is less than or equal to mx1 + mx2\nprint ""YES"" print newline\nelse\nprint ""NO"" print newline"
int n, j, minnum = 1000000002, ans = 100002;\nint a[100005], flag[100005];\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tif (minnum > a[i]) minnum = a[i];\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] == minnum) {\n\t\t\tj++;\n\t\t\tflag[j] = i;\n\t\t}\n\t}\n\tfor (int i = 1; i < j; i++)\n\t\tif (flag[i + 1] - flag[i] < ans) ans = flag[i + 1] - flag[i];\n\tcout << ans << endl;\n\treturn 0;\n}	n, j, minnum and ans are integers with minnum = 1000000002 and ans = 100002\ncreate an arrays of ints a and flag with size 100005\nread n\nfor i from 1 to n inclusive\nread a[i]\nif minnum is greater than a[i], change minnum to a[i]\nfor i from 1 to n inclusive\nif a[i] = minnum\nincrement j\nchange flag[j] to i\nfor integer i = 1 to j exclusive\nif flag[i + 1] - flag[i] is less than ans, set ans to flag[i + 1] - flag[i]\nprint ans
int n, a[100001], mink = 2e9, pr = -1, mind = 2e9;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tmink = min(mink, a[i]);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (pr != -1 && a[i] == mink) { mind = min(mind, i - pr); }\n\t\tif (a[i] == mink) { pr = i; }\n\t}\n\tcout << mind << endl;\n}	n, a, mink, pr, mind = integers with a = integer array of size 100001, mink = 2e9, pr = -1, mind = 2e9\nread n\nfor i = 0 to n exclusive\nread a[i]\nmink = min of mink and a[i]\nfor i = 0 to n exclusive\nif pr is not -1 and a[i] is mink, mind = min(mind, i - pr)\nif a[i] is mink, pr = i\nprint mind
const int maxn = 1e7 + 10;\nint a[maxn];\nint n;\nint mini = 1e9 + 10;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] < mini) mini = a[i];\n\t}\n\tvector<int> vec;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (mini == a[i]) { vec.push_back(i); }\n\t}\n\tmini = n;\n\tfor (int i = 0; i < vec.size() - 1; i++) { mini = min(mini, vec[i + 1] - vec[i]); }\n\tcout << mini << endl;\n\treturn 0;\n}	create constant int maxn = 1e7 + 10\nlet int array a of size maxn\nlet int n\nlet integer mini = 1e9 + 10\nread n\nfor i = 0 to n exclusive\nread a[i]\nif a[i] is less than mini, set mini to a[i]\ncreate int vector vec\nfor i = 0 to n exclusive\nif mini is equal to a[i], append i to vec\nset mini to n\nfor i = 0 to the size of vec exclusive, set mini to the min of mini and vec[i + 1] - vec[i]\nprint mini
int main() {\n\tvector<long long> v;\n\tvector<long long> v1;\n\tlong long i, j, n, ans, min = 1000000002, t, flag;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t\tif (x < min) { min = x; }\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tif (min == v[i]) { v1.push_back(i); }\n\t}\n\tmin = 1000000002;\n\tfor (i = 1; i < v1.size(); i++) {\n\t\tif ((v1[i] - v1[i - 1]) < min) { min = (v1[i] - v1[i - 1]); }\n\t}\n\tcout << min << endl;\n}	v = long long vector\nv1 = long long vector\ni, j, n, ans, min, t, flag = long long with min = 1000000002\nread n\nfor i = 0 to n\nx = long long\nread x\nappend x to v\nif x is less than min set min to x\nfor i = 0 to n\nif min is v[i] append i to v1\nset min to 1000000002\nfor i = 1 to size of v1\nif (v1[i] - v1[i - 1]) < min set min to v1[i] - v1[i - 1]\nprint min
int a[100010];\nint main() {\n\tint n, m, j = INT_MAX, k, l = INT_MAX, i, o, p;\n\tcin >> n;\n\tfor (i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tl = min(l, a[i]);\n\t}\n\tk = distance(a, find(a + 1, a + n + 1, l));\n\tfor (i = k + 1; i <= n; i++) {\n\t\tif (a[i] == l) {\n\t\t\tj = min(j, i - k);\n\t\t\tk = i;\n\t\t}\n\t}\n\tcout << j << endl;\n\treturn 0;\n}	a = array of integers of length 100010\nlet n, m, j, k, l, i, o, p be integers with j = INT_MAX, l = INT_MAX\nread n\nfor i = 1 to n inclusive\nread a[i]\nl is equal to minimum of l, a[i]\nk is equal to distance(a, find(a + 1, a + n + 1, l))\nfor i = k + 1 to n inclusive\nif a[i] is equal to l\nj is equal to minimum of j, i - k\nk is equal to i\nprint j and newline
int n, a[100005], Min, pre, ans = 100005;\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tMin = a[1];\n\tfor (int i = 2; i <= n; i++) Min = min(Min, a[i]);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (a[i] == Min) {\n\t\t\tif (!pre)\n\t\t\t\tpre = i;\n\t\t\telse\n\t\t\t\tans = min(ans, i - pre), pre = i;\n\t\t}\n\tcout << ans << endl;\n\treturn 0;\n}	n, a, Min, pre, ans = integers with a = array of size 100005, ans = 100005\nread n\nfor i = 1 to n, read a[i]\nMin = a[1]\nfor i = 2 to n, Min = min of Min and a[i]\nfor i = 1 to n\nif a[i] is Min\nif not pre\npre = i\nelse\nans = min(ans, i - pre), pre = i\nprint ans
int main() {\n\tint s = 9999999999;\n\tint n;\n\tcin >> n;\n\tpair<int, int> a[n];\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i].first;\n\t\ta[i].second = i + 1;\n\t}\n\tsort(a, a + n);\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (a[i].first == a[i + 1].first && a[0].first == a[i].first) { s = min(s, a[i + 1].second - a[i].second); }\n\t}\n\tcout << s << endl;\n\treturn 0;\n}	let int s = 9999999999\nlet int n\nread n\ncreate pair array a of int and int of size n\nfor i = 0 to n exclusive\nread a[i].first\nset a[i].second to i + 1\nsort array a\nfor i = 0 to n - 1 exclusive\nif a[i].first equals a[i + 1].first and a[0].first equals a[i].first, set s to min of s and a[i +1].second - a[i].second\nprint s
int main() {\n\tint size, in[100005];\n\tvector<int> d1;\n\tcin >> size;\n\tfor (int i = 0; i < size; i++) { cin >> in[i]; }\n\tint mn = 1e9;\n\tfor (int i = 0; i < size; i++) {\n\t\tif (in[i] < mn) { mn = in[i]; }\n\t}\n\tfor (int i = 0; i < size; i++) {\n\t\tif (mn == in[i]) { d1.push_back(i); }\n\t}\n\tint mns = 1e9;\n\tfor (int i = 0; i < d1.size() - 1; i++) {\n\t\tif (abs(d1[i] - d1[i + 1]) < mns) { mns = abs(d1[i] - d1[i + 1]); }\n\t}\n\tcout << mns << endl;\n\treturn 0;\n}	size = int and in = int array of size 100005\nd1 = int vector\nread size\nread size values into in\nmn = int with mn = 1e9\nfor i = 0 to size\nif in[i] < mn set mn to in[i]\nfor i = 0 to size\nif mn is in[i] append i to d1\nmns = int with mns = 1e9\nfor i = 0 to size of d1 - 1\nif absolute of d1[i] - d1[i + 1] < mns set mns to ansolute of d1[i] - d1[i + 1]\nprint mns
"int main() {\n\tint n;\n\twhile (cin >> n) {\n\t\tvector<int> v(n);\n\t\tvector<int> s(n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcin >> v[i];\n\t\t\ts[i] = v[i];\n\t\t}\n\t\tsort(s.begin(), s.end());\n\t\tint a, b;\n\t\ta = s[0];\n\t\tb = s[1];\n\t\tint x, y, d;\n\t\td = x = y = 1000000100;\n\t\tbool sw = true;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a == v[i]) {\n\t\t\t\tx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i = x + 1; i < n; i++) {\n\t\t\tif (b == v[i]) {\n\t\t\t\ty = i;\n\t\t\t\td = min(d, abs(x - y));\n\t\t\t\tx = i;\n\t\t\t}\n\t\t}\n\t\tcout << d << ""\n"";\n\t}\n\treturn 0;\n}"	n = integer\nwhile read n\nv = vector of integer with v = n\ns = vector of integer with s = n\nfor i = 0 to n exclusive\nread v[i]\ns[i] = v[i]\nsort s.begin() and s.end()\na, b = integers\na = s[0]\nb = s[1]\nx, y, d = integers\nd = x = y = 1000000100\nsw = bool with sw = true\nfor i = 0 to n exclusive\nif a is v[i]\nx = i\nbreak loop\nfor i = x + 1 to n exclusive\nif b is v[i]\ny = i\nd = min of d and abs(x - y)\nx = i\nprint d
int main() {\n\tint n, menor, pos, ans, i;\n\tcin >> n;\n\tvector<int> V(n);\n\tfor (i = 0; i < n; i++) { cin >> V[i]; }\n\tmenor = 2000000000;\n\tfor (i = 0; i < n; i++) { menor = min(menor, V[i]); }\n\tfor (i = 0; i < n; i++) {\n\t\tif (V[i] == menor) {\n\t\t\tpos = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tans = 1000000;\n\tfor (i = pos + 1; i < n; i++) {\n\t\tif (V[i] == menor) {\n\t\t\tif (i - pos < ans) ans = i - pos;\n\t\t\tpos = i;\n\t\t}\n\t}\n\tcout << ans << '\n';\n}	n, menor, pos, ans, i = int\nread n\nV = int vector of size n\nread n values into V\nset menor to 2000000000\nfor i = 0 to n set menor to min of menor and V[i]\nfor i = 0 to n\nif V[i] = menor\nset pos to i\nbreak\nset ans to 1000000\nfor i = pos + 1 to n\nif V[i] = menor\nif i - pos < ans set ans to i - pos\nset pos to i\nprint ans
long long a[100005];\nint main() {\n\tlong long n, mi = 1000000007;\n\tcin >> n;\n\tfor (long long i = 1; i < n + 1; i++) {\n\t\tcin >> a[i];\n\t\tmi = min(mi, a[i]);\n\t}\n\tlong long j = -1000000007, ans = 1000000007;\n\tfor (long long i = 1; i < n + 1; i++) {\n\t\tif (a[i] == mi) {\n\t\t\tans = min(ans, i - j);\n\t\t\tj = i;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	create long long array a of length 100005\ncreate long long a and mi, set mi to 1000000007\nread n\nfor i=1 to n+1 exclusive\nread a[i]\nset mi to min of mi and a[i]\nset j to -1000000007 and ans to 1000000007\nfor i=1 to n+1 exclusive\nif a[i] = mi\nset ans to min of ans and i - j\nassign i to j\nprint ans
int main() {\n\tint n;\n\tcin >> n;\n\tint *a = new int[n];\n\tlong long int min = 99999999999999999;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] < min) { min = a[i]; }\n\t}\n\tint p[100000];\n\tint c = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] == min) {\n\t\t\tp[c] = i;\n\t\t\tc++;\n\t\t}\n\t}\n\tmin = 99999999999999999;\n\tfor (int i = 1; i < c; i++) {\n\t\tint r = p[i] - p[i - 1];\n\t\tif (r < min) { min = r; }\n\t}\n\tcout << min << endl;\n}	declare integer n\nread n\ndeclare integer pointer a = new integer array size n\ndeclare long long integer min = 99999999999999999\nfor i = 0 to n exclusive\nread a[i]\nif a[i] is less than min, let min = a[i]\ndeclare integer array p size 100000\ndeclare integer c = 0\nfor i = 0 to n exclusive\nif a[i] is min\nlet p[c] be i\nincrement c\nlet min be 99999999999999999\nfor i = 1 to c exclusive\ndeclare integer r = p[i] - p[i - 1]\nif r is less than min, let min be r\nprint min, newline
const int maxn = 1e6 + 7;\nconst int mod = 998244353;\nint read() {\n\tint c = getchar(), Nig = 1, x = 0;\n\twhile (!isdigit(c)) c = getchar();\n\tif (c == '-') Nig = -1, c = getchar();\n\twhile (isdigit(c)) x = ((x << 1) + (x << 3)) + (c ^ '0'), c = getchar();\n\treturn Nig * x;\n}\nint a[maxn];\nint main() {\n\tint n = read();\n\tfor (int i = 1; i <= n; i++) { a[i] = read(); }\n\tint minl = *min_element(a + 1, a + 1 + n);\n\tint pos = -1, ans = 0x3f3f3f3f;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] == minl) {\n\t\t\tif (~pos)\n\t\t\t\tans = min(ans, i - pos), pos = i;\n\t\t\telse\n\t\t\t\tpos = i;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}	let maxn be a constant integer with maxn = 1e6 + 7\nlet mod be a constant integer with mod = 998244353\nread the integer data\nlet c, Nig, x be integers with Nig = 1, x = 0\nwhile not isdigit of c , c = getchar()\nif c is equal to - , Nig = -1, c = getchar()\nwhile isdigit of c, x is equal to ((x << 1) + (x << 3)) + (c ^ '0'), c is equal to getchar()\nreturn the value of Nig * x\na = array of integers of length maxn\nread from n\nfor i = 1 to n inclusive, read a[i]\nlet minl be a integer with minl = *min_element(a + 1, a + 1 + n)\nlet pos, ans be integers with pos = -1, ans = 0x3f3f3f3f\nfor i = 1 to n inclusive\nif a[i] is equal to minl\nif ~pos\nans is equal to minimum of ans and i - pos , pos is equal to i\nelse do the following\npos is equal to i\nprint ans and new line
long long a[200050];\nlong long b[200050];\nint len = 0;\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tlong long minn = 1000000009;\n\tfor (int i = 0; i < n; i++) { minn = min(minn, a[i]); }\n\tfor (int i = 0; i < n; i++) {\n\t\tif (a[i] == minn) {\n\t\t\tb[len] = i;\n\t\t\tlen++;\n\t\t}\n\t}\n\tlong long minnn = 200000050;\n\tfor (int i = 1; i < len; i++) { minnn = min(minnn, b[i] - b[i - 1]); }\n\tcout << minnn << endl;\n\treturn 0;\n}	create new array of long longs a with 200050 elements\ncreate new array of long longs b with size 200050\ndeclare integer variable len with value 0\ndeclare new integer called n\nread n\nfor i from 0 to n exclusive, read standard input to a[i]\ncreate long long minn with value 1000000009\nfor integer i = 0 to n exclusive, set minn to min of minn and a[i]\nfor integer i = 0 to n exclusive incrementing i\nif a[i] = minn\nassign i to b[len]\nincrement len by one\ndeclare new long long called minnn = 200000050\nin a for loop, change i from 1 to len exclusive, assigning min of minnn and b[i] - b[i - 1] to minnn on each loop\nprint minnn to the standard output
int main() {\n\tlong long int a, b, n, mini, ans = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\tans++;\n\t\tif (i == 0 || a < mini) {\n\t\t\tmini = a;\n\t\t\tans = 0;\n\t\t\tb = 0;\n\t\t} else if (a == mini) {\n\t\t\tif ((ans < b) || (b == 0)) { b = ans; }\n\t\t\tans = 0;\n\t\t}\n\t}\n\tcout << b << endl;\n\treturn 0;\n}	a, b, n, mini, ans = long long int with ans = 0\nread n\nfor i = 0 to n\nread a\nincrement ans\nif i is 0 or a is less than mini\nset mini to a\nset ans to 0\nset b to 0\nelse if a is mini\nif ans is less than b or b is 0 set b to ans\nset ans to 0\nprint b
int main() {\n\tint n, num[100005], min = INT_MAX, cnt = 0, first, last, selisih;\n\tint arrpos[100005], has = INT_MAX;\n\tcin >> n;\n\tfor (int x = 1; x <= n; x++) {\n\t\tcin >> num[x];\n\t\tif (num[x] < min) { min = num[x]; }\n\t}\n\tfor (int x = 1; x <= n; x++) {\n\t\tif (num[x] == min) {\n\t\t\tif (cnt == 0) {\n\t\t\t\tarrpos[x] = x;\n\t\t\t\tfirst = x;\n\t\t\t}\n\t\t\tif (cnt == 1) {\n\t\t\t\tarrpos[x] = x;\n\t\t\t\tlast = x;\n\t\t\t}\n\t\t\tif (cnt >= 2) {\n\t\t\t\tfirst = last;\n\t\t\t\tlast = x;\n\t\t\t\tarrpos[x] = x;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\t\tif (cnt >= 2) {\n\t\t\tselisih = arrpos[last] - arrpos[first];\n\t\t\tif (selisih < has) { has = selisih; }\n\t\t}\n\t}\n\tcout << has << endl;\n\treturn 0;\n}	let ints n, min = INT_MAX, cnt = 0, first, last, and selisih and int array num of size 100005\ncreate int has = INT_MAX and int array arrpos of size 100005\nread n\nfor x = 1 to n\nread num[x]\nif num[x] is less than min, set min to num[x]\nfor x = 1 to n\nif num[x] equals min\nif cnt is equal to 0\nset arrpos[x] to x\nset first to x\nif cnt equals 1\nset arrpos[x] to x\nset last to x\nif cnt is greater than or equal to 2\nset first to last\nset last to x\nset arrpos[x] to x\nincrement cnt\nif cnt is greater than or equal to 2\nset selisih to the result of arrpos[last] - arrpos[first]\nif selisih is less than has, set has to selisih\nprint has
int a[(int)1e5 + 5];\nlong long min(long long a, long long b) {\n\tif (a > b) {\n\t\treturn b;\n\t} else {\n\t\treturn a;\n\t}\n}\nint main() {\n\tint n;\n\tcin >> n;\n\tlong long m = 1e9 + 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tm = min(m, a[i]);\n\t}\n\tvector<int> ans;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] == m) { ans.push_back(i); }\n\t}\n\tint mins = 1e9;\n\tint size = ans.size() - 1;\n\tfor (int i = 1; i <= size; i++) { mins = min(mins, ans[i] - ans[i - 1]); }\n\tcout << mins << endl;\n\treturn 0;\n}	a is a new array of integers with size 1e5 + 5\nfunction min with long long arguments a and b that returns long long\nif a is greater than b\nreturn b\nelse\nreturn a\ndeclare integer variable n\nread n from the user input\ndeclare long long m with value 1e9 + 1\nfor integer i = 1 to n inclusive incrementing i\nread input to a[i]\nchange m to min of m and a[i]\ndeclare vector of integers called ans\nfor i = 1 to n inclusive\nif a[i] is equal to m, push i into ans\ncreate new integer called mins = 1e9\ndeclare integer size with value length of ans - 1\nfor i from 1 to size inclusive, assign min of mins and ans[i] - ans[i - 1] to mins\nprint mins to the standard output
int main() {\n\tint t, n, i, x, pp, count, flag = 0, dis = 0, min = 0, sum;\n\tvector<int> v;\n\tvector<int>::iterator it;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tt = *min_element(v.begin(), v.end());\n\tfor (i = 0; i < v.size(); i++) {\n\t\tif (v[i] == t) {\n\t\t\tif (flag != 0) {\n\t\t\t\tdis = i - pp;\n\t\t\t\tif (min == 0 && dis != 0)\n\t\t\t\t\tmin = dis;\n\t\t\t\telse if (min != 0 && min > dis)\n\t\t\t\t\tmin = dis;\n\t\t\t}\n\t\t\tflag++;\n\t\t\tpp = i;\n\t\t}\n\t}\n\tcout << min << endl;\n\treturn 0;\n}	t, n, i, x, pp, count, flag, dis, min, sum = integers with flag = 0, dis = 0, min = 0\nv = vector of integer\nit = iterator vector of integer\nread n\nwhile decrement n\nread x\nappend x in v\nt = pointer min_element on v.begin() and v.end()\nfor i = 0 to v.size() exclusive\nif v[i] is t\nif flag is not 0\ndis = i - pp\nif min is 0 and dis is not 0\nmin = dis\nelse if min is not 0 and min > dis\nmin = dis\nincrement flag\npp = i\nprint min
int main() {\n\tint x;\n\tcin >> x;\n\tint ara[x];\n\tint maxn;\n\tset<int> s;\n\tmaxn = 1000000009;\n\tint d = 1000000009;\n\tbool b = 0;\n\tfor (int w = 0; w < x; w++) {\n\t\tcin >> ara[w];\n\t\tif (ara[w] < maxn) { maxn = ara[w]; }\n\t}\n\tfor (int w = 0; w < x; w++) {\n\t\tif (ara[w] == maxn) { s.insert(w); }\n\t}\n\tset<int>::iterator i;\n\tset<int>::iterator j = s.end();\n\tj--;\n\tint l, m;\n\tfor (i = s.begin(); i != s.end(); i++) {\n\t\tif (i == j) continue;\n\t\tm = *i;\n\t\ti++;\n\t\tl = *i;\n\t\ti--;\n\t\tif (l - m < d) d = (l - m);\n\t}\n\tcout << d << endl;\n\treturn 0;\n}	create integer x\nread x from the input\ncreate new array of integers ara with x elements\ncreate new integer maxn\ncreate new set of integers s\nset maxn to 1000000009\ndeclare new integer variable d with value 1000000009\ncreate boolean variable with name b with value 0\nin the for loop, change integer w from 0 to x exclusive\nread variable ara[w] from the input\nif ara[w] is less than maxn, change maxn to ara[w]\nfor w from 0 to x exclusive\nif ara[w] = maxn, insert w into set s\ni is a new iterator for the set of integers\nj is a new iterator for the set of integers pointed to the end of s\ndecrement j\ndeclare ints l and m\nmove i through s in a for loop\nif i is equal to j, skip the rest of the loop\nchange m to the value pointed by i\nincrement i\nchange l to the value pointed by i\ndecrement i\nif l - m is less than d, set d to (l - m)\nprint d to the standard output
int a[300000];\nint main() {\n\tint n, m1 = 0, m2 = 0, minn = 9999999999, minn2 = 9999999;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tif (minn > a[i]) minn = a[i];\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] == minn) {\n\t\t\tif (m1 == 0)\n\t\t\t\tm1 = i;\n\t\t\telse if (m2 == 0) {\n\t\t\t\tm2 = i;\n\t\t\t\tif (minn2 > m2 - m1) minn2 = m2 - m1;\n\t\t\t} else {\n\t\t\t\tm1 = m2;\n\t\t\t\tm2 = i;\n\t\t\t\tif (minn2 > m2 - m1) minn2 = m2 - m1;\n\t\t\t}\n\t\t}\n\t}\n\tcout << minn2 << endl;\n\treturn 0;\n}	a is a new array of integers with 300000 elements\ncreate ints n, m1, m2, minn and minn2 with m1 and m2 = 0, minn2 = 9999999 and minn = 9999999999\nread standard input to n\nfor i from 1 to n inclusive incrementing i\nread input to a[i]\nif minn is greater than a[i], assign a[i] to minn\nstart for loop from i = 1 to n inclusive on each loop\nif a[i] is equal to minn\nif m1 is equal to 0\nchange m1 to i\nelse if m2 = 0\nassign i to m2\nif minn2 is greater than m2 - m1, change minn2 to m2 - m1\nelse\nchange m1 to m2\nassign i to m2\nif minn2 is greater than m2 - m1, change minn2 to m2 - m1\nprint minn2 to the standard output
vector<int> nums;\nint main() {\n\tint n, a, last, dist;\n\tint min = INT_MAX;\n\tint mindist = INT_MAX;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a;\n\t\tnums.push_back(a);\n\t\tif (a < min) min = a;\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (nums[i] == min) {\n\t\t\tlast = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = last + 1; i < n; i++) {\n\t\tif (nums[i] == min) {\n\t\t\tdist = i - last;\n\t\t\tif (dist < mindist) mindist = dist;\n\t\t\tlast = i;\n\t\t}\n\t}\n\tcout << mindist << endl;\n}	nums is a new vector of integers\ndeclare int variables n, a, last and dist\ncreate integer variable min with value INT_MAX\nmindist is a new integer with value INT_MAX\nread n from the user input\nfor i from 0 to n exclusive\nread input to a\npush a to the end of nums\nif a is less than min, set min to a\nin a for loop, change i from 0 to n exclusive\nif nums[i] = min\nchange last to i\nbreak\nfor i from last + 1 to n exclusive incrementing i\nif nums[i] = min\nchange dist to i - last\nif dist is less than mindist, change mindist to dist\nassign i to last\nprint mindist to the standard output
int main() {\n\tint n, ar[100010];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> ar[i]; }\n\tint mn = ar[0];\n\tfor (int i = 0; i < n; i++) {\n\t\tif (mn > ar[i]) mn = ar[i];\n\t}\n\tint p1 = -1, p2 = -1, d;\n\tint mnd = n;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (ar[i] == mn) {\n\t\t\tp1 = i;\n\t\t\tif (p2 != -1) {\n\t\t\t\tif (mnd > (p1 - p2)) { mnd = p1 - p2; }\n\t\t\t}\n\t\t\tp2 = p1;\n\t\t}\n\t}\n\tcout << mnd << endl;\n\treturn 0;\n}	declare integer variable n and an array of integers ar with size 100010\nread n\nread input into ar n times\ndeclare integer variable mn = ar[0]\nfor i from 0 to n exclusive\nif mn is greater than ar[i], assign ar[i] to mn\ndeclare integers p1, p2 and d with p1 and p2 = -1\ncreate int mnd = n\nfor integer i = 0 to n exclusive\nif ar[i] = mn\nassign i to p1\nif p2 != -1\nif mnd is greater than (p1 - p2), change mnd to p1 - p2\nassign p1 to p2\nprint mnd
int n, mn = 1e9 + 7, skr = 1e9 + 7, mnd = 1e6;\nvoid masuk(int idx) {\n\tif (idx < n) {\n\t\tint ai;\n\t\tcin >> ai;\n\t\tmn = min(mn, ai);\n\t\tmasuk(idx + 1);\n\t\tif (ai == mn) {\n\t\t\tmnd = min(mnd, skr - idx);\n\t\t\tskr = idx;\n\t\t}\n\t}\n}\nint main() {\n\tcin >> n;\n\tmasuk(0);\n\tcout << mnd << '\n';\n\treturn 0;\n}	n, mn, skr, mnd = integers with mn = 1e9 + 7, skr = 1e9 + 7, mnd = 1e6\nin the function masuk that takes integer idx\nif idx < n\nai = integer\nread ai\nmn = min of mn and ai\nmasuk of idx + 1\nif ai is mn\nmnd = min of mnd and skr - idx\nskr = idx\nread n\nmasuk of 0\nprint mnd
int main() {\n\tint t, n, i, x, pp, count, flag = 0, dis = 0, min = 0, sum;\n\tvector<int> v;\n\tvector<int>::iterator it;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tt = *min_element(v.begin(), v.end());\n\tfor (i = 0; i < v.size(); i++) {\n\t\tif (v[i] == t) {\n\t\t\tif (flag != 0) {\n\t\t\t\tdis = i - pp;\n\t\t\t\tif (min == 0 && dis != 0)\n\t\t\t\t\tmin = dis;\n\t\t\t\telse if (min != 0 && min > dis)\n\t\t\t\t\tmin = dis;\n\t\t\t}\n\t\t\tflag++;\n\t\t\tpp = i;\n\t\t}\n\t}\n\tcout << min << endl;\n\treturn 0;\n}	t,n,i,x,pp,count,sum=int, flag,dis,min=0\nv=vector of int\nit=iterator on vector of int\nread n\nwhile decremented value of n is not zero\nread x\nput x at end of v\nt=item of v with min value\nfor i=0 to size of v exclusive\nif v[i] is t\nif flag != 0\ndis=i-pp\nif min is 0 and dis is not 0\nmin=dis\nelse if min is not 0 and min>dis\nmin=dis\nincrement flag\npp=i\nprint min
int main() {\n\tint n, minix, p, q;\n\tcin >> n;\n\tvector<int> v(n);\n\tminix = INT_MAX;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> v[i];\n\t\tminix = min(minix, v[i]);\n\t}\n\tp = -999999;\n\tq = INT_MAX;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (v[i] == minix) {\n\t\t\tq = min(q, i - p);\n\t\t\tp = i;\n\t\t}\n\t}\n\tcout << q << endl;\n\treturn 0;\n}	create int n, minix, p, q\nread n\ncreate vector int v(n)\nminix = INT_MAX\nfor i=0 to n exclusive\nread v[i]\nset minix to min of minix and v[i]\nassign -999999 to p\nset q to INT_MAX\nfor i=0 to n exclusive\nif v[i] = minix\nset q = min of q and i - p\np=i\nprint q
const int oo = 1e9;\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tint mn = *min_element(a.begin(), a.end());\n\tint ans = oo;\n\tfor (int i = 0, prev = -oo; i < n; i++)\n\t\tif (a[i] == mn) {\n\t\t\tans = min(ans, i - prev);\n\t\t\tprev = i;\n\t\t}\n\tcout << ans << '\n';\n\treturn 0;\n}	create const int oo = 1e9\ndeclare int variable n\nread n\ndeclare vector of integers called a with n elements\nread n elements from the input into a\ncreate int mn = pointer to the min element of a\ncreate integer ans = oo\nfor i = 0 and prev = -oo while i < n, incrementing i\nif a[i] is equal to mn\nset ans to min of ans and i - prev\nset prev to i\nprint ans and '\n'
int main() {\n\tvector<long long> v;\n\tvector<long long> v1;\n\tlong long i, j, n, ans, min = 1000000002, t, flag;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) {\n\t\tlong long x;\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t\tif (x < min) { min = x; }\n\t}\n\tfor (i = 0; i < n; i++) {\n\t\tif (min == v[i]) { v1.push_back(i); }\n\t}\n\tmin = 1000000002;\n\tfor (i = 1; i < v1.size(); i++) {\n\t\tif ((v1[i] - v1[i - 1]) < min) { min = (v1[i] - v1[i - 1]); }\n\t}\n\tcout << min << endl;\n}	declare vector of long longs v\ncreate new vector of long longs v1\ndeclare long longs i, j, n, ans, min, t and flag with min = 1000000002\nread input to n\nfor i = 0 to n exclusive\ndeclare long long variable x\nread from the input to x\npush x to the back of v\nif x is less than min, set min to x\nfor i from 0 to n exclusive\nif min = v[i], push i into v1\nassign 1000000002 to min\nstart for loop from i = 1 to length of v1 exclusive\nif (v1[i] - v1[i - 1]) is less than min, assign v1[i] - v1[i - 1] to min\nprint min to the standard output
int arr[1000000];\nint main() {\n\tint n;\n\tcin >> n;\n\tint minimum, answer = (int)1e9;\n\tvector<int> occurrences;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> arr[i];\n\t\tif (!i) minimum = arr[0];\n\t\tminimum = min(minimum, arr[i]);\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tif (arr[i] == minimum) occurrences.push_back(i);\n\tfor (int i = 1; i < occurrences.size(); i++) answer = min(answer, occurrences[i] - occurrences[i - 1]);\n\tcout << answer << endl;\n\treturn 0;\n}	arr = array of integers of length 1000000\nlet n be a integer\nread n\nlet minimum, answer be integers wih answer = (int)1e9\ncreate a vector of integers with name occurrences\nfor i = 0 to n exclusive\nread arr[i]\nif not i , minimum is equal to arr[0]\nminimum is equal to minimum of minimum, arr[i]\nfor i = 0 to n exclusive\nif arr[i] is equal to minimum , push i into occurrences from back\nfor i = 1 to length of occurrences exclusive , answer = minimum of answer, occurrences[i] - occurrences[i - 1]\nprint answer and newline
int main() {\n\tint n, i;\n\tint a[100005];\n\twhile (cin >> n) {\n\t\tint Min = 0x7fffffff;\n\t\tfor (i = 1; i <= n; i++) {\n\t\t\tcin >> a[i];\n\t\t\tMin = min(a[i], Min);\n\t\t}\n\t\tint ans = 0x7fffffff;\n\t\tint t = -1;\n\t\tfor (i = 1; i <= n; i++) {\n\t\t\tif (a[i] == Min) {\n\t\t\t\tt = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (i = t + 1; i <= n; i++) {\n\t\t\tif (a[i] == Min) {\n\t\t\t\tans = min(i - t, ans);\n\t\t\t\tt = i;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}	n, i = int\na = int array of size 100005\nloop while reading n\nMin = int with Min = 0x7fffffff\nfor i = 1 to n inclusive\nread a[i]\nset Min to min of a[i] and Min\nans = int with ans = 0x7fffffff\nt = int with t = -1\nfor i = 1 to n inclusive\nif a[i] is Min\nset t to i\nbreak\nfor i = t + 1 to n inclusive\nif a[i] is Min\nset ans to min of i - t and ans\nset t to i\nprint ans
const int maxn = 1e7 + 10;\nint a[maxn];\nint n;\nint mini = 1e9 + 10;\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] < mini) mini = a[i];\n\t}\n\tvector<int> vec;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (mini == a[i]) { vec.push_back(i); }\n\t}\n\tmini = n;\n\tfor (int i = 0; i < vec.size() - 1; i++) { mini = min(mini, vec[i + 1] - vec[i]); }\n\tcout << mini << endl;\n\treturn 0;\n}	declare new constant integer called maxn = 1e7 + 10\na is a new array of integers with maxn elements\nn is a new integer variable\ncreate new integer variable mini = 1e9 + 10\nread from the input to n\nstart for loop from i = 0 to n exclusive\nread from the input to a[i]\nif a[i] is less than mini, assign a[i] to mini\ncreate new vector of integers vec\nstart for loop from i = 0 to n exclusive\nif mini = a[i], add i to the end of vec\nassign n to mini\nfor i from 0 to length of vec - 1 exclusive, assign min of mini and vec[i + 1] - vec[i] to mini\nprint mini
"int main() {\n\tint r, c;\n\tint flag = -1;\n\tcin >> r >> c;\n\tchar v[r][c];\n\tint empt = 0, wolf = 0, sheep = 0;\n\tchar p;\n\tfor (int i = 0; i < r; i++) {\n\t\tfor (int j = 0; j < c; j++) {\n\t\t\tcin >> p;\n\t\t\tif (p == '.')\n\t\t\t\tv[i][j] = 'D';\n\t\t\telse\n\t\t\t\tv[i][j] = p;\n\t\t}\n\t}\n\tfor (int i = 0; i < r; i++) {\n\t\tfor (int j = 0; j < c; j++) {\n\t\t\tif (v[i][j] == 'S') {\n\t\t\t\tif (v[i - 1][j] == 'W' && i - 1 >= 0) flag = 0;\n\t\t\t\tif (v[i + 1][j] == 'W' && i + 1 < r) flag = 0;\n\t\t\t\tif (v[i][j + 1] == 'W' && j + 1 < c) flag = 0;\n\t\t\t\tif (v[i][j - 1] == 'W' && j - 1 >= 0) flag = 0;\n\t\t\t}\n\t\t}\n\t}\n\tif (flag == 0)\n\t\tcout << ""NO"" << endl;\n\telse {\n\t\tcout << ""YES"" << endl;\n\t\tfor (int i = 0; i < r; i++) {\n\t\t\tfor (int j = 0; j < c; j++) { cout << v[i][j]; }\n\t\t\tcout << endl;\n\t\t}\n\t}\n}"	r, c = integers\nflag = integer with flag = -1\nread r, c\nv = 2d character array of size [r][c]\nempt, wolf, sheep = integers with empt = 0, wolf = 0, sheep = 0\np = character\nfor i = 0 to r exclusive\nfor j = 0 to c exclusive\nread p\nif p is .\nv[i][j] = D\nelse\nv[i][j] = p\nfor i = 0 to r exclusive\nfor j = 0 to c exclusive\nif v[i][j] is S\nif v[i - 1][j] is W and i - 1 >= 0, flag = 0\nif v[i + 1][j] is W and i + 1 < r, flag = 0\nif v[i][j + 1] is W and j + 1 < c, flag = 0\nif v[i][j - 1] is W and j - 1 >= 0, flag = 0\nif flag is 0\nprint NO\nelse\nprint YES\nfor i = 0 to r exclusive\nfor j = 0 to c exclusive, print v[i][j]\nprint new line
"long long a, b;\nchar s[1000][1000];\nint main() {\n\tcin >> a >> b;\n\tfor (int i = 0; i < a; i++) {\n\t\tfor (int j = 0; j < b; j++) { cin >> s[i][j]; }\n\t}\n\tfor (int i = 0; i < a; i++) {\n\t\tfor (int j = 0; j < b; j++) {\n\t\t\tif (s[i][j] == 'S') {\n\t\t\t\tif (s[i][j + 1] == 'W') {\n\t\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (s[i][j - 1] == 'W') {\n\t\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (s[i + 1][j] == 'W') {\n\t\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (s[i - 1][j] == 'W') {\n\t\t\t\t\tcout << ""NO"" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << ""YES"" << endl;\n\tfor (int i = 0; i < a; i++) {\n\t\tfor (int j = 0; j < b; j++) {\n\t\t\tif (s[i][j] == '.') { s[i][j] = 'D'; }\n\t\t\tcout << s[i][j];\n\t\t}\n\t\tcout << endl;\n\t}\n}"	create long long a and b\ncreate char s[1000][1000]\nread a and b\nfor i=0 to a exclusive\nfor j=0 to b exclusive, read cin >> s[i][j]\nfor i=0 to a exclusive\nfor j=0 to b exclusive\nif s[i][j] = S\nif s[i][j + 1] = W\nprint NO\nif s[i][j - 1] equal to W\nprint NO\ns[i + 1][j] = W\nprint NO\nif s[i - 1][j] = W\nprint NO and a newline\nprint YES\nfor i=0 to a exclusive\nfor j=0 to b exclusive\nif s[i][j] = ., set s[i][j] to D\nprint s[i][j]\nprint a newline
int freq[1005];\nint main() {\n\tint hh, mm;\n\tdouble h, d, c, n;\n\tdouble cost1, cost2;\n\tcin >> hh >> mm;\n\tcin >> h >> d >> c >> n;\n\tint time = (hh * 60) + mm;\n\tint buns = 0;\n\tint hunger = h;\n\twhile (hunger > 0) {\n\t\thunger -= n;\n\t\tbuns++;\n\t}\n\tcost1 = buns * c;\n\tif (time < 1200)\n\t\thunger = h + ((1200 - time) * d);\n\telse\n\t\thunger = h;\n\tbuns = 0;\n\twhile (hunger > 0) {\n\t\thunger -= n;\n\t\tbuns++;\n\t}\n\tc -= c * (20.0 / 100);\n\tcost2 = c * buns;\n\tcout << setprecision(5) << showpoint << fixed << min(cost2, cost1) << endl;\n}	declare int array freq with size 1005\ndeclare int variables hh and mm\ndeclare double variables h, d, c and n\ndeclare doubles cost1 and cost2\nread hh and mm\nread input to h, d, c and n\ndeclare int time = (hh * 60) + mm\ndeclare int buns = 0\ndeclare int hunger = h\nwhile hunger > 0\nsubtract n from hunger\nincrement buns\nassign buns * c to cost1\nif time is less than 1200\nset hunger to h + ((1200 - time) * d)\nelse\nchange hunger to h\nchange buns to 0\nwhile hunger > 0\ndecrease hunger by n\nincrement buns\ndecrease c by c * (20.0 / 100)\nchange cost2 to c * buns\nchange decimal precision of the output to 5, set showpoint and fixed flags and print the min of cost2 and cost1
"vector<int> v;\nint num[51], value[51];\nint main() {\n\tint n, index = 1;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> num[i]; }\n\tv.push_back(num[n - 1]);\n\tfor (int i = n - 2; i >= 0; i--) {\n\t\tint j = 0, flag = 0;\n\t\twhile (j < v.size()) {\n\t\t\tif (num[i] == v[j]) {\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\tif (!flag) v.push_back(num[i]);\n\t}\n\tcout << v.size() << endl;\n\tcout << v[v.size() - 1];\n\tfor (int i = v.size() - 2; i >= 0; i--) cout << "" "" << v[i];\n\tcout << endl;\n}"	"create vector integer v\ncreate integer arrays num, value, with num size 51, value size 51\ncreate integers n, index with index = 1\nread n\nfor i = 0 to n exclusive, read num[i]\nadd element num[n-1] to end of v\nfor i = n - 2 to 0 inclusive, decrementing i\ncreate integers j, flag with j = 0, flag = 0\nwhile j is less than size of v\nif num[i] is v[j]\nset flag to 1\nbreak loop\nincrement j\nif not flag, add element num[i] to end of v\nprint size of v print newline\nprint v[size of v - 1]\nfor i = size of v - 2 to 0 inclusive, decrementing i, print "" "" print v[i]\nprint newline"
"int a[55];\nbool vis[1005];\nvector<int> s;\nint main() {\n\tint n, tot = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (!vis[a[i]]) {\n\t\t\ts.push_back(a[i]);\n\t\t\tvis[a[i]] = true;\n\t\t}\n\t}\n\tint len = s.size();\n\tcout << len << endl;\n\tfor (int i = len - 1; i > 0; i--) cout << s[i] << "" "";\n\tcout << s[0] << endl;\n\treturn 0;\n}"	"create integer array a with size 555\ncreate boolean array vis with size 1005\ncreate integer vector s\ncreate integer n, tot with tot = 0\nread n\nfor i = 0 to n exclusive, read a[i]\nfor i = n - 1 to 0 inclusive, decrementing i\nif vis[a[i]] is false\nadd element a[i] to end of s\nset vis[a[i]] to true\ncreate integer len with len = size of s\nprint len print newline\nfor i = len - 1 to 0 exclusive, decrementing i, print s[i] print "" ""\nprint s[0] print newline"
"int num[100];\nint nn[100];\nint cnt = 0;\nint cc1 = 0;\nbool num_find(int in) {\n\tfor (int i = 0; i < cnt; i++) {\n\t\tif (num[i] == in) return true;\n\t}\n\treturn false;\n}\nint main() {\n\tint N;\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> nn[cc1];\n\t\tcc1++;\n\t}\n\tfor (int i = N - 1; i >= 0; i--) {\n\t\tint tmp;\n\t\ttmp = nn[i];\n\t\tif (!num_find(tmp)) {\n\t\t\tnum[cnt] = tmp;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tcout << cnt << endl;\n\tfor (int i = cnt - 1; i > 0; i--) cout << num[i] << "" "";\n\tcout << num[0] << endl;\n}"	"create integer array num of size 100\ncreate integer array nn of size 100\ncreate integer cnt with cnt = 0\ncreate integer cc1 with cc1 = 0\ndeclare num_find with integer in as argument, returning boolean\nfor i = 0 to cnt exclusive\nif num[i] is in, return true from function\nreturn false from function\ncreate integer N\nread N\nfor i = 0 to N exclusive\nread nn[cc1]\nincrement cc1\nfor i = N - 1 to 0 inclusive, decrement i\ncreate integer tmp\nset tmp to nn[i]\nif result of num_find with tmp as argument is false\nset num[cnt] is tmp\nincrement cnt\nprint cnt print newlien\nfor i = cnt - 1 to 0 exclusive, decrementing i, print num[i] print "" ""\nprint num[0] print newline"
"int n, a[100], b[100], visit[1010], t;\nint main() {\n\twhile (cin >> n) {\n\t\tmemset(a, 0, sizeof(a));\n\t\tmemset(b, 0, sizeof(b));\n\t\tmemset(visit, 0, sizeof(visit));\n\t\tt = 0;\n\t\tfor (int i = 0; i < n; i++) cin >> a[i];\n\t\tint p = n;\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tif (visit[a[i]] > 0) {\n\t\t\t\tp--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tb[t++] = a[i];\n\t\t\tvisit[a[i]]++;\n\t\t}\n\t\tcout << p << endl;\n\t\tfor (int i = t - 1; i >= 0; i--) {\n\t\t\tcout << b[i];\n\t\t\tif (i != 0) cout << "" "";\n\t\t}\n\t\tcout << endl;\n\t}\n}"	"declare integers n and t, integer arrays a and b with 100 elements and an array of integers visit with 1010 elements\nwhile reading n\ncall memset with arguments a, 0 and sizeof(a)\ncall memset with arguments b, 0 and sizeof(b)\ncall memset with arguments visit, 0 and sizeof(visit)\nt = 0\nfor i = 0 to n exclusive read a[i]\ndeclare integer variable p = n\nfor i = n - 1 to 0 inclusive counting down\nif visit[a[i]] is greater than 0\ndecrement p\ncontinue the loop\nset b[t] to a[i] and increment t\nincrease visit[a[i]]\nprint p\nfor i = t - 1 to 0 inclusive counting down\nprint b[i]\nif i != 0, print "" ""\nprint new line"
int main() {\n\tint a[5000], b[5000];\n\tint flag[5000];\n\tmemset(flag, true, sizeof(flag));\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tint len = 0;\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tif (flag[a[i]]) {\n\t\t\tlen++;\n\t\t\tb[len] = a[i];\n\t\t\tflag[a[i]] = false;\n\t\t}\n\t}\n\tcout << len << endl;\n\tfor (int i = len; i >= 1; i--)\n\t\tif (i != 1)\n\t\t\tcout << b[i] << ' ';\n\t\telse\n\t\t\tcout << b[i] << endl;\n\treturn 0;\n}	create integer arrays a, b with a size 5000, b size 5000\ncreate integer array flag of size 5000\nset bytes from flag to size of flag to value true\ncreate integer n\nread n\nfor i = 0 to n exclusive, read a[i]\ncreate integer len with len = 0\nfor i = n - 1 to 0 inclusive, decrementing i\nif flag[a[i]] is true\nincrement len\nset b[len] to a[i]\nset flag[a[i]] to false\nprint len print newline\nfor i = len to 1 inclusive, decrementing i\nif i is not 1\nprint b[i] print ' '\nelse\nprint b[i] print newline
"int n;\nint A[60];\nint sum;\nint B[60];\nint main() {\n\tcin >> n;\n\tsum = n;\n\tint t = 0;\n\tfor (int i = 0; i < n; i++) { cin >> A[i]; }\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int x = i + 1; x < n; x++) {\n\t\t\tif (A[i] == A[x]) {\n\t\t\t\tA[i] = 0;\n\t\t\t\tB[t] = i;\n\t\t\t\tt++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = t - 1; i >= 0; i--) {\n\t\tsum--;\n\t\tfor (int x = B[i]; x < n; x++) {\n\t\t\tA[x] = A[x + 1];\n\t\t\tA[x + 1] = 0;\n\t\t}\n\t}\n\tcout << sum << endl;\n\tfor (int i = 0; i < sum; i++) {\n\t\tcout << A[i];\n\t\tif (i != sum - 1) { cout << "" ""; }\n\t}\n\tcout << endl;\n}"	"let n be integer\nA = array of integers of size 60\nlet sum be integer\nlet B be an array of integers of size 60\nread n\nsum = n\ncreate integer t with value 0\nread n elements from the input to A\nfor integer i = 0 to n exclusive\nfor integer x = i + 1 to n exclusive\nif A[i] = A[x]\nassign value of 0 to the A[i]\nassign value of i to the B[t]\nincrease t\nstop the loop\nfor i = t - 1 to 0\ndecrease sum by one\nfor integer x = B[i] to n exclusive\nA[x] = A[x + 1]\nA[x + 1] = 0\nprint sum and a new line\nfor i = 0 to sum exclusive\nprint A[i]\nif i != sum - 1, print "" ""\nprint new line"
int main() {\n\tint a[50], b[50], v[1001] = {0}, n, sum = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tfor (int i = n - 1; i >= 0; i--)\n\t\tif (!v[a[i]]) {\n\t\t\tv[a[i]] = 1;\n\t\t\tb[sum] = a[i];\n\t\t\tsum++;\n\t\t}\n\tcout << sum << endl;\n\tfor (int i = sum - 1; i > 0; i--) cout << b[i] << ' ';\n\tcout << b[0] << endl;\n\treturn 0;\n}	let n and sum be integers, with sum = 0; a and b are arrays of integers with size 50 and v is an array of integers with size 1001 filled with 0\nread n\nread n elements into a\nfor integer i = n - 1 to 0 inclusive counting down\nif v[a[i]] is 0\nset value of v[a[i]] to 1\nset value of b[sum] to a[i]\nincrement sum\nprint sum and a new line\nfor i = sum - 1 to 0 exclusive counting down, print b[i] and ' '\nprint b[0] and a new line
"const int Max = 1e3 + 10;\nint a[Max], ans[Max], flag[Max];\nint main() {\n\tint n, tot = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tfor (int i = n; i >= 1; i--) {\n\t\tif (!flag[a[i]]) {\n\t\t\tflag[a[i]] = 1;\n\t\t\tans[tot++] = a[i];\n\t\t}\n\t}\n\tcout << tot << endl;\n\tfor (int i = tot - 1; i >= 0; i--) {\n\t\tcout << ans[i];\n\t\tif (i != 0) cout << "" "";\n\t}\n\tcout << endl;\n\treturn 0;\n}"	"create constant integer Max with Max = 1e3 + 10\ncreate integer arrays a, ans, flag, with a size Max, ans size Max, flag size Max\ncreate integers n, tot with tot = 0\nread n\nfor i = 1 to n inclusive, read a[i]\nfor i = n to 1 inclusive, decrementing i\nif not flag[a[i]]\nset flag[a[i]] to 1\nset ans[increment tot] to a[i]\nprint tot print newline\nfor i = tot - 1 to 0 inclusive, decrementing i\nprint ans[i]\nif i is not 0 print "" ""\nprint newline"
int main() {\n\tlong long int n;\n\twhile (cin >> n) {\n\t\tif (n == 0)\n\t\t\tcout << 0 << endl;\n\t\telse if ((n + 1) % 2 == 0)\n\t\t\tcout << (n + 1) / 2 << endl;\n\t\telse\n\t\t\tcout << n + 1 << endl;\n\t}\n\treturn 0;\n}	create long long integer n\nwhile read n\nif n is 0\nprint 0 print newline\nelse if ( n + 1 ) % 2 is 0\nprint ( n + 1 ) / 2 print newline\nelse\nprint n + 1 print newline
"int main() {\n\tlong long int n;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << n << ""\n"";\n\t} else {\n\t\tif (n % 2 == 0) {\n\t\t\tcout << n + 1 << ""\n"";\n\t\t} else {\n\t\t\tcout << (n + 1) / 2 << ""\n"";\n\t\t}\n\t}\n}"	create long long int n\nread n\nif n = 0\nprint n and a newline\nelse\nif n is even\nprint n + 1 and a newline\notherwise\nprint (n + 1) / 2 and a newline
int main() {\n\tint64_t N;\n\tcin >> N;\n\tint64_t ans = N == 0 ? 0 : (N % 2 ? (N + 1) / 2 : N + 1);\n\tcout << ans << endl;\n\treturn 0;\n}	declare int64_t N\nread N\ndeclare int64_t ans = 0 if N = 0, (N + 1) / 2 if N is even, or N + 1 if N is odd\nprint ans
long long n;\nint main() {\n\tcin >> n;\n\tif (n == 0)\n\t\tcout << 0 << endl;\n\telse if (n % 2 == 0)\n\t\tcout << n + 1 << endl;\n\telse\n\t\tcout << (n + 1) / 2 << endl;\n\treturn 0;\n}	create long long n\nread n\nif n = 0\nprint 0\nelse if n is even\nprint n+1\notherwise\nprint (n+1)/2 and a newline
int main() {\n\tlong long n;\n\tcin >> n;\n\tif ((n + 1) % 2 == 0) {\n\t\tcout << (n + 1) / 2 << endl;\n\t} else {\n\t\tif (n == 0) {\n\t\t\tcout << 0 << endl;\n\t\t} else {\n\t\t\tcout << n + 1 << endl;\n\t\t}\n\t}\n}	n =integer\nRead n\nif (n + 1) modulo 2 is equal to 0\nprint (n + 1) / 2 and a new line\nelse do the following\nif n is equal to 0\nprint 0 and a new line\nelse do the following\nprint n + 1 and a new line
int main() {\n\tunsigned long long int n;\n\tcin >> n;\n\tn++;\n\tif (n % 2 == 0)\n\t\tcout << n / 2 << endl;\n\telse if (n == 1)\n\t\tcout << 0 << endl;\n\telse\n\t\tcout << n << endl;\n}	let n be a unsigned long integer\nread n\nincrease n value by 1\nif (n modulus 2 is equal to 0)\nprint n / 2 and newline\nelse if (n is equal to 1)\nprint 0 and newline\nelse do the following\nprint n and newline
"int gcd(int a, int b) {\n\tif (b == 0)\n\t\treturn a;\n\telse\n\t\tgcd(b, a % b);\n}\nint main() {\n\tlong long int n;\n\twhile (cin >> n) {\n\t\tn++;\n\t\tif (n == 1)\n\t\t\tcout << ""0"";\n\t\telse if (n % 2 == 0)\n\t\t\tcout << n / 2;\n\t\telse\n\t\t\tcout << n;\n\t\tcout << endl;\n\t}\n}"	"integer function gcd with integer arguments a and b\nif b = 0\nreturn a\nelse\ncall gcd with arguments b and a % b\ndeclare long long integer variable n\nread n and keep looping\nincrease n by one\nif n = 1\nprint ""0""\nelse if n is even\nprint n / 2\nelse\nprint n\nprint new line"
"int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << 0 << ""\n"";\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\tcout << 1 << ""\n"";\n\t\treturn 0;\n\t}\n\tif (n % 2 == 1)\n\t\tcout << (n + 1) / 2 << ""\n"";\n\telse\n\t\tcout << n + 1 << ""\n"";\n\treturn 0;\n}"	"declare long long n\nread n\nif n = 0\nprint 0 and ""\n""\nif n = 1\nprint 1 and ""\n""\nif odd is greater than even\nprint (n + 1) / 2 and ""\n""\nelse\nprint n + 1 and ""\n"""
int main() {\n\tlong long n;\n\tcin >> n;\n\tif (n == 0) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tif (n % 2 == 0)\n\t\tcout << n + 1 << endl;\n\telse\n\t\tcout << (n + 1) / 2 << endl;\n\treturn 0;\n}	create long long n\nread n\nif n is equal to 0\nprint 0\nif n is even\nprint n+1 and a newline\nelse\nprint (n+1)/2
int main() {\n\tlong long n;\n\tcin >> n;\n\tcout << (!n ? 0 : n & 1 ? (n + 1) >> 1 : n + 1) << endl;\n\treturn 0;\n}	n = long long\nread n\nprint if not n then 0 else if n & 1 then (n + 1) >> 1 else n + 1
"int main() {\n\tlong long int s, n, i, j, p, h = 0;\n\tcin >> n;\n\tif (n == 0)\n\t\tcout << ""0"" << endl;\n\telse if (n % 2 == 0)\n\t\tcout << n + 1 << endl;\n\telse\n\t\tcout << (n + 1) / 2 << endl;\n}"	create long long int s, n, i, j, p, h, set h to 0\nread n\nif n equal to 0\nprint 0\nelse if n is even\nprint n +1\nelse\nprint (n+1)/2 and a newline
"long long n, p, b, q;\nlong long gcd(long long a, long long b) {\n\tif (b == 0) return a;\n\treturn gcd(b, a % b);\n}\nint main() {\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> p >> q >> b;\n\t\tlong long tmp = gcd(p, q);\n\t\tp /= tmp;\n\t\tq /= tmp;\n\t\tlong long div = gcd(b, q);\n\t\twhile ((div = gcd(b, q)) != 1)\n\t\t\twhile (q % div == 0) q /= div;\n\t\tif (q == 1)\n\t\t\tcout << ""Finite"" << endl;\n\t\telse\n\t\t\tcout << ""Infinite"" << endl;\n\t}\n\treturn 0;\n}"	"create long longs n, p, b and q\nlong long function gcd with long long arguments a and b\nreturn a if b = 0\nreturn gcd(b, a % b)\nread n\ndecrement n and loop further, while n > 0\nread from the input to p, q and b\ndeclare long long variable tmp = gcd(p,q)\ndivide p by tmp\ndivide q by tmp\ncreate long long div = gcd of b and q\nwhile div = (gcd(b, q) != 1)\nwhile q % div is 0, divide q by div\nif q is 1\nprint ""Finite""\nelse\nprint ""Infinite"""
"long long gcd(long long a, long long b) {\n\twhile (b > 0) {\n\t\ta %= b;\n\t\tswap(a, b);\n\t}\n\treturn a;\n}\nstring sy = ""Finite\n"";\nstring sn = ""Infinite\n"";\nmap<pair<long long, long long>, char> m;\nvoid solve() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tlong long p, q, b;\n\t\tcin >> p >> q >> b;\n\t\tp %= q;\n\t\tlong long g = gcd(p, q);\n\t\tp /= g;\n\t\tq /= g;\n\t\tif (p == 0) {\n\t\t\tcout << sy;\n\t\t\tcontinue;\n\t\t}\n\t\tif (m.find({q, b}) != m.end()) {\n\t\t\tif (m[{q, b}])\n\t\t\t\tcout << sy;\n\t\t\telse\n\t\t\t\tcout << sn;\n\t\t\tcontinue;\n\t\t}\n\t\tlong long q1 = q;\n\t\tg = gcd(q, b);\n\t\twhile (g > 1) {\n\t\t\twhile (q % g == 0) q /= g;\n\t\t\tg = gcd(q, b);\n\t\t}\n\t\tif (q == 1) {\n\t\t\tm[{q1, b}] = true;\n\t\t\tcout << sy;\n\t\t} else {\n\t\t\tm[{q1, b}] = false;\n\t\t\tcout << sn;\n\t\t}\n\t}\n}\nint main() {\n\tsrand(555);\n\tsolve();\n}"	"long long function gcd with long long arguments a and b\nwhile b > 0\na = a modulo b\nswap a and b\nreturn a\ndeclare string sy = ""Finite\n""\ndeclare string sn = ""Infinite\n""\ncreate map m of long long pairs to chars\nvoid function solve\ncreate int n\nread n\nloop i from 0 to n exclusive\ncreate long longs p, q and b\nread input to p, q and b\np = p modulo q\ndeclare long long g = gcd of p and q\ndivide p by g\ndivide q by g\nif p = 0\nprint sy\ngo to the start of the loop\nif pair {q, b} is present in m\nif m[{q, b}] != 0\nprint sy\nelse\nprint sn\ncontinue the loop\ndeclare long long q1 = q\nchange g to gcd(q,b)\nwhile g > 1\nwhile q % g = 0\nset g to gcd(q,b)\nif q = 1\nassign true to m[{ q1 , b }]\nprint sy\nelse\nassign false to m[{ q1 , b }]\nprint sn\ninitialize random number generator using 555 as a seed\ninvoke function solve"
"int n;\nlong long p, q, b;\nint main() {\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> p >> q >> b;\n\t\tif (p % q == 0) {\n\t\t\tcout << ""Finite\n"";\n\t\t\tcontinue;\n\t\t}\n\t\tq /= __gcd(p, q);\n\t\tlong long g;\n\t\twhile (1) {\n\t\t\tg = __gcd(q, b);\n\t\t\tif (g == 1) break;\n\t\t\twhile (q % g == 0) q /= g;\n\t\t}\n\t\tif (q != 1)\n\t\t\tcout << ""Infinite\n"";\n\t\telse\n\t\t\tcout << ""Finite\n"";\n\t}\n}"	n = integer\np, q, b = long long\nread n\nwhile decrement n\nread p, q, b\nif p modulo q is 0\nprint Finite\ncontinue iteration\nq = q / gcd of p and q\ng = long long\nwhile 1\ng = gcd of q and b\nif g is 1, break loop\nwhile q modulo g is 0, q = q / g\nif q is not 1\nprint Infinite\nelse\nprint Finite
"int N;\nlong long P, Q, B;\nlong long gcd(long long x, long long y) {\n\tif (y == 0) return x;\n\treturn gcd(y, x % y);\n}\nint main() {\n\tcin >> N;\n\twhile (N--) {\n\t\tcin >> P >> Q >> B;\n\t\tP %= Q;\n\t\tlong long G = gcd(P, Q);\n\t\tQ /= G;\n\t\tlong long C = gcd(B, Q);\n\t\twhile (C != 1) {\n\t\t\tQ /= C;\n\t\t\tC = gcd(C, Q);\n\t\t}\n\t\tif (Q != 1)\n\t\t\tcout << ""Infinite\n"";\n\t\telse\n\t\t\tcout << ""Finite\n"";\n\t}\n\treturn 0;\n}"	N = integer\nP, Q, B = long long\nin the function gcd that takes long long x, y and returns long long\nif y is 0, return x\nreturn gcd of y and x modulo y\nread N\nwhile decrement N\nread P, Q, B\nP = P modulo Q\nG = long long with G = gcd of P and Q\nQ = Q / G\nC = long long with C = gcd of B and Q\nwhile C is not 1\nQ = Q / C\nC = gcd of C and Q\nif Q is not 1\nprint Infinite\nelse\nprint Finite
"int main() {\n\tlong long n, p, q, b;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> p >> q >> b;\n\t\tlong long t = __gcd(p, q);\n\t\tq /= t;\n\t\tt = b;\n\t\twhile (q != 1) {\n\t\t\tt = __gcd(q, t);\n\t\t\tq /= t;\n\t\t\tif (t == 1) break;\n\t\t}\n\t\tif (q == 1)\n\t\t\tcout << ""Finite\n"";\n\t\telse\n\t\t\tcout << ""Infinite\n"";\n\t}\n}"	"declare long longs n, p, q and b\nread input to n\nfor integer i = 1 to n inclusive\nread p, q and b from the input\ndeclare long long variable t = __gcd of p and q\ndivide q by t\nassign b to t\nwhile q != 1\nassign result of __gcd(q,t) to t\ndivide q by t\nbreak if t = 1\nif q = 1\nprint ""Finite\n""\nelse\nprint ""Infinite\n"""
"void freac() {}\nconst int DX[] = {+1, 0, -1, 0, +1, +1, -1, -1};\nconst int DY[] = {0, +1, 0, -1, +1, -1, +1, -1};\nconst int INF = (int)1e9 + 123;\nconst long long INFL = (long long)1e18 + 123;\nconst double EPS = 1e-9;\nvoid lifestyle() {}\nint main() {\n\tlifestyle();\n\tfreac();\n\tint n;\n\tlong long p, q, b;\n\tcin >> n;\n\twhile (n--) {\n\t\tcin >> p >> q >> b;\n\t\tlong long g = __gcd(p, q);\n\t\tq /= g;\n\t\twhile (b != 1) {\n\t\t\twhile (q % b == 0) q /= b;\n\t\t\tb = __gcd(q, b);\n\t\t}\n\t\tcout << ((q == 1) ? ""Finite"" : ""Infinite"") << endl;\n\t}\n\treturn false;\n}"	in the function freac\nDX = array of const integers with DX = +1, 0, -1, 0, +1, +1, -1, -1\nDX = array of const integers with DY = 0, +1, 0, -1, +1, -1, +1, -1\nINF = const integer with INF = cast 1e9 + 123 from integer\nINFL = const long long with INFL = cast 1e18 + 123 from long long\nEPS = const double with EPS = 1e-9\nin the function lifestyle\ncall lifestyle\ncall freac\nn = integer\np, q, b = long long\nread n\nwhile decrement n\nread p, q, b\ng = long long with g = gcd of p and q\nq = q / g\nwhile b is not 1\nwhile q modulo b is 0, q = q / b\nb = gcd of q and b\nif q is 1 print Finite else print Infinite\nreturn false
"int n;\nlong long p, q, b;\nlong long NWD(long long x, long long y) {\n\tif (y == 0)\n\t\treturn x;\n\telse\n\t\treturn NWD(y, x % y);\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> p >> q >> b;\n\t\tlong long blep = NWD(p, q);\n\t\tq /= blep;\n\t\tblep = NWD(q, b);\n\t\twhile (blep > 1) {\n\t\t\twhile (q % blep == 0) q /= blep;\n\t\t\tblep = NWD(q, b);\n\t\t}\n\t\tif (q > 1)\n\t\t\tcout << ""Infinite"" << endl;\n\t\telse\n\t\t\tcout << ""Finite"" << endl;\n\t}\n\treturn 0;\n}"	"declare int n\ndeclare long longs p, q, and b\ndeclare long long NWD with long long x and long long y\nif y is 0\nreturn x\nelse\nreturn the NWD of y, and x mod y\ninput n\nloop i between 1 and n inclusive\ninput p, q, and b\ndeclare long long blep to be NWD of p and q\ndivide q by q over blep\nset blep to NWD of q and b\nwhile blep is more than 1\nwhile q mod blep is zero, then set q to q over blep\nset blep to NWD of q and b\nif q is greater than 1\noutput ""Infinite""\nelse\noutput ""Finite"""
"long long gcd(long long a, long long b) {\n\treturn __gcd(a, b);\n}\nbool solve() {\n\tlong long p, q, b;\n\tcin >> p >> q >> b;\n\tif (p == 0) return true;\n\tlong long gc = gcd(p, q);\n\tp /= gc;\n\tq /= gc;\n\tlong long x;\n\twhile ((x = gcd(q, b)) > 1) {\n\t\twhile (q % x == 0) q /= x;\n\t\tx = gcd(q, b);\n\t}\n\treturn q == 1;\n}\nint main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tbool is = solve();\n\t\tcout << (is ? ""Finite"" : ""Infinite"") << '\n';\n\t}\n\treturn 0;\n}"	"in function gcd taking two long longs a and b and returning a long long\nreturn __gcd of a and b\nin function solve returning a bool\np, q, b = long long\nread p then q then b\nif p is 0 then return true\ngc = long long with gc = gcd of p and q\nset p to p / gc\nset q to q / gc\nx = long long\nloop while setting x to gcd of q and b and x is greater than 1\nloop while q mod x is 0 set q to q / x\nset x to gcd of q and b\nreturn true if q is 1 else return false\nt = int\nread t\nloop t times\nis = bool with is = solve\nprint ""Finite"" if is is true else print ""Infinte"""
"long long p, q, k;\nlong long gcd(long long a, long long b) {\n\treturn b == 0 ? a : gcd(b, a % b);\n}\ninline long long rd() {\n\tlong long x = 0, f = 1;\n\tchar ch = getchar();\n\twhile (ch > '9' || ch < '0') {\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tx = (x << 1) + (x << 3) + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn x * f;\n}\ninline void solve() {\n\tp = rd(), q = rd(), k = rd();\n\tlong long t = gcd(p, q);\n\tq /= t;\n\twhile ((t = gcd(k, q)) != 1) {\n\t\twhile (q % t == 0) q /= t;\n\t}\n\tputs(q == 1 ? ""Finite"" : ""Infinite"");\n}\nint main() {\n\tfor (int T = rd(); T; T--) solve();\n\treturn 0;\n}"	"create long longs p, q, k\ndeclare gcd with long longs a, b as arguments, returning long long\nreturn a if b is 0, else result of run gcd with b, a % b as arguments\ndeclare inline rd with no arguments, returning long long\ncreate long longs x, f, with x = 0, f = 1\ncreate character ch with ch = getchar\nwhile ch is greater than '9' or ch is less than '0'\nif ch is '-', set f to -1\nset ch to read character\nwhile ch is greater than or equal to '0' and ch is less than or equal to '9'\nset x to ( x bitshift left 1 ) + ( x bitshift left 3 ) + ch - '0'\nset ch to read character\nreturn x * f from function\ndeclare inline solve with no arguments, returning void\nset p to result of run rd, set q to result of run rd, set k to result of run rd\ncreate long long t with t = result of run gcd with p, q as arguments\nset q to q / t\nwhile ( set t to result of run gcd with k, q as arguments ) is not 1\nwhile ( q % t is 0 ) set q to q / t\nprint ""Finite"" if q is 1, else ""Infinite""\nfor T = result of run rd to T, decrementing T, run solve"
int compare(const void *x1, const void *x2) {\n\treturn (*(int *)x1 - *(int *)x2);\n}\nint main() {\n\tint N;\n\tint final;\n\tcin >> N;\n\tint massiv[N];\n\tint d;\n\tint R;\n\tfor (R = 0; R < N; R++) {\n\t\tcin >> d;\n\t\tmassiv[R] = d;\n\t}\n\tqsort(massiv, N, sizeof(int), compare);\n\tif (N % 2 == 0) {\n\t\tfinal = massiv[R / 2 - 1];\n\t} else {\n\t\tfinal = massiv[R / 2];\n\t}\n\tcout << final << endl;\n}	in function compare taking two pointers to const void x1 and x2 and returning an int\nreturn value of x1 as pointer to in - value of x2 as pointer to int\nN = int\nfinal = int\nread N\nmassiv = int array of size N\nd = int\nR = int\nfor R = 0 to N\nread d\nset massiv[R] to d\ncall qsort on massiv, N, sizeof of int and compare\nif N is even\nset final to massiv[R / 2 - 1]\nelse\nset final to massiv[R / 2]\nprint final
int main() {\n\tlong long n, arr[1001];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> arr[i];\n\tsort(arr, arr + n);\n\tif (n % 2 == 0)\n\t\tcout << arr[(n / 2) - 1] << endl;\n\telse\n\t\tcout << arr[n / 2] << endl;\n\treturn 0;\n}	declare long long n and an array of long longs arr with 1001 element\nread n\nfor i from 0 to n exclusive, read arr[i]\nsort arr\nif n is even\nprint arr[(n / 2) - 1]\nelse\nprint arr[n / 2]
int main() {\n\tint a[1005];\n\tint n;\n\tint sum = 0;\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\tsort(a, a + n);\n\tif (n % 2)\n\t\tcout << a[n / 2] << endl;\n\telse\n\t\tcout << a[n / 2 - 1] << endl;\n}	create integer array a with size 1005\ncreate integer n\ncreate integer sum with sum = 0\nread n\nfor i = 0 to n exclusive, read a[i]\nsort elements from a to a + n\nif n % 2\nprint a[n / 2] print newline\nelse\nprint a[n/2 - 1] print newline
"const int N = 100010;\nint a[N];\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tcout << a[(n + 1) / 2] << ""\n"";\n\treturn 0;\n}"	"create constant integer N with N = 100010\ncreate integer array a with size N\ncreate integer N\nread n\nfor i = 1 to n inclusive, read a[i]\nsort elements from a + 1 to a + n + 1\nprint a[(n + 1) / 2] print ""\n"""
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> v;\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tv.push_back(x);\n\t}\n\tsort(v.begin(), v.begin() + n, greater<int>());\n\tint turn = 0;\n\twhile (v.size() != 1) {\n\t\tif (turn % 2 == 0) {\n\t\t\tv.erase(v.begin());\n\t\t} else {\n\t\t\tv.pop_back();\n\t\t}\n\t\tturn = (++turn) % 2;\n\t}\n\tcout << v.front() << endl;\n\treturn 0;\n}	n=int\nread n\nv=vector of int\nfor i=0 to n exclusive\nx=int\nread x\nadd x at end of v\nsort first n items of v in numeric ascending order\nturn=0\nwhile size of v is not 1\nif turn is even\nerase first item of v\nelse\npop last item of v\nturn=(incremented value of turn) modulo 2\nprint first item of v
int main() {\n\tint n, a[1001];\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tif (n % 2 == 0)\n\t\tcout << a[n / 2] << endl;\n\telse\n\t\tcout << a[n / 2 + 1] << endl;\n}	create int n, a[1001]\nread n\nfor i=1 to n inclusive, read a[i]\nsort elements bewteen a+1 and a+n+1\nif n is even\nprint a[n / 2]\notherwise\nprint a[n / 2 + 1] and a newline
long int arr[1001];\nint main() {\n\tint n, i, mid;\n\tcin >> n;\n\tfor (i = 0; i < n; i++) { cin >> arr[i]; }\n\tsort(arr, arr + n);\n\tmid = ceil((double)n / 2);\n\tcout << arr[mid - 1] << endl;\n}	create long int array arr with size 1001\ncreate integers n, i and mid\nread input to n\nfor i from 0 to n exclusive, read arr[i]\nsort arr\nmid = n / 2 rounded up\nprint arr[mid - 1]
const int maxn = 1e3 + 10;\nint main() {\n\tint n;\n\tint a[maxn];\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tcout << a[(n + 1) / 2] << endl;\n\treturn 0;\n}	maxn = const integer with maxn = 1e3 + 10\nn = integer\na = integer array of size maxn\nread n\nfor i = 1 to n, read a[i]\nsort a + 1 and a + n + 1\nprint a[(n + 1) / 2]
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a.begin(), a.end());\n\tint idx = (a.size() - 1) / 2;\n\tcout << a[idx] << endl;\n\treturn 0;\n}	declare integer variable n\nread input to n\ndeclare vector of integers a with size n\nfor i from 0 to n exclusive, read a[i]\nsort a\ncreate integer idx = (length of a - 1) / 2\nprint a[idx]
int main() {\n\tint n;\n\tcin >> n;\n\tint a[n];\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tfor (int j = 0; j < n - i - 1; j++) {\n\t\t\tif (a[j] > a[j + 1]) { swap(a[j], a[j + 1]); }\n\t\t}\n\t}\n\tif (n % 2 == 0) {\n\t\tcout << a[n / 2 - 1] << endl;\n\t} else {\n\t\tcout << a[n / 2] << endl;\n\t}\n\treturn 0;\n}	let int n\nread n\ncreate int array a of size n\nfor i = 0 to n exclusive, read a[i]\nfor i = 0 to n - 1 exclusive\nfor j = 0 to n - i - 1 exclusive\nif a[j] is greater than a[j + 1], swap values between a[j] and a[j + 1]\nif n modulo 2 is 0\nprint a[n / 2 - 1]\nelse\nprint a[n / 2]
int main() {\n\tint n, a[1110];\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) { cin >> a[i]; }\n\tsort(a, a + n);\n\tcout << a[(n - 1) / 2] << endl;\n\treturn 0;\n}	let int n and int array a of size 1110\nread n\nfor i = 0 to n exclusive, read a[i]\nsort array a\nprint a[(n - 1) / 2]
int main() {\n\tint n;\n\tcin >> n;\n\tvector<int> v(n);\n\tfor (int i = 0; i < n; i++) { cin >> v[i]; }\n\tsort(v.begin(), v.end());\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tif (i % 2 != 0) {\n\t\t\tv.erase(v.begin());\n\t\t} else {\n\t\t\tv.pop_back();\n\t\t}\n\t}\n\tcout << v[0] << endl;\n}	create int n\nread n\ncreate vector of integers v with size n\nread n elements into v\nsort v\nfor i from 0 to n - 1 exclusive\nif i is odd\nremove first element from v\nelse\nremove the last element from v\nprint the first element of v
